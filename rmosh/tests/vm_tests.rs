use rmosh::{
    self,
    gc::Gc,
    objects::{Closure, Object, Pair, Procedure, SString, Symbol, Vector},
    op::Op,
    vm::Vm,
};

// Custom hand written tests.
#[test]
fn test_symbol_intern() {
    let mut gc = Gc::new();
    let symbol = gc.intern("foo");
    let symbol2 = gc.intern("foo");
    assert_eq!(symbol.pointer, symbol2.pointer);
}

#[test]
fn test_vm_define() {
    let mut vm = Vm::new();
    let ops = [
        Op::Constant(Object::Number(9)),
        Op::DefineGlobal(vm.gc.intern("a")),
        Op::ReferGlobal(vm.gc.intern("a")),
        Op::Halt,
    ];
    let before_size = vm.gc.bytes_allocated();
    let ret = vm.run(ops.as_ptr(), ops.len());
    vm.mark_and_sweep();
    let after_size = vm.gc.bytes_allocated();
    assert_eq!(after_size - before_size, SIZE_OF_MIN_VM);
    match ret {
        Object::Number(a) => {
            assert_eq!(a, 9);
        }
        _ => panic!("{:?}", "todo"),
    }
}

pub static SIZE_OF_CLOSURE: usize = std::mem::size_of::<Closure>();
pub static SIZE_OF_PAIR: usize = std::mem::size_of::<Pair>();
pub static SIZE_OF_PROCEDURE: usize = std::mem::size_of::<Procedure>();
pub static SIZE_OF_STRING: usize = std::mem::size_of::<SString>();
pub static SIZE_OF_SYMBOL: usize = std::mem::size_of::<Symbol>();
pub static SIZE_OF_VECTOR: usize = std::mem::size_of::<Vector>();

/*
   Base display closure
   free variables
   baselib name and closure of map1
*/
static SIZE_OF_MIN_VM: usize =
    SIZE_OF_CLOSURE + (SIZE_OF_PROCEDURE * 623) + SIZE_OF_CLOSURE + SIZE_OF_SYMBOL;

fn test_ops_with_size(vm: &mut Vm, ops: Vec<Op>, expected: Object, expected_heap_diff: usize) {
    let ret = vm.run(ops.as_ptr(), ops.len());
    // Remove reference to ret.
    vm.ac = Object::Unspecified;
    vm.mark_and_sweep();
    assert_eq!(vm.gc.bytes_allocated(), SIZE_OF_MIN_VM + expected_heap_diff);
    assert_eq!(ret, expected);
}

fn test_ops_with_size_as_str(vm: &mut Vm, ops: Vec<Op>, expected: &str, expected_heap_diff: usize) {
    let ret = vm.run(ops.as_ptr(), ops.len());
    vm.ac = Object::Unspecified;
    vm.mark_and_sweep();
    assert_eq!(ret.to_string(), expected);
    assert_eq!(vm.gc.bytes_allocated(), SIZE_OF_MIN_VM + expected_heap_diff);
}

#[test]
fn test_vm_alloc_many_pairs() {
    let mut vm = Vm::new();
    let mut ops = vec![];

    for _ in 0..100 {
        ops.push(Op::Constant(Object::Number(99)));
        ops.push(Op::Push);
        ops.push(Op::Constant(Object::Number(101)));
        ops.push(Op::Cons);
    }
    ops.push(Op::Halt);
    let before_size = vm.gc.bytes_allocated();
    vm.run(&ops[..][0] as *const Op, ops.len());
    vm.mark_and_sweep();
    let after_size = vm.gc.bytes_allocated();
    assert_eq!(after_size - before_size, SIZE_OF_MIN_VM + SIZE_OF_PAIR);
}

// All ops in the following tests are generated in data/.

#[test]
fn test_call0() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Frame(5),
        Op::Closure {
            size: 3,
            arg_len: 0,
            is_optional_arg: false,
            num_free_vars: 0,
        },
        Op::Constant(Object::Number(3)),
        Op::Return(0),
        Op::Call(0),
        Op::Halt,
        Op::Nop,
        Op::Nop,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(3), 0);
}

#[test]
fn test_call1() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Frame(10),
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Closure {
            size: 6,
            arg_len: 1,
            is_optional_arg: false,
            num_free_vars: 0,
        },
        Op::ReferLocal(0),
        Op::Push,
        Op::ReferLocal(0),
        Op::NumberAdd,
        Op::Return(1),
        Op::Call(1),
        Op::Halt,
        Op::Nop,
        Op::Nop,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(2), 0);
}

#[test]
fn test_call2() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Frame(12),
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Constant(Object::Number(2)),
        Op::Push,
        Op::Closure {
            size: 6,
            arg_len: 2,
            is_optional_arg: false,
            num_free_vars: 0,
        },
        Op::ReferLocal(0),
        Op::Push,
        Op::ReferLocal(1),
        Op::NumberAdd,
        Op::Return(2),
        Op::Call(2),
        Op::Halt,
        Op::Nop,
        Op::Nop,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(3), 0);
}

#[test]
fn test_if0() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Constant(Object::Number(1)),
        Op::Test(3),
        Op::Constant(Object::Number(2)),
        Op::LocalJmp(2),
        Op::Constant(Object::Number(3)),
        Op::Halt,
        Op::Nop,
        Op::Nop,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(2), 0);
}
#[test]
fn test_if1() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Constant(Object::False),
        Op::Test(3),
        Op::Constant(Object::Number(2)),
        Op::LocalJmp(2),
        Op::Constant(Object::Number(3)),
        Op::Halt,
        Op::Nop,
        Op::Nop,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(3), 0);
}

#[test]
fn test_let0() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::LetFrame(1),
        Op::Constant(Object::Number(0)),
        Op::Push,
        Op::Enter(1),
        Op::ReferLocal(0),
        Op::Leave(1),
        Op::Halt,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(0), 0);
}

#[test]
fn test_let1() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::LetFrame(2),
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Constant(Object::Number(2)),
        Op::Push,
        Op::Enter(2),
        Op::ReferLocal(0),
        Op::Push,
        Op::ReferLocal(1),
        Op::NumberAdd,
        Op::Leave(2),
        Op::Halt,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(3), 0);
}

#[test]
fn test_nested_let0() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::LetFrame(3),
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Enter(1),
        Op::LetFrame(2),
        Op::ReferLocal(0),
        Op::Push,
        Op::Display(1),
        Op::Constant(Object::Number(2)),
        Op::Push,
        Op::Enter(1),
        Op::ReferFree(0),
        Op::Push,
        Op::ReferLocal(0),
        Op::NumberAdd,
        Op::Leave(1),
        Op::Leave(1),
        Op::Halt,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(3), 0);
}

#[test]
fn test_nested_let1() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::LetFrame(5),
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Enter(1),
        Op::LetFrame(4),
        Op::ReferLocal(0),
        Op::Push,
        Op::Display(1),
        Op::Constant(Object::Number(2)),
        Op::Push,
        Op::Enter(1),
        Op::LetFrame(3),
        Op::ReferFree(0),
        Op::Push,
        Op::ReferLocal(0),
        Op::Push,
        Op::Display(2),
        Op::Constant(Object::Number(3)),
        Op::Push,
        Op::Enter(1),
        Op::ReferFree(1),
        Op::Push,
        Op::ReferFree(0),
        Op::NumberAdd,
        Op::Push,
        Op::ReferLocal(0),
        Op::NumberAdd,
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Halt,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(6), 0);
}

#[test]
fn test_and() {
    let mut vm = Vm::new();
    let ops = vec![Op::Constant(Object::True), Op::Halt];
    test_ops_with_size(&mut vm, ops, Object::True, 0);
}

#[test]
fn test_if2() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Constant(Object::False),
        Op::Test(3),
        Op::Constant(Object::False),
        Op::LocalJmp(2),
        Op::Constant(Object::True),
        Op::Halt,
        Op::Nop,
        Op::Nop,
    ];
    test_ops_with_size(&mut vm, ops, Object::True, 0);
}

#[test]
fn test_test0() {
    let mut vm = Vm::new();
    let ops = vec![Op::Constant(Object::True), Op::Halt];
    test_ops_with_size(&mut vm, ops, Object::True, 0);
}

#[test]
fn test_test2() {
    let mut vm = Vm::new();
    let ops = vec![Op::Constant(Object::True), Op::Halt];
    test_ops_with_size(&mut vm, ops, Object::True, 0);
}

#[test]
fn test_test3() {
    let mut vm = Vm::new();
    let ops = vec![Op::Constant(Object::Number(3)), Op::Halt];
    test_ops_with_size(&mut vm, ops, Object::Number(3), 0);
}

#[test]
fn test_test4() {
    let mut vm = Vm::new();
    let ops = vec![Op::Constant(Object::Number(4)), Op::Halt];
    test_ops_with_size(&mut vm, ops, Object::Number(4), 0);
}

#[test]
fn test_test5() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Constant(Object::False),
        Op::Test(3),
        Op::Constant(Object::False),
        Op::LocalJmp(2),
        Op::Constant(Object::True),
        Op::Halt,
        Op::Nop,
        Op::Nop,
    ];
    test_ops_with_size(&mut vm, ops, Object::True, 0);
}

#[test]
fn test_test6() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Frame(7),
        Op::Constant(Object::Number(4)),
        Op::Push,
        Op::Closure {
            size: 3,
            arg_len: 1,
            is_optional_arg: false,
            num_free_vars: 0,
        },
        Op::Constant(Object::Number(3)),
        Op::Return(1),
        Op::Call(1),
        Op::Halt,
        Op::Nop,
        Op::Nop,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(3), 0);
}

#[test]
fn test_test7() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Frame(11),
        Op::Constant(Object::Number(6)),
        Op::Push,
        Op::Closure {
            size: 7,
            arg_len: 1,
            is_optional_arg: false,
            num_free_vars: 0,
        },
        Op::Constant(Object::Number(3)),
        Op::Test(3),
        Op::Constant(Object::Number(7)),
        Op::Return(1),
        Op::Constant(Object::Number(5)),
        Op::Return(1),
        Op::Call(1),
        Op::Halt,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(7), 0);
}

#[test]
fn test_test8() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Frame(5),
        Op::Closure {
            size: 3,
            arg_len: 0,
            is_optional_arg: false,
            num_free_vars: 0,
        },
        Op::Constant(Object::Number(3)),
        Op::Return(0),
        Op::Call(0),
        Op::Halt,
        Op::Nop,
        Op::Nop,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(3), 0);
}

#[test]
fn test_test9() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Frame(7),
        Op::Constant(Object::Number(101)),
        Op::Push,
        Op::Closure {
            size: 3,
            arg_len: 1,
            is_optional_arg: false,
            num_free_vars: 0,
        },
        Op::ReferLocal(0),
        Op::Return(1),
        Op::Call(1),
        Op::Halt,
        Op::Nop,
        Op::Nop,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(101), 0);
}

#[test]
fn test_test10() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Frame(9),
        Op::Frame(7),
        Op::Closure {
            size: 5,
            arg_len: 0,
            is_optional_arg: false,
            num_free_vars: 0,
        },
        Op::Closure {
            size: 3,
            arg_len: 0,
            is_optional_arg: false,
            num_free_vars: 0,
        },
        Op::Constant(Object::Number(102)),
        Op::Return(0),
        Op::Return(0),
        Op::Call(0),
        Op::Call(0),
        Op::Halt,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(102), 0);
}

#[test]
fn test_test11() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Frame(11),
        Op::Constant(Object::Number(101)),
        Op::Push,
        Op::Frame(7),
        Op::Closure {
            size: 5,
            arg_len: 0,
            is_optional_arg: false,
            num_free_vars: 0,
        },
        Op::Closure {
            size: 3,
            arg_len: 1,
            is_optional_arg: false,
            num_free_vars: 0,
        },
        Op::Constant(Object::Number(102)),
        Op::Return(1),
        Op::Return(0),
        Op::Call(0),
        Op::Call(1),
        Op::Halt,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(102), 0);
}

#[test]
fn test_test12() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Frame(11),
        Op::Constant(Object::Number(103)),
        Op::Push,
        Op::Frame(7),
        Op::Closure {
            size: 5,
            arg_len: 0,
            is_optional_arg: false,
            num_free_vars: 0,
        },
        Op::Closure {
            size: 3,
            arg_len: 1,
            is_optional_arg: false,
            num_free_vars: 0,
        },
        Op::ReferLocal(0),
        Op::Return(1),
        Op::Return(0),
        Op::Call(0),
        Op::Call(1),
        Op::Halt,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(103), 0);
}

#[test]
fn test_test13() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Frame(13),
        Op::Frame(11),
        Op::Constant(Object::Number(10)),
        Op::Push,
        Op::Closure {
            size: 7,
            arg_len: 1,
            is_optional_arg: false,
            num_free_vars: 0,
        },
        Op::ReferLocal(0),
        Op::Push,
        Op::Closure {
            size: 3,
            arg_len: 0,
            is_optional_arg: false,
            num_free_vars: 1,
        },
        Op::ReferFree(0),
        Op::Return(0),
        Op::Return(1),
        Op::Call(1),
        Op::Call(0),
        Op::Halt,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(10), 0);
}

#[test]
fn test_test14() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Frame(11),
        Op::Constant(Object::Number(2)),
        Op::Push,
        Op::Closure {
            size: 7,
            arg_len: 1,
            is_optional_arg: false,
            num_free_vars: 0,
        },
        Op::Box(0),
        Op::Constant(Object::Number(12)),
        Op::AssignLocal(0),
        Op::ReferLocal(0),
        Op::Indirect,
        Op::Return(1),
        Op::Call(1),
        Op::Halt,
        Op::Nop,
        Op::Nop,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(12), 0);
}

#[test]
fn test_test15() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Frame(14),
        Op::Constant(Object::Nil),
        Op::Push,
        Op::Closure {
            size: 10,
            arg_len: 1,
            is_optional_arg: false,
            num_free_vars: 0,
        },
        Op::Box(0),
        Op::ReferLocal(0),
        Op::Push,
        Op::Closure {
            size: 4,
            arg_len: 0,
            is_optional_arg: false,
            num_free_vars: 1,
        },
        Op::Constant(Object::Number(101)),
        Op::AssignFree(0),
        Op::Return(0),
        Op::TailCall(0, 1),
        Op::Return(1),
        Op::Call(1),
        Op::Halt,
        Op::Nop,
        Op::Nop,
        Op::Nop,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(101), 0);
}

#[test]
fn test_test16() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Frame(24),
        Op::Closure {
            size: 3,
            arg_len: 1,
            is_optional_arg: false,
            num_free_vars: 0,
        },
        Op::ReferLocal(0),
        Op::Return(1),
        Op::Push,
        Op::Closure {
            size: 18,
            arg_len: 1,
            is_optional_arg: false,
            num_free_vars: 0,
        },
        Op::ReferLocal(0),
        Op::Push,
        Op::Closure {
            size: 6,
            arg_len: 1,
            is_optional_arg: false,
            num_free_vars: 1,
        },
        Op::ReferLocal(0),
        Op::Push,
        Op::ReferFree(0),
        Op::TailCall(1, 1),
        Op::Return(1),
        Op::Push,
        Op::Closure {
            size: 6,
            arg_len: 1,
            is_optional_arg: false,
            num_free_vars: 0,
        },
        Op::Constant(Object::Number(2)),
        Op::Push,
        Op::ReferLocal(0),
        Op::TailCall(1, 1),
        Op::Return(1),
        Op::TailCall(1, 1),
        Op::Return(1),
        Op::Call(1),
        Op::Halt,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(2), 0);
}

#[test]
fn test_test17() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Frame(7),
        Op::Closure {
            size: 5,
            arg_len: 0,
            is_optional_arg: false,
            num_free_vars: 0,
        },
        Op::Constant(Object::Number(3)),
        Op::Constant(Object::Number(4)),
        Op::Constant(Object::Number(5)),
        Op::Return(0),
        Op::Call(0),
        Op::Halt,
        Op::Nop,
        Op::Nop,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(5), 0);
}

#[test]
fn test_test18() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Frame(5),
        Op::Constant(Object::Number(3)),
        Op::Push,
        Op::ReferFree(0),
        Op::Call(1),
        Op::Halt,
        Op::Nop,
    ];
    test_ops_with_size(&mut vm, ops, Object::True, 0);
}

#[test]
fn test_test19() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Frame(5),
        Op::Constant(Object::Symbol(vm.gc.intern("a"))),
        Op::Push,
        Op::ReferFree(0),
        Op::Call(1),
        Op::Halt,
        Op::Nop,
    ];
    test_ops_with_size(&mut vm, ops, Object::False, SIZE_OF_SYMBOL);
}

#[test]
fn test_test20() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Frame(5),
        Op::Constant(Object::Symbol(vm.gc.intern("a"))),
        Op::Push,
        Op::ReferFree(0),
        Op::Call(1),
        Op::Halt,
        Op::Nop,
    ];
    test_ops_with_size(&mut vm, ops, Object::False, SIZE_OF_SYMBOL);
}

#[test]
fn test_test21() {
    let mut vm = Vm::new();
    let ops = vec![Op::Constant(Object::Number(4)), Op::Halt];
    test_ops_with_size(&mut vm, ops, Object::Number(4), 0);
}

#[test]
fn test_test22() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Constant(Object::Number(4)),
        Op::Push,
        Op::Constant(Object::Number(3)),
        Op::NumberAdd,
        Op::Halt,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(7), 0);
}

#[test]
fn test_test23() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Constant(Object::Number(4)),
        Op::Push,
        Op::Constant(Object::Number(3)),
        Op::NumberAdd,
        Op::Push,
        Op::Constant(Object::Number(10)),
        Op::NumberAdd,
        Op::Halt,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(17), 0);
}

#[test]
fn test_test24() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Constant(Object::Number(1)),
        Op::NumberAdd,
        Op::Push,
        Op::Constant(Object::Number(1)),
        Op::NumberAdd,
        Op::Push,
        Op::Constant(Object::Number(1)),
        Op::NumberAdd,
        Op::Halt,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(4), 0);
}

#[test]
fn test_test25() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Constant(Object::Number(10)),
        Op::Push,
        Op::Constant(Object::Number(-5)),
        Op::NumberAdd,
        Op::Halt,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(5), 0);
}

#[test]
fn test_test26() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Constant(Object::Number(10)),
        Op::Push,
        Op::Constant(Object::Number(-5)),
        Op::NumberAdd,
        Op::Push,
        Op::Constant(Object::Number(-2)),
        Op::NumberAdd,
        Op::Halt,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(3), 0);
}

#[test]
fn test_test27_modified() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Constant(Object::Symbol(vm.gc.intern("a"))),
        Op::Push,
        Op::Constant(Object::Symbol(vm.gc.intern("b"))),
        Op::Cons,
        Op::Halt,
    ];
    let a = Object::Symbol(vm.gc.intern("a"));
    let b = Object::Symbol(vm.gc.intern("b"));
    let pair = vm.gc.alloc(Pair::new(a, b));

    let before_size = vm.gc.bytes_allocated();
    let ret = vm.run(&ops[0], ops.len());
    vm.mark_and_sweep();
    let after_size = vm.gc.bytes_allocated();
    assert_eq!(after_size - before_size, SIZE_OF_MIN_VM);
    match ret {
        Object::Pair(pair2) => {
            assert_eq!(pair.car, pair2.car);
            assert_eq!(pair.cdr, pair2.cdr);
        }
        _ => {
            panic!("not a pair");
        }
    }
}

#[test]
fn test_test28() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Constant(Object::Number(2)),
        Op::Push,
        Op::Constant(Object::Number(3)),
        Op::Cons,
        Op::Car,
        Op::Halt,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(2), 0);
}

#[test]
fn test_test29() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Constant(Object::Number(2)),
        Op::Push,
        Op::Constant(Object::Number(3)),
        Op::Cons,
        Op::Cdr,
        Op::Halt,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(3), 0);
}

#[test]
fn test_test30() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Constant(Object::Number(2)),
        Op::Push,
        Op::Constant(Object::Number(3)),
        Op::Push,
        Op::Constant(Object::Nil),
        Op::Cons,
        Op::Cons,
        Op::Cadr,
        Op::Halt,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(3), 0);
}

#[test]
fn test_test31() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Constant(Object::Number(3)),
        Op::Push,
        Op::Constant(Object::Number(3)),
        Op::NumberEqual,
        Op::Halt,
    ];
    test_ops_with_size(&mut vm, ops, Object::True, 0);
}

#[test]
fn test_test32() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Constant(Object::Number(3)),
        Op::Push,
        Op::Constant(Object::Number(4)),
        Op::NumberEqual,
        Op::Halt,
    ];
    test_ops_with_size(&mut vm, ops, Object::False, 0);
}

#[test]
fn test_test33() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::LetFrame(1),
        Op::Constant(Object::Number(3)),
        Op::Push,
        Op::Enter(1),
        Op::ReferLocal(0),
        Op::Leave(1),
        Op::Halt,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(3), 0);
}

#[test]
fn test_test34() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::LetFrame(2),
        Op::Constant(Object::Number(3)),
        Op::Push,
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Enter(2),
        Op::ReferLocal(1),
        Op::Leave(2),
        Op::Halt,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(1), 0);
}

#[test]
fn test_test35() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::LetFrame(2),
        Op::Constant(Object::Number(3)),
        Op::Push,
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Enter(2),
        Op::ReferLocal(0),
        Op::Leave(2),
        Op::Halt,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(3), 0);
}

#[test]
fn test_test36() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::LetFrame(2),
        Op::Constant(Object::Number(3)),
        Op::Push,
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Enter(2),
        Op::ReferLocal(0),
        Op::ReferLocal(1),
        Op::Leave(2),
        Op::Halt,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(1), 0);
}

#[test]
fn test_test37() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::LetFrame(1),
        Op::Constant(Object::Number(3)),
        Op::Push,
        Op::Enter(1),
        Op::ReferLocal(0),
        Op::Leave(1),
        Op::Halt,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(3), 0);
}

#[test]
fn test_test38() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::LetFrame(2),
        Op::Constant(Object::Number(3)),
        Op::Push,
        Op::Enter(1),
        Op::LetFrame(1),
        Op::Constant(Object::Number(4)),
        Op::Push,
        Op::Enter(1),
        Op::ReferLocal(0),
        Op::Leave(1),
        Op::Leave(1),
        Op::Halt,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(4), 0);
}

#[test]
fn test_test39() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::LetFrame(2),
        Op::Constant(Object::Number(3)),
        Op::Push,
        Op::Enter(1),
        Op::LetFrame(1),
        Op::ReferLocal(0),
        Op::Push,
        Op::Display(1),
        Op::Constant(Object::Number(4)),
        Op::Push,
        Op::Enter(1),
        Op::ReferFree(0),
        Op::Leave(1),
        Op::Leave(1),
        Op::Halt,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(3), 0);
}

#[test]
fn test_test40() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::LetFrame(3),
        Op::Constant(Object::Number(3)),
        Op::Push,
        Op::Enter(1),
        Op::LetFrame(2),
        Op::ReferLocal(0),
        Op::Push,
        Op::Display(1),
        Op::Constant(Object::Number(4)),
        Op::Push,
        Op::Enter(1),
        Op::ReferFree(0),
        Op::Push,
        Op::ReferLocal(0),
        Op::NumberAdd,
        Op::Leave(1),
        Op::Leave(1),
        Op::Halt,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(7), 0);
}

#[test]
fn test_test41() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::LetFrame(5),
        Op::Constant(Object::Number(3)),
        Op::Push,
        Op::Enter(1),
        Op::LetFrame(4),
        Op::ReferLocal(0),
        Op::Push,
        Op::Display(1),
        Op::Constant(Object::Number(4)),
        Op::Push,
        Op::Enter(1),
        Op::LetFrame(3),
        Op::ReferFree(0),
        Op::Push,
        Op::ReferLocal(0),
        Op::Push,
        Op::Display(2),
        Op::Constant(Object::Number(5)),
        Op::Push,
        Op::Enter(1),
        Op::ReferFree(1),
        Op::Push,
        Op::ReferFree(0),
        Op::NumberAdd,
        Op::Push,
        Op::ReferLocal(0),
        Op::NumberAdd,
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Halt,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(12), 0);
}

#[test]
fn test_test42() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::LetFrame(5),
        Op::Constant(Object::Number(3)),
        Op::Push,
        Op::Constant(Object::Number(4)),
        Op::Push,
        Op::Enter(2),
        Op::LetFrame(3),
        Op::ReferLocal(0),
        Op::Push,
        Op::ReferLocal(1),
        Op::Push,
        Op::Display(2),
        Op::Constant(Object::Number(5)),
        Op::Push,
        Op::Enter(1),
        Op::ReferFree(1),
        Op::Push,
        Op::ReferFree(0),
        Op::NumberAdd,
        Op::Push,
        Op::ReferLocal(0),
        Op::NumberAdd,
        Op::Leave(1),
        Op::Leave(2),
        Op::Halt,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(12), 0);
}

#[test]
fn test_test43() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::LetFrame(6),
        Op::Constant(Object::Number(3)),
        Op::Push,
        Op::Constant(Object::Number(4)),
        Op::Push,
        Op::Enter(2),
        Op::LetFrame(3),
        Op::ReferLocal(0),
        Op::Push,
        Op::ReferLocal(1),
        Op::Push,
        Op::Display(2),
        Op::Constant(Object::Number(5)),
        Op::Push,
        Op::Enter(1),
        Op::ReferFree(1),
        Op::Push,
        Op::ReferFree(0),
        Op::NumberAdd,
        Op::Push,
        Op::ReferLocal(0),
        Op::NumberAdd,
        Op::Leave(1),
        Op::Push,
        Op::Constant(Object::Number(1)),
        Op::NumberAdd,
        Op::Leave(2),
        Op::Halt,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(13), 0);
}

#[test]
fn test_test44() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::LetFrame(2),
        Op::Constant(Object::Number(3)),
        Op::Push,
        Op::Enter(1),
        Op::LetFrame(1),
        Op::Constant(Object::Number(4)),
        Op::Push,
        Op::Enter(1),
        Op::ReferLocal(0),
        Op::Leave(1),
        Op::Leave(1),
        Op::Halt,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(4), 0);
}

#[test]
fn test_test45() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::LetFrame(3),
        Op::Constant(Object::Number(3)),
        Op::Push,
        Op::Box(0),
        Op::Enter(1),
        Op::ReferLocal(0),
        Op::Indirect,
        Op::Push,
        Op::Constant(Object::Number(1)),
        Op::NumberAdd,
        Op::AssignLocal(0),
        Op::ReferLocal(0),
        Op::Indirect,
        Op::Push,
        Op::Constant(Object::Number(1)),
        Op::NumberAdd,
        Op::Leave(1),
        Op::Halt,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(5), 0);
}

#[test]
fn test_test46() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::LetFrame(2),
        Op::Constant(Object::Number(3)),
        Op::Push,
        Op::Enter(1),
        Op::LetFrame(1),
        Op::ReferLocal(0),
        Op::Push,
        Op::Display(1),
        Op::Constant(Object::Number(4)),
        Op::Push,
        Op::Box(0),
        Op::Enter(1),
        Op::ReferFree(0),
        Op::AssignLocal(0),
        Op::ReferLocal(0),
        Op::Indirect,
        Op::Leave(1),
        Op::Leave(1),
        Op::Halt,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(3), 0);
}

#[test]
fn test_test47() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::LetFrame(2),
        Op::Constant(Object::Number(2)),
        Op::Push,
        Op::Constant(Object::Number(3)),
        Op::Push,
        Op::Enter(2),
        Op::ReferLocal(0),
        Op::Leave(2),
        Op::Halt,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(2), 0);
}

#[test]
fn test_test48() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::LetFrame(2),
        Op::Constant(Object::Number(3)),
        Op::Push,
        Op::Enter(1),
        Op::LetFrame(1),
        Op::ReferLocal(0),
        Op::Push,
        Op::Display(1),
        Op::ReferLocal(0),
        Op::Push,
        Op::Closure {
            size: 3,
            arg_len: 0,
            is_optional_arg: false,
            num_free_vars: 1,
        },
        Op::ReferFree(0),
        Op::Return(0),
        Op::Push,
        Op::Enter(1),
        Op::Frame(3),
        Op::ReferLocal(0),
        Op::Call(0),
        Op::Leave(1),
        Op::Leave(1),
        Op::Halt,
        Op::Nop,
        Op::Nop,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(3), 0);
}

#[test]
fn test_test49() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::LetFrame(2),
        Op::Constant(Object::Number(3)),
        Op::Push,
        Op::Enter(1),
        Op::LetFrame(1),
        Op::ReferLocal(0),
        Op::Push,
        Op::Display(1),
        Op::ReferLocal(0),
        Op::Push,
        Op::Closure {
            size: 3,
            arg_len: 0,
            is_optional_arg: false,
            num_free_vars: 1,
        },
        Op::ReferFree(0),
        Op::Return(0),
        Op::Push,
        Op::Enter(1),
        Op::Frame(3),
        Op::ReferLocal(0),
        Op::Call(0),
        Op::Leave(1),
        Op::Leave(1),
        Op::Halt,
        Op::Nop,
        Op::Nop,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(3), 0);
}

#[test]
fn test_test50() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::LetFrame(3),
        Op::Constant(Object::Number(0)),
        Op::Push,
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Constant(Object::Number(2)),
        Op::Push,
        Op::Enter(3),
        Op::ReferLocal(2),
        Op::Leave(3),
        Op::Halt,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(2), 0);
}

#[test]
fn test_test51() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::LetFrame(5),
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Enter(1),
        Op::LetFrame(4),
        Op::ReferLocal(0),
        Op::Push,
        Op::Display(1),
        Op::Constant(Object::Number(2)),
        Op::Push,
        Op::Enter(1),
        Op::LetFrame(3),
        Op::ReferFree(0),
        Op::Push,
        Op::ReferLocal(0),
        Op::Push,
        Op::ReferFree(0),
        Op::Push,
        Op::Display(3),
        Op::ReferFree(0),
        Op::Push,
        Op::Enter(1),
        Op::ReferFree(0),
        Op::Push,
        Op::ReferFree(1),
        Op::NumberAdd,
        Op::Push,
        Op::ReferLocal(0),
        Op::NumberAdd,
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Halt,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(4), 0);
}

#[test]
fn test_test52() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::LetFrame(1),
        Op::Constant(Object::Number(3)),
        Op::Push,
        Op::Enter(1),
        Op::ReferLocal(0),
        Op::Leave(1),
        Op::Halt,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(3), 0);
}

#[test]
fn test_test53() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::LetFrame(3),
        Op::Constant(Object::Number(3)),
        Op::Push,
        Op::Constant(Object::Number(4)),
        Op::Push,
        Op::Enter(2),
        Op::ReferLocal(0),
        Op::Push,
        Op::ReferLocal(1),
        Op::NumberAdd,
        Op::Leave(2),
        Op::Halt,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(7), 0);
}

#[test]
fn test_test54() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::LetFrame(3),
        Op::Constant(Object::Number(3)),
        Op::Push,
        Op::Enter(1),
        Op::LetFrame(2),
        Op::ReferLocal(0),
        Op::Push,
        Op::Constant(Object::Number(1)),
        Op::NumberAdd,
        Op::Push,
        Op::Enter(1),
        Op::ReferLocal(0),
        Op::Leave(1),
        Op::Leave(1),
        Op::Halt,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(4), 0);
}

#[test]
fn test_test55() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::LetFrame(3),
        Op::Constant(Object::Number(3)),
        Op::Push,
        Op::Box(0),
        Op::Enter(1),
        Op::LetFrame(2),
        Op::ReferLocal(0),
        Op::Push,
        Op::Display(1),
        Op::Constant(Object::Number(4)),
        Op::Push,
        Op::Enter(1),
        Op::LetFrame(1),
        Op::ReferFree(0),
        Op::Push,
        Op::ReferLocal(0),
        Op::Push,
        Op::Display(2),
        Op::ReferLocal(0),
        Op::Push,
        Op::Closure {
            size: 3,
            arg_len: 0,
            is_optional_arg: false,
            num_free_vars: 1,
        },
        Op::ReferFree(0),
        Op::Return(0),
        Op::Push,
        Op::Enter(1),
        Op::ReferLocal(0),
        Op::AssignFree(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Frame(4),
        Op::ReferLocal(0),
        Op::Indirect,
        Op::Call(0),
        Op::Leave(1),
        Op::Halt,
        Op::Nop,
        Op::Nop,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(4), 0);
}

#[test]
fn test_test56() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::LetFrame(3),
        Op::Constant(Object::Number(0)),
        Op::Push,
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Enter(2),
        Op::LetFrame(1),
        Op::ReferLocal(1),
        Op::Push,
        Op::Display(1),
        Op::ReferLocal(1),
        Op::Push,
        Op::Closure {
            size: 3,
            arg_len: 0,
            is_optional_arg: false,
            num_free_vars: 1,
        },
        Op::ReferFree(0),
        Op::Return(0),
        Op::Push,
        Op::Enter(1),
        Op::Frame(3),
        Op::ReferLocal(0),
        Op::Call(0),
        Op::Leave(1),
        Op::Leave(2),
        Op::Halt,
        Op::Nop,
        Op::Nop,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(1), 0);
}

#[test]
fn test_test57() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::LetFrame(2),
        Op::Constant(Object::Number(0)),
        Op::Push,
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Enter(2),
        Op::Frame(7),
        Op::ReferLocal(1),
        Op::Push,
        Op::Closure {
            size: 3,
            arg_len: 0,
            is_optional_arg: false,
            num_free_vars: 1,
        },
        Op::ReferFree(0),
        Op::Return(0),
        Op::Call(0),
        Op::Leave(2),
        Op::Halt,
        Op::Nop,
        Op::Nop,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(1), 0);
}

#[test]
fn test_test58() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::LetFrame(3),
        Op::Constant(Object::Number(0)),
        Op::Push,
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Box(0),
        Op::Enter(2),
        Op::LetFrame(1),
        Op::ReferLocal(1),
        Op::Push,
        Op::Display(1),
        Op::ReferLocal(1),
        Op::Push,
        Op::Closure {
            size: 6,
            arg_len: 0,
            is_optional_arg: false,
            num_free_vars: 1,
        },
        Op::Constant(Object::Number(3)),
        Op::AssignFree(0),
        Op::ReferFree(0),
        Op::Indirect,
        Op::Return(0),
        Op::Push,
        Op::Enter(1),
        Op::Frame(3),
        Op::ReferLocal(0),
        Op::Call(0),
        Op::Leave(1),
        Op::Leave(2),
        Op::Halt,
        Op::Nop,
        Op::Nop,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(3), 0);
}

#[test]
fn test_test59() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::LetFrame(3),
        Op::Constant(Object::Number(0)),
        Op::Push,
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Box(0),
        Op::Enter(2),
        Op::LetFrame(1),
        Op::ReferLocal(1),
        Op::Push,
        Op::Display(1),
        Op::ReferLocal(1),
        Op::Push,
        Op::Closure {
            size: 6,
            arg_len: 0,
            is_optional_arg: false,
            num_free_vars: 1,
        },
        Op::Constant(Object::Number(3)),
        Op::AssignFree(0),
        Op::ReferFree(0),
        Op::Indirect,
        Op::Return(0),
        Op::Push,
        Op::Enter(1),
        Op::Frame(3),
        Op::ReferLocal(0),
        Op::Call(0),
        Op::Leave(1),
        Op::Leave(2),
        Op::Halt,
        Op::Nop,
        Op::Nop,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(3), 0);
}

#[test]
fn test_test60() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::LetFrame(3),
        Op::Constant(Object::Number(100)),
        Op::Push,
        Op::Enter(1),
        Op::LetFrame(2),
        Op::ReferLocal(0),
        Op::Push,
        Op::Display(1),
        Op::LetFrame(1),
        Op::ReferLocal(0),
        Op::Push,
        Op::Display(1),
        Op::ReferLocal(0),
        Op::Push,
        Op::Closure {
            size: 3,
            arg_len: 0,
            is_optional_arg: false,
            num_free_vars: 1,
        },
        Op::ReferFree(0),
        Op::Return(0),
        Op::Push,
        Op::Enter(1),
        Op::ReferLocal(0),
        Op::Leave(1),
        Op::Push,
        Op::Enter(1),
        Op::Frame(3),
        Op::ReferLocal(0),
        Op::Call(0),
        Op::Leave(1),
        Op::Leave(1),
        Op::Halt,
        Op::Nop,
        Op::Nop,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(100), 0);
}

// (letrec ((a 1) (b (lambda () a))) (b)) => 1
#[test]
fn test_test61() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::LetFrame(0),
        Op::Undef,
        Op::Push,
        Op::Undef,
        Op::Push,
        Op::Box(1),
        Op::Box(0),
        Op::Enter(2),
        Op::Constant(Object::Number(1)),
        Op::AssignLocal(0),
        Op::ReferLocal(0),
        Op::Push,
        Op::Closure {
            size: 4,
            arg_len: 0,
            is_optional_arg: false,
            num_free_vars: 1,
        },
        Op::ReferFree(0),
        Op::Indirect,
        Op::Return(0),
        Op::AssignLocal(1),
        Op::Frame(4),
        Op::ReferLocal(1),
        Op::Indirect,
        Op::Call(0),
        Op::Leave(2),
        Op::Halt,
        Op::Nop,
        Op::Nop,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(1), 0);
}

// (letrec ((a (lambda (i) (if (= i 10) i (a (+ i 1)))))) (a 0)) => 10
#[test]
fn test_test62() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::LetFrame(1),
        Op::Undef,
        Op::Push,
        Op::Box(0),
        Op::Enter(1),
        Op::ReferLocal(0),
        Op::Push,
        Op::Closure {
            size: 16,
            arg_len: 1,
            is_optional_arg: false,
            num_free_vars: 1,
        },
        Op::ReferLocal(0),
        Op::Push,
        Op::Constant(Object::Number(10)),
        Op::BranchNotNumberEqual(3),
        Op::ReferLocal(0),
        Op::Return(1),
        Op::ReferLocal(0),
        Op::Push,
        Op::Constant(Object::Number(1)),
        Op::NumberAdd,
        Op::Push,
        Op::ReferFree(0),
        Op::Indirect,
        Op::TailCall(1, 1),
        Op::Return(1),
        Op::AssignLocal(0),
        Op::Frame(6),
        Op::Constant(Object::Number(0)),
        Op::Push,
        Op::ReferLocal(0),
        Op::Indirect,
        Op::Call(1),
        Op::Leave(1),
        Op::Halt,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(10), 0);
}

// (let ((a '())) (let ((G68 (lambda (i) (if (>= i 1000) i (a (+ i 1)))))) (set! a G68) (a 0))) => 1000
#[test]
fn test_test63() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::LetFrame(3),
        Op::Constant(Object::Nil),
        Op::Push,
        Op::Box(0),
        Op::Enter(1),
        Op::LetFrame(2),
        Op::ReferLocal(0),
        Op::Push,
        Op::ReferLocal(0),
        Op::Push,
        Op::Display(2),
        Op::ReferLocal(0),
        Op::Push,
        Op::Closure {
            size: 16,
            arg_len: 1,
            is_optional_arg: false,
            num_free_vars: 1,
        },
        Op::ReferLocal(0),
        Op::Push,
        Op::Constant(Object::Number(1000)),
        Op::BranchNotGe(3),
        Op::ReferLocal(0),
        Op::Return(1),
        Op::ReferLocal(0),
        Op::Push,
        Op::Constant(Object::Number(1)),
        Op::NumberAdd,
        Op::Push,
        Op::ReferFree(0),
        Op::Indirect,
        Op::TailCall(1, 1),
        Op::Return(1),
        Op::Push,
        Op::Enter(1),
        Op::ReferLocal(0),
        Op::AssignFree(0),
        Op::Frame(6),
        Op::Constant(Object::Number(0)),
        Op::Push,
        Op::ReferFree(0),
        Op::Indirect,
        Op::Call(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Halt,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(1000), 0);
}

// (letrec ((a (lambda (i) (if (>= i 1000) i (a (+ i 1)))))) (a 0)) => 1000
#[test]
fn test_test64() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::LetFrame(1),
        Op::Undef,
        Op::Push,
        Op::Box(0),
        Op::Enter(1),
        Op::ReferLocal(0),
        Op::Push,
        Op::Closure {
            size: 16,
            arg_len: 1,
            is_optional_arg: false,
            num_free_vars: 1,
        },
        Op::ReferLocal(0),
        Op::Push,
        Op::Constant(Object::Number(1000)),
        Op::BranchNotGe(3),
        Op::ReferLocal(0),
        Op::Return(1),
        Op::ReferLocal(0),
        Op::Push,
        Op::Constant(Object::Number(1)),
        Op::NumberAdd,
        Op::Push,
        Op::ReferFree(0),
        Op::Indirect,
        Op::TailCall(1, 1),
        Op::Return(1),
        Op::AssignLocal(0),
        Op::Frame(6),
        Op::Constant(Object::Number(0)),
        Op::Push,
        Op::ReferLocal(0),
        Op::Indirect,
        Op::Call(1),
        Op::Leave(1),
        Op::Halt,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(1000), 0);
}

// ((lambda (a) (set! a 1000) a) '()) => 1000
#[test]
fn test_test65() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Frame(11),
        Op::Constant(Object::Nil),
        Op::Push,
        Op::Closure {
            size: 7,
            arg_len: 1,
            is_optional_arg: false,
            num_free_vars: 0,
        },
        Op::Box(0),
        Op::Constant(Object::Number(1000)),
        Op::AssignLocal(0),
        Op::ReferLocal(0),
        Op::Indirect,
        Op::Return(1),
        Op::Call(1),
        Op::Halt,
        Op::Nop,
        Op::Nop,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(1000), 0);
}

// ((lambda (a) (set! a (lambda (i) (if (= i 20) i (a (+ i 1))))) (a 0)) '()) => 20
#[test]
fn test_test66() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Frame(31),
        Op::Constant(Object::Nil),
        Op::Push,
        Op::Closure {
            size: 27,
            arg_len: 1,
            is_optional_arg: false,
            num_free_vars: 0,
        },
        Op::Box(0),
        Op::ReferLocal(0),
        Op::Push,
        Op::Closure {
            size: 16,
            arg_len: 1,
            is_optional_arg: false,
            num_free_vars: 1,
        },
        Op::ReferLocal(0),
        Op::Push,
        Op::Constant(Object::Number(20)),
        Op::BranchNotNumberEqual(3),
        Op::ReferLocal(0),
        Op::Return(1),
        Op::ReferLocal(0),
        Op::Push,
        Op::Constant(Object::Number(1)),
        Op::NumberAdd,
        Op::Push,
        Op::ReferFree(0),
        Op::Indirect,
        Op::TailCall(1, 1),
        Op::Return(1),
        Op::AssignLocal(0),
        Op::Constant(Object::Number(0)),
        Op::Push,
        Op::ReferLocal(0),
        Op::Indirect,
        Op::TailCall(1, 1),
        Op::Return(1),
        Op::Call(1),
        Op::Halt,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(20), 0);
}

// (define a 3) => 3
#[test]
fn test_test68() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Constant(Object::Number(3)),
        Op::DefineGlobal(vm.gc.intern("a")),
        Op::Halt,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(3), SIZE_OF_SYMBOL);
}
// (= 3 4) => #f
#[test]
fn test_test70() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Constant(Object::Number(3)),
        Op::Push,
        Op::Constant(Object::Number(4)),
        Op::NumberEqual,
        Op::Halt,
    ];
    test_ops_with_size(&mut vm, ops, Object::False, 0);
}

// (= 3 3 3) => #t
#[test]
fn test_test71() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Constant(Object::Number(3)),
        Op::Push,
        Op::Constant(Object::Number(3)),
        Op::BranchNotNumberEqual(5),
        Op::Constant(Object::Number(3)),
        Op::Push,
        Op::Constant(Object::Number(3)),
        Op::NumberEqual,
        Op::Halt,
        Op::Nop,
    ];
    test_ops_with_size(&mut vm, ops, Object::True, 0);
}

// (= 3 4 5) => #f
#[test]
fn test_test72() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Constant(Object::Number(3)),
        Op::Push,
        Op::Constant(Object::Number(4)),
        Op::BranchNotNumberEqual(5),
        Op::Constant(Object::Number(4)),
        Op::Push,
        Op::Constant(Object::Number(5)),
        Op::NumberEqual,
        Op::Halt,
        Op::Nop,
    ];
    test_ops_with_size(&mut vm, ops, Object::False, 0);
}

// (((lambda (a) (lambda () a)) 101)) => 101
#[test]
fn test_test73() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Frame(13),
        Op::Frame(11),
        Op::Constant(Object::Number(101)),
        Op::Push,
        Op::Closure {
            size: 7,
            arg_len: 1,
            is_optional_arg: false,
            num_free_vars: 0,
        },
        Op::ReferLocal(0),
        Op::Push,
        Op::Closure {
            size: 3,
            arg_len: 0,
            is_optional_arg: false,
            num_free_vars: 1,
        },
        Op::ReferFree(0),
        Op::Return(0),
        Op::Return(1),
        Op::Call(1),
        Op::Call(0),
        Op::Halt,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(101), 0);
}

// (((lambda (a) (lambda (b) (+ a b))) 101) 1) => 102
#[test]
fn test_test74() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Frame(18),
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Frame(14),
        Op::Constant(Object::Number(101)),
        Op::Push,
        Op::Closure {
            size: 10,
            arg_len: 1,
            is_optional_arg: false,
            num_free_vars: 0,
        },
        Op::ReferLocal(0),
        Op::Push,
        Op::Closure {
            size: 6,
            arg_len: 1,
            is_optional_arg: false,
            num_free_vars: 1,
        },
        Op::ReferFree(0),
        Op::Push,
        Op::ReferLocal(0),
        Op::NumberAdd,
        Op::Return(1),
        Op::Return(1),
        Op::Call(1),
        Op::Call(1),
        Op::Halt,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(102), 0);
}

// (null? '()) => #t
#[test]
fn test_test75() {
    let mut vm = Vm::new();
    let ops = vec![Op::Constant(Object::Nil), Op::NullP, Op::Halt];
    test_ops_with_size(&mut vm, ops, Object::True, 0);
}

// (null? 3) => #f
#[test]
fn test_test76() {
    let mut vm = Vm::new();
    let ops = vec![Op::Constant(Object::Number(3)), Op::NullP, Op::Halt];
    test_ops_with_size(&mut vm, ops, Object::False, 0);
}

// (cons 1 2) => (1 . 2)
#[test]
fn test_test77_modified() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Constant(Object::Number(2)),
        Op::Cons,
        Op::Halt,
    ];
    let pair = vm.gc.alloc(Pair::new(Object::Number(1), Object::Number(2)));
    let before_size = vm.gc.bytes_allocated();
    let ret = vm.run(ops.as_ptr(), ops.len());
    vm.mark_and_sweep();
    let after_size = vm.gc.bytes_allocated();
    assert_eq!(after_size - before_size, SIZE_OF_MIN_VM);
    match ret {
        Object::Pair(pair2) => {
            assert_eq!(pair.car, pair2.car);
            assert_eq!(pair.cdr, pair2.cdr);
        }
        _ => {
            panic!("not a pair");
        }
    }
}

// (cons 1 (cons 2 '())) => (1 2)
#[test]
fn test_test78() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Constant(Object::Number(2)),
        Op::Push,
        Op::Constant(Object::Nil),
        Op::Cons,
        Op::Cons,
        Op::Halt,
    ];
    // (2 . nil)
    let pair1 = Object::Pair(vm.gc.alloc(Pair::new(Object::Number(2), Object::Nil)));
    // (1 2)
    let pair2 = vm.gc.alloc(Pair::new(Object::Number(1), pair1));
    let before_size = vm.gc.bytes_allocated();
    let ret = vm.run(&ops[0], ops.len());
    vm.mark_and_sweep();
    let after_size = vm.gc.bytes_allocated();
    assert_eq!(after_size - before_size, SIZE_OF_MIN_VM);
    match ret {
        Object::Pair(pair3) => {
            assert_eq!(pair2.car, pair3.car);
        }
        _ => {
            panic!("not a pair");
        }
    }
}

// (begin 1 2 3) => 3
#[test]
fn test_test79() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Constant(Object::Number(1)),
        Op::Constant(Object::Number(2)),
        Op::Constant(Object::Number(3)),
        Op::Halt,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(3), 0);
}

// ((lambda () (set! a 4) a)) => 4
#[test]
fn test_test80() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Frame(7),
        Op::Closure {
            size: 5,
            arg_len: 0,
            is_optional_arg: false,
            num_free_vars: 0,
        },
        Op::Constant(Object::Number(4)),
        Op::AssignGlobal(vm.gc.intern("a")),
        Op::ReferGlobal(vm.gc.intern("a")),
        Op::Return(0),
        Op::Call(0),
        Op::Halt,
        Op::Nop,
        Op::Nop,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(4), SIZE_OF_SYMBOL);
}

// ((lambda () ((lambda () 3)))) => 3
#[test]
fn test_test81() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Frame(8),
        Op::Closure {
            size: 6,
            arg_len: 0,
            is_optional_arg: false,
            num_free_vars: 0,
        },
        Op::Closure {
            size: 3,
            arg_len: 0,
            is_optional_arg: false,
            num_free_vars: 0,
        },
        Op::Constant(Object::Number(3)),
        Op::Return(0),
        Op::TailCall(0, 0),
        Op::Return(0),
        Op::Call(0),
        Op::Halt,
        Op::Nop,
        Op::Nop,
        Op::Nop,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(3), 0);
}

// ((lambda () ((lambda (x) x) 3))) => 3
#[test]
fn test_test82() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Frame(10),
        Op::Closure {
            size: 8,
            arg_len: 0,
            is_optional_arg: false,
            num_free_vars: 0,
        },
        Op::Constant(Object::Number(3)),
        Op::Push,
        Op::Closure {
            size: 3,
            arg_len: 1,
            is_optional_arg: false,
            num_free_vars: 0,
        },
        Op::ReferLocal(0),
        Op::Return(1),
        Op::TailCall(1, 0),
        Op::Return(0),
        Op::Call(0),
        Op::Halt,
        Op::Nop,
        Op::Nop,
        Op::Nop,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(3), 0);
}

// ((lambda (y) ((lambda (x) x) 3)) 4) => 3
#[test]
fn test_test83() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Frame(12),
        Op::Constant(Object::Number(4)),
        Op::Push,
        Op::Closure {
            size: 8,
            arg_len: 1,
            is_optional_arg: false,
            num_free_vars: 0,
        },
        Op::Constant(Object::Number(3)),
        Op::Push,
        Op::Closure {
            size: 3,
            arg_len: 1,
            is_optional_arg: false,
            num_free_vars: 0,
        },
        Op::ReferLocal(0),
        Op::Return(1),
        Op::TailCall(1, 1),
        Op::Return(1),
        Op::Call(1),
        Op::Halt,
        Op::Nop,
        Op::Nop,
        Op::Nop,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(3), 0);
}

// ((lambda () (let1 a 1 ((lambda () 3))))) => 3
#[test]
fn test_test84() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Frame(13),
        Op::Closure {
            size: 11,
            arg_len: 0,
            is_optional_arg: false,
            num_free_vars: 0,
        },
        Op::LetFrame(1),
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Enter(1),
        Op::Closure {
            size: 3,
            arg_len: 0,
            is_optional_arg: false,
            num_free_vars: 0,
        },
        Op::Constant(Object::Number(3)),
        Op::Return(0),
        Op::TailCall(0, 3),
        Op::Leave(1),
        Op::Return(0),
        Op::Call(0),
        Op::Halt,
        Op::Nop,
        Op::Nop,
        Op::Nop,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(3), 0);
}

// ((lambda () (let1 b 2 (let1 a 1 ((lambda () 3)))))) => 3
#[test]
fn test_test85() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Frame(18),
        Op::Closure {
            size: 16,
            arg_len: 0,
            is_optional_arg: false,
            num_free_vars: 0,
        },
        Op::LetFrame(2),
        Op::Constant(Object::Number(2)),
        Op::Push,
        Op::Enter(1),
        Op::LetFrame(1),
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Enter(1),
        Op::Closure {
            size: 3,
            arg_len: 0,
            is_optional_arg: false,
            num_free_vars: 0,
        },
        Op::Constant(Object::Number(3)),
        Op::Return(0),
        Op::TailCall(0, 6),
        Op::Leave(1),
        Op::Leave(1),
        Op::Return(0),
        Op::Call(0),
        Op::Halt,
        Op::Nop,
        Op::Nop,
        Op::Nop,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(3), 0);
}

// ((lambda () (if 3 ((lambda () 3))))) => 3
#[test]
fn test_test86() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Frame(12),
        Op::Closure {
            size: 10,
            arg_len: 0,
            is_optional_arg: false,
            num_free_vars: 0,
        },
        Op::Constant(Object::Number(3)),
        Op::Test(6),
        Op::Closure {
            size: 3,
            arg_len: 0,
            is_optional_arg: false,
            num_free_vars: 0,
        },
        Op::Constant(Object::Number(3)),
        Op::Return(0),
        Op::TailCall(0, 0),
        Op::Return(0),
        Op::Undef,
        Op::Return(0),
        Op::Call(0),
        Op::Halt,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(3), 0);
}

// ((lambda () (if ((lambda () 3)) 4 5))) => 4
#[test]
fn test_test87() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Frame(13),
        Op::Closure {
            size: 11,
            arg_len: 0,
            is_optional_arg: false,
            num_free_vars: 0,
        },
        Op::Frame(5),
        Op::Closure {
            size: 3,
            arg_len: 0,
            is_optional_arg: false,
            num_free_vars: 0,
        },
        Op::Constant(Object::Number(3)),
        Op::Return(0),
        Op::Call(0),
        Op::Test(3),
        Op::Constant(Object::Number(4)),
        Op::Return(0),
        Op::Constant(Object::Number(5)),
        Op::Return(0),
        Op::Call(0),
        Op::Halt,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(4), 0);
}

// (let loop ((i 0)) (if (= i 10) i (let1 a 1 (let1 b 0 (loop (+ i a b)))))) => 10
#[test]
fn test_test88() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::LetFrame(1),
        Op::Undef,
        Op::Push,
        Op::Box(0),
        Op::Enter(1),
        Op::ReferLocal(0),
        Op::Push,
        Op::Closure {
            size: 41,
            arg_len: 1,
            is_optional_arg: false,
            num_free_vars: 1,
        },
        Op::ReferLocal(0),
        Op::Push,
        Op::Constant(Object::Number(10)),
        Op::BranchNotNumberEqual(3),
        Op::ReferLocal(0),
        Op::Return(1),
        Op::LetFrame(5),
        Op::ReferLocal(0),
        Op::Push,
        Op::ReferFree(0),
        Op::Push,
        Op::Display(2),
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Enter(1),
        Op::LetFrame(4),
        Op::ReferFree(1),
        Op::Push,
        Op::ReferLocal(0),
        Op::Push,
        Op::ReferFree(0),
        Op::Push,
        Op::Display(3),
        Op::Constant(Object::Number(0)),
        Op::Push,
        Op::Enter(1),
        Op::ReferFree(2),
        Op::Push,
        Op::ReferFree(1),
        Op::NumberAdd,
        Op::Push,
        Op::ReferLocal(0),
        Op::NumberAdd,
        Op::Push,
        Op::ReferFree(0),
        Op::Indirect,
        Op::TailCall(1, 7),
        Op::Leave(1),
        Op::Leave(1),
        Op::Return(1),
        Op::AssignLocal(0),
        Op::Frame(6),
        Op::Constant(Object::Number(0)),
        Op::Push,
        Op::ReferLocal(0),
        Op::Indirect,
        Op::Call(1),
        Op::Leave(1),
        Op::Halt,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(10), 0);
}

// (let loop ((i 0)) (if (= i 10) i (let1 a 1 (let1 b 0 (loop (+ i a b)))))) => 10
#[test]
fn test_test89() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::LetFrame(1),
        Op::Undef,
        Op::Push,
        Op::Box(0),
        Op::Enter(1),
        Op::ReferLocal(0),
        Op::Push,
        Op::Closure {
            size: 41,
            arg_len: 1,
            is_optional_arg: false,
            num_free_vars: 1,
        },
        Op::ReferLocal(0),
        Op::Push,
        Op::Constant(Object::Number(10)),
        Op::BranchNotNumberEqual(3),
        Op::ReferLocal(0),
        Op::Return(1),
        Op::LetFrame(5),
        Op::ReferLocal(0),
        Op::Push,
        Op::ReferFree(0),
        Op::Push,
        Op::Display(2),
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Enter(1),
        Op::LetFrame(4),
        Op::ReferFree(1),
        Op::Push,
        Op::ReferLocal(0),
        Op::Push,
        Op::ReferFree(0),
        Op::Push,
        Op::Display(3),
        Op::Constant(Object::Number(0)),
        Op::Push,
        Op::Enter(1),
        Op::ReferFree(2),
        Op::Push,
        Op::ReferFree(1),
        Op::NumberAdd,
        Op::Push,
        Op::ReferLocal(0),
        Op::NumberAdd,
        Op::Push,
        Op::ReferFree(0),
        Op::Indirect,
        Op::TailCall(1, 7),
        Op::Leave(1),
        Op::Leave(1),
        Op::Return(1),
        Op::AssignLocal(0),
        Op::Frame(6),
        Op::Constant(Object::Number(0)),
        Op::Push,
        Op::ReferLocal(0),
        Op::Indirect,
        Op::Call(1),
        Op::Leave(1),
        Op::Halt,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(10), 0);
}

// ((lambda () (define d (lambda (x y z) (+ x y z))) (d 1 2 3))) => 6
#[test]
fn test_test90() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Frame(29),
        Op::Closure {
            size: 27,
            arg_len: 0,
            is_optional_arg: false,
            num_free_vars: 0,
        },
        Op::LetFrame(3),
        Op::Undef,
        Op::Push,
        Op::Box(0),
        Op::Enter(1),
        Op::Closure {
            size: 9,
            arg_len: 3,
            is_optional_arg: false,
            num_free_vars: 0,
        },
        Op::ReferLocal(0),
        Op::Push,
        Op::ReferLocal(1),
        Op::NumberAdd,
        Op::Push,
        Op::ReferLocal(2),
        Op::NumberAdd,
        Op::Return(3),
        Op::AssignLocal(0),
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Constant(Object::Number(2)),
        Op::Push,
        Op::Constant(Object::Number(3)),
        Op::Push,
        Op::ReferLocal(0),
        Op::Indirect,
        Op::TailCall(3, 3),
        Op::Leave(1),
        Op::Return(0),
        Op::Call(0),
        Op::Halt,
        Op::Nop,
        Op::Nop,
        Op::Nop,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(6), 0);
}

// ((lambda () (define b (lambda () 3)) (b))) => 3
#[test]
fn test_test91() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Frame(17),
        Op::Closure {
            size: 15,
            arg_len: 0,
            is_optional_arg: false,
            num_free_vars: 0,
        },
        Op::LetFrame(0),
        Op::Undef,
        Op::Push,
        Op::Box(0),
        Op::Enter(1),
        Op::Closure {
            size: 3,
            arg_len: 0,
            is_optional_arg: false,
            num_free_vars: 0,
        },
        Op::Constant(Object::Number(3)),
        Op::Return(0),
        Op::AssignLocal(0),
        Op::ReferLocal(0),
        Op::Indirect,
        Op::TailCall(0, 3),
        Op::Leave(1),
        Op::Return(0),
        Op::Call(0),
        Op::Halt,
        Op::Nop,
        Op::Nop,
        Op::Nop,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(3), 0);
}

// ((lambda a a) 1 2 3) => (1 2 3)
#[test]
fn test_test92() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Frame(11),
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Constant(Object::Number(2)),
        Op::Push,
        Op::Constant(Object::Number(3)),
        Op::Push,
        Op::Closure {
            size: 3,
            arg_len: 1,
            is_optional_arg: true,
            num_free_vars: 0,
        },
        Op::ReferLocal(0),
        Op::Return(1),
        Op::Call(3),
        Op::Halt,
        Op::Nop,
        Op::Nop,
    ];
    test_ops_with_size_as_str(&mut vm, ops, "(1 2 3)", 0);
}

// ((lambda (a . b) b) 1 2 3) => (2 3)
#[test]
fn test_test93() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Frame(11),
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Constant(Object::Number(2)),
        Op::Push,
        Op::Constant(Object::Number(3)),
        Op::Push,
        Op::Closure {
            size: 3,
            arg_len: 2,
            is_optional_arg: true,
            num_free_vars: 0,
        },
        Op::ReferLocal(1),
        Op::Return(2),
        Op::Call(3),
        Op::Halt,
        Op::Nop,
        Op::Nop,
    ];
    test_ops_with_size_as_str(&mut vm, ops, "(2 3)", 0);
}

// ((lambda (a . b) b) 1 2 3 4) => (2 3 4)
#[test]
fn test_test94() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Frame(13),
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Constant(Object::Number(2)),
        Op::Push,
        Op::Constant(Object::Number(3)),
        Op::Push,
        Op::Constant(Object::Number(4)),
        Op::Push,
        Op::Closure {
            size: 3,
            arg_len: 2,
            is_optional_arg: true,
            num_free_vars: 0,
        },
        Op::ReferLocal(1),
        Op::Return(2),
        Op::Call(4),
        Op::Halt,
        Op::Nop,
        Op::Nop,
    ];
    test_ops_with_size_as_str(&mut vm, ops, "(2 3 4)", 0);
}

// ((lambda (a b . c) c) 1 2 3 4) => (3 4)
#[test]
fn test_test95() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Frame(13),
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Constant(Object::Number(2)),
        Op::Push,
        Op::Constant(Object::Number(3)),
        Op::Push,
        Op::Constant(Object::Number(4)),
        Op::Push,
        Op::Closure {
            size: 3,
            arg_len: 3,
            is_optional_arg: true,
            num_free_vars: 0,
        },
        Op::ReferLocal(2),
        Op::Return(3),
        Op::Call(4),
        Op::Halt,
        Op::Nop,
        Op::Nop,
    ];
    test_ops_with_size_as_str(&mut vm, ops, "(3 4)", 0);
}

// ((lambda (a b c . d) d) 1 2 3 4) => (4)
#[test]
fn test_test96() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Frame(13),
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Constant(Object::Number(2)),
        Op::Push,
        Op::Constant(Object::Number(3)),
        Op::Push,
        Op::Constant(Object::Number(4)),
        Op::Push,
        Op::Closure {
            size: 3,
            arg_len: 4,
            is_optional_arg: true,
            num_free_vars: 0,
        },
        Op::ReferLocal(3),
        Op::Return(4),
        Op::Call(4),
        Op::Halt,
        Op::Nop,
        Op::Nop,
    ];
    test_ops_with_size_as_str(&mut vm, ops, "(4)", 0);
}

// ((lambda (a b c . d) d) 1 2 3) => ()
#[test]
fn test_test97() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Frame(11),
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Constant(Object::Number(2)),
        Op::Push,
        Op::Constant(Object::Number(3)),
        Op::Push,
        Op::Closure {
            size: 3,
            arg_len: 4,
            is_optional_arg: true,
            num_free_vars: 0,
        },
        Op::ReferLocal(3),
        Op::Return(4),
        Op::Call(3),
        Op::Halt,
        Op::Nop,
        Op::Nop,
    ];
    test_ops_with_size(&mut vm, ops, Object::Nil, 0);
}

// ((lambda a a)) => ()
#[test]
fn test_test98() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Frame(5),
        Op::Closure {
            size: 3,
            arg_len: 1,
            is_optional_arg: true,
            num_free_vars: 0,
        },
        Op::ReferLocal(0),
        Op::Return(1),
        Op::Call(0),
        Op::Halt,
        Op::Nop,
        Op::Nop,
    ];
    test_ops_with_size(&mut vm, ops, Object::Nil, 0);
}

// ((lambda a a) 1) => (1)
#[test]
fn test_test99() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Frame(7),
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Closure {
            size: 3,
            arg_len: 1,
            is_optional_arg: true,
            num_free_vars: 0,
        },
        Op::ReferLocal(0),
        Op::Return(1),
        Op::Call(1),
        Op::Halt,
        Op::Nop,
        Op::Nop,
    ];
    test_ops_with_size_as_str(&mut vm, ops, "(1)", 0);
}

// (when #t 1 2 34) => 34
#[test]
fn test_test100() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Constant(Object::True),
        Op::Test(5),
        Op::Constant(Object::Number(1)),
        Op::Constant(Object::Number(2)),
        Op::Constant(Object::Number(34)),
        Op::LocalJmp(2),
        Op::Undef,
        Op::Halt,
        Op::Nop,
        Op::Nop,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(34), 0);
}

// (not 3) => #f
#[test]
fn test_test101() {
    let mut vm = Vm::new();
    let ops = vec![Op::Constant(Object::Number(3)), Op::Not, Op::Halt];
    test_ops_with_size(&mut vm, ops, Object::False, 0);
}

// (unless #f 1 2 48) => 48
#[test]
fn test_test102() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Constant(Object::False),
        Op::Test(3),
        Op::Undef,
        Op::LocalJmp(4),
        Op::Constant(Object::Number(1)),
        Op::Constant(Object::Number(2)),
        Op::Constant(Object::Number(48)),
        Op::Halt,
        Op::Nop,
        Op::Nop,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(48), 0);
}

// (and 3 4 5) => 5
#[test]
fn test_test103() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Constant(Object::Number(3)),
        Op::Test(4),
        Op::Constant(Object::Number(4)),
        Op::Test(2),
        Op::Constant(Object::Number(5)),
        Op::Halt,
        Op::Nop,
        Op::Nop,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(5), 0);
}

// (let1 a 0 (and (set! a (+ a 1))) a) => 1
#[test]
fn test_test104() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::LetFrame(2),
        Op::Constant(Object::Number(0)),
        Op::Push,
        Op::Box(0),
        Op::Enter(1),
        Op::ReferLocal(0),
        Op::Indirect,
        Op::Push,
        Op::Constant(Object::Number(1)),
        Op::NumberAdd,
        Op::AssignLocal(0),
        Op::ReferLocal(0),
        Op::Indirect,
        Op::Leave(1),
        Op::Halt,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(1), 0);
}

// (let1 a 0 (or (set! a (+ a 1))) a) => 1
#[test]
fn test_test105() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::LetFrame(2),
        Op::Constant(Object::Number(0)),
        Op::Push,
        Op::Box(0),
        Op::Enter(1),
        Op::ReferLocal(0),
        Op::Indirect,
        Op::Push,
        Op::Constant(Object::Number(1)),
        Op::NumberAdd,
        Op::AssignLocal(0),
        Op::ReferLocal(0),
        Op::Indirect,
        Op::Leave(1),
        Op::Halt,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(1), 0);
}

// (and 3 #f 5) => #f
#[test]
fn test_test106() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Constant(Object::Number(3)),
        Op::Test(4),
        Op::Constant(Object::False),
        Op::Test(2),
        Op::Constant(Object::Number(5)),
        Op::Halt,
        Op::Nop,
        Op::Nop,
    ];
    test_ops_with_size(&mut vm, ops, Object::False, 0);
}

// (or 3 4 5) => 3
#[test]
fn test_test107() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Constant(Object::Number(3)),
        Op::Test(2),
        Op::LocalJmp(5),
        Op::Constant(Object::Number(4)),
        Op::Test(2),
        Op::LocalJmp(2),
        Op::Constant(Object::Number(5)),
        Op::Halt,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(3), 0);
}

// (or #f #f #f) => #f
#[test]
fn test_test108() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Constant(Object::False),
        Op::Test(2),
        Op::LocalJmp(3),
        Op::Constant(Object::False),
        Op::Test(1),
        Op::Halt,
        Op::Nop,
        Op::Nop,
        Op::Nop,
    ];
    test_ops_with_size(&mut vm, ops, Object::False, 0);
}

// (> 4 3) => #t
#[test]
fn test_test109() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Constant(Object::Number(4)),
        Op::Push,
        Op::Constant(Object::Number(3)),
        Op::NumberGt,
        Op::Halt,
    ];
    test_ops_with_size(&mut vm, ops, Object::True, 0);
}

// (> 4 3 2) => #t
#[test]
fn test_test110() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Constant(Object::Number(4)),
        Op::Push,
        Op::Constant(Object::Number(3)),
        Op::BranchNotGt(5),
        Op::Constant(Object::Number(3)),
        Op::Push,
        Op::Constant(Object::Number(2)),
        Op::NumberGt,
        Op::Halt,
        Op::Nop,
    ];
    test_ops_with_size(&mut vm, ops, Object::True, 0);
}

// (> 4 3 1 2) => #f
#[test]
fn test_test111() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Constant(Object::Number(4)),
        Op::Push,
        Op::Constant(Object::Number(3)),
        Op::BranchNotGt(9),
        Op::Constant(Object::Number(3)),
        Op::Push,
        Op::Constant(Object::Number(1)),
        Op::BranchNotGt(5),
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Constant(Object::Number(2)),
        Op::NumberGt,
        Op::Halt,
        Op::Nop,
        Op::Nop,
    ];
    test_ops_with_size(&mut vm, ops, Object::False, 0);
}

// (>= 3 3 3) => #t
#[test]
fn test_test112() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Constant(Object::Number(3)),
        Op::Push,
        Op::Constant(Object::Number(3)),
        Op::BranchNotGe(5),
        Op::Constant(Object::Number(3)),
        Op::Push,
        Op::Constant(Object::Number(3)),
        Op::NumberGe,
        Op::Halt,
        Op::Nop,
    ];
    test_ops_with_size(&mut vm, ops, Object::True, 0);
}

// (>= 4 3 3) => #t
#[test]
fn test_test113() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Constant(Object::Number(4)),
        Op::Push,
        Op::Constant(Object::Number(3)),
        Op::BranchNotGe(5),
        Op::Constant(Object::Number(3)),
        Op::Push,
        Op::Constant(Object::Number(3)),
        Op::NumberGe,
        Op::Halt,
        Op::Nop,
    ];
    test_ops_with_size(&mut vm, ops, Object::True, 0);
}

// (>= 4 3) => #t
#[test]
fn test_test114() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Constant(Object::Number(4)),
        Op::Push,
        Op::Constant(Object::Number(3)),
        Op::NumberGe,
        Op::Halt,
    ];
    test_ops_with_size(&mut vm, ops, Object::True, 0);
}

// (< 1 2) => #t
#[test]
fn test_test115() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Constant(Object::Number(2)),
        Op::NumberLt,
        Op::Halt,
    ];
    test_ops_with_size(&mut vm, ops, Object::True, 0);
}

// (< 1 2 3) => #t
#[test]
fn test_test116() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Constant(Object::Number(2)),
        Op::BranchNotLt(5),
        Op::Constant(Object::Number(2)),
        Op::Push,
        Op::Constant(Object::Number(3)),
        Op::NumberLt,
        Op::Halt,
        Op::Nop,
    ];
    test_ops_with_size(&mut vm, ops, Object::True, 0);
}

// (< 1 5 3) => #f
#[test]
fn test_test117() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Constant(Object::Number(5)),
        Op::BranchNotLt(5),
        Op::Constant(Object::Number(5)),
        Op::Push,
        Op::Constant(Object::Number(3)),
        Op::NumberLt,
        Op::Halt,
        Op::Nop,
    ];
    test_ops_with_size(&mut vm, ops, Object::False, 0);
}

// (<= 1 2) => #t
#[test]
fn test_test118() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Constant(Object::Number(2)),
        Op::NumberLe,
        Op::Halt,
    ];
    test_ops_with_size(&mut vm, ops, Object::True, 0);
}

// (<= 1 2 3) => #t
#[test]
fn test_test119() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Constant(Object::Number(2)),
        Op::BranchNotLe(5),
        Op::Constant(Object::Number(2)),
        Op::Push,
        Op::Constant(Object::Number(3)),
        Op::NumberLe,
        Op::Halt,
        Op::Nop,
    ];
    test_ops_with_size(&mut vm, ops, Object::True, 0);
}

// (<= 1 3 3) => #t
#[test]
fn test_test120() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Constant(Object::Number(3)),
        Op::BranchNotLe(5),
        Op::Constant(Object::Number(3)),
        Op::Push,
        Op::Constant(Object::Number(3)),
        Op::NumberLe,
        Op::Halt,
        Op::Nop,
    ];
    test_ops_with_size(&mut vm, ops, Object::True, 0);
}

// (<= 1 5 3) => #f
#[test]
fn test_test121() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Constant(Object::Number(5)),
        Op::BranchNotLe(5),
        Op::Constant(Object::Number(5)),
        Op::Push,
        Op::Constant(Object::Number(3)),
        Op::NumberLe,
        Op::Halt,
        Op::Nop,
    ];
    test_ops_with_size(&mut vm, ops, Object::False, 0);
}

// (eq? #t #t) => #t
#[test]
fn test_test122() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Constant(Object::True),
        Op::Push,
        Op::Constant(Object::True),
        Op::Eq,
        Op::Halt,
    ];
    test_ops_with_size(&mut vm, ops, Object::True, 0);
}

// (eq? #t #f) => #f
#[test]
fn test_test123() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Constant(Object::True),
        Op::Push,
        Op::Constant(Object::False),
        Op::Eq,
        Op::Halt,
    ];
    test_ops_with_size(&mut vm, ops, Object::False, 0);
}

// (eq? 'a 'a) => #t
#[test]
fn test_test124() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Constant(Object::Symbol(vm.gc.intern("a"))),
        Op::Push,
        Op::Constant(Object::Symbol(vm.gc.intern("a"))),
        Op::Eq,
        Op::Halt,
    ];
    test_ops_with_size(&mut vm, ops, Object::True, SIZE_OF_SYMBOL);
}

// (eq? 'a 'b) => #f
#[test]
fn test_test125() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Constant(Object::Symbol(vm.gc.intern("a"))),
        Op::Push,
        Op::Constant(Object::Symbol(vm.gc.intern("b"))),
        Op::Eq,
        Op::Halt,
    ];
    test_ops_with_size(&mut vm, ops, Object::False, SIZE_OF_SYMBOL * 2);
}

// (pair? (cons 1 2)) => #t
#[test]
fn test_test126() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Constant(Object::Number(2)),
        Op::Cons,
        Op::PairP,
        Op::Halt,
    ];
    test_ops_with_size(&mut vm, ops, Object::True, 0);
}

// (pair? 3) => #f
#[test]
fn test_test127() {
    let mut vm = Vm::new();
    let ops = vec![Op::Constant(Object::Number(3)), Op::PairP, Op::Halt];
    test_ops_with_size(&mut vm, ops, Object::False, 0);
}

// (symbol? 'a) => #t
#[test]
fn test_test128() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Constant(Object::Symbol(vm.gc.intern("a"))),
        Op::SymbolP,
        Op::Halt,
    ];
    test_ops_with_size(&mut vm, ops, Object::True, SIZE_OF_SYMBOL);
}

// (symbol? 3) => #f
#[test]
fn test_test129() {
    let mut vm = Vm::new();
    let ops = vec![Op::Constant(Object::Number(3)), Op::SymbolP, Op::Halt];
    test_ops_with_size(&mut vm, ops, Object::False, 0);
}

// (cond (#f 1) (#t 3)) => 3
#[test]
fn test_test130() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Constant(Object::False),
        Op::Test(3),
        Op::Constant(Object::Number(1)),
        Op::LocalJmp(6),
        Op::Constant(Object::True),
        Op::Test(3),
        Op::Constant(Object::Number(3)),
        Op::LocalJmp(2),
        Op::Undef,
        Op::Halt,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(3), 0);
}

// (cond (#f 1) (#f 2) (else 3)) => 3
#[test]
fn test_test131() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Constant(Object::False),
        Op::Test(3),
        Op::Constant(Object::Number(1)),
        Op::LocalJmp(6),
        Op::Constant(Object::False),
        Op::Test(3),
        Op::Constant(Object::Number(2)),
        Op::LocalJmp(2),
        Op::Constant(Object::Number(3)),
        Op::Halt,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(3), 0);
}

// (cond (#t 3) (#f 2) (else 1)) => 3
#[test]
fn test_test132() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Constant(Object::True),
        Op::Test(3),
        Op::Constant(Object::Number(3)),
        Op::LocalJmp(6),
        Op::Constant(Object::False),
        Op::Test(3),
        Op::Constant(Object::Number(2)),
        Op::LocalJmp(2),
        Op::Constant(Object::Number(1)),
        Op::Halt,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(3), 0);
}

// (cond ((cons 1 2) => car) (#f 2) (else 3)) => 1
#[test]
fn test_test133() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::LetFrame(3),
        Op::ReferFree(3),
        Op::Push,
        Op::Display(1),
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Constant(Object::Number(2)),
        Op::Cons,
        Op::Push,
        Op::Enter(1),
        Op::ReferLocal(0),
        Op::Test(7),
        Op::Frame(11),
        Op::ReferLocal(0),
        Op::Push,
        Op::ReferFree(0),
        Op::Call(1),
        Op::LocalJmp(6),
        Op::Constant(Object::False),
        Op::Test(3),
        Op::Constant(Object::Number(2)),
        Op::LocalJmp(2),
        Op::Constant(Object::Number(3)),
        Op::Leave(1),
        Op::Halt,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(1), 0);
}

// (let ((a 0)) `(,a 4 5)) => (0 4 5)
#[test]
fn test_test134() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::LetFrame(2),
        Op::Constant(Object::Number(0)),
        Op::Push,
        Op::Enter(1),
        Op::ReferLocal(0),
        Op::Push,
        Op::Constant(vm.gc.list2(Object::Number(4), Object::Number(5))),
        Op::Cons,
        Op::Leave(1),
        Op::Halt,
    ];
    test_ops_with_size_as_str(&mut vm, ops, "(0 4 5)", 0);
}

// (let ((a '(1 2 3))) `(,a 4 5)) => ((1 2 3) 4 5)
#[test]
fn test_test135() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::LetFrame(2),
        Op::Constant(
            vm.gc
                .list3(Object::Number(1), Object::Number(2), Object::Number(3)),
        ),
        Op::Push,
        Op::Enter(1),
        Op::ReferLocal(0),
        Op::Push,
        Op::Constant(vm.gc.list2(Object::Number(4), Object::Number(5))),
        Op::Cons,
        Op::Leave(1),
        Op::Halt,
    ];
    test_ops_with_size_as_str(&mut vm, ops, "((1 2 3) 4 5)", 0);
}

// (let ((a '(1 2 3))) `(,@a 4 5)) => (1 2 3 4 5)
#[test]
fn test_test136() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::LetFrame(2),
        Op::Constant(
            vm.gc
                .list3(Object::Number(1), Object::Number(2), Object::Number(3)),
        ),
        Op::Push,
        Op::Enter(1),
        Op::ReferLocal(0),
        Op::Push,
        Op::Constant(vm.gc.list2(Object::Number(4), Object::Number(5))),
        Op::Append2,
        Op::Leave(1),
        Op::Halt,
    ];
    test_ops_with_size_as_str(&mut vm, ops, "(1 2 3 4 5)", 0);
}

// (let ((name 'a)) `(list ,name ',name)) => (list a 'a)
#[test]
fn test_test137() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::LetFrame(6),
        Op::Constant(Object::Symbol(vm.gc.intern("a"))),
        Op::Push,
        Op::Enter(1),
        Op::Constant(Object::Symbol(vm.gc.intern("list"))),
        Op::Push,
        Op::ReferLocal(0),
        Op::Push,
        Op::Constant(Object::Symbol(vm.gc.intern("quote"))),
        Op::Push,
        Op::ReferLocal(0),
        Op::Push,
        Op::Constant(Object::Nil),
        Op::Cons,
        Op::Cons,
        Op::Push,
        Op::Constant(Object::Nil),
        Op::Cons,
        Op::Cons,
        Op::Cons,
        Op::Leave(1),
        Op::Halt,
    ];
    test_ops_with_size_as_str(&mut vm, ops, "(list a 'a)", SIZE_OF_SYMBOL * 3);
}

// `(list ,(+ 1 2) 4) => (list 3 4)
#[test]
fn test_test138() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Constant(Object::Symbol(vm.gc.intern("list"))),
        Op::Push,
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Constant(Object::Number(2)),
        Op::NumberAdd,
        Op::Push,
        Op::Constant(vm.gc.cons(Object::Number(4), Object::Nil)),
        Op::Cons,
        Op::Cons,
        Op::Halt,
    ];
    test_ops_with_size_as_str(&mut vm, ops, "(list 3 4)", SIZE_OF_SYMBOL);
}

// (let ((a '(1 2 3))) `(1 . ,a)) => (1 1 2 3)
#[test]
fn test_test139() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::LetFrame(2),
        Op::Constant(
            vm.gc
                .list3(Object::Number(1), Object::Number(2), Object::Number(3)),
        ),
        Op::Push,
        Op::Enter(1),
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::ReferLocal(0),
        Op::Cons,
        Op::Leave(1),
        Op::Halt,
    ];
    test_ops_with_size_as_str(&mut vm, ops, "(1 1 2 3)", 0);
}

// (let ((a '(1 2 3))) `,a) => (1 2 3)
#[test]
fn test_test140() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::LetFrame(1),
        Op::Constant(
            vm.gc
                .list3(Object::Number(1), Object::Number(2), Object::Number(3)),
        ),
        Op::Push,
        Op::Enter(1),
        Op::ReferLocal(0),
        Op::Leave(1),
        Op::Halt,
    ];
    test_ops_with_size_as_str(&mut vm, ops, "(1 2 3)", 0);
}

// (let ((a '(1 2 3))) `(,@a)) => (1 2 3)
#[test]
fn test_test141() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::LetFrame(1),
        Op::Constant(
            vm.gc
                .list3(Object::Number(1), Object::Number(2), Object::Number(3)),
        ),
        Op::Push,
        Op::Enter(1),
        Op::ReferLocal(0),
        Op::Leave(1),
        Op::Halt,
    ];
    test_ops_with_size_as_str(&mut vm, ops, "(1 2 3)", 0);
}

// (let ((a '(1 2 3))) `(0 ,@a)) => (0 1 2 3)
#[test]
fn test_test142() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::LetFrame(2),
        Op::Constant(
            vm.gc
                .list3(Object::Number(1), Object::Number(2), Object::Number(3)),
        ),
        Op::Push,
        Op::Enter(1),
        Op::Constant(Object::Number(0)),
        Op::Push,
        Op::ReferLocal(0),
        Op::Cons,
        Op::Leave(1),
        Op::Halt,
    ];
    test_ops_with_size_as_str(&mut vm, ops, "(0 1 2 3)", 0);
}

// (let ((a '(1 2 3))) `(0 ,a 4)) => (0 (1 2 3) 4)
#[test]
fn test_test143() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::LetFrame(3),
        Op::Constant(
            vm.gc
                .list3(Object::Number(1), Object::Number(2), Object::Number(3)),
        ),
        Op::Push,
        Op::Enter(1),
        Op::Constant(Object::Number(0)),
        Op::Push,
        Op::ReferLocal(0),
        Op::Push,
        Op::Constant(vm.gc.cons(Object::Number(4), Object::Nil)),
        Op::Cons,
        Op::Cons,
        Op::Leave(1),
        Op::Halt,
    ];
    test_ops_with_size_as_str(&mut vm, ops, "(0 (1 2 3) 4)", 0);
}

// (let ((a '(1 2 3))) `(,@a 4)) => (1 2 3 4)
#[test]
fn test_test144() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::LetFrame(2),
        Op::Constant(
            vm.gc
                .list3(Object::Number(1), Object::Number(2), Object::Number(3)),
        ),
        Op::Push,
        Op::Enter(1),
        Op::ReferLocal(0),
        Op::Push,
        Op::Constant(vm.gc.cons(Object::Number(4), Object::Nil)),
        Op::Append2,
        Op::Leave(1),
        Op::Halt,
    ];
    test_ops_with_size_as_str(&mut vm, ops, "(1 2 3 4)", 0);
}

// (let ((a '(1 2 3))) `((,@a) 4)) => ((1 2 3) 4)
#[test]
fn test_test145() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::LetFrame(2),
        Op::Constant(
            vm.gc
                .list3(Object::Number(1), Object::Number(2), Object::Number(3)),
        ),
        Op::Push,
        Op::Enter(1),
        Op::ReferLocal(0),
        Op::Push,
        Op::Constant(vm.gc.cons(Object::Number(4), Object::Nil)),
        Op::Cons,
        Op::Leave(1),
        Op::Halt,
    ];
    test_ops_with_size_as_str(&mut vm, ops, "((1 2 3) 4)", 0);
}

// (let ((a '(1 2 3))) `((,a) 4)) => (((1 2 3)) 4)
#[test]
fn test_test146() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::LetFrame(3),
        Op::Constant(
            vm.gc
                .list3(Object::Number(1), Object::Number(2), Object::Number(3)),
        ),
        Op::Push,
        Op::Enter(1),
        Op::ReferLocal(0),
        Op::Push,
        Op::Constant(Object::Nil),
        Op::Cons,
        Op::Push,
        Op::Constant(vm.gc.cons(Object::Number(4), Object::Nil)),
        Op::Cons,
        Op::Leave(1),
        Op::Halt,
    ];
    test_ops_with_size_as_str(&mut vm, ops, "(((1 2 3)) 4)", 0);
}

// `b => b
#[test]
fn test_test147_modified() {
    let mut vm = Vm::new();
    let ops = vec![Op::Constant(Object::Symbol(vm.gc.intern("b"))), Op::Halt];
    let obj = vm.gc.symbol_intern("b");
    test_ops_with_size(&mut vm, ops, obj, SIZE_OF_SYMBOL);
}

// (list 1 2 3) => (1 2 3)
#[test]
fn test_test148() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Frame(9),
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Constant(Object::Number(2)),
        Op::Push,
        Op::Constant(Object::Number(3)),
        Op::Push,
        Op::ReferFree(89),
        Op::Call(3),
        Op::Halt,
        Op::Nop,
    ];
    test_ops_with_size_as_str(&mut vm, ops, "(1 2 3)", 0);
}

// (aif (+ 1 2) it #f) => 3
#[test]
fn test_test149() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::LetFrame(2),
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Constant(Object::Number(2)),
        Op::NumberAdd,
        Op::Push,
        Op::Enter(1),
        Op::ReferLocal(0),
        Op::Test(2),
        Op::ReferLocal(0),
        Op::Leave(1),
        Op::Halt,
        Op::Nop,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(3), 0);
}

// (string-length abc) => 3
#[test]
fn test_test150() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Frame(5),
        Op::Constant(vm.gc.new_string("abc")),
        Op::Push,
        Op::ReferFree(19),
        Op::Call(1),
        Op::Halt,
        Op::Nop,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(3), 0);
}

// (string-length あいう) => 3
#[test]
fn test_test151() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Frame(5),
        Op::Constant(vm.gc.new_string("あいう")),
        Op::Push,
        Op::ReferFree(19),
        Op::Call(1),
        Op::Halt,
        Op::Nop,
    ];
    test_ops_with_size(&mut vm, ops, Object::Number(3), 0);
}

// (string->symbol abc) => abc
#[test]
fn test_test152_modified() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Frame(5),
        Op::Constant(vm.gc.new_string("abc")),
        Op::Push,
        Op::ReferFree(20),
        Op::Call(1),
        Op::Halt,
        Op::Nop,
    ];
    let s = vm.gc.symbol_intern("abc");
    test_ops_with_size(&mut vm, ops, s, SIZE_OF_SYMBOL);
}

// (number->string 123) => 123
#[test]
fn test_test153() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Frame(5),
        Op::Constant(Object::Number(123)),
        Op::Push,
        Op::ReferFree(25),
        Op::Call(1),
        Op::Halt,
        Op::Nop,
    ];
    test_ops_with_size_as_str(&mut vm, ops, "\"123\"", 0);
}

// (begin (define (proc1 . a) a) (proc1 1 2 3 4)) => (1 2 3 4)
#[test]
fn test_test154_modified() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Closure {
            size: 3,
            arg_len: 1,
            is_optional_arg: true,
            num_free_vars: 0,
        },
        Op::ReferLocal(0),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("proc1")),
        Op::Frame(11),
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Constant(Object::Number(2)),
        Op::Push,
        Op::Constant(Object::Number(3)),
        Op::Push,
        Op::Constant(Object::Number(4)),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("proc1")),
        Op::Call(4),
        Op::Halt,
        Op::Nop,
        Op::Nop,
    ];
    // This register a closure globally and increase size.
    test_ops_with_size_as_str(&mut vm, ops, "(1 2 3 4)", SIZE_OF_CLOSURE + SIZE_OF_SYMBOL);
}

// ((lambda (a . b) b) 1 2 3) => (2 3)
#[test]
fn test_test155() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Frame(11),
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Constant(Object::Number(2)),
        Op::Push,
        Op::Constant(Object::Number(3)),
        Op::Push,
        Op::Closure {
            size: 3,
            arg_len: 2,
            is_optional_arg: true,
            num_free_vars: 0,
        },
        Op::ReferLocal(1),
        Op::Return(2),
        Op::Call(3),
        Op::Halt,
        Op::Nop,
        Op::Nop,
    ];
    test_ops_with_size_as_str(&mut vm, ops, "(2 3)", 0);
}

// ((lambda (a . b) a) 1 2 3 4 5) => 1
#[test]
fn test_test156() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Frame(15),
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Constant(Object::Number(2)),
        Op::Push,
        Op::Constant(Object::Number(3)),
        Op::Push,
        Op::Constant(Object::Number(4)),
        Op::Push,
        Op::Constant(Object::Number(5)),
        Op::Push,
        Op::Closure {
            size: 3,
            arg_len: 2,
            is_optional_arg: true,
            num_free_vars: 0,
        },
        Op::ReferLocal(0),
        Op::Return(2),
        Op::Call(5),
        Op::Halt,
        Op::Nop,
        Op::Nop,
    ];
    let expected = Object::Number(1);
    test_ops_with_size(&mut vm, ops, expected, 0);
}

// ((lambda (a . b) b) 1 2 3 4 5) => (2 3 4 5)
#[test]
fn test_test157() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Frame(15),
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Constant(Object::Number(2)),
        Op::Push,
        Op::Constant(Object::Number(3)),
        Op::Push,
        Op::Constant(Object::Number(4)),
        Op::Push,
        Op::Constant(Object::Number(5)),
        Op::Push,
        Op::Closure {
            size: 3,
            arg_len: 2,
            is_optional_arg: true,
            num_free_vars: 0,
        },
        Op::ReferLocal(1),
        Op::Return(2),
        Op::Call(5),
        Op::Halt,
        Op::Nop,
        Op::Nop,
    ];
    test_ops_with_size_as_str(&mut vm, ops, "(2 3 4 5)", 0);
}

// ((lambda (a b c d . e) e) 1 2 3 4) => ()
#[test]
fn test_test158() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Frame(13),
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Constant(Object::Number(2)),
        Op::Push,
        Op::Constant(Object::Number(3)),
        Op::Push,
        Op::Constant(Object::Number(4)),
        Op::Push,
        Op::Closure {
            size: 3,
            arg_len: 5,
            is_optional_arg: true,
            num_free_vars: 0,
        },
        Op::ReferLocal(4),
        Op::Return(5),
        Op::Call(4),
        Op::Halt,
        Op::Nop,
        Op::Nop,
    ];
    let expected = Object::Nil;
    test_ops_with_size(&mut vm, ops, expected, 0);
}

// ((lambda (a b c d . e) a) 1 2 3 4) => 1
#[test]
fn test_test159() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Frame(13),
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Constant(Object::Number(2)),
        Op::Push,
        Op::Constant(Object::Number(3)),
        Op::Push,
        Op::Constant(Object::Number(4)),
        Op::Push,
        Op::Closure {
            size: 3,
            arg_len: 5,
            is_optional_arg: true,
            num_free_vars: 0,
        },
        Op::ReferLocal(0),
        Op::Return(5),
        Op::Call(4),
        Op::Halt,
        Op::Nop,
        Op::Nop,
    ];
    let expected = Object::Number(1);
    test_ops_with_size(&mut vm, ops, expected, 0);
}

// ((lambda (a b c d . e) b) 1 2 3 4) => 2
#[test]
fn test_test160() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Frame(13),
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Constant(Object::Number(2)),
        Op::Push,
        Op::Constant(Object::Number(3)),
        Op::Push,
        Op::Constant(Object::Number(4)),
        Op::Push,
        Op::Closure {
            size: 3,
            arg_len: 5,
            is_optional_arg: true,
            num_free_vars: 0,
        },
        Op::ReferLocal(1),
        Op::Return(5),
        Op::Call(4),
        Op::Halt,
        Op::Nop,
        Op::Nop,
    ];
    let expected = Object::Number(2);
    test_ops_with_size(&mut vm, ops, expected, 0);
}

// ((lambda (a b c d . e) c) 1 2 3 4) => 3
#[test]
fn test_test161() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Frame(13),
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Constant(Object::Number(2)),
        Op::Push,
        Op::Constant(Object::Number(3)),
        Op::Push,
        Op::Constant(Object::Number(4)),
        Op::Push,
        Op::Closure {
            size: 3,
            arg_len: 5,
            is_optional_arg: true,
            num_free_vars: 0,
        },
        Op::ReferLocal(2),
        Op::Return(5),
        Op::Call(4),
        Op::Halt,
        Op::Nop,
        Op::Nop,
    ];
    let expected = Object::Number(3);
    test_ops_with_size(&mut vm, ops, expected, 0);
}

// (append '(1 2) '(3 4)) => (1 2 3 4)
#[test]
fn test_test163() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Constant(vm.gc.list2(Object::Number(1), Object::Number(2))),
        Op::Push,
        Op::Constant(vm.gc.list2(Object::Number(3), Object::Number(4))),
        Op::Append2,
        Op::Halt,
    ];
    test_ops_with_size_as_str(&mut vm, ops, "(1 2 3 4)", 0);
}

// (append) => ()
#[test]
fn test_test164() {
    let mut vm = Vm::new();
    let ops = vec![Op::Constant(Object::Nil), Op::Halt];
    let expected = Object::Nil;
    test_ops_with_size(&mut vm, ops, expected, 0);
}

// (begin (define x 3) x) => 3
#[test]
fn test_test165_modified() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Constant(Object::Number(3)),
        Op::DefineGlobal(vm.gc.intern("x")),
        Op::ReferGlobal(vm.gc.intern("x")),
        Op::Halt,
    ];
    let expected = Object::Number(3);
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL);
}

// (begin (define (hoge . a) a) (hoge 1 2 3)) => (1 2 3)
#[test]
fn test_test166() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Closure {
            size: 3,
            arg_len: 1,
            is_optional_arg: true,
            num_free_vars: 0,
        },
        Op::ReferLocal(0),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("hoge")),
        Op::Frame(9),
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Constant(Object::Number(2)),
        Op::Push,
        Op::Constant(Object::Number(3)),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("hoge")),
        Op::Call(3),
        Op::Halt,
        Op::Nop,
        Op::Nop,
    ];
    // This register a closure globally and increase size.
    test_ops_with_size_as_str(&mut vm, ops, "(1 2 3)", SIZE_OF_CLOSURE + SIZE_OF_SYMBOL);
}

// (begin (define (hige a . b) b) (hige 1 2 3)) => (2 3)
#[test]
fn test_test167() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Closure {
            size: 3,
            arg_len: 2,
            is_optional_arg: true,
            num_free_vars: 0,
        },
        Op::ReferLocal(1),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("hige")),
        Op::Frame(9),
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Constant(Object::Number(2)),
        Op::Push,
        Op::Constant(Object::Number(3)),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("hige")),
        Op::Call(3),
        Op::Halt,
        Op::Nop,
        Op::Nop,
    ];
    // This register a closure globally and increase size.
    test_ops_with_size_as_str(&mut vm, ops, "(2 3)", SIZE_OF_CLOSURE + SIZE_OF_SYMBOL);
}

// (apply (lambda a a) '(3 2)) => (3 2)
#[test]
fn test_test168() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Frame(9),
        Op::Closure {
            size: 3,
            arg_len: 1,
            is_optional_arg: true,
            num_free_vars: 0,
        },
        Op::ReferLocal(0),
        Op::Return(1),
        Op::Push,
        Op::Constant(vm.gc.list2(Object::Number(3), Object::Number(2))),
        Op::Push,
        Op::ReferFree(152),
        Op::Call(2),
        Op::Halt,
        Op::Nop,
        Op::Nop,
    ];
    test_ops_with_size_as_str(&mut vm, ops, "(3 2)", 0);
}

// (let ((a 3)) 3 2 1) => 1
#[test]
fn test_test170() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::LetFrame(1),
        Op::Constant(Object::Number(3)),
        Op::Push,
        Op::Enter(1),
        Op::Constant(Object::Number(3)),
        Op::Constant(Object::Number(2)),
        Op::Constant(Object::Number(1)),
        Op::Leave(1),
        Op::Halt,
    ];
    let expected = Object::Number(1);
    test_ops_with_size(&mut vm, ops, expected, 0);
}

// (make-string 3) =>
#[test]
fn test_test171() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Frame(5),
        Op::Constant(Object::Number(3)),
        Op::Push,
        Op::ReferFree(17),
        Op::Call(1),
        Op::Halt,
        Op::Nop,
    ];
    test_ops_with_size_as_str(&mut vm, ops, "\"   \"", 0);
}

// (make-string 3 #\c) => "ccc"
#[test]
fn test_test172() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Frame(7),
        Op::Constant(Object::Number(3)),
        Op::Push,
        Op::Constant(Object::Char('c')),
        Op::Push,
        Op::ReferFree(17),
        Op::Call(2),
        Op::Halt,
        Op::Nop,
    ];
    test_ops_with_size_as_str(&mut vm, ops, "\"ccc\"", 0);
}

// (apply car '((3))) => 3
#[test]
fn test_test173_modified() {
    let mut vm = Vm::new();
    let list = vm.gc.list1(Object::Number(3));
    let ops = vec![
        Op::Frame(7),
        Op::ReferFree(3),
        Op::Push,
        Op::Constant(vm.gc.list1(list)),
        Op::Push,
        Op::ReferFree(152),
        Op::Call(2),
        Op::Halt,
        Op::Nop,
    ];
    let expected = Object::Number(3);
    test_ops_with_size(&mut vm, ops, expected, 0);
}

// (apply (lambda (a) a) '(3)) => 3
#[test]
fn test_test174() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Frame(9),
        Op::Closure {
            size: 3,
            arg_len: 1,
            is_optional_arg: false,
            num_free_vars: 0,
        },
        Op::ReferLocal(0),
        Op::Return(1),
        Op::Push,
        Op::Constant(vm.gc.cons(Object::Number(3), Object::Nil)),
        Op::Push,
        Op::ReferFree(152),
        Op::Call(2),
        Op::Halt,
        Op::Nop,
        Op::Nop,
    ];
    let expected = Object::Number(3);
    test_ops_with_size(&mut vm, ops, expected, 0);
}

// (apply (lambda (a b) (+ a b)) '(5 2)) => 7
#[test]
fn test_test175() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Frame(12),
        Op::Closure {
            size: 6,
            arg_len: 2,
            is_optional_arg: false,
            num_free_vars: 0,
        },
        Op::ReferLocal(0),
        Op::Push,
        Op::ReferLocal(1),
        Op::NumberAdd,
        Op::Return(2),
        Op::Push,
        Op::Constant(vm.gc.list2(Object::Number(5), Object::Number(2))),
        Op::Push,
        Op::ReferFree(152),
        Op::Call(2),
        Op::Halt,
        Op::Nop,
        Op::Nop,
    ];
    let expected = Object::Number(7);
    test_ops_with_size(&mut vm, ops, expected, 0);
}

// (apply (lambda (a b c) (+ a b c)) '(5 2 1)) => 8
#[test]
fn test_test176() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Frame(15),
        Op::Closure {
            size: 9,
            arg_len: 3,
            is_optional_arg: false,
            num_free_vars: 0,
        },
        Op::ReferLocal(0),
        Op::Push,
        Op::ReferLocal(1),
        Op::NumberAdd,
        Op::Push,
        Op::ReferLocal(2),
        Op::NumberAdd,
        Op::Return(3),
        Op::Push,
        Op::Constant(
            vm.gc
                .list3(Object::Number(5), Object::Number(2), Object::Number(1)),
        ),
        Op::Push,
        Op::ReferFree(152),
        Op::Call(2),
        Op::Halt,
        Op::Nop,
        Op::Nop,
    ];
    let expected = Object::Number(8);
    test_ops_with_size(&mut vm, ops, expected, 0);
}

// (apply (lambda (a) (car a)) '((3))) => 3
#[test]
fn test_test177_modified() {
    let mut vm = Vm::new();
    let list = vm.gc.list1(Object::Number(3));
    let ops = vec![
        Op::Frame(10),
        Op::Closure {
            size: 4,
            arg_len: 1,
            is_optional_arg: false,
            num_free_vars: 0,
        },
        Op::ReferLocal(0),
        Op::Car,
        Op::Return(1),
        Op::Push,
        Op::Constant(vm.gc.list1(list)),
        Op::Push,
        Op::ReferFree(152),
        Op::Call(2),
        Op::Halt,
        Op::Nop,
        Op::Nop,
    ];
    let expected = Object::Number(3);
    test_ops_with_size(&mut vm, ops, expected, 0);
}

// (apply (lambda (a . b) (+ a (car b))) '(1 2)) => 3
#[test]
fn test_test178() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Frame(13),
        Op::Closure {
            size: 7,
            arg_len: 2,
            is_optional_arg: true,
            num_free_vars: 0,
        },
        Op::ReferLocal(0),
        Op::Push,
        Op::ReferLocal(1),
        Op::Car,
        Op::NumberAdd,
        Op::Return(2),
        Op::Push,
        Op::Constant(vm.gc.list2(Object::Number(1), Object::Number(2))),
        Op::Push,
        Op::ReferFree(152),
        Op::Call(2),
        Op::Halt,
        Op::Nop,
        Op::Nop,
    ];
    let expected = Object::Number(3);
    test_ops_with_size(&mut vm, ops, expected, 0);
}

// (string-append "12" "345" "6") => "123456"
#[test]
fn test_test179() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Frame(9),
        Op::Constant(vm.gc.new_string("12")),
        Op::Push,
        Op::Constant(vm.gc.new_string("345")),
        Op::Push,
        Op::Constant(vm.gc.new_string("6")),
        Op::Push,
        Op::ReferFree(22),
        Op::Call(3),
        Op::Halt,
        Op::Nop,
    ];
    test_ops_with_size_as_str(&mut vm, ops, "\"123456\"", 0);
}

// (string? "hige") => #t
#[test]
fn test_test181() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Frame(5),
        Op::Constant(vm.gc.new_string("hige")),
        Op::Push,
        Op::ReferFree(31),
        Op::Call(1),
        Op::Halt,
        Op::Nop,
    ];
    let expected = Object::True;
    test_ops_with_size(&mut vm, ops, expected, 0);
}

// ((lambda () (define p (cons 1 2)) (set-cdr! p 3) p)) => (1 . 3)
#[test]
fn test_test184() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Frame(22),
        Op::Closure {
            size: 20,
            arg_len: 0,
            is_optional_arg: false,
            num_free_vars: 0,
        },
        Op::LetFrame(2),
        Op::Undef,
        Op::Push,
        Op::Box(0),
        Op::Enter(1),
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Constant(Object::Number(2)),
        Op::Cons,
        Op::AssignLocal(0),
        Op::ReferLocal(0),
        Op::Indirect,
        Op::Push,
        Op::Constant(Object::Number(3)),
        Op::SetCdr,
        Op::ReferLocal(0),
        Op::Indirect,
        Op::Leave(1),
        Op::Return(0),
        Op::Call(0),
        Op::Halt,
        Op::Nop,
        Op::Nop,
    ];
    test_ops_with_size_as_str(&mut vm, ops, "(1 . 3)", 0);
}

// ((lambda () (define q (cons 1 2)) (set-car! q 3) q)) => (3 . 2)
#[test]
fn test_test185() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Frame(22),
        Op::Closure {
            size: 20,
            arg_len: 0,
            is_optional_arg: false,
            num_free_vars: 0,
        },
        Op::LetFrame(2),
        Op::Undef,
        Op::Push,
        Op::Box(0),
        Op::Enter(1),
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Constant(Object::Number(2)),
        Op::Cons,
        Op::AssignLocal(0),
        Op::ReferLocal(0),
        Op::Indirect,
        Op::Push,
        Op::Constant(Object::Number(3)),
        Op::SetCar,
        Op::ReferLocal(0),
        Op::Indirect,
        Op::Leave(1),
        Op::Return(0),
        Op::Call(0),
        Op::Halt,
        Op::Nop,
        Op::Nop,
    ];
    test_ops_with_size_as_str(&mut vm, ops, "(3 . 2)", 0);
}

// (begin #f #t) => #t
#[test]
fn test_test186() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Constant(Object::False),
        Op::Constant(Object::True),
        Op::Halt,
    ];
    let expected = Object::True;
    test_ops_with_size(&mut vm, ops, expected, 0);
}

// (vector-length (make-vector 3)) => 3
#[test]
fn test_test187() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Constant(Object::Number(3)),
        Op::Push,
        Op::Constant(Object::Nil),
        Op::MakeVector,
        Op::VectorLength,
        Op::Halt,
    ];
    let expected = Object::Number(3);
    test_ops_with_size(&mut vm, ops, expected, 0);
}

// (let loop ((i 0)) (if (= i 100) (+ i 1) (loop (+ i 1)))) => 101
#[test]
fn test_test188() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::LetFrame(1),
        Op::Undef,
        Op::Push,
        Op::Box(0),
        Op::Enter(1),
        Op::ReferLocal(0),
        Op::Push,
        Op::Closure {
            size: 19,
            arg_len: 1,
            is_optional_arg: false,
            num_free_vars: 1,
        },
        Op::ReferLocal(0),
        Op::Push,
        Op::Constant(Object::Number(100)),
        Op::BranchNotNumberEqual(6),
        Op::ReferLocal(0),
        Op::Push,
        Op::Constant(Object::Number(1)),
        Op::NumberAdd,
        Op::Return(1),
        Op::ReferLocal(0),
        Op::Push,
        Op::Constant(Object::Number(1)),
        Op::NumberAdd,
        Op::Push,
        Op::ReferFree(0),
        Op::Indirect,
        Op::TailCall(1, 1),
        Op::Return(1),
        Op::AssignLocal(0),
        Op::Frame(6),
        Op::Constant(Object::Number(0)),
        Op::Push,
        Op::ReferLocal(0),
        Op::Indirect,
        Op::Call(1),
        Op::Leave(1),
        Op::Halt,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
    ];
    let expected = Object::Number(101);
    test_ops_with_size(&mut vm, ops, expected, 0);
}

// (let ((a 0)) (cond (#t (set! a (+ a 1)) (set! a (+ a 1)) a))) => 2
#[test]
fn test_test189() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::LetFrame(3),
        Op::Constant(Object::Number(0)),
        Op::Push,
        Op::Box(0),
        Op::Enter(1),
        Op::Constant(Object::True),
        Op::Test(16),
        Op::ReferLocal(0),
        Op::Indirect,
        Op::Push,
        Op::Constant(Object::Number(1)),
        Op::NumberAdd,
        Op::AssignLocal(0),
        Op::ReferLocal(0),
        Op::Indirect,
        Op::Push,
        Op::Constant(Object::Number(1)),
        Op::NumberAdd,
        Op::AssignLocal(0),
        Op::ReferLocal(0),
        Op::Indirect,
        Op::LocalJmp(2),
        Op::Undef,
        Op::Leave(1),
        Op::Halt,
        Op::Nop,
        Op::Nop,
    ];
    let expected = Object::Number(2);
    test_ops_with_size(&mut vm, ops, expected, 0);
}

// (char? #\あ) => #t
#[test]
fn test_test190() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Frame(5),
        Op::Constant(Object::Char('あ')),
        Op::Push,
        Op::ReferFree(53),
        Op::Call(1),
        Op::Halt,
        Op::Nop,
    ];
    let expected = Object::True;
    test_ops_with_size(&mut vm, ops, expected, 0);
}

// (eq? (list 'a) (list 'a)) => #f
#[test]
fn test_test191() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Frame(5),
        Op::Constant(vm.gc.symbol_intern("a")),
        Op::Push,
        Op::ReferFree(89),
        Op::Call(1),
        Op::Push,
        Op::Frame(5),
        Op::Constant(vm.gc.symbol_intern("a")),
        Op::Push,
        Op::ReferFree(89),
        Op::Call(1),
        Op::Eq,
        Op::Halt,
        Op::Nop,
        Op::Nop,
    ];
    let expected = Object::False;
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL);
}

// (let ((x (list 'a))) (eq? x x)) => #t
#[test]
fn test_test192() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::LetFrame(3),
        Op::ReferFree(89),
        Op::Push,
        Op::Display(1),
        Op::Frame(5),
        Op::Constant(vm.gc.symbol_intern("a")),
        Op::Push,
        Op::ReferFree(0),
        Op::Call(1),
        Op::Push,
        Op::Enter(1),
        Op::ReferLocal(0),
        Op::Push,
        Op::ReferLocal(0),
        Op::Eq,
        Op::Leave(1),
        Op::Halt,
        Op::Nop,
    ];
    let expected = Object::True;
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL);
}

// (map1 (lambda (x) 2) '(1)) => (2)
#[test]
fn test_test193_modified0() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Frame(9),
        // size was originally 3
        Op::Closure {
            size: 3,
            arg_len: 1,
            is_optional_arg: false,
            num_free_vars: 0,
        },
        Op::Constant(Object::Number(2)),
        Op::Return(1),
        Op::Push,
        Op::Constant(vm.gc.cons(Object::Number(1), Object::Nil)),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("map1")),
        Op::Call(2),
        Op::Halt,
        Op::Nop,
        Op::Nop,
    ];

    test_ops_with_size_as_str(&mut vm, ops, "(2)", 0);
}

// (map1 (lambda (s) (string-append s "123")) '("ABC" "DEF")) => ("ABC123" "DEF123")
#[test]
fn test_test193_modified() {
    let mut vm = Vm::new();
    let abc = vm.gc.new_string("ABC");
    let def = vm.gc.new_string("DEF");
    let ops = vec![
        Op::Frame(16),
        Op::ReferFree(22),
        Op::Push,
        Op::Closure {
            size: 8,
            arg_len: 1,
            is_optional_arg: false,
            num_free_vars: 1,
        },
        Op::ReferLocal(0),
        Op::Push,
        Op::Constant(vm.gc.new_string("123")),
        Op::Push,
        Op::ReferFree(0),
        Op::TailCall(2, 1),
        Op::Return(1),
        Op::Push,
        Op::Constant(vm.gc.list2(abc, def)),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("map1")),
        Op::Call(2),
        Op::Halt,
        Op::Nop,
        Op::Nop,
    ];
    test_ops_with_size_as_str(&mut vm, ops, "(\"ABC123\" \"DEF123\")", 0);
}

// (let1 a '() (let1 G68 (lambda (i) (if (>= i 10000) i (a (+ i 1)))) (set! a G68) (a 0))) => 10000
#[test]
fn test_test194() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::LetFrame(3),
        Op::Constant(Object::Nil),
        Op::Push,
        Op::Box(0),
        Op::Enter(1),
        Op::LetFrame(2),
        Op::ReferLocal(0),
        Op::Push,
        Op::ReferLocal(0),
        Op::Push,
        Op::Display(2),
        Op::ReferLocal(0),
        Op::Push,
        Op::Closure {
            size: 16,
            arg_len: 1,
            is_optional_arg: false,
            num_free_vars: 1,
        },
        Op::ReferLocal(0),
        Op::Push,
        Op::Constant(Object::Number(10000)),
        Op::BranchNotGe(3),
        Op::ReferLocal(0),
        Op::Return(1),
        Op::ReferLocal(0),
        Op::Push,
        Op::Constant(Object::Number(1)),
        Op::NumberAdd,
        Op::Push,
        Op::ReferFree(0),
        Op::Indirect,
        Op::TailCall(1, 1),
        Op::Return(1),
        Op::Push,
        Op::Enter(1),
        Op::ReferLocal(0),
        Op::AssignFree(0),
        Op::Frame(6),
        Op::Constant(Object::Number(0)),
        Op::Push,
        Op::ReferFree(0),
        Op::Indirect,
        Op::Call(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Halt,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
    ];
    let expected = Object::Number(10000);
    test_ops_with_size(&mut vm, ops, expected, 0);
}

// (let ((p (open-string-input-port "12345"))) (read-char p) (read-char p)) => #\2
#[test]
fn test_test195() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::LetFrame(2),
        Op::ReferFree(35),
        Op::Push,
        Op::Display(1),
        Op::Frame(5),
        Op::Constant(vm.gc.new_string("12345")),
        Op::Push,
        Op::ReferFree(0),
        Op::Call(1),
        Op::Push,
        Op::Enter(1),
        Op::ReferLocal(0),
        Op::ReadChar,
        Op::ReferLocal(0),
        Op::ReadChar,
        Op::Leave(1),
        Op::Halt,
        Op::Nop,
    ];
    let expected = Object::Char('2');
    test_ops_with_size(&mut vm, ops, expected, 0);
}

// (eof-object? (let ((p (open-string-input-port "1"))) (read-char p) (read-char p))) => #t
#[test]
fn test_test196() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Frame(20),
        Op::LetFrame(2),
        Op::ReferFree(35),
        Op::Push,
        Op::Display(1),
        Op::Frame(5),
        Op::Constant(vm.gc.new_string("1")),
        Op::Push,
        Op::ReferFree(0),
        Op::Call(1),
        Op::Push,
        Op::Enter(1),
        Op::ReferLocal(0),
        Op::ReadChar,
        Op::ReferLocal(0),
        Op::ReadChar,
        Op::Leave(1),
        Op::Push,
        Op::ReferFree(27),
        Op::Call(1),
        Op::Halt,
        Op::Nop,
        Op::Nop,
    ];
    let expected = Object::True;
    test_ops_with_size(&mut vm, ops, expected, 0);
}

// (begin (let ((xxx 'a)) (case xxx ((b) 'b) ((a) 'a)))) => a
#[test]
fn test_test197_modified() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::LetFrame(4),
        Op::Constant(vm.gc.symbol_intern("a")),
        Op::Push,
        Op::Enter(1),
        Op::LetFrame(3),
        Op::ReferLocal(0),
        Op::Push,
        Op::Enter(1),
        Op::Constant(vm.gc.symbol_intern("b")),
        Op::Push,
        Op::ReferLocal(0),
        Op::BranchNotEqv(3),
        Op::Constant(vm.gc.symbol_intern("b")),
        Op::LocalJmp(8),
        Op::Constant(vm.gc.symbol_intern("a")),
        Op::Push,
        Op::ReferLocal(0),
        Op::BranchNotEqv(3),
        Op::Constant(vm.gc.symbol_intern("a")),
        Op::LocalJmp(2),
        Op::Undef,
        Op::Leave(1),
        Op::Leave(1),
        Op::Halt,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
    ];
    let expected = vm.gc.symbol_intern("a");
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 2);
}

// (begin (let ((xxy 'a)) (case xxy ((b) 'b) ((c) 'c) (else 3)))) => 3
#[test]
fn test_test198_mofidified() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::LetFrame(4),
        Op::Constant(vm.gc.symbol_intern("a")),
        Op::Push,
        Op::Enter(1),
        Op::LetFrame(3),
        Op::ReferLocal(0),
        Op::Push,
        Op::Enter(1),
        Op::Constant(vm.gc.symbol_intern("b")),
        Op::Push,
        Op::ReferLocal(0),
        Op::BranchNotEqv(3),
        Op::Constant(vm.gc.symbol_intern("b")),
        Op::LocalJmp(8),
        Op::Constant(vm.gc.symbol_intern("c")),
        Op::Push,
        Op::ReferLocal(0),
        Op::BranchNotEqv(3),
        Op::Constant(vm.gc.symbol_intern("c")),
        Op::LocalJmp(2),
        Op::Constant(Object::Number(3)),
        Op::Leave(1),
        Op::Leave(1),
        Op::Halt,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
    ];
    let expected = Object::Number(3);
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 3);
}

// (* 2 3 4) => 24
#[test]
fn test_test200() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Constant(Object::Number(2)),
        Op::Push,
        Op::Constant(Object::Number(3)),
        Op::NumberMul,
        Op::Push,
        Op::Constant(Object::Number(4)),
        Op::NumberMul,
        Op::Halt,
    ];
    let expected = Object::Number(24);
    test_ops_with_size(&mut vm, ops, expected, 0);
}

// (string->number "123") => 123
#[test]
fn test_test201() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Frame(5),
        Op::Constant(vm.gc.new_string("123")),
        Op::Push,
        Op::ReferFree(21),
        Op::Call(1),
        Op::Halt,
        Op::Nop,
    ];
    let expected = Object::Number(123);
    test_ops_with_size(&mut vm, ops, expected, 0);
}

// (let ((p (open-string-input-port "123 456"))) (read-char p)) => #\1
#[test]
fn test_test202() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::LetFrame(2),
        Op::ReferFree(35),
        Op::Push,
        Op::Display(1),
        Op::Frame(5),
        Op::Constant(vm.gc.new_string("123 456")),
        Op::Push,
        Op::ReferFree(0),
        Op::Call(1),
        Op::Push,
        Op::Enter(1),
        Op::ReferLocal(0),
        Op::ReadChar,
        Op::Leave(1),
        Op::Halt,
        Op::Nop,
    ];
    let expected = Object::Char('1');
    test_ops_with_size(&mut vm, ops, expected, 0);
}

// (reverse '(1 2 3 4)) => (4 3 2 1)
#[test]
fn test_test203_modified() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Frame(5),
        Op::Constant(vm.gc.list4(
            Object::Number(1),
            Object::Number(2),
            Object::Number(3),
            Object::Number(4),
        )),
        Op::Push,
        Op::ReferFree(26),
        Op::Call(1),
        Op::Halt,
        Op::Nop,
    ];
    test_ops_with_size_as_str(&mut vm, ops, "(4 3 2 1)", 0);
}

// (string-split "wiki&cmd" #\&) => ("wiki" "cmd")
#[test]
fn test_test204() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Frame(7),
        Op::Constant(vm.gc.new_string("wiki&cmd")),
        Op::Push,
        Op::Constant(Object::Char('&')),
        Op::Push,
        Op::ReferFree(23),
        Op::Call(2),
        Op::Halt,
        Op::Nop,
    ];
    test_ops_with_size_as_str(&mut vm, ops, "(\"wiki\" \"cmd\")", 0);
}

// (begin (define str1 (make-string 3 #\c)) (string-set! str1 1 #\b) str1) => "cbc"
#[test]
fn test_test205() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Frame(7),
        Op::Constant(Object::Number(3)),
        Op::Push,
        Op::Constant(Object::Char('c')),
        Op::Push,
        Op::ReferFree(17),
        Op::Call(2),
        Op::DefineGlobal(vm.gc.intern("str1")),
        Op::Frame(9),
        Op::ReferGlobal(vm.gc.intern("str1")),
        Op::Push,
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Constant(Object::Char('b')),
        Op::Push,
        Op::ReferFree(18),
        Op::Call(3),
        Op::ReferGlobal(vm.gc.intern("str1")),
        Op::Halt,
        Op::Nop,
        Op::Nop,
    ];
    // The string is kept as global variable.
    test_ops_with_size_as_str(&mut vm, ops, "\"cbc\"", SIZE_OF_SYMBOL + SIZE_OF_STRING);
}

// (let* ((a 0) (b (lambda (x y) a))) (b (begin (set! a 1)) (begin (set! a 2)))) => 2
#[test]
fn test_test206() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::LetFrame(4),
        Op::Constant(Object::Number(0)),
        Op::Push,
        Op::Box(0),
        Op::Enter(1),
        Op::LetFrame(3),
        Op::ReferLocal(0),
        Op::Push,
        Op::ReferLocal(0),
        Op::Push,
        Op::Display(2),
        Op::ReferLocal(0),
        Op::Push,
        Op::Closure {
            size: 4,
            arg_len: 2,
            is_optional_arg: false,
            num_free_vars: 1,
        },
        Op::ReferFree(0),
        Op::Indirect,
        Op::Return(2),
        Op::Push,
        Op::Enter(1),
        Op::Frame(9),
        Op::Constant(Object::Number(1)),
        Op::AssignFree(0),
        Op::Push,
        Op::Constant(Object::Number(2)),
        Op::AssignFree(0),
        Op::Push,
        Op::ReferLocal(0),
        Op::Call(2),
        Op::Leave(1),
        Op::Leave(1),
        Op::Halt,
        Op::Nop,
        Op::Nop,
    ];
    let expected = Object::Number(2);
    test_ops_with_size(&mut vm, ops, expected, 0);
}

// #\a => #\a
#[test]
fn test_test207() {
    let mut vm = Vm::new();
    let ops = vec![Op::Constant(Object::Char('a')), Op::Halt];
    let expected = Object::Char('a');
    test_ops_with_size(&mut vm, ops, expected, 0);
}

// (eof-object? 3) => #f
#[test]
fn test_test208() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Frame(5),
        Op::Constant(Object::Number(3)),
        Op::Push,
        Op::ReferFree(27),
        Op::Call(1),
        Op::Halt,
        Op::Nop,
    ];
    let expected = Object::False;
    test_ops_with_size(&mut vm, ops, expected, 0);
}

// 102 => 102
#[test]
fn test_test209() {
    let mut vm = Vm::new();
    let ops = vec![Op::Constant(Object::Number(102)), Op::Halt];
    let expected = Object::Number(102);
    test_ops_with_size(&mut vm, ops, expected, 0);
}

// `(list ,(+ 1 2) 4) => (list 3 4)
#[test]
fn test_test210() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Constant(vm.gc.symbol_intern("list")),
        Op::Push,
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Constant(Object::Number(2)),
        Op::NumberAdd,
        Op::Push,
        Op::Constant(vm.gc.cons(Object::Number(4), Object::Nil)),
        Op::Cons,
        Op::Cons,
        Op::Halt,
    ];
    test_ops_with_size_as_str(&mut vm, ops, "(list 3 4)", SIZE_OF_SYMBOL);
}

// (let ((name 'a)) `(list ,name ',name)) => (list a 'a)
#[test]
fn test_test211() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::LetFrame(6),
        Op::Constant(vm.gc.symbol_intern("a")),
        Op::Push,
        Op::Enter(1),
        Op::Constant(vm.gc.symbol_intern("list")),
        Op::Push,
        Op::ReferLocal(0),
        Op::Push,
        Op::Constant(vm.gc.symbol_intern("quote")),
        Op::Push,
        Op::ReferLocal(0),
        Op::Push,
        Op::Constant(Object::Nil),
        Op::Cons,
        Op::Cons,
        Op::Push,
        Op::Constant(Object::Nil),
        Op::Cons,
        Op::Cons,
        Op::Cons,
        Op::Leave(1),
        Op::Halt,
    ];
    test_ops_with_size_as_str(&mut vm, ops, "(list a 'a)", SIZE_OF_SYMBOL * 3);
}

// `(a ,(+ 1 2) ,@(map abs '(4 -5 6)) b) => (a 3 4 5 6 b)
#[test]
fn test_test212_modified() {
    let mut vm = Vm::new();
    let b = vm.gc.symbol_intern("b");
    let ops = vec![
        Op::Constant(vm.gc.symbol_intern("a")),
        Op::Push,
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Constant(Object::Number(2)),
        Op::NumberAdd,
        Op::Push,
        Op::Frame(7),
        Op::ReferFree(410),
        Op::Push,
        Op::Constant(
            vm.gc
                .list3(Object::Number(4), Object::Number(-5), Object::Number(6)),
        ),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("map1")),
        Op::Call(2),
        Op::Push,
        Op::Constant(vm.gc.cons(b, Object::Nil)),
        Op::Append2,
        Op::Cons,
        Op::Cons,
        Op::Halt,
        Op::Nop,
    ];
    test_ops_with_size_as_str(&mut vm, ops, "(a 3 4 5 6 b)", SIZE_OF_SYMBOL * 2);
}

// (vector? #(3)) => #t
#[test]
fn test_test213() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Constant(vm.gc.new_vector(&vec![Object::Number(3)])),
        Op::VectorP,
        Op::Halt,
    ];
    let expected = Object::True;
    test_ops_with_size(&mut vm, ops, expected, 0);
}

// (begin (define (proc-01) 3) (proc-01)) => 3
#[test]
fn test_test214() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Closure {
            size: 3,
            arg_len: 0,
            is_optional_arg: false,
            num_free_vars: 0,
        },
        Op::Constant(Object::Number(3)),
        Op::Return(0),
        Op::DefineGlobal(vm.gc.intern("proc-01")),
        Op::Frame(3),
        Op::ReferGlobal(vm.gc.intern("proc-01")),
        Op::Call(0),
        Op::Halt,
        Op::Nop,
        Op::Nop,
    ];
    let expected = Object::Number(3);
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL + SIZE_OF_CLOSURE);
}

// (begin (define (add3 a b) (+ a b)) (add3 1 2)) => 3
#[test]
fn test_test215() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Closure {
            size: 6,
            arg_len: 2,
            is_optional_arg: false,
            num_free_vars: 0,
        },
        Op::ReferLocal(0),
        Op::Push,
        Op::ReferLocal(1),
        Op::NumberAdd,
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("add3")),
        Op::Frame(7),
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Constant(Object::Number(2)),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("add3")),
        Op::Call(2),
        Op::Halt,
        Op::Nop,
        Op::Nop,
    ];
    let expected = Object::Number(3);
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL + SIZE_OF_CLOSURE);
}

// (begin (define add2 (lambda (a b) (+ a b))) (add2 1 2)) => 3
#[test]
fn test_test216() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Closure {
            size: 6,
            arg_len: 2,
            is_optional_arg: false,
            num_free_vars: 0,
        },
        Op::ReferLocal(0),
        Op::Push,
        Op::ReferLocal(1),
        Op::NumberAdd,
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("add2")),
        Op::Frame(7),
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Constant(Object::Number(2)),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("add2")),
        Op::Call(2),
        Op::Halt,
        Op::Nop,
        Op::Nop,
    ];
    let expected = Object::Number(3);
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL + SIZE_OF_CLOSURE);
}

// (begin (define z (make-vector 2)) (vector-set! z 0 1) (vector-set! z 1 2) (make-vector 3) (null? 3) (vector-set! z 1 3) (vector-ref z 1)) => 3
#[test]
fn test_test217() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Constant(Object::Number(2)),
        Op::Push,
        Op::Constant(Object::Nil),
        Op::MakeVector,
        Op::DefineGlobal(vm.gc.intern("z")),
        Op::ReferGlobal(vm.gc.intern("z")),
        Op::Push,
        Op::Constant(Object::Number(0)),
        Op::Push,
        Op::Constant(Object::Number(1)),
        Op::VectorSet,
        Op::ReferGlobal(vm.gc.intern("z")),
        Op::Push,
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Constant(Object::Number(2)),
        Op::VectorSet,
        Op::Constant(Object::Number(3)),
        Op::Push,
        Op::Constant(Object::Nil),
        Op::MakeVector,
        Op::Constant(Object::Number(3)),
        Op::NullP,
        Op::ReferGlobal(vm.gc.intern("z")),
        Op::Push,
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Constant(Object::Number(3)),
        Op::VectorSet,
        Op::ReferGlobal(vm.gc.intern("z")),
        Op::Push,
        Op::Constant(Object::Number(1)),
        Op::VectorRef,
        Op::Halt,
    ];
    let expected = Object::Number(3);
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL + SIZE_OF_VECTOR);
}

// (begin (define (proc-2) (define (rec) 3) (rec)) (proc-2)) => 3
#[test]
fn test_test218() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Closure {
            size: 15,
            arg_len: 0,
            is_optional_arg: false,
            num_free_vars: 0,
        },
        Op::LetFrame(0),
        Op::Undef,
        Op::Push,
        Op::Box(0),
        Op::Enter(1),
        Op::Closure {
            size: 3,
            arg_len: 0,
            is_optional_arg: false,
            num_free_vars: 0,
        },
        Op::Constant(Object::Number(3)),
        Op::Return(0),
        Op::AssignLocal(0),
        Op::ReferLocal(0),
        Op::Indirect,
        Op::TailCall(0, 3),
        Op::Leave(1),
        Op::Return(0),
        Op::DefineGlobal(vm.gc.intern("proc-2")),
        Op::Frame(3),
        Op::ReferGlobal(vm.gc.intern("proc-2")),
        Op::Call(0),
        Op::Halt,
        Op::Nop,
        Op::Nop,
        Op::Nop,
    ];
    let expected = Object::Number(3);
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL + SIZE_OF_CLOSURE);
}

// (begin (define (func2) (define val 4) val) (func2)) => 4
#[test]
fn test_test219() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Closure {
            size: 12,
            arg_len: 0,
            is_optional_arg: false,
            num_free_vars: 0,
        },
        Op::LetFrame(0),
        Op::Undef,
        Op::Push,
        Op::Box(0),
        Op::Enter(1),
        Op::Constant(Object::Number(4)),
        Op::AssignLocal(0),
        Op::ReferLocal(0),
        Op::Indirect,
        Op::Leave(1),
        Op::Return(0),
        Op::DefineGlobal(vm.gc.intern("func2")),
        Op::Frame(3),
        Op::ReferGlobal(vm.gc.intern("func2")),
        Op::Call(0),
        Op::Halt,
        Op::Nop,
        Op::Nop,
    ];
    let expected = Object::Number(4);
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL + SIZE_OF_CLOSURE);
}

// (if (values 1 2 3) #t #f) => #t
#[test]
fn test_test220() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Constant(Object::Number(2)),
        Op::Push,
        Op::Constant(Object::Number(3)),
        Op::Values(3),
        Op::Test(2),
        Op::Constant(Object::True),
        Op::Halt,
        Op::Nop,
    ];
    let expected = Object::True;
    test_ops_with_size(&mut vm, ops, expected, 0);
}

// (call-with-values (lambda () (values 4 5)) (lambda (a b) b)) => 5
#[test]
fn test_test221() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::LetFrame(2),
        Op::ReferFree(152),
        Op::Push,
        Op::Display(1),
        Op::Frame(8),
        Op::Closure {
            size: 6,
            arg_len: 0,
            is_optional_arg: false,
            num_free_vars: 0,
        },
        Op::Constant(Object::Number(4)),
        Op::Push,
        Op::Constant(Object::Number(5)),
        Op::Values(2),
        Op::Return(0),
        Op::Call(0),
        Op::Receive(0, 1),
        Op::Enter(1),
        Op::Frame(9),
        Op::Closure {
            size: 3,
            arg_len: 2,
            is_optional_arg: false,
            num_free_vars: 0,
        },
        Op::ReferLocal(1),
        Op::Return(2),
        Op::Push,
        Op::ReferLocal(0),
        Op::Push,
        Op::ReferFree(0),
        Op::Call(2),
        Op::Leave(1),
        Op::Halt,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
    ];
    let expected = Object::Number(5);
    test_ops_with_size(&mut vm, ops, expected, 0);
}

// (call-with-values (lambda () (values 1 2 3)) (lambda (a b c) (+ a b c))) => 6
#[test]
fn test_test222() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::LetFrame(2),
        Op::ReferFree(152),
        Op::Push,
        Op::Display(1),
        Op::Frame(10),
        Op::Closure {
            size: 8,
            arg_len: 0,
            is_optional_arg: false,
            num_free_vars: 0,
        },
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Constant(Object::Number(2)),
        Op::Push,
        Op::Constant(Object::Number(3)),
        Op::Values(3),
        Op::Return(0),
        Op::Call(0),
        Op::Receive(0, 1),
        Op::Enter(1),
        Op::Frame(15),
        Op::Closure {
            size: 9,
            arg_len: 3,
            is_optional_arg: false,
            num_free_vars: 0,
        },
        Op::ReferLocal(0),
        Op::Push,
        Op::ReferLocal(1),
        Op::NumberAdd,
        Op::Push,
        Op::ReferLocal(2),
        Op::NumberAdd,
        Op::Return(3),
        Op::Push,
        Op::ReferLocal(0),
        Op::Push,
        Op::ReferFree(0),
        Op::Call(2),
        Op::Leave(1),
        Op::Halt,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
    ];
    let expected = Object::Number(6);
    test_ops_with_size(&mut vm, ops, expected, 0);
}

// (call-with-values (lambda () (values 1 2 3)) list) => (1 2 3)
#[test]
fn test_test223() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::LetFrame(2),
        Op::ReferFree(89),
        Op::Push,
        Op::ReferFree(152),
        Op::Push,
        Op::Display(2),
        Op::Frame(10),
        Op::Closure {
            size: 8,
            arg_len: 0,
            is_optional_arg: false,
            num_free_vars: 0,
        },
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Constant(Object::Number(2)),
        Op::Push,
        Op::Constant(Object::Number(3)),
        Op::Values(3),
        Op::Return(0),
        Op::Call(0),
        Op::Receive(0, 1),
        Op::Enter(1),
        Op::Frame(7),
        Op::ReferFree(1),
        Op::Push,
        Op::ReferLocal(0),
        Op::Push,
        Op::ReferFree(0),
        Op::Call(2),
        Op::Leave(1),
        Op::Halt,
        Op::Nop,
        Op::Nop,
        Op::Nop,
    ];
    test_ops_with_size_as_str(&mut vm, ops, "(1 2 3)", 0);
}

// (call-with-values (lambda () 1) (lambda (x) (+ x 1234))) => 1235
#[test]
fn test_test224() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::LetFrame(2),
        Op::ReferFree(152),
        Op::Push,
        Op::Display(1),
        Op::Frame(5),
        Op::Closure {
            size: 3,
            arg_len: 0,
            is_optional_arg: false,
            num_free_vars: 0,
        },
        Op::Constant(Object::Number(1)),
        Op::Return(0),
        Op::Call(0),
        Op::Receive(0, 1),
        Op::Enter(1),
        Op::Frame(12),
        Op::Closure {
            size: 6,
            arg_len: 1,
            is_optional_arg: false,
            num_free_vars: 0,
        },
        Op::ReferLocal(0),
        Op::Push,
        Op::Constant(Object::Number(1234)),
        Op::NumberAdd,
        Op::Return(1),
        Op::Push,
        Op::ReferLocal(0),
        Op::Push,
        Op::ReferFree(0),
        Op::Call(2),
        Op::Leave(1),
        Op::Halt,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
    ];
    let expected = Object::Number(1235);
    test_ops_with_size(&mut vm, ops, expected, 0);
}

// (receive (a b c) (values 1 2 3) (+ a b c)) => 6
#[test]
fn test_test225() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::LetFrame(4),
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Constant(Object::Number(2)),
        Op::Push,
        Op::Constant(Object::Number(3)),
        Op::Values(3),
        Op::Receive(3, 0),
        Op::Enter(3),
        Op::ReferLocal(0),
        Op::Push,
        Op::ReferLocal(1),
        Op::NumberAdd,
        Op::Push,
        Op::ReferLocal(2),
        Op::NumberAdd,
        Op::Leave(3),
        Op::Halt,
    ];
    let expected = Object::Number(6);
    test_ops_with_size(&mut vm, ops, expected, 0);
}

// (receive z (values 'x 'y) z) => (x y)
#[test]
fn test_test226() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::LetFrame(1),
        Op::Constant(vm.gc.symbol_intern("x")),
        Op::Push,
        Op::Constant(vm.gc.symbol_intern("y")),
        Op::Values(2),
        Op::Receive(0, 1),
        Op::Enter(1),
        Op::ReferLocal(0),
        Op::Leave(1),
        Op::Halt,
    ];
    test_ops_with_size_as_str(&mut vm, ops, "(x y)", SIZE_OF_SYMBOL * 2);
}

// (receive (a . b) (values 'x 'y 'z) b) => (y z)
#[test]
fn test_test227() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::LetFrame(2),
        Op::Constant(vm.gc.symbol_intern("x")),
        Op::Push,
        Op::Constant(vm.gc.symbol_intern("y")),
        Op::Push,
        Op::Constant(vm.gc.symbol_intern("z")),
        Op::Values(3),
        Op::Receive(1, 1),
        Op::Enter(2),
        Op::ReferLocal(1),
        Op::Leave(2),
        Op::Halt,
    ];
    test_ops_with_size_as_str(&mut vm, ops, "(y z)", SIZE_OF_SYMBOL * 3);
}

// (receive (a . b) (values 'x 'y 'z) a) => x
#[test]
fn test_test228() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::LetFrame(2),
        Op::Constant(vm.gc.symbol_intern("x")),
        Op::Push,
        Op::Constant(vm.gc.symbol_intern("y")),
        Op::Push,
        Op::Constant(vm.gc.symbol_intern("z")),
        Op::Values(3),
        Op::Receive(1, 1),
        Op::Enter(2),
        Op::ReferLocal(0),
        Op::Leave(2),
        Op::Halt,
    ];
    let expected = vm.gc.symbol_intern("x");
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 3);
}

// (receive x (apply values '(1 2 3)) x) => (1 2 3)
#[test]
fn test_test229() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::LetFrame(2),
        Op::ReferFree(110),
        Op::Push,
        Op::ReferFree(152),
        Op::Push,
        Op::Display(2),
        Op::Frame(7),
        Op::ReferFree(1),
        Op::Push,
        Op::Constant(
            vm.gc
                .list3(Object::Number(1), Object::Number(2), Object::Number(3)),
        ),
        Op::Push,
        Op::ReferFree(0),
        Op::Call(2),
        Op::Receive(0, 1),
        Op::Enter(1),
        Op::ReferLocal(0),
        Op::Leave(1),
        Op::Halt,
        Op::Nop,
    ];
    test_ops_with_size_as_str(&mut vm, ops, "(1 2 3)", 0);
}

// (call-with-values (lambda () (values 1 2)) cons) => (1 . 2)
#[test]
fn test_test230() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::LetFrame(2),
        Op::ReferFree(1),
        Op::Push,
        Op::ReferFree(152),
        Op::Push,
        Op::Display(2),
        Op::Frame(8),
        Op::Closure {
            size: 6,
            arg_len: 0,
            is_optional_arg: false,
            num_free_vars: 0,
        },
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Constant(Object::Number(2)),
        Op::Values(2),
        Op::Return(0),
        Op::Call(0),
        Op::Receive(0, 1),
        Op::Enter(1),
        Op::Frame(7),
        Op::ReferFree(1),
        Op::Push,
        Op::ReferLocal(0),
        Op::Push,
        Op::ReferFree(0),
        Op::Call(2),
        Op::Leave(1),
        Op::Halt,
        Op::Nop,
        Op::Nop,
        Op::Nop,
    ];
    test_ops_with_size_as_str(&mut vm, ops, "(1 . 2)", 0);
}

// (cons 'a '()) => (a)
#[test]
fn test_test232() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Constant(vm.gc.symbol_intern("a")),
        Op::Push,
        Op::Constant(Object::Nil),
        Op::Cons,
        Op::Halt,
    ];
    test_ops_with_size_as_str(&mut vm, ops, "(a)", SIZE_OF_SYMBOL);
}

// (cons '(a) '(b c d)) => ((a) b c d)
#[test]
fn test_test233_modified() {
    let mut vm = Vm::new();
    let a = vm.gc.symbol_intern("a");
    let b = vm.gc.symbol_intern("b");
    let c = vm.gc.symbol_intern("c");
    let d = vm.gc.symbol_intern("d");
    let ops = vec![
        Op::Constant(vm.gc.cons(a, Object::Nil)),
        Op::Push,
        Op::Constant(vm.gc.list3(b, c, d)),
        Op::Cons,
        Op::Halt,
    ];
    test_ops_with_size_as_str(&mut vm, ops, "((a) b c d)", SIZE_OF_SYMBOL * 4);
}

// (cons "a" '(b c)) => ("a" b c)
#[test]
fn test_test234_modified() {
    let mut vm = Vm::new();
    let b = vm.gc.symbol_intern("b");
    let c = vm.gc.symbol_intern("c");
    let ops = vec![
        Op::Constant(vm.gc.new_string("a")),
        Op::Push,
        Op::Constant(vm.gc.list2(b, c)),
        Op::Cons,
        Op::Halt,
    ];
    test_ops_with_size_as_str(&mut vm, ops, "(\"a\" b c)", SIZE_OF_SYMBOL * 2);
}

// (cons 'a 3) => (a . 3)
#[test]
fn test_test235() {
    let mut vm = Vm::new();
    let ops = vec![
        Op::Constant(vm.gc.symbol_intern("a")),
        Op::Push,
        Op::Constant(Object::Number(3)),
        Op::Cons,
        Op::Halt,
    ];
    test_ops_with_size_as_str(&mut vm, ops, "(a . 3)", SIZE_OF_SYMBOL);
}

// (cons '(a b) 'c) => ((a b) . c)
#[test]
fn test_test236() {
    let mut vm = Vm::new();
    let c = vm.gc.symbol_intern("c");
    let b = vm.gc.symbol_intern("b");
    let a = vm.gc.symbol_intern("a");

    let ops = vec![
        Op::Constant(vm.gc.list2(a, b)),
        Op::Push,
        Op::Constant(c),
        Op::Cons,
        Op::Halt,
    ];
    test_ops_with_size_as_str(&mut vm, ops, "((a b) . c)", SIZE_OF_SYMBOL * 3);
}

// (car '(a b c)) => a
#[test]
fn test_test237() {
    let mut vm = Vm::new();
    let c = vm.gc.symbol_intern("c");
    let b = vm.gc.symbol_intern("b");
    let a = vm.gc.symbol_intern("a");

    let ops = vec![Op::Constant(vm.gc.list3(a, b, c)), Op::Car, Op::Halt];
    let expected = vm.gc.symbol_intern("a");
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 3);
}

// (car '((a) b c d)) => (a)
#[test]
fn test_test238() {
    let mut vm = Vm::new();
    let d = vm.gc.symbol_intern("d");
    let c = vm.gc.symbol_intern("c");
    let b = vm.gc.symbol_intern("b");
    let a = vm.gc.symbol_intern("a");
    let list = vm.gc.list1(a);
    let ops = vec![Op::Constant(vm.gc.list4(list, b, c, d)), Op::Car, Op::Halt];
    test_ops_with_size_as_str(&mut vm, ops, "(a)", SIZE_OF_SYMBOL * 4);
}

// (car '(1 . 2)) => 1
#[test]
fn test_test239() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::Constant(vm.gc.cons(Object::Number(1), Object::Number(2))),
        Op::Car,
        Op::Halt,
    ];
    let expected = Object::Number(1);
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (cdr '((a) b c d)) => (b c d)
#[test]
fn test_test240() {
    let mut vm = Vm::new();
    let d = vm.gc.symbol_intern("d");
    let c = vm.gc.symbol_intern("c");
    let b = vm.gc.symbol_intern("b");
    let a = vm.gc.symbol_intern("a");
    let list = vm.gc.list1(a);
    let ops = vec![Op::Constant(vm.gc.list4(list, b, c, d)), Op::Cdr, Op::Halt];
    test_ops_with_size_as_str(&mut vm, ops, "(b c d)", SIZE_OF_SYMBOL * 4);
}

// (cdr '(1 . 2)) => 2
#[test]
fn test_test241() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::Constant(vm.gc.cons(Object::Number(1), Object::Number(2))),
        Op::Cdr,
        Op::Halt,
    ];
    let expected = Object::Number(2);
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (reverse '(a b c)) => (c b a)
#[test]
fn test_test242() {
    let mut vm = Vm::new();
    let c = vm.gc.symbol_intern("c");
    let b = vm.gc.symbol_intern("b");
    let a = vm.gc.symbol_intern("a");

    let ops = vec![
        Op::Frame(5),
        Op::Constant(vm.gc.list3(a, b, c)),
        Op::Push,
        Op::ReferFree(26),
        Op::Call(1),
        Op::Halt,
        Op::Nop,
    ];
    test_ops_with_size_as_str(&mut vm, ops, "(c b a)", SIZE_OF_SYMBOL * 3);
}

// (equal? 'a 'a) => #t
#[test]
fn test_test244() {
    let mut vm = Vm::new();
    let a = vm.gc.symbol_intern("a");

    let ops = vec![
        Op::Constant(a),
        Op::Push,
        Op::Constant(a),
        Op::Equal,
        Op::Halt,
    ];
    let expected = Object::True;
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 1);
}

// (equal? '(a) '(a)) => #t
#[test]
fn test_test245() {
    let mut vm = Vm::new();
    let a = vm.gc.symbol_intern("a");

    let ops = vec![
        Op::Constant(vm.gc.cons(a, Object::Nil)),
        Op::Push,
        Op::Constant(vm.gc.cons(a, Object::Nil)),
        Op::Equal,
        Op::Halt,
    ];
    let expected = Object::True;
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 1);
}

// (equal? "abc" "abc") => #t
#[test]
fn test_test247() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::Constant(vm.gc.new_string("abc")),
        Op::Push,
        Op::Constant(vm.gc.new_string("abc")),
        Op::Equal,
        Op::Halt,
    ];
    let expected = Object::True;
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (equal? 2 2) => #t
#[test]
fn test_test248() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::Constant(Object::Number(2)),
        Op::Push,
        Op::Constant(Object::Number(2)),
        Op::Equal,
        Op::Halt,
    ];
    let expected = Object::True;
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (equal? (make-vector 5 'a) (make-vector 5 'a)) => #t
#[test]
fn test_test249() {
    let mut vm = Vm::new();
    let a = vm.gc.symbol_intern("a");

    let ops = vec![
        Op::Constant(Object::Number(5)),
        Op::Push,
        Op::Constant(a),
        Op::MakeVector,
        Op::Push,
        Op::Constant(Object::Number(5)),
        Op::Push,
        Op::Constant(a),
        Op::MakeVector,
        Op::Equal,
        Op::Halt,
    ];
    let expected = Object::True;
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 1);
}

// (eq? 'a 'a) => #t
#[test]
fn test_test250() {
    let mut vm = Vm::new();
    let a = vm.gc.symbol_intern("a");

    let ops = vec![Op::Constant(a), Op::Push, Op::Constant(a), Op::Eq, Op::Halt];
    let expected = Object::True;
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 1);
}

// (eq? '(a) '(a)) => #f
#[test]
fn test_test251() {
    let mut vm = Vm::new();
    let a = vm.gc.symbol_intern("a");

    let ops = vec![
        Op::Constant(vm.gc.cons(a, Object::Nil)),
        Op::Push,
        Op::Constant(vm.gc.cons(a, Object::Nil)),
        Op::Eq,
        Op::Halt,
    ];
    let expected = Object::False;
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 1);
}

// (eq? (list 'a) (list 'a)) => #f
#[test]
fn test_test252() {
    let mut vm = Vm::new();
    let a = vm.gc.symbol_intern("a");

    let ops = vec![
        Op::Frame(5),
        Op::Constant(a),
        Op::Push,
        Op::ReferFree(89),
        Op::Call(1),
        Op::Push,
        Op::Frame(5),
        Op::Constant(a),
        Op::Push,
        Op::ReferFree(89),
        Op::Call(1),
        Op::Eq,
        Op::Halt,
        Op::Nop,
        Op::Nop,
    ];
    let expected = Object::False;
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 1);
}

// (eq? "a" "a") => #f
#[test]
fn test_test253() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::Constant(vm.gc.new_string("a")),
        Op::Push,
        Op::Constant(vm.gc.new_string("a")),
        Op::Eq,
        Op::Halt,
    ];
    let expected = Object::False;
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (eq? "" "") => #f
#[test]
fn test_test254() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::Constant(vm.gc.new_string("")),
        Op::Push,
        Op::Constant(vm.gc.new_string("")),
        Op::Eq,
        Op::Halt,
    ];
    let expected = Object::False;
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (eq? '() '()) => #t
#[test]
fn test_test255() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::Constant(Object::Nil),
        Op::Push,
        Op::Constant(Object::Nil),
        Op::Eq,
        Op::Halt,
    ];
    let expected = Object::True;
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (eq? 2 2) => #t
#[test]
fn test_test256() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::Constant(Object::Number(2)),
        Op::Push,
        Op::Constant(Object::Number(2)),
        Op::Eq,
        Op::Halt,
    ];
    let expected = Object::True;
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (eq? #\A #\A) => #t
#[test]
fn test_test257() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::Constant(Object::Char('A')),
        Op::Push,
        Op::Constant(Object::Char('A')),
        Op::Eq,
        Op::Halt,
    ];
    let expected = Object::True;
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (eq? car car) => #t
#[test]
fn test_test258() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::ReferFree(3),
        Op::Push,
        Op::ReferFree(3),
        Op::Eq,
        Op::Halt,
    ];
    let expected = Object::True;
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (let ((n (+ 2 3))) (eq? n n)) => #t
#[test]
fn test_test259() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::LetFrame(3),
        Op::Constant(Object::Number(2)),
        Op::Push,
        Op::Constant(Object::Number(3)),
        Op::NumberAdd,
        Op::Push,
        Op::Enter(1),
        Op::ReferLocal(0),
        Op::Push,
        Op::ReferLocal(0),
        Op::Eq,
        Op::Leave(1),
        Op::Halt,
    ];
    let expected = Object::True;
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (let ((x '(a))) (eq? x x)) => #t
#[test]
fn test_test260() {
    let mut vm = Vm::new();
    let a = vm.gc.symbol_intern("a");

    let ops = vec![
        Op::LetFrame(2),
        Op::Constant(vm.gc.cons(a, Object::Nil)),
        Op::Push,
        Op::Enter(1),
        Op::ReferLocal(0),
        Op::Push,
        Op::ReferLocal(0),
        Op::Eq,
        Op::Leave(1),
        Op::Halt,
    ];
    let expected = Object::True;
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 1);
}

// (let ((x '#())) (eq? x x)) => #t
#[test]
fn test_test261() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::LetFrame(2),
        Op::Constant(vm.gc.new_vector(&vec![])),
        Op::Push,
        Op::Enter(1),
        Op::ReferLocal(0),
        Op::Push,
        Op::ReferLocal(0),
        Op::Eq,
        Op::Leave(1),
        Op::Halt,
    ];
    let expected = Object::True;
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (let ((p (lambda (x) x))) (eq? p p)) => #t
#[test]
fn test_test262() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::LetFrame(2),
        Op::Closure {
            size: 3,
            arg_len: 1,
            is_optional_arg: false,
            num_free_vars: 0,
        },
        Op::ReferLocal(0),
        Op::Return(1),
        Op::Push,
        Op::Enter(1),
        Op::ReferLocal(0),
        Op::Push,
        Op::ReferLocal(0),
        Op::Eq,
        Op::Leave(1),
        Op::Halt,
        Op::Nop,
    ];
    let expected = Object::True;
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (- 3 4) => -1
#[test]
fn test_test263() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::Constant(Object::Number(3)),
        Op::Push,
        Op::Constant(Object::Number(-4)),
        Op::NumberAdd,
        Op::Halt,
    ];
    let expected = Object::Number(-1);
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (- 3 4 5) => -6
#[test]
fn test_test264() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::Constant(Object::Number(3)),
        Op::Push,
        Op::Constant(Object::Number(-4)),
        Op::NumberAdd,
        Op::Push,
        Op::Constant(Object::Number(-5)),
        Op::NumberAdd,
        Op::Halt,
    ];
    let expected = Object::Number(-6);
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (- 3) => -3
#[test]
fn test_test265() {
    let mut vm = Vm::new();

    let ops = vec![Op::Constant(Object::Number(-3)), Op::Halt];
    let expected = Object::Number(-3);
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (cond ((> 3 2) 'greater) ((< 3 2) 'less)) => greater
#[test]
fn test_test266() {
    let mut vm = Vm::new();
    let b = vm.gc.symbol_intern("less");
    let a = vm.gc.symbol_intern("greater");

    let ops = vec![
        Op::Constant(Object::Number(3)),
        Op::Push,
        Op::Constant(Object::Number(2)),
        Op::BranchNotGt(3),
        Op::Constant(a),
        Op::LocalJmp(8),
        Op::Constant(Object::Number(3)),
        Op::Push,
        Op::Constant(Object::Number(2)),
        Op::BranchNotLt(3),
        Op::Constant(b),
        Op::LocalJmp(2),
        Op::Undef,
        Op::Halt,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
    ];
    let expected = vm.gc.symbol_intern("greater");
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 2);
}

// (cond ((> 3 3) 'greater) ((< 3 3) 'less) (else 'equal)) => equal
#[test]
fn test_test267() {
    let mut vm = Vm::new();
    let c = vm.gc.symbol_intern("equal");
    let b = vm.gc.symbol_intern("less");
    let a = vm.gc.symbol_intern("greater");

    let ops = vec![
        Op::Constant(Object::Number(3)),
        Op::Push,
        Op::Constant(Object::Number(3)),
        Op::BranchNotGt(3),
        Op::Constant(a),
        Op::LocalJmp(8),
        Op::Constant(Object::Number(3)),
        Op::Push,
        Op::Constant(Object::Number(3)),
        Op::BranchNotLt(3),
        Op::Constant(b),
        Op::LocalJmp(2),
        Op::Constant(c),
        Op::Halt,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
    ];
    let expected = vm.gc.symbol_intern("equal");
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 3);
}

// (cond ('(1 2 3) => cadr) (else #f)) => 2
#[test]
fn test_test268() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::LetFrame(2),
        Op::ReferFree(70),
        Op::Push,
        Op::Display(1),
        Op::Constant(
            vm.gc
                .list3(Object::Number(1), Object::Number(2), Object::Number(3)),
        ),
        Op::Push,
        Op::Enter(1),
        Op::ReferLocal(0),
        Op::Test(6),
        Op::Frame(5),
        Op::ReferLocal(0),
        Op::Push,
        Op::ReferFree(0),
        Op::Call(1),
        Op::Leave(1),
        Op::Halt,
        Op::Nop,
        Op::Nop,
    ];
    let expected = Object::Number(2);
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (cons 'a 'b) => (a . b)
#[test]
fn test_test27() {
    let mut vm = Vm::new();
    let b = vm.gc.symbol_intern("b");
    let a = vm.gc.symbol_intern("a");

    let ops = vec![
        Op::Constant(a),
        Op::Push,
        Op::Constant(b),
        Op::Cons,
        Op::Halt,
    ];
    test_ops_with_size_as_str(&mut vm, ops, "(a . b)", SIZE_OF_SYMBOL * 2);
}

// (or (= 2 2) (> 2 1)) => #t
#[test]
fn test_test273() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::Constant(Object::Number(2)),
        Op::Push,
        Op::Constant(Object::Number(2)),
        Op::BranchNotNumberEqual(2),
        Op::LocalJmp(5),
        Op::Constant(Object::Number(2)),
        Op::Push,
        Op::Constant(Object::Number(1)),
        Op::NumberGt,
        Op::Halt,
        Op::Nop,
        Op::Nop,
    ];
    let expected = Object::True;
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (or (= 2 2) (< 2 1)) => #t
#[test]
fn test_test274() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::Constant(Object::Number(2)),
        Op::Push,
        Op::Constant(Object::Number(2)),
        Op::BranchNotNumberEqual(2),
        Op::LocalJmp(5),
        Op::Constant(Object::Number(2)),
        Op::Push,
        Op::Constant(Object::Number(1)),
        Op::NumberLt,
        Op::Halt,
        Op::Nop,
        Op::Nop,
    ];
    let expected = Object::True;
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (or #f #f #f) => #f
#[test]
fn test_test275() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::Constant(Object::False),
        Op::Test(2),
        Op::LocalJmp(3),
        Op::Constant(Object::False),
        Op::Test(1),
        Op::Halt,
        Op::Nop,
        Op::Nop,
        Op::Nop,
    ];
    let expected = Object::False;
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (or '(b c) (/ 3 0)) => (b c)
#[test]
fn test_test276() {
    let mut vm = Vm::new();
    let b = vm.gc.symbol_intern("c");
    let a = vm.gc.symbol_intern("b");

    let ops = vec![
        Op::Constant(vm.gc.list2(a, b)),
        Op::Test(2),
        Op::LocalJmp(5),
        Op::Constant(Object::Number(3)),
        Op::Push,
        Op::Constant(Object::Number(0)),
        Op::NumberDiv,
        Op::Halt,
        Op::Nop,
        Op::Nop,
    ];
    test_ops_with_size_as_str(&mut vm, ops, "(b c)", SIZE_OF_SYMBOL * 2);
}

// (not #t) => #f
#[test]
fn test_test277() {
    let mut vm = Vm::new();

    let ops = vec![Op::Constant(Object::True), Op::Not, Op::Halt];
    let expected = Object::False;
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (not 3) => #f
#[test]
fn test_test278() {
    let mut vm = Vm::new();

    let ops = vec![Op::Constant(Object::Number(3)), Op::Not, Op::Halt];
    let expected = Object::False;
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (not (list 3)) => #f
#[test]
fn test_test279() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::Frame(5),
        Op::Constant(Object::Number(3)),
        Op::Push,
        Op::ReferFree(89),
        Op::Call(1),
        Op::Not,
        Op::Halt,
        Op::Nop,
    ];
    let expected = Object::False;
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (not #f) => #t
#[test]
fn test_test280() {
    let mut vm = Vm::new();

    let ops = vec![Op::Constant(Object::False), Op::Not, Op::Halt];
    let expected = Object::True;
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (not '()) => #f
#[test]
fn test_test281() {
    let mut vm = Vm::new();

    let ops = vec![Op::Constant(Object::Nil), Op::Not, Op::Halt];
    let expected = Object::False;
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (not (list)) => #f
#[test]
fn test_test282() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::Frame(3),
        Op::ReferFree(89),
        Op::Call(0),
        Op::Not,
        Op::Halt,
        Op::Nop,
    ];
    let expected = Object::False;
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (not 'nil) => #f
#[test]
fn test_test283() {
    let mut vm = Vm::new();
    let a = vm.gc.symbol_intern("nil");

    let ops = vec![Op::Constant(a), Op::Not, Op::Halt];
    let expected = Object::False;
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 1);
}

// (let ((x 2) (y 3)) (* x y)) => 6
#[test]
fn test_test284() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::LetFrame(3),
        Op::Constant(Object::Number(2)),
        Op::Push,
        Op::Constant(Object::Number(3)),
        Op::Push,
        Op::Enter(2),
        Op::ReferLocal(0),
        Op::Push,
        Op::ReferLocal(1),
        Op::NumberMul,
        Op::Leave(2),
        Op::Halt,
    ];
    let expected = Object::Number(6);
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (let ((x 2) (y 3)) (let ((x 7) (z (+ x y))) (* z x))) => 35
#[test]
fn test_test285() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::LetFrame(6),
        Op::Constant(Object::Number(2)),
        Op::Push,
        Op::Constant(Object::Number(3)),
        Op::Push,
        Op::Enter(2),
        Op::LetFrame(4),
        Op::Constant(Object::Number(7)),
        Op::Push,
        Op::ReferLocal(0),
        Op::Push,
        Op::ReferLocal(1),
        Op::NumberAdd,
        Op::Push,
        Op::Enter(2),
        Op::ReferLocal(1),
        Op::Push,
        Op::ReferLocal(0),
        Op::NumberMul,
        Op::Leave(2),
        Op::Leave(2),
        Op::Halt,
    ];
    let expected = Object::Number(35);
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (let ((x 2) (y 3)) (let* ((x 7) (z (+ x y))) (* z x))) => 70
#[test]
fn test_test286() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::LetFrame(6),
        Op::Constant(Object::Number(2)),
        Op::Push,
        Op::Constant(Object::Number(3)),
        Op::Push,
        Op::Enter(2),
        Op::LetFrame(4),
        Op::ReferLocal(1),
        Op::Push,
        Op::ReferLocal(0),
        Op::Push,
        Op::Display(2),
        Op::Constant(Object::Number(7)),
        Op::Push,
        Op::Enter(1),
        Op::LetFrame(3),
        Op::ReferLocal(0),
        Op::Push,
        Op::ReferFree(1),
        Op::Push,
        Op::Display(2),
        Op::ReferLocal(0),
        Op::Push,
        Op::ReferFree(0),
        Op::NumberAdd,
        Op::Push,
        Op::Enter(1),
        Op::ReferLocal(0),
        Op::Push,
        Op::ReferFree(1),
        Op::NumberMul,
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(2),
        Op::Halt,
    ];
    let expected = Object::Number(70);
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (eqv? 'a 'a) => #t
#[test]
fn test_test287() {
    let mut vm = Vm::new();
    let a = vm.gc.symbol_intern("a");

    let ops = vec![
        Op::Constant(a),
        Op::Push,
        Op::Constant(a),
        Op::Eqv,
        Op::Halt,
    ];
    let expected = Object::True;
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 1);
}

// (eqv? 'a 'b) => #f
#[test]
fn test_test288() {
    let mut vm = Vm::new();
    let b = vm.gc.symbol_intern("b");
    let a = vm.gc.symbol_intern("a");

    let ops = vec![
        Op::Constant(a),
        Op::Push,
        Op::Constant(b),
        Op::Eqv,
        Op::Halt,
    ];
    let expected = Object::False;
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 2);
}

// (eqv? 2 2) => #t
#[test]
fn test_test289() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::Constant(Object::Number(2)),
        Op::Push,
        Op::Constant(Object::Number(2)),
        Op::Eqv,
        Op::Halt,
    ];
    let expected = Object::True;
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (eqv? '() '()) => #t
#[test]
fn test_test290() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::Constant(Object::Nil),
        Op::Push,
        Op::Constant(Object::Nil),
        Op::Eqv,
        Op::Halt,
    ];
    let expected = Object::True;
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (eqv? 100000000 100000000) => #t
#[test]
fn test_test291() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::Constant(Object::Number(100000000)),
        Op::Push,
        Op::Constant(Object::Number(100000000)),
        Op::Eqv,
        Op::Halt,
    ];
    let expected = Object::True;
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (eqv? (cons 1 2) (cons 1 2)) => #f
#[test]
fn test_test292() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Constant(Object::Number(2)),
        Op::Cons,
        Op::Push,
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Constant(Object::Number(2)),
        Op::Cons,
        Op::Eqv,
        Op::Halt,
    ];
    let expected = Object::False;
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (eqv? (lambda () 1) (lambda () 2)) => #f
#[test]
fn test_test293() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::Closure {
            size: 3,
            arg_len: 0,
            is_optional_arg: false,
            num_free_vars: 0,
        },
        Op::Constant(Object::Number(1)),
        Op::Return(0),
        Op::Push,
        Op::Closure {
            size: 3,
            arg_len: 0,
            is_optional_arg: false,
            num_free_vars: 0,
        },
        Op::Constant(Object::Number(2)),
        Op::Return(0),
        Op::Eqv,
        Op::Halt,
        Op::Nop,
        Op::Nop,
    ];
    let expected = Object::False;
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (eqv? 123456789101112 123456789101112) => #t
#[test]
fn test_test294() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::Constant(Object::Number(123456789101112)),
        Op::Push,
        Op::Constant(Object::Number(123456789101112)),
        Op::Eqv,
        Op::Halt,
    ];
    let expected = Object::True;
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (eqv? #f 'nil) => #f
#[test]
fn test_test295() {
    let mut vm = Vm::new();
    let a = vm.gc.symbol_intern("nil");

    let ops = vec![
        Op::Constant(Object::False),
        Op::Push,
        Op::Constant(a),
        Op::Eqv,
        Op::Halt,
    ];
    let expected = Object::False;
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 1);
}

// (digit->integer #\3 10) => 3
#[test]
fn test_test297() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::Frame(7),
        Op::Constant(Object::Char('3')),
        Op::Push,
        Op::Constant(Object::Number(10)),
        Op::Push,
        Op::ReferFree(39),
        Op::Call(2),
        Op::Halt,
        Op::Nop,
    ];
    let expected = Object::Number(3);
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (+) => 0
#[test]
fn test_test298() {
    let mut vm = Vm::new();

    let ops = vec![Op::Constant(Object::Number(0)), Op::Halt];
    let expected = Object::Number(0);
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (*) => 1
#[test]
fn test_test299() {
    let mut vm = Vm::new();

    let ops = vec![Op::Constant(Object::Number(1)), Op::Halt];
    let expected = Object::Number(1);
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (apply (lambda (a b c) (+ a b c)) 1 2 '(3)) => 6
#[test]
fn test_test303() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::Frame(19),
        Op::Closure {
            size: 9,
            arg_len: 3,
            is_optional_arg: false,
            num_free_vars: 0,
        },
        Op::ReferLocal(0),
        Op::Push,
        Op::ReferLocal(1),
        Op::NumberAdd,
        Op::Push,
        Op::ReferLocal(2),
        Op::NumberAdd,
        Op::Return(3),
        Op::Push,
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Constant(Object::Number(2)),
        Op::Push,
        Op::Constant(vm.gc.cons(Object::Number(3), Object::Nil)),
        Op::Push,
        Op::ReferFree(152),
        Op::Call(4),
        Op::Halt,
        Op::Nop,
        Op::Nop,
    ];
    let expected = Object::Number(6);
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (apply (lambda (a b c) (+ a b c)) '(1 2 3)) => 6
#[test]
fn test_test304() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::Frame(15),
        Op::Closure {
            size: 9,
            arg_len: 3,
            is_optional_arg: false,
            num_free_vars: 0,
        },
        Op::ReferLocal(0),
        Op::Push,
        Op::ReferLocal(1),
        Op::NumberAdd,
        Op::Push,
        Op::ReferLocal(2),
        Op::NumberAdd,
        Op::Return(3),
        Op::Push,
        Op::Constant(
            vm.gc
                .list3(Object::Number(1), Object::Number(2), Object::Number(3)),
        ),
        Op::Push,
        Op::ReferFree(152),
        Op::Call(2),
        Op::Halt,
        Op::Nop,
        Op::Nop,
    ];
    let expected = Object::Number(6);
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (apply (lambda (a b c) (+ a b c)) 1 '(2 3)) => 6
#[test]
fn test_test305() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::Frame(17),
        Op::Closure {
            size: 9,
            arg_len: 3,
            is_optional_arg: false,
            num_free_vars: 0,
        },
        Op::ReferLocal(0),
        Op::Push,
        Op::ReferLocal(1),
        Op::NumberAdd,
        Op::Push,
        Op::ReferLocal(2),
        Op::NumberAdd,
        Op::Return(3),
        Op::Push,
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Constant(vm.gc.list2(Object::Number(2), Object::Number(3))),
        Op::Push,
        Op::ReferFree(152),
        Op::Call(3),
        Op::Halt,
        Op::Nop,
        Op::Nop,
    ];
    let expected = Object::Number(6);
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (apply (lambda (x y) (apply y '((3 2)))) `(,car ,cdr)) => (2)
#[test]
fn test_test306() {
    let mut vm = Vm::new();
    let list = vm.gc.list2(Object::Number(3), Object::Number(2));
    let ops = vec![
        Op::Frame(22),
        Op::ReferFree(152),
        Op::Push,
        Op::Closure {
            size: 8,
            arg_len: 2,
            is_optional_arg: false,
            num_free_vars: 1,
        },
        Op::ReferLocal(1),
        Op::Push,
        Op::Constant(vm.gc.list1(list)),
        Op::Push,
        Op::ReferFree(0),
        Op::TailCall(2, 2),
        Op::Return(2),
        Op::Push,
        Op::ReferFree(3),
        Op::Push,
        Op::ReferFree(4),
        Op::Push,
        Op::Constant(Object::Nil),
        Op::Cons,
        Op::Cons,
        Op::Push,
        Op::ReferFree(152),
        Op::Call(2),
        Op::Halt,
        Op::Nop,
        Op::Nop,
    ];
    test_ops_with_size_as_str(&mut vm, ops, "(2)", SIZE_OF_SYMBOL * 0);
}

// (/ 6 2) => 3
#[test]
fn test_test307() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::Constant(Object::Number(6)),
        Op::Push,
        Op::Constant(Object::Number(2)),
        Op::NumberDiv,
        Op::Halt,
    ];
    let expected = Object::Number(3);
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (even? 2) => #t
#[test]
fn test_test309() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::Frame(5),
        Op::Constant(Object::Number(2)),
        Op::Push,
        Op::ReferFree(408),
        Op::Call(1),
        Op::Halt,
        Op::Nop,
    ];
    let expected = Object::True;
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (even? 3) => #f
#[test]
fn test_test310() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::Frame(5),
        Op::Constant(Object::Number(3)),
        Op::Push,
        Op::ReferFree(408),
        Op::Call(1),
        Op::Halt,
        Op::Nop,
    ];
    let expected = Object::False;
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (for-all even? '(2 4 14)) => #t
#[test]
fn test_test313() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::Frame(7),
        Op::ReferFree(408),
        Op::Push,
        Op::Constant(
            vm.gc
                .list3(Object::Number(2), Object::Number(4), Object::Number(14)),
        ),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("for-all")),
        Op::Call(2),
        Op::Halt,
        Op::Nop,
    ];
    let expected = Object::True;
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (for-all (lambda (n) (and (even? n) n)) '(2 4 14)) => 14
#[test]
fn test_test314() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::Frame(17),
        Op::ReferFree(408),
        Op::Push,
        Op::Closure {
            size: 9,
            arg_len: 1,
            is_optional_arg: false,
            num_free_vars: 1,
        },
        Op::Frame(5),
        Op::ReferLocal(0),
        Op::Push,
        Op::ReferFree(0),
        Op::Call(1),
        Op::Test(2),
        Op::ReferLocal(0),
        Op::Return(1),
        Op::Push,
        Op::Constant(
            vm.gc
                .list3(Object::Number(2), Object::Number(4), Object::Number(14)),
        ),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("for-all")),
        Op::Call(2),
        Op::Halt,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
    ];
    let expected = Object::Number(14);
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (for-all (lambda (a b) (< a b)) '(1 2 3) '(2 3 4)) => #t
#[test]
fn test_test315() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::Frame(14),
        Op::Closure {
            size: 6,
            arg_len: 2,
            is_optional_arg: false,
            num_free_vars: 0,
        },
        Op::ReferLocal(0),
        Op::Push,
        Op::ReferLocal(1),
        Op::NumberLt,
        Op::Return(2),
        Op::Push,
        Op::Constant(
            vm.gc
                .list3(Object::Number(1), Object::Number(2), Object::Number(3)),
        ),
        Op::Push,
        Op::Constant(
            vm.gc
                .list3(Object::Number(2), Object::Number(3), Object::Number(4)),
        ),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("for-all")),
        Op::Call(3),
        Op::Halt,
        Op::Nop,
        Op::Nop,
    ];
    let expected = Object::True;
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (for-all (lambda (a b) (< a b)) '(1 2 4) '(2 3 4)) => #f
#[test]
fn test_test316() {
    let mut vm = Vm::new();


    let ops = vec![
        Op::Frame(14),
        Op::Closure {
            size: 6,
            arg_len: 2,
            is_optional_arg: false,
            num_free_vars: 0,
        },
        Op::ReferLocal(0),
        Op::Push,
        Op::ReferLocal(1),
        Op::NumberLt,
        Op::Return(2),
        Op::Push,
        Op::Constant(
            vm.gc
                .list3(Object::Number(1), Object::Number(2), Object::Number(4)),
        ),
        Op::Push,
        Op::Constant(
            vm.gc
                .list3(Object::Number(2), Object::Number(3), Object::Number(4)),
        ),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("for-all")),
        Op::Call(3),
        Op::Halt,
        Op::Nop,
        Op::Nop,
    ];
    let expected = Object::False;
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (- (/ 1 2) (/ 1 4) (/ 1 4)) => 0
#[test]
fn test_test318() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Constant(Object::Number(2)),
        Op::NumberDiv,
        Op::Push,
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Constant(Object::Number(4)),
        Op::NumberDiv,
        Op::NumberSub,
        Op::Push,
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Constant(Object::Number(4)),
        Op::NumberDiv,
        Op::NumberSub,
        Op::Halt,
    ];
    let expected = Object::Number(0);
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (= (/ 3 2) (+ (/ 1 2) 1)) => #t
#[test]
fn test_test319() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::Constant(Object::Number(3)),
        Op::Push,
        Op::Constant(Object::Number(2)),
        Op::NumberDiv,
        Op::Push,
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Constant(Object::Number(2)),
        Op::NumberDiv,
        Op::Push,
        Op::Constant(Object::Number(1)),
        Op::NumberAdd,
        Op::NumberEqual,
        Op::Halt,
    ];
    let expected = Object::True;
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (= (/ 5 2) (+ 1 (/ 1 2) 1)) => #t
#[test]
fn test_test320() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::Constant(Object::Number(5)),
        Op::Push,
        Op::Constant(Object::Number(2)),
        Op::NumberDiv,
        Op::Push,
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Constant(Object::Number(2)),
        Op::NumberDiv,
        Op::NumberAdd,
        Op::Push,
        Op::Constant(Object::Number(1)),
        Op::NumberAdd,
        Op::NumberEqual,
        Op::Halt,
    ];
    let expected = Object::True;
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (/ (/ 4 2) 1) => 2
#[test]
fn test_test326() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::Constant(Object::Number(4)),
        Op::Push,
        Op::Constant(Object::Number(2)),
        Op::NumberDiv,
        Op::Push,
        Op::Constant(Object::Number(1)),
        Op::NumberDiv,
        Op::Halt,
    ];
    let expected = Object::Number(2);
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (> 1 (/ 1 2)) => #t
#[test]
fn test_test329() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Constant(Object::Number(2)),
        Op::NumberDiv,
        Op::NumberGt,
        Op::Halt,
    ];
    let expected = Object::True;
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (> (/ 1 2) 1) => #f
#[test]
fn test_test330() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Constant(Object::Number(2)),
        Op::NumberDiv,
        Op::Push,
        Op::Constant(Object::Number(1)),
        Op::NumberGt,
        Op::Halt,
    ];
    let expected = Object::False;
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (> 1 (/ 1 2)) => #t
#[test]
fn test_test331() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Constant(Object::Number(2)),
        Op::NumberDiv,
        Op::NumberGt,
        Op::Halt,
    ];
    let expected = Object::True;
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (<= (/ 1 2) 1) => #t
#[test]
fn test_test333() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Constant(Object::Number(2)),
        Op::NumberDiv,
        Op::Push,
        Op::Constant(Object::Number(1)),
        Op::NumberLe,
        Op::Halt,
    ];
    let expected = Object::True;
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (>= 1 (/ 1 2)) => #t
#[test]
fn test_test334() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Constant(Object::Number(2)),
        Op::NumberDiv,
        Op::NumberGe,
        Op::Halt,
    ];
    let expected = Object::True;
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (>= (/ 1 2) (/ 1 3)) => #t
#[test]
fn test_test335() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Constant(Object::Number(2)),
        Op::NumberDiv,
        Op::Push,
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Constant(Object::Number(3)),
        Op::NumberDiv,
        Op::NumberGe,
        Op::Halt,
    ];
    let expected = Object::True;
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (< (/ 1 2) 1) => #t
#[test]
fn test_test336() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Constant(Object::Number(2)),
        Op::NumberDiv,
        Op::Push,
        Op::Constant(Object::Number(1)),
        Op::NumberLt,
        Op::Halt,
    ];
    let expected = Object::True;
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (< 1 (/ 1 2)) => #f
#[test]
fn test_test337() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Constant(Object::Number(2)),
        Op::NumberDiv,
        Op::NumberLt,
        Op::Halt,
    ];
    let expected = Object::False;
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (< (/ 1 2) (/ 1 3)) => #f
#[test]
fn test_test338() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Constant(Object::Number(2)),
        Op::NumberDiv,
        Op::Push,
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Constant(Object::Number(3)),
        Op::NumberDiv,
        Op::NumberLt,
        Op::Halt,
    ];
    let expected = Object::False;
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (<= (/ 1 2) 1) => #t
#[test]
fn test_test339() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Constant(Object::Number(2)),
        Op::NumberDiv,
        Op::Push,
        Op::Constant(Object::Number(1)),
        Op::NumberLe,
        Op::Halt,
    ];
    let expected = Object::True;
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (<= 1 (/ 1 2)) => #f
#[test]
fn test_test340() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Constant(Object::Number(2)),
        Op::NumberDiv,
        Op::NumberLe,
        Op::Halt,
    ];
    let expected = Object::False;
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (= (/ 2 2) 1) => #t
#[test]
fn test_test342() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::Constant(Object::Number(2)),
        Op::Push,
        Op::Constant(Object::Number(2)),
        Op::NumberDiv,
        Op::Push,
        Op::Constant(Object::Number(1)),
        Op::NumberEqual,
        Op::Halt,
    ];
    let expected = Object::True;
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (/ 3) => 1/3
#[test]
fn test_test358() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Constant(Object::Number(3)),
        Op::NumberDiv,
        Op::Halt,
    ];
    let expected = Object::Number(1 / 3);
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (number? 3) => #t
#[test]
fn test_test369() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::Frame(5),
        Op::Constant(Object::Number(3)),
        Op::Push,
        Op::ReferFree(0),
        Op::Call(1),
        Op::Halt,
        Op::Nop,
    ];
    let expected = Object::True;
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (div 123 10) => 12
#[test]
fn test_test375() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::Frame(7),
        Op::Constant(Object::Number(123)),
        Op::Push,
        Op::Constant(Object::Number(10)),
        Op::Push,
        Op::ReferFree(411),
        Op::Call(2),
        Op::Halt,
        Op::Nop,
    ];
    let expected = Object::Number(12);
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (div 123 -10) => -12
#[test]
fn test_test376() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::Frame(7),
        Op::Constant(Object::Number(123)),
        Op::Push,
        Op::Constant(Object::Number(-10)),
        Op::Push,
        Op::ReferFree(411),
        Op::Call(2),
        Op::Halt,
        Op::Nop,
    ];
    let expected = Object::Number(-12);
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (div -123 10) => -13
#[test]
fn test_test377() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::Frame(7),
        Op::Constant(Object::Number(-123)),
        Op::Push,
        Op::Constant(Object::Number(10)),
        Op::Push,
        Op::ReferFree(411),
        Op::Call(2),
        Op::Halt,
        Op::Nop,
    ];
    let expected = Object::Number(-13);
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (div -123 -10) => 13
#[test]
fn test_test378() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::Frame(7),
        Op::Constant(Object::Number(-123)),
        Op::Push,
        Op::Constant(Object::Number(-10)),
        Op::Push,
        Op::ReferFree(411),
        Op::Call(2),
        Op::Halt,
        Op::Nop,
    ];
    let expected = Object::Number(13);
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (string-ref "abc" 2) => #\c
#[test]
fn test_test379() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::Frame(7),
        Op::Constant(vm.gc.new_string("abc")),
        Op::Push,
        Op::Constant(Object::Number(2)),
        Op::Push,
        Op::ReferFree(96),
        Op::Call(2),
        Op::Halt,
        Op::Nop,
    ];
    let expected = Object::Char('c');
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (list? '(a b c)) => #t
#[test]
fn test_test380() {
    let mut vm = Vm::new();
    let c = vm.gc.symbol_intern("c");
    let b = vm.gc.symbol_intern("b");
    let a = vm.gc.symbol_intern("a");

    let ops = vec![
        Op::Frame(5),
        Op::Constant(vm.gc.list3(a, b, c)),
        Op::Push,
        Op::ReferFree(88),
        Op::Call(1),
        Op::Halt,
        Op::Nop,
    ];
    let expected = Object::True;
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 3);
}

// (list? '()) => #t
#[test]
fn test_test381() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::Frame(5),
        Op::Constant(Object::Nil),
        Op::Push,
        Op::ReferFree(88),
        Op::Call(1),
        Op::Halt,
        Op::Nop,
    ];
    let expected = Object::True;
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (list? '(a . b)) => #f
#[test]
fn test_test382() {
    let mut vm = Vm::new();
    let b = vm.gc.symbol_intern("b");
    let a = vm.gc.symbol_intern("a");

    let ops = vec![
        Op::Frame(5),
        Op::Constant(vm.gc.cons(a, b)),
        Op::Push,
        Op::ReferFree(88),
        Op::Call(1),
        Op::Halt,
        Op::Nop,
    ];
    let expected = Object::False;
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 2);
}

// "abc" => "abc"
#[test]
fn test_test383() {
    let mut vm = Vm::new();

    let ops = vec![Op::Constant(vm.gc.new_string("abc")), Op::Halt];
    test_ops_with_size_as_str(&mut vm, ops, "\"abc\"", SIZE_OF_SYMBOL * 0);
}

// (procedure? car) => #t
#[test]
fn test_test395() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::Frame(5),
        Op::ReferFree(3),
        Op::Push,
        Op::ReferFree(159),
        Op::Call(1),
        Op::Halt,
        Op::Nop,
    ];
    let expected = Object::True;
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (procedure? 'car) => #f
#[test]
fn test_test396() {
    let mut vm = Vm::new();
    let a = vm.gc.symbol_intern("car");

    let ops = vec![
        Op::Frame(5),
        Op::Constant(a),
        Op::Push,
        Op::ReferFree(159),
        Op::Call(1),
        Op::Halt,
        Op::Nop,
    ];
    let expected = Object::False;
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 1);
}

// (procedure? (lambda (x) (* x x))) => #t
#[test]
fn test_test397() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::Frame(10),
        Op::Closure {
            size: 6,
            arg_len: 1,
            is_optional_arg: false,
            num_free_vars: 0,
        },
        Op::ReferLocal(0),
        Op::Push,
        Op::ReferLocal(0),
        Op::NumberMul,
        Op::Return(1),
        Op::Push,
        Op::ReferFree(159),
        Op::Call(1),
        Op::Halt,
        Op::Nop,
        Op::Nop,
    ];
    let expected = Object::True;
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (char>=? #\b #\a) => #t
#[test]
fn test_test399() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::Frame(7),
        Op::Constant(Object::Char('b')),
        Op::Push,
        Op::Constant(Object::Char('a')),
        Op::Push,
        Op::ReferFree(164),
        Op::Call(2),
        Op::Halt,
        Op::Nop,
    ];
    let expected = Object::True;
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (char>=? #\c #\b #\a) => #t
#[test]
fn test_test400() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::Frame(9),
        Op::Constant(Object::Char('c')),
        Op::Push,
        Op::Constant(Object::Char('b')),
        Op::Push,
        Op::Constant(Object::Char('a')),
        Op::Push,
        Op::ReferFree(164),
        Op::Call(3),
        Op::Halt,
        Op::Nop,
    ];
    let expected = Object::True;
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (char>=? #\b #\b) => #t
#[test]
fn test_test401() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::Frame(7),
        Op::Constant(Object::Char('b')),
        Op::Push,
        Op::Constant(Object::Char('b')),
        Op::Push,
        Op::ReferFree(164),
        Op::Call(2),
        Op::Halt,
        Op::Nop,
    ];
    let expected = Object::True;
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (char>=? #\b #\c) => #f
#[test]
fn test_test402() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::Frame(7),
        Op::Constant(Object::Char('b')),
        Op::Push,
        Op::Constant(Object::Char('c')),
        Op::Push,
        Op::ReferFree(164),
        Op::Call(2),
        Op::Halt,
        Op::Nop,
    ];
    let expected = Object::False;
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (char>? #\b #\a) => #t
#[test]
fn test_test403() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::Frame(7),
        Op::Constant(Object::Char('b')),
        Op::Push,
        Op::Constant(Object::Char('a')),
        Op::Push,
        Op::ReferFree(165),
        Op::Call(2),
        Op::Halt,
        Op::Nop,
    ];
    let expected = Object::True;
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (char>? #\b #\b) => #f
#[test]
fn test_test404() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::Frame(7),
        Op::Constant(Object::Char('b')),
        Op::Push,
        Op::Constant(Object::Char('b')),
        Op::Push,
        Op::ReferFree(165),
        Op::Call(2),
        Op::Halt,
        Op::Nop,
    ];
    let expected = Object::False;
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (char>? #\b #\c) => #f
#[test]
fn test_test405() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::Frame(7),
        Op::Constant(Object::Char('b')),
        Op::Push,
        Op::Constant(Object::Char('c')),
        Op::Push,
        Op::ReferFree(165),
        Op::Call(2),
        Op::Halt,
        Op::Nop,
    ];
    let expected = Object::False;
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (char<=? #\a #\b) => #t
#[test]
fn test_test406() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::Frame(7),
        Op::Constant(Object::Char('a')),
        Op::Push,
        Op::Constant(Object::Char('b')),
        Op::Push,
        Op::ReferFree(162),
        Op::Call(2),
        Op::Halt,
        Op::Nop,
    ];
    let expected = Object::True;
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (char<=? #\b #\b) => #t
#[test]
fn test_test407() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::Frame(7),
        Op::Constant(Object::Char('b')),
        Op::Push,
        Op::Constant(Object::Char('b')),
        Op::Push,
        Op::ReferFree(162),
        Op::Call(2),
        Op::Halt,
        Op::Nop,
    ];
    let expected = Object::True;
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (char<=? #\c #\b) => #f
#[test]
fn test_test408() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::Frame(7),
        Op::Constant(Object::Char('c')),
        Op::Push,
        Op::Constant(Object::Char('b')),
        Op::Push,
        Op::ReferFree(162),
        Op::Call(2),
        Op::Halt,
        Op::Nop,
    ];
    let expected = Object::False;
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (char<? #\a #\b) => #t
#[test]
fn test_test409() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::Frame(7),
        Op::Constant(Object::Char('a')),
        Op::Push,
        Op::Constant(Object::Char('b')),
        Op::Push,
        Op::ReferFree(163),
        Op::Call(2),
        Op::Halt,
        Op::Nop,
    ];
    let expected = Object::True;
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (char<? #\b #\b) => #f
#[test]
fn test_test410() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::Frame(7),
        Op::Constant(Object::Char('b')),
        Op::Push,
        Op::Constant(Object::Char('b')),
        Op::Push,
        Op::ReferFree(163),
        Op::Call(2),
        Op::Halt,
        Op::Nop,
    ];
    let expected = Object::False;
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (char<? #\c #\b) => #f
#[test]
fn test_test411() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::Frame(7),
        Op::Constant(Object::Char('c')),
        Op::Push,
        Op::Constant(Object::Char('b')),
        Op::Push,
        Op::ReferFree(163),
        Op::Call(2),
        Op::Halt,
        Op::Nop,
    ];
    let expected = Object::False;
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (cons* 1 2 3 4) => (1 2 3 . 4)
#[test]
fn test_test412() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::Frame(11),
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Constant(Object::Number(2)),
        Op::Push,
        Op::Constant(Object::Number(3)),
        Op::Push,
        Op::Constant(Object::Number(4)),
        Op::Push,
        Op::ReferFree(2),
        Op::Call(4),
        Op::Halt,
        Op::Nop,
    ];
    test_ops_with_size_as_str(&mut vm, ops, "(1 2 3 . 4)", SIZE_OF_SYMBOL * 0);
}

// (cons* 1) => 1
#[test]
fn test_test413() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::Frame(5),
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::ReferFree(2),
        Op::Call(1),
        Op::Halt,
        Op::Nop,
    ];
    let expected = Object::Number(1);
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (append 1) => 1
#[test]
fn test_test414() {
    let mut vm = Vm::new();

    let ops = vec![Op::Constant(Object::Number(1)), Op::Halt];
    let expected = Object::Number(1);
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (append '(1) 2) => (1 . 2)
#[test]
fn test_test415() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::Constant(vm.gc.cons(Object::Number(1), Object::Nil)),
        Op::Push,
        Op::Constant(Object::Number(2)),
        Op::Append2,
        Op::Halt,
    ];
    test_ops_with_size_as_str(&mut vm, ops, "(1 . 2)", SIZE_OF_SYMBOL * 0);
}

// (append '(1 2) 3) => (1 2 . 3)
#[test]
fn test_test416() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::Constant(vm.gc.list2(Object::Number(1), Object::Number(2))),
        Op::Push,
        Op::Constant(Object::Number(3)),
        Op::Append2,
        Op::Halt,
    ];
    test_ops_with_size_as_str(&mut vm, ops, "(1 2 . 3)", SIZE_OF_SYMBOL * 0);
}

// (append '(1 2) '(3)) => (1 2 3)
#[test]
fn test_test417() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::Constant(vm.gc.list2(Object::Number(1), Object::Number(2))),
        Op::Push,
        Op::Constant(vm.gc.cons(Object::Number(3), Object::Nil)),
        Op::Append2,
        Op::Halt,
    ];
    test_ops_with_size_as_str(&mut vm, ops, "(1 2 3)", SIZE_OF_SYMBOL * 0);
}

// (append '(1 2) '(3) 4) => (1 2 3 . 4)
#[test]
fn test_test418() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::Constant(vm.gc.list2(Object::Number(1), Object::Number(2))),
        Op::Push,
        Op::Constant(vm.gc.cons(Object::Number(3), Object::Nil)),
        Op::Append2,
        Op::Push,
        Op::Constant(Object::Number(4)),
        Op::Append2,
        Op::Halt,
    ];
    test_ops_with_size_as_str(&mut vm, ops, "(1 2 3 . 4)", SIZE_OF_SYMBOL * 0);
}

// (append '(1 2) '(3) 4) => (1 2 3 . 4)
#[test]
fn test_test419() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::Constant(vm.gc.list2(Object::Number(1), Object::Number(2))),
        Op::Push,
        Op::Constant(vm.gc.cons(Object::Number(3), Object::Nil)),
        Op::Append2,
        Op::Push,
        Op::Constant(Object::Number(4)),
        Op::Append2,
        Op::Halt,
    ];
    test_ops_with_size_as_str(&mut vm, ops, "(1 2 3 . 4)", SIZE_OF_SYMBOL * 0);
}

// (append '() 1) => 1
#[test]
fn test_test420() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::Constant(Object::Nil),
        Op::Push,
        Op::Constant(Object::Number(1)),
        Op::Append2,
        Op::Halt,
    ];
    let expected = Object::Number(1);
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (append '(1) '()) => (1)
#[test]
fn test_test421() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::Constant(vm.gc.cons(Object::Number(1), Object::Nil)),
        Op::Push,
        Op::Constant(Object::Nil),
        Op::Append2,
        Op::Halt,
    ];
    test_ops_with_size_as_str(&mut vm, ops, "(1)", SIZE_OF_SYMBOL * 0);
}

// (append! 1) => 1
#[test]
fn test_test422() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::Frame(5),
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::ReferFree(176),
        Op::Call(1),
        Op::Halt,
        Op::Nop,
    ];
    let expected = Object::Number(1);
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (append! '(1) 2) => (1 . 2)
#[test]
fn test_test423() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::Frame(7),
        Op::Constant(vm.gc.cons(Object::Number(1), Object::Nil)),
        Op::Push,
        Op::Constant(Object::Number(2)),
        Op::Push,
        Op::ReferFree(176),
        Op::Call(2),
        Op::Halt,
        Op::Nop,
    ];
    test_ops_with_size_as_str(&mut vm, ops, "(1 . 2)", SIZE_OF_SYMBOL * 0);
}

// (append! '(1 2) 3) => (1 2 . 3)
#[test]
fn test_test424() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::Frame(7),
        Op::Constant(vm.gc.list2(Object::Number(1), Object::Number(2))),
        Op::Push,
        Op::Constant(Object::Number(3)),
        Op::Push,
        Op::ReferFree(176),
        Op::Call(2),
        Op::Halt,
        Op::Nop,
    ];
    test_ops_with_size_as_str(&mut vm, ops, "(1 2 . 3)", SIZE_OF_SYMBOL * 0);
}

// (append! '(1 2) '(3)) => (1 2 3)
#[test]
fn test_test425() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::Frame(7),
        Op::Constant(vm.gc.list2(Object::Number(1), Object::Number(2))),
        Op::Push,
        Op::Constant(vm.gc.cons(Object::Number(3), Object::Nil)),
        Op::Push,
        Op::ReferFree(176),
        Op::Call(2),
        Op::Halt,
        Op::Nop,
    ];
    test_ops_with_size_as_str(&mut vm, ops, "(1 2 3)", SIZE_OF_SYMBOL * 0);
}

// (append! '(1 2) '(3) 4) => (1 2 3 . 4)
#[test]
fn test_test426() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::Frame(9),
        Op::Constant(vm.gc.list2(Object::Number(1), Object::Number(2))),
        Op::Push,
        Op::Constant(vm.gc.cons(Object::Number(3), Object::Nil)),
        Op::Push,
        Op::Constant(Object::Number(4)),
        Op::Push,
        Op::ReferFree(176),
        Op::Call(3),
        Op::Halt,
        Op::Nop,
    ];
    test_ops_with_size_as_str(&mut vm, ops, "(1 2 3 . 4)", SIZE_OF_SYMBOL * 0);
}

// (append! '(1 2) '(3) 4) => (1 2 3 . 4)
#[test]
fn test_test427() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::Frame(9),
        Op::Constant(vm.gc.list2(Object::Number(1), Object::Number(2))),
        Op::Push,
        Op::Constant(vm.gc.cons(Object::Number(3), Object::Nil)),
        Op::Push,
        Op::Constant(Object::Number(4)),
        Op::Push,
        Op::ReferFree(176),
        Op::Call(3),
        Op::Halt,
        Op::Nop,
    ];
    test_ops_with_size_as_str(&mut vm, ops, "(1 2 3 . 4)", SIZE_OF_SYMBOL * 0);
}

// (append! '() 1) => 1
#[test]
fn test_test428() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::Frame(7),
        Op::Constant(Object::Nil),
        Op::Push,
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::ReferFree(176),
        Op::Call(2),
        Op::Halt,
        Op::Nop,
    ];
    let expected = Object::Number(1);
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (append! '(1) '()) => (1)
#[test]
fn test_test429() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::Frame(7),
        Op::Constant(vm.gc.cons(Object::Number(1), Object::Nil)),
        Op::Push,
        Op::Constant(Object::Nil),
        Op::Push,
        Op::ReferFree(176),
        Op::Call(2),
        Op::Halt,
        Op::Nop,
    ];
    test_ops_with_size_as_str(&mut vm, ops, "(1)", SIZE_OF_SYMBOL * 0);
}

// (string #\1 #\2 #\3) => "123"
#[test]
fn test_test430() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::Frame(9),
        Op::Constant(Object::Char('1')),
        Op::Push,
        Op::Constant(Object::Char('2')),
        Op::Push,
        Op::Constant(Object::Char('3')),
        Op::Push,
        Op::ReferFree(24),
        Op::Call(3),
        Op::Halt,
        Op::Nop,
    ];
    test_ops_with_size_as_str(&mut vm, ops, "\"123\"", SIZE_OF_SYMBOL * 0);
}

// (hashtable? (make-eq-hashtable)) => #t
#[test]
fn test_test435() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::Frame(7),
        Op::Frame(3),
        Op::ReferFree(98),
        Op::Call(0),
        Op::Push,
        Op::ReferFree(201),
        Op::Call(1),
        Op::Halt,
        Op::Nop,
        Op::Nop,
    ];
    let expected = Object::True;
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (hashtable? '(a . b)) => #f
#[test]
fn test_test436() {
    let mut vm = Vm::new();
    let b = vm.gc.symbol_intern("b");
    let a = vm.gc.symbol_intern("a");

    let ops = vec![
        Op::Frame(5),
        Op::Constant(vm.gc.cons(a, b)),
        Op::Push,
        Op::ReferFree(201),
        Op::Call(1),
        Op::Halt,
        Op::Nop,
    ];
    let expected = Object::False;
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 2);
}

// (let1 ht (make-eq-hashtable) (hashtable-set! ht "my" "apple") (hashtable-set! ht "my" "apple") (hashtable-size ht)) => 2
#[test]
fn test_test438() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::LetFrame(8),
        Op::ReferFree(100),
        Op::Push,
        Op::ReferFree(202),
        Op::Push,
        Op::ReferFree(98),
        Op::Push,
        Op::Display(3),
        Op::Frame(3),
        Op::ReferFree(0),
        Op::Call(0),
        Op::Push,
        Op::Enter(1),
        Op::Frame(9),
        Op::ReferLocal(0),
        Op::Push,
        Op::Constant(vm.gc.new_string("my")),
        Op::Push,
        Op::Constant(vm.gc.new_string("apple")),
        Op::Push,
        Op::ReferFree(2),
        Op::Call(3),
        Op::Frame(9),
        Op::ReferLocal(0),
        Op::Push,
        Op::Constant(vm.gc.new_string("my")),
        Op::Push,
        Op::Constant(vm.gc.new_string("apple")),
        Op::Push,
        Op::ReferFree(2),
        Op::Call(3),
        Op::Frame(5),
        Op::ReferLocal(0),
        Op::Push,
        Op::ReferFree(1),
        Op::Call(1),
        Op::Leave(1),
        Op::Halt,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
    ];
    let expected = Object::Number(2);
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (let1 ht (make-eq-hashtable) (hashtable-set! ht 1 "one") (hashtable-delete! ht 1) (hashtable-ref ht 1 #f)) => #f
#[test]
fn test_test439() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::LetFrame(9),
        Op::ReferFree(100),
        Op::Push,
        Op::ReferFree(203),
        Op::Push,
        Op::ReferFree(101),
        Op::Push,
        Op::ReferFree(98),
        Op::Push,
        Op::Display(4),
        Op::Frame(3),
        Op::ReferFree(0),
        Op::Call(0),
        Op::Push,
        Op::Enter(1),
        Op::Frame(9),
        Op::ReferLocal(0),
        Op::Push,
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Constant(vm.gc.new_string("one")),
        Op::Push,
        Op::ReferFree(3),
        Op::Call(3),
        Op::Frame(7),
        Op::ReferLocal(0),
        Op::Push,
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::ReferFree(2),
        Op::Call(2),
        Op::Frame(9),
        Op::ReferLocal(0),
        Op::Push,
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Constant(Object::False),
        Op::Push,
        Op::ReferFree(1),
        Op::Call(3),
        Op::Leave(1),
        Op::Halt,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
    ];
    let expected = Object::False;
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (let1 ht (make-eq-hashtable) (hashtable-set! ht 1 "one") (hashtable-contains? ht 2)) => #f
#[test]
fn test_test441() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::LetFrame(6),
        Op::ReferFree(100),
        Op::Push,
        Op::ReferFree(204),
        Op::Push,
        Op::ReferFree(98),
        Op::Push,
        Op::Display(3),
        Op::Frame(3),
        Op::ReferFree(0),
        Op::Call(0),
        Op::Push,
        Op::Enter(1),
        Op::Frame(9),
        Op::ReferLocal(0),
        Op::Push,
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Constant(vm.gc.new_string("one")),
        Op::Push,
        Op::ReferFree(2),
        Op::Call(3),
        Op::Frame(7),
        Op::ReferLocal(0),
        Op::Push,
        Op::Constant(Object::Number(2)),
        Op::Push,
        Op::ReferFree(1),
        Op::Call(2),
        Op::Leave(1),
        Op::Halt,
        Op::Nop,
        Op::Nop,
        Op::Nop,
    ];
    let expected = Object::False;
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (let1 ht (make-eq-hashtable) (hashtable-set! ht 1 "one") (hashtable-contains? ht 1)) => #t
#[test]
fn test_test442() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::LetFrame(6),
        Op::ReferFree(100),
        Op::Push,
        Op::ReferFree(204),
        Op::Push,
        Op::ReferFree(98),
        Op::Push,
        Op::Display(3),
        Op::Frame(3),
        Op::ReferFree(0),
        Op::Call(0),
        Op::Push,
        Op::Enter(1),
        Op::Frame(9),
        Op::ReferLocal(0),
        Op::Push,
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Constant(vm.gc.new_string("one")),
        Op::Push,
        Op::ReferFree(2),
        Op::Call(3),
        Op::Frame(7),
        Op::ReferLocal(0),
        Op::Push,
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::ReferFree(1),
        Op::Call(2),
        Op::Leave(1),
        Op::Halt,
        Op::Nop,
        Op::Nop,
        Op::Nop,
    ];
    let expected = Object::True;
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (let1 ht (make-eq-hashtable) (hashtable-set! ht 1 "one") (let1 ht-copy (hashtable-copy ht) (and (string=? (hashtable-ref ht-copy 1) "one") (not (hashtable-mutable? ht-copy))))) => #t
#[test]
fn test_test446() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::LetFrame(11),
        Op::ReferFree(100),
        Op::Push,
        Op::ReferFree(205),
        Op::Push,
        Op::ReferFree(101),
        Op::Push,
        Op::ReferFree(56),
        Op::Push,
        Op::ReferFree(206),
        Op::Push,
        Op::ReferFree(98),
        Op::Push,
        Op::Display(6),
        Op::Frame(3),
        Op::ReferFree(0),
        Op::Call(0),
        Op::Push,
        Op::Enter(1),
        Op::Frame(9),
        Op::ReferLocal(0),
        Op::Push,
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Constant(vm.gc.new_string("one")),
        Op::Push,
        Op::ReferFree(5),
        Op::Call(3),
        Op::LetFrame(7),
        Op::ReferFree(3),
        Op::Push,
        Op::ReferFree(2),
        Op::Push,
        Op::ReferFree(1),
        Op::Push,
        Op::ReferFree(4),
        Op::Push,
        Op::Display(4),
        Op::Frame(5),
        Op::ReferLocal(0),
        Op::Push,
        Op::ReferFree(0),
        Op::Call(1),
        Op::Push,
        Op::Enter(1),
        Op::Frame(13),
        Op::Frame(7),
        Op::ReferLocal(0),
        Op::Push,
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::ReferFree(3),
        Op::Call(2),
        Op::Push,
        Op::Constant(vm.gc.new_string("one")),
        Op::Push,
        Op::ReferFree(2),
        Op::Call(2),
        Op::Test(7),
        Op::Frame(5),
        Op::ReferLocal(0),
        Op::Push,
        Op::ReferFree(1),
        Op::Call(1),
        Op::Not,
        Op::Leave(1),
        Op::Leave(1),
        Op::Halt,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
    ];
    let expected = Object::True;
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (let1 ht (make-eq-hashtable) (hashtable-set! ht 1 "one") (let1 ht-copy (hashtable-copy ht #t) (and (string=? (hashtable-ref ht-copy 1) "one") (hashtable-mutable? ht-copy)))) => #t
#[test]
fn test_test447() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::LetFrame(12),
        Op::ReferFree(100),
        Op::Push,
        Op::ReferFree(205),
        Op::Push,
        Op::ReferFree(101),
        Op::Push,
        Op::ReferFree(56),
        Op::Push,
        Op::ReferFree(206),
        Op::Push,
        Op::ReferFree(98),
        Op::Push,
        Op::Display(6),
        Op::Frame(3),
        Op::ReferFree(0),
        Op::Call(0),
        Op::Push,
        Op::Enter(1),
        Op::Frame(9),
        Op::ReferLocal(0),
        Op::Push,
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Constant(vm.gc.new_string("one")),
        Op::Push,
        Op::ReferFree(5),
        Op::Call(3),
        Op::LetFrame(8),
        Op::ReferFree(3),
        Op::Push,
        Op::ReferFree(2),
        Op::Push,
        Op::ReferFree(1),
        Op::Push,
        Op::ReferFree(4),
        Op::Push,
        Op::Display(4),
        Op::Frame(7),
        Op::ReferLocal(0),
        Op::Push,
        Op::Constant(Object::True),
        Op::Push,
        Op::ReferFree(0),
        Op::Call(2),
        Op::Push,
        Op::Enter(1),
        Op::Frame(13),
        Op::Frame(7),
        Op::ReferLocal(0),
        Op::Push,
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::ReferFree(3),
        Op::Call(2),
        Op::Push,
        Op::Constant(vm.gc.new_string("one")),
        Op::Push,
        Op::ReferFree(2),
        Op::Call(2),
        Op::Test(6),
        Op::Frame(5),
        Op::ReferLocal(0),
        Op::Push,
        Op::ReferFree(1),
        Op::Call(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Halt,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
    ];
    let expected = Object::True;
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

// (let1 ht (make-eq-hashtable) (hashtable-set! ht 1 "one") (hashtable-set! ht 2 "two") (hashtable-clear! ht) (hashtable-size ht)) => 0
#[test]
fn test_test450() {
    let mut vm = Vm::new();

    let ops = vec![
        Op::LetFrame(9),
        Op::ReferFree(100),
        Op::Push,
        Op::ReferFree(207),
        Op::Push,
        Op::ReferFree(202),
        Op::Push,
        Op::ReferFree(98),
        Op::Push,
        Op::Display(4),
        Op::Frame(3),
        Op::ReferFree(0),
        Op::Call(0),
        Op::Push,
        Op::Enter(1),
        Op::Frame(9),
        Op::ReferLocal(0),
        Op::Push,
        Op::Constant(Object::Number(1)),
        Op::Push,
        Op::Constant(vm.gc.new_string("one")),
        Op::Push,
        Op::ReferFree(3),
        Op::Call(3),
        Op::Frame(9),
        Op::ReferLocal(0),
        Op::Push,
        Op::Constant(Object::Number(2)),
        Op::Push,
        Op::Constant(vm.gc.new_string("two")),
        Op::Push,
        Op::ReferFree(3),
        Op::Call(3),
        Op::Frame(5),
        Op::ReferLocal(0),
        Op::Push,
        Op::ReferFree(2),
        Op::Call(1),
        Op::Frame(5),
        Op::ReferLocal(0),
        Op::Push,
        Op::ReferFree(1),
        Op::Call(1),
        Op::Leave(1),
        Op::Halt,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
    ];
    let expected = Object::Number(0);
    test_ops_with_size(&mut vm, ops, expected, SIZE_OF_SYMBOL * 0);
}

#[test]
fn test_compiler() {

    let mut vm = Vm::new();
    let sym0 = vm.gc.symbol_intern("r6rs");
    let sym1 = vm.gc.symbol_intern("r7rs");
    let sym2 = vm.gc.symbol_intern("exact-closed");
    let sym3 = vm.gc.symbol_intern("exact-complex");
    let sym4 = vm.gc.symbol_intern("ieee-float");
    let sym5 = vm.gc.symbol_intern("full-unicode");
    let sym6 = vm.gc.symbol_intern("ratios");
    let sym7 = vm.gc.symbol_intern("mosh");
    let sym8 = vm.gc.symbol_intern("srfi");
    let sym9 = vm.gc.symbol_intern("map");
    let sym10 = vm.gc.symbol_intern("for-each");
    let sym11 = vm.gc.symbol_intern("for-all");
    let sym12 = vm.gc.symbol_intern("exists");
    let sym13 = vm.gc.symbol_intern("fold-left");
    let sym14 = vm.gc.symbol_intern("fold-right");
    let sym15 = vm.gc.symbol_intern("no-fail");
    let sym16 = vm.gc.symbol_intern("block");
    let sym17 = vm.gc.symbol_intern("anonymous");
    let sym18 = vm.gc.symbol_intern("lambda");
    let sym19 = vm.gc.symbol_intern("...");
    let sym20 = vm.gc.symbol_intern("create-non-continuable-violation");
    let sym21 = vm.gc.symbol_intern("raise-continuable");
    let sym22 = vm.gc.symbol_intern("Zl");
    let sym23 = vm.gc.symbol_intern("Po");
    let sym24 = vm.gc.symbol_intern("Pc");
    let sym25 = vm.gc.symbol_intern("Lt");
    let sym26 = vm.gc.symbol_intern("Pi");
    let sym27 = vm.gc.symbol_intern("Cc");
    let sym28 = vm.gc.symbol_intern("Nd");
    let sym29 = vm.gc.symbol_intern("Mn");
    let sym30 = vm.gc.symbol_intern("Me");
    let sym31 = vm.gc.symbol_intern("Sc");
    let sym32 = vm.gc.symbol_intern("Cs");
    let sym33 = vm.gc.symbol_intern("Cf");
    let sym34 = vm.gc.symbol_intern("So");
    let sym35 = vm.gc.symbol_intern("Zs");
    let sym36 = vm.gc.symbol_intern("Sm");
    let sym37 = vm.gc.symbol_intern("Mc");
    let sym38 = vm.gc.symbol_intern("Sk");
    let sym39 = vm.gc.symbol_intern("Lm");
    let sym40 = vm.gc.symbol_intern("Pe");
    let sym41 = vm.gc.symbol_intern("Lo");
    let sym42 = vm.gc.symbol_intern("Pd");
    let sym43 = vm.gc.symbol_intern("Ll");
    let sym44 = vm.gc.symbol_intern("No");
    let sym45 = vm.gc.symbol_intern("Co");
    let sym46 = vm.gc.symbol_intern("Pf");
    let sym47 = vm.gc.symbol_intern("Lu");
    let sym48 = vm.gc.symbol_intern("Zp");
    let sym49 = vm.gc.symbol_intern("Nl");
    let sym50 = vm.gc.symbol_intern("Ps");
    let sym51 = vm.gc.symbol_intern("Cn");
    let sym52 = vm.gc.symbol_intern("number?");
    let sym53 = vm.gc.symbol_intern("cons");
    let sym54 = vm.gc.symbol_intern("cons*");
    let sym55 = vm.gc.symbol_intern("car");
    let sym56 = vm.gc.symbol_intern("cdr");
    let sym57 = vm.gc.symbol_intern("null?");
    let sym58 = vm.gc.symbol_intern("set-car!");
    let sym59 = vm.gc.symbol_intern("set-cdr!");
    let sym60 = vm.gc.symbol_intern("sys-display");
    let sym61 = vm.gc.symbol_intern("rxmatch");
    let sym62 = vm.gc.symbol_intern("regexp?");
    let sym63 = vm.gc.symbol_intern("regexp->string");
    let sym64 = vm.gc.symbol_intern("rxmatch-start");
    let sym65 = vm.gc.symbol_intern("rxmatch-end");
    let sym66 = vm.gc.symbol_intern("rxmatch-after");
    let sym67 = vm.gc.symbol_intern("rxmatch-before");
    let sym68 = vm.gc.symbol_intern("rxmatch-substring");
    let sym69 = vm.gc.symbol_intern("make-string");
    let sym70 = vm.gc.symbol_intern("string-set!");
    let sym71 = vm.gc.symbol_intern("string-length");
    let sym72 = vm.gc.symbol_intern("string->symbol");
    let sym73 = vm.gc.symbol_intern("string->number");
    let sym74 = vm.gc.symbol_intern("string-append");
    let sym75 = vm.gc.symbol_intern("string-split");
    let sym76 = vm.gc.symbol_intern("string");
    let sym77 = vm.gc.symbol_intern("number->string");
    let sym78 = vm.gc.symbol_intern("reverse");
    let sym79 = vm.gc.symbol_intern("eof-object?");
    let sym80 = vm.gc.symbol_intern("read-char");
    let sym81 = vm.gc.symbol_intern("peek-char");
    let sym82 = vm.gc.symbol_intern("char=?");
    let sym83 = vm.gc.symbol_intern("string?");
    let sym84 = vm.gc.symbol_intern("get-environment-variable");
    let sym85 = vm.gc.symbol_intern("get-environment-variables");
    let sym86 = vm.gc.symbol_intern("equal?");
    let sym87 = vm.gc.symbol_intern("open-string-input-port");
    let sym88 = vm.gc.symbol_intern("open-output-string");
    let sym89 = vm.gc.symbol_intern("sys-port-seek");
    let sym90 = vm.gc.symbol_intern("close-output-port");
    let sym91 = vm.gc.symbol_intern("digit->integer");
    let sym92 = vm.gc.symbol_intern("get-remaining-input-string");
    let sym93 = vm.gc.symbol_intern("directory-list");
    let sym94 = vm.gc.symbol_intern("file-exists?");
    let sym95 = vm.gc.symbol_intern("delete-file");
    let sym96 = vm.gc.symbol_intern("get-output-string");
    let sym97 = vm.gc.symbol_intern("string->regexp");
    let sym98 = vm.gc.symbol_intern("char->integer");
    let sym99 = vm.gc.symbol_intern("integer->char");
    let sym100 = vm.gc.symbol_intern("format");
    let sym101 = vm.gc.symbol_intern("current-input-port");
    let sym102 = vm.gc.symbol_intern("current-output-port");
    let sym103 = vm.gc.symbol_intern("set-current-input-port!");
    let sym104 = vm.gc.symbol_intern("set-current-output-port!");
    let sym105 = vm.gc.symbol_intern("char?");
    let sym106 = vm.gc.symbol_intern("write");
    let sym107 = vm.gc.symbol_intern("gensym");
    let sym108 = vm.gc.symbol_intern("string=?");
    let sym109 = vm.gc.symbol_intern("caaaar");
    let sym110 = vm.gc.symbol_intern("caaadr");
    let sym111 = vm.gc.symbol_intern("caaar");
    let sym112 = vm.gc.symbol_intern("caadar");
    let sym113 = vm.gc.symbol_intern("caaddr");
    let sym114 = vm.gc.symbol_intern("caadr");
    let sym115 = vm.gc.symbol_intern("caar");
    let sym116 = vm.gc.symbol_intern("cadaar");
    let sym117 = vm.gc.symbol_intern("cadadr");
    let sym118 = vm.gc.symbol_intern("cadar");
    let sym119 = vm.gc.symbol_intern("caddar");
    let sym120 = vm.gc.symbol_intern("cadddr");
    let sym121 = vm.gc.symbol_intern("caddr");
    let sym122 = vm.gc.symbol_intern("cadr");
    let sym123 = vm.gc.symbol_intern("cdaaar");
    let sym124 = vm.gc.symbol_intern("cdaadr");
    let sym125 = vm.gc.symbol_intern("cdaar");
    let sym126 = vm.gc.symbol_intern("cdadar");
    let sym127 = vm.gc.symbol_intern("cdaddr");
    let sym128 = vm.gc.symbol_intern("cdadr");
    let sym129 = vm.gc.symbol_intern("cdar");
    let sym130 = vm.gc.symbol_intern("cddaar");
    let sym131 = vm.gc.symbol_intern("cddadr");
    let sym132 = vm.gc.symbol_intern("cddar");
    let sym133 = vm.gc.symbol_intern("cdddar");
    let sym134 = vm.gc.symbol_intern("cddddr");
    let sym135 = vm.gc.symbol_intern("cdddr");
    let sym136 = vm.gc.symbol_intern("cddr");
    let sym137 = vm.gc.symbol_intern("symbol=?");
    let sym138 = vm.gc.symbol_intern("boolean=?");
    let sym139 = vm.gc.symbol_intern("vector?");
    let sym140 = vm.gc.symbol_intern("list?");
    let sym141 = vm.gc.symbol_intern("list");
    let sym142 = vm.gc.symbol_intern("memq");
    let sym143 = vm.gc.symbol_intern("eq?");
    let sym144 = vm.gc.symbol_intern("eqv?");
    let sym145 = vm.gc.symbol_intern("member");
    let sym146 = vm.gc.symbol_intern("boolean?");
    let sym147 = vm.gc.symbol_intern("symbol->string");
    let sym148 = vm.gc.symbol_intern("string-ref");
    let sym149 = vm.gc.symbol_intern("get-timeofday");
    let sym150 = vm.gc.symbol_intern("make-eq-hashtable");
    let sym151 = vm.gc.symbol_intern("make-eqv-hashtable");
    let sym152 = vm.gc.symbol_intern("hashtable-set!");
    let sym153 = vm.gc.symbol_intern("hashtable-ref");
    let sym154 = vm.gc.symbol_intern("hashtable-keys");
    let sym155 = vm.gc.symbol_intern("string-hash");
    let sym156 = vm.gc.symbol_intern("eqv-hash");
    let sym157 = vm.gc.symbol_intern("string-ci-hash");
    let sym158 = vm.gc.symbol_intern("symbol-hash");
    let sym159 = vm.gc.symbol_intern("equal-hash");
    let sym160 = vm.gc.symbol_intern("eq-hashtable-copy");
    let sym161 = vm.gc.symbol_intern("current-error-port");
    let sym162 = vm.gc.symbol_intern("values");
    let sym163 = vm.gc.symbol_intern("vm/apply");
    let sym164 = vm.gc.symbol_intern("pair?");
    let sym165 = vm.gc.symbol_intern("make-custom-binary-input-port");
    let sym166 = vm.gc.symbol_intern("make-custom-binary-output-port");
    let sym167 = vm.gc.symbol_intern("make-custom-textual-input-port");
    let sym168 = vm.gc.symbol_intern("make-custom-textual-output-port");
    let sym169 = vm.gc.symbol_intern("get-u8");
    let sym170 = vm.gc.symbol_intern("put-u8");
    let sym171 = vm.gc.symbol_intern("put-string");
    let sym172 = vm.gc.symbol_intern("flush-output-port");
    let sym173 = vm.gc.symbol_intern("output-port-buffer-mode");
    let sym174 = vm.gc.symbol_intern("bytevector-u8-set!");
    let sym175 = vm.gc.symbol_intern("port-has-port-position?");
    let sym176 = vm.gc.symbol_intern("port-has-set-port-position!?");
    let sym177 = vm.gc.symbol_intern("port-position");
    let sym178 = vm.gc.symbol_intern("set-port-position!");
    let sym179 = vm.gc.symbol_intern("get-bytevector-n!");
    let sym180 = vm.gc.symbol_intern("get-bytevector-some");
    let sym181 = vm.gc.symbol_intern("get-bytevector-all");
    let sym182 = vm.gc.symbol_intern("transcoded-port");
    let sym183 = vm.gc.symbol_intern("latin-1-codec");
    let sym184 = vm.gc.symbol_intern("utf-8-codec");
    let sym185 = vm.gc.symbol_intern("utf-16-codec");
    let sym186 = vm.gc.symbol_intern("make-transcoder");
    let sym187 = vm.gc.symbol_intern("eof-object");
    let sym188 = vm.gc.symbol_intern("sys-open-bytevector-output-port");
    let sym189 = vm.gc.symbol_intern("sys-get-bytevector");
    let sym190 = vm.gc.symbol_intern("bytevector-length");
    let sym191 = vm.gc.symbol_intern("standard-input-port");
    let sym192 = vm.gc.symbol_intern("standard-output-port");
    let sym193 = vm.gc.symbol_intern("standard-error-port");
    let sym194 = vm.gc.symbol_intern("get-bytevector-n");
    let sym195 = vm.gc.symbol_intern("open-file-output-port");
    let sym196 = vm.gc.symbol_intern("open-file-input-port");
    let sym197 = vm.gc.symbol_intern("close-input-port");
    let sym198 = vm.gc.symbol_intern("vector");
    let sym199 = vm.gc.symbol_intern("regexp-replace");
    let sym200 = vm.gc.symbol_intern("regexp-replace-all");
    let sym201 = vm.gc.symbol_intern("source-info");
    let sym202 = vm.gc.symbol_intern("eval");
    let sym203 = vm.gc.symbol_intern("eval-compiled");
    let sym204 = vm.gc.symbol_intern("apply");
    let sym205 = vm.gc.symbol_intern("assq");
    let sym206 = vm.gc.symbol_intern("assoc");
    let sym207 = vm.gc.symbol_intern("assv");
    let sym208 = vm.gc.symbol_intern("exit");
    let sym209 = vm.gc.symbol_intern("macroexpand-1");
    let sym210 = vm.gc.symbol_intern("memv");
    let sym211 = vm.gc.symbol_intern("procedure?");
    let sym212 = vm.gc.symbol_intern("load");
    let sym213 = vm.gc.symbol_intern("symbol?");
    let sym214 = vm.gc.symbol_intern("char<=?");
    let sym215 = vm.gc.symbol_intern("char<?");
    let sym216 = vm.gc.symbol_intern("char>=?");
    let sym217 = vm.gc.symbol_intern("char>?");
    let sym218 = vm.gc.symbol_intern("read");
    let sym219 = vm.gc.symbol_intern("vector->list");
    let sym220 = vm.gc.symbol_intern("set-source-info!");
    let sym221 = vm.gc.symbol_intern("%call-process");
    let sym222 = vm.gc.symbol_intern("%confstr");
    let sym223 = vm.gc.symbol_intern("%dup");
    let sym224 = vm.gc.symbol_intern("%start-process");
    let sym225 = vm.gc.symbol_intern("%get-closure-name");
    let sym226 = vm.gc.symbol_intern("append");
    let sym227 = vm.gc.symbol_intern("append2");
    let sym228 = vm.gc.symbol_intern("append!");
    let sym229 = vm.gc.symbol_intern("pass3/find-free");
    let sym230 = vm.gc.symbol_intern("pass3/find-sets");
    let sym231 = vm.gc.symbol_intern("pass4/fixup-labels");
    let sym232 = vm.gc.symbol_intern("make-code-builder");
    let sym233 = vm.gc.symbol_intern("code-builder-put-extra1!");
    let sym234 = vm.gc.symbol_intern("code-builder-put-extra2!");
    let sym235 = vm.gc.symbol_intern("code-builder-put-extra3!");
    let sym236 = vm.gc.symbol_intern("code-builder-put-extra4!");
    let sym237 = vm.gc.symbol_intern("code-builder-put-extra5!");
    let sym238 = vm.gc.symbol_intern("code-builder-append!");
    let sym239 = vm.gc.symbol_intern("code-builder-emit");
    let sym240 = vm.gc.symbol_intern("code-builder-put-insn-arg0!");
    let sym241 = vm.gc.symbol_intern("code-builder-put-insn-arg1!");
    let sym242 = vm.gc.symbol_intern("code-builder-put-insn-arg2!");
    let sym243 = vm.gc.symbol_intern("length");
    let sym244 = vm.gc.symbol_intern("list->vector");
    let sym245 = vm.gc.symbol_intern("pass3/compile-refer");
    let sym246 = vm.gc.symbol_intern("pass1/find-symbol-in-lvars");
    let sym247 = vm.gc.symbol_intern("$label");
    let sym248 = vm.gc.symbol_intern("$local-ref");
    let sym249 = vm.gc.symbol_intern("list-transpose+");
    let sym250 = vm.gc.symbol_intern("symbol-value");
    let sym251 = vm.gc.symbol_intern("set-symbol-value!");
    let sym252 = vm.gc.symbol_intern("make-hashtable");
    let sym253 = vm.gc.symbol_intern("hashtable?");
    let sym254 = vm.gc.symbol_intern("hashtable-size");
    let sym255 = vm.gc.symbol_intern("hashtable-delete!");
    let sym256 = vm.gc.symbol_intern("hashtable-contains?");
    let sym257 = vm.gc.symbol_intern("hashtable-copy");
    let sym258 = vm.gc.symbol_intern("hashtable-mutable?");
    let sym259 = vm.gc.symbol_intern("hashtable-clear!");
    let sym260 = vm.gc.symbol_intern("hashtable-equivalence-function");
    let sym261 = vm.gc.symbol_intern("hashtable-hash-function");
    let sym262 = vm.gc.symbol_intern("throw");
    let sym263 = vm.gc.symbol_intern("<");
    let sym264 = vm.gc.symbol_intern("<=");
    let sym265 = vm.gc.symbol_intern(">");
    let sym266 = vm.gc.symbol_intern(">=");
    let sym267 = vm.gc.symbol_intern("=");
    let sym268 = vm.gc.symbol_intern("+");
    let sym269 = vm.gc.symbol_intern("-");
    let sym270 = vm.gc.symbol_intern("*");
    let sym271 = vm.gc.symbol_intern("/");
    let sym272 = vm.gc.symbol_intern("max");
    let sym273 = vm.gc.symbol_intern("min");
    let sym274 = vm.gc.symbol_intern("get-char");
    let sym275 = vm.gc.symbol_intern("lookahead-char");
    let sym276 = vm.gc.symbol_intern("get-string-n");
    let sym277 = vm.gc.symbol_intern("get-string-n!");
    let sym278 = vm.gc.symbol_intern("get-string-all");
    let sym279 = vm.gc.symbol_intern("get-line");
    let sym280 = vm.gc.symbol_intern("get-datum");
    let sym281 = vm.gc.symbol_intern("bytevector?");
    let sym282 = vm.gc.symbol_intern("current-directory");
    let sym283 = vm.gc.symbol_intern("standard-library-path");
    let sym284 = vm.gc.symbol_intern("native-endianness");
    let sym285 = vm.gc.symbol_intern("make-bytevector");
    let sym286 = vm.gc.symbol_intern("bytevector=?");
    let sym287 = vm.gc.symbol_intern("bytevector-fill!");
    let sym288 = vm.gc.symbol_intern("bytevector-copy!");
    let sym289 = vm.gc.symbol_intern("bytevector-copy");
    let sym290 = vm.gc.symbol_intern("bytevector-u8-ref");
    let sym291 = vm.gc.symbol_intern("bytevector-s8-ref");
    let sym292 = vm.gc.symbol_intern("bytevector-s8-set!");
    let sym293 = vm.gc.symbol_intern("bytevector->u8-list");
    let sym294 = vm.gc.symbol_intern("u8-list->bytevector");
    let sym295 = vm.gc.symbol_intern("bytevector-u16-ref");
    let sym296 = vm.gc.symbol_intern("bytevector-s16-ref");
    let sym297 = vm.gc.symbol_intern("bytevector-u16-native-ref");
    let sym298 = vm.gc.symbol_intern("bytevector-s16-native-ref");
    let sym299 = vm.gc.symbol_intern("bytevector-u16-set!");
    let sym300 = vm.gc.symbol_intern("bytevector-s16-set!");
    let sym301 = vm.gc.symbol_intern("bytevector-u16-native-set!");
    let sym302 = vm.gc.symbol_intern("bytevector-s16-native-set!");
    let sym303 = vm.gc.symbol_intern("bytevector-u32-ref");
    let sym304 = vm.gc.symbol_intern("bytevector-s32-ref");
    let sym305 = vm.gc.symbol_intern("bytevector-u32-native-ref");
    let sym306 = vm.gc.symbol_intern("bytevector-s32-native-ref");
    let sym307 = vm.gc.symbol_intern("bytevector-u32-set!");
    let sym308 = vm.gc.symbol_intern("bytevector-s32-set!");
    let sym309 = vm.gc.symbol_intern("bytevector-u32-native-set!");
    let sym310 = vm.gc.symbol_intern("bytevector-s32-native-set!");
    let sym311 = vm.gc.symbol_intern("bytevector-u64-ref");
    let sym312 = vm.gc.symbol_intern("bytevector-s64-ref");
    let sym313 = vm.gc.symbol_intern("bytevector-u64-native-ref");
    let sym314 = vm.gc.symbol_intern("bytevector-s64-native-ref");
    let sym315 = vm.gc.symbol_intern("bytevector-u64-set!");
    let sym316 = vm.gc.symbol_intern("bytevector-s64-set!");
    let sym317 = vm.gc.symbol_intern("bytevector-u64-native-set!");
    let sym318 = vm.gc.symbol_intern("bytevector-s64-native-set!");
    let sym319 = vm.gc.symbol_intern("bytevector->string");
    let sym320 = vm.gc.symbol_intern("string->bytevector");
    let sym321 = vm.gc.symbol_intern("string->utf8");
    let sym322 = vm.gc.symbol_intern("utf8->string");
    let sym323 = vm.gc.symbol_intern("null-terminated-bytevector->string");
    let sym324 = vm.gc.symbol_intern("null-terminated-utf8->string");
    let sym325 = vm.gc.symbol_intern("string->utf16");
    let sym326 = vm.gc.symbol_intern("string->utf32");
    let sym327 = vm.gc.symbol_intern("utf16->string");
    let sym328 = vm.gc.symbol_intern("utf32->string");
    let sym329 = vm.gc.symbol_intern("close-port");
    let sym330 = vm.gc.symbol_intern("make-instruction");
    let sym331 = vm.gc.symbol_intern("make-compiler-instruction");
    let sym332 = vm.gc.symbol_intern("fasl-write");
    let sym333 = vm.gc.symbol_intern("fasl-read");
    let sym334 = vm.gc.symbol_intern("rational?");
    let sym335 = vm.gc.symbol_intern("flonum?");
    let sym336 = vm.gc.symbol_intern("fixnum?");
    let sym337 = vm.gc.symbol_intern("bignum?");
    let sym338 = vm.gc.symbol_intern("fixnum-width");
    let sym339 = vm.gc.symbol_intern("least-fixnum");
    let sym340 = vm.gc.symbol_intern("greatest-fixnum");
    let sym341 = vm.gc.symbol_intern("make-rectangular");
    let sym342 = vm.gc.symbol_intern("real-part");
    let sym343 = vm.gc.symbol_intern("imag-part");
    let sym344 = vm.gc.symbol_intern("exact?");
    let sym345 = vm.gc.symbol_intern("inexact?");
    let sym346 = vm.gc.symbol_intern("exact");
    let sym347 = vm.gc.symbol_intern("inexact");
    let sym348 = vm.gc.symbol_intern("nan?");
    let sym349 = vm.gc.symbol_intern("infinite?");
    let sym350 = vm.gc.symbol_intern("finite?");
    let sym351 = vm.gc.symbol_intern("real->flonum");
    let sym352 = vm.gc.symbol_intern("fl=?");
    let sym353 = vm.gc.symbol_intern("fl<?");
    let sym354 = vm.gc.symbol_intern("fl>?");
    let sym355 = vm.gc.symbol_intern("fl>=?");
    let sym356 = vm.gc.symbol_intern("fl<=?");
    let sym357 = vm.gc.symbol_intern("flinteger?");
    let sym358 = vm.gc.symbol_intern("flzero?");
    let sym359 = vm.gc.symbol_intern("flpositive?");
    let sym360 = vm.gc.symbol_intern("flnegative?");
    let sym361 = vm.gc.symbol_intern("flodd?");
    let sym362 = vm.gc.symbol_intern("fleven?");
    let sym363 = vm.gc.symbol_intern("flfinite?");
    let sym364 = vm.gc.symbol_intern("flinfinite?");
    let sym365 = vm.gc.symbol_intern("flnan?");
    let sym366 = vm.gc.symbol_intern("flmax");
    let sym367 = vm.gc.symbol_intern("flmin");
    let sym368 = vm.gc.symbol_intern("fl+");
    let sym369 = vm.gc.symbol_intern("fl*");
    let sym370 = vm.gc.symbol_intern("fl-");
    let sym371 = vm.gc.symbol_intern("fl/");
    let sym372 = vm.gc.symbol_intern("flabs");
    let sym373 = vm.gc.symbol_intern("fldiv");
    let sym374 = vm.gc.symbol_intern("flmod");
    let sym375 = vm.gc.symbol_intern("fldiv0");
    let sym376 = vm.gc.symbol_intern("flmod0");
    let sym377 = vm.gc.symbol_intern("flnumerator");
    let sym378 = vm.gc.symbol_intern("fldenominator");
    let sym379 = vm.gc.symbol_intern("flfloor");
    let sym380 = vm.gc.symbol_intern("flceiling");
    let sym381 = vm.gc.symbol_intern("fltruncate");
    let sym382 = vm.gc.symbol_intern("flround");
    let sym383 = vm.gc.symbol_intern("flexp");
    let sym384 = vm.gc.symbol_intern("fllog");
    let sym385 = vm.gc.symbol_intern("flsin");
    let sym386 = vm.gc.symbol_intern("flcos");
    let sym387 = vm.gc.symbol_intern("fltan");
    let sym388 = vm.gc.symbol_intern("flasin");
    let sym389 = vm.gc.symbol_intern("flacos");
    let sym390 = vm.gc.symbol_intern("flatan");
    let sym391 = vm.gc.symbol_intern("flsqrt");
    let sym392 = vm.gc.symbol_intern("flexpt");
    let sym393 = vm.gc.symbol_intern("fixnum->flonum");
    let sym394 = vm.gc.symbol_intern("bitwise-not");
    let sym395 = vm.gc.symbol_intern("bitwise-and");
    let sym396 = vm.gc.symbol_intern("bitwise-ior");
    let sym397 = vm.gc.symbol_intern("bitwise-xor");
    let sym398 = vm.gc.symbol_intern("bitwise-bit-count");
    let sym399 = vm.gc.symbol_intern("bitwise-length");
    let sym400 = vm.gc.symbol_intern("bitwise-first-bit-set");
    let sym401 = vm.gc.symbol_intern("bitwise-arithmetic-shift-left");
    let sym402 = vm.gc.symbol_intern("bitwise-arithmetic-shift-right");
    let sym403 = vm.gc.symbol_intern("bitwise-arithmetic-shift");
    let sym404 = vm.gc.symbol_intern("complex?");
    let sym405 = vm.gc.symbol_intern("real?");
    let sym406 = vm.gc.symbol_intern("integer?");
    let sym407 = vm.gc.symbol_intern("real-valued?");
    let sym408 = vm.gc.symbol_intern("rational-valued?");
    let sym409 = vm.gc.symbol_intern("integer-valued?");
    let sym410 = vm.gc.symbol_intern("fx=?");
    let sym411 = vm.gc.symbol_intern("fx>?");
    let sym412 = vm.gc.symbol_intern("fx<?");
    let sym413 = vm.gc.symbol_intern("fx>=?");
    let sym414 = vm.gc.symbol_intern("fx<=?");
    let sym415 = vm.gc.symbol_intern("fxzero?");
    let sym416 = vm.gc.symbol_intern("fxpositive?");
    let sym417 = vm.gc.symbol_intern("fxnegative?");
    let sym418 = vm.gc.symbol_intern("fxodd?");
    let sym419 = vm.gc.symbol_intern("fxeven?");
    let sym420 = vm.gc.symbol_intern("fxmax");
    let sym421 = vm.gc.symbol_intern("fxmin");
    let sym422 = vm.gc.symbol_intern("fx+");
    let sym423 = vm.gc.symbol_intern("fx*");
    let sym424 = vm.gc.symbol_intern("fx-");
    let sym425 = vm.gc.symbol_intern("fxdiv");
    let sym426 = vm.gc.symbol_intern("fxmod");
    let sym427 = vm.gc.symbol_intern("fxdiv0");
    let sym428 = vm.gc.symbol_intern("fxmod0");
    let sym429 = vm.gc.symbol_intern("fxnot");
    let sym430 = vm.gc.symbol_intern("fxand");
    let sym431 = vm.gc.symbol_intern("fxior");
    let sym432 = vm.gc.symbol_intern("fxxor");
    let sym433 = vm.gc.symbol_intern("fxif");
    let sym434 = vm.gc.symbol_intern("fxbit-count");
    let sym435 = vm.gc.symbol_intern("fxlength");
    let sym436 = vm.gc.symbol_intern("fxfirst-bit-set");
    let sym437 = vm.gc.symbol_intern("fxbit-set?");
    let sym438 = vm.gc.symbol_intern("fxcopy-bit");
    let sym439 = vm.gc.symbol_intern("fxbit-field");
    let sym440 = vm.gc.symbol_intern("fxcopy-bit-field");
    let sym441 = vm.gc.symbol_intern("fxarithmetic-shift");
    let sym442 = vm.gc.symbol_intern("fxarithmetic-shift-left");
    let sym443 = vm.gc.symbol_intern("fxarithmetic-shift-right");
    let sym444 = vm.gc.symbol_intern("fxrotate-bit-field");
    let sym445 = vm.gc.symbol_intern("fxreverse-bit-field");
    let sym446 = vm.gc.symbol_intern("bytevector-ieee-single-native-ref");
    let sym447 = vm.gc.symbol_intern("bytevector-ieee-single-ref");
    let sym448 = vm.gc.symbol_intern("bytevector-ieee-double-native-ref");
    let sym449 = vm.gc.symbol_intern("bytevector-ieee-double-ref");
    let sym450 = vm.gc.symbol_intern("bytevector-ieee-single-native-set!");
    let sym451 = vm.gc.symbol_intern("bytevector-ieee-single-set!");
    let sym452 = vm.gc.symbol_intern("bytevector-ieee-double-native-set!");
    let sym453 = vm.gc.symbol_intern("bytevector-ieee-double-set!");
    let sym454 = vm.gc.symbol_intern("even?");
    let sym455 = vm.gc.symbol_intern("odd?");
    let sym456 = vm.gc.symbol_intern("abs");
    let sym457 = vm.gc.symbol_intern("div");
    let sym458 = vm.gc.symbol_intern("div0");
    let sym459 = vm.gc.symbol_intern("numerator");
    let sym460 = vm.gc.symbol_intern("denominator");
    let sym461 = vm.gc.symbol_intern("floor");
    let sym462 = vm.gc.symbol_intern("ceiling");
    let sym463 = vm.gc.symbol_intern("truncate");
    let sym464 = vm.gc.symbol_intern("round");
    let sym465 = vm.gc.symbol_intern("exp");
    let sym466 = vm.gc.symbol_intern("log");
    let sym467 = vm.gc.symbol_intern("sin");
    let sym468 = vm.gc.symbol_intern("cos");
    let sym469 = vm.gc.symbol_intern("tan");
    let sym470 = vm.gc.symbol_intern("asin");
    let sym471 = vm.gc.symbol_intern("acos");
    let sym472 = vm.gc.symbol_intern("sqrt");
    let sym473 = vm.gc.symbol_intern("magnitude");
    let sym474 = vm.gc.symbol_intern("angle");
    let sym475 = vm.gc.symbol_intern("atan");
    let sym476 = vm.gc.symbol_intern("expt");
    let sym477 = vm.gc.symbol_intern("make-polar");
    let sym478 = vm.gc.symbol_intern("string-copy");
    let sym479 = vm.gc.symbol_intern("vector-fill!");
    let sym480 = vm.gc.symbol_intern("ungensym");
    let sym481 = vm.gc.symbol_intern("disasm");
    let sym482 = vm.gc.symbol_intern("print-stack");
    let sym483 = vm.gc.symbol_intern("fast-equal?");
    let sym484 = vm.gc.symbol_intern("native-eol-style");
    let sym485 = vm.gc.symbol_intern("buffer-mode?");
    let sym486 = vm.gc.symbol_intern("microseconds");
    let sym487 = vm.gc.symbol_intern("local-tz-offset");
    let sym488 = vm.gc.symbol_intern("%fork");
    let sym489 = vm.gc.symbol_intern("%exec");
    let sym490 = vm.gc.symbol_intern("%waitpid");
    let sym491 = vm.gc.symbol_intern("%pipe");
    let sym492 = vm.gc.symbol_intern("%getpid");
    let sym493 = vm.gc.symbol_intern("set-current-directory!");
    let sym494 = vm.gc.symbol_intern("binary-port?");
    let sym495 = vm.gc.symbol_intern("input-port?");
    let sym496 = vm.gc.symbol_intern("port-eof?");
    let sym497 = vm.gc.symbol_intern("lookahead-u8");
    let sym498 = vm.gc.symbol_intern("open-bytevector-input-port");
    let sym499 = vm.gc.symbol_intern("%ffi-open");
    let sym500 = vm.gc.symbol_intern("%ffi-lookup");
    let sym501 = vm.gc.symbol_intern("%ffi-call");
    let sym502 = vm.gc.symbol_intern("%ffi-supported?");
    let sym503 = vm.gc.symbol_intern("%ffi-malloc");
    let sym504 = vm.gc.symbol_intern("%ffi-free");
    let sym505 = vm.gc.symbol_intern("%ffi-make-c-callback-trampoline");
    let sym506 = vm.gc.symbol_intern("%ffi-free-c-callback-trampoline");
    let sym507 = vm.gc.symbol_intern("%ffi-close");
    let sym508 = vm.gc.symbol_intern("%ffi-error");
    let sym509 = vm.gc.symbol_intern("host-os");
    let sym510 = vm.gc.symbol_intern("output-port?");
    let sym511 = vm.gc.symbol_intern("textual-port?");
    let sym512 = vm.gc.symbol_intern("port?");
    let sym513 = vm.gc.symbol_intern("port-transcoder");
    let sym514 = vm.gc.symbol_intern("native-transcoder");
    let sym515 = vm.gc.symbol_intern("put-bytevector");
    let sym516 = vm.gc.symbol_intern("put-char");
    let sym517 = vm.gc.symbol_intern("write-char");
    let sym518 = vm.gc.symbol_intern("transcoder-codec");
    let sym519 = vm.gc.symbol_intern("transcoder-eol-style");
    let sym520 = vm.gc.symbol_intern("transcoder-error-handling-mode");
    let sym521 = vm.gc.symbol_intern("quotient");
    let sym522 = vm.gc.symbol_intern("remainder");
    let sym523 = vm.gc.symbol_intern("modulo");
    let sym524 = vm.gc.symbol_intern("open-file-input/output-port");
    let sym525 = vm.gc.symbol_intern("make-custom-binary-input/output-port");
    let sym526 = vm.gc.symbol_intern("make-custom-textual-input/output-port");
    let sym527 = vm.gc.symbol_intern("put-datum");
    let sym528 = vm.gc.symbol_intern("list-ref");
    let sym529 = vm.gc.symbol_intern("list-tail");
    let sym530 = vm.gc.symbol_intern("time-usage");
    let sym531 = vm.gc.symbol_intern("mosh-executable-path");
    let sym532 = vm.gc.symbol_intern("socket?");
    let sym533 = vm.gc.symbol_intern("socket-accept");
    let sym534 = vm.gc.symbol_intern("make-client-socket");
    let sym535 = vm.gc.symbol_intern("make-server-socket");
    let sym536 = vm.gc.symbol_intern("os-constant");
    let sym537 = vm.gc.symbol_intern("socket-recv");
    let sym538 = vm.gc.symbol_intern("socket-recv!");
    let sym539 = vm.gc.symbol_intern("socket-send");
    let sym540 = vm.gc.symbol_intern("socket-close");
    let sym541 = vm.gc.symbol_intern("socket-shutdown");
    let sym542 = vm.gc.symbol_intern("socket-port");
    let sym543 = vm.gc.symbol_intern("make-vm");
    let sym544 = vm.gc.symbol_intern("vm-start!");
    let sym545 = vm.gc.symbol_intern("vm?");
    let sym546 = vm.gc.symbol_intern("vm-set-value!");
    let sym547 = vm.gc.symbol_intern("vm-join!");
    let sym548 = vm.gc.symbol_intern("main-vm?");
    let sym549 = vm.gc.symbol_intern("vm-self");
    let sym550 = vm.gc.symbol_intern("register");
    let sym551 = vm.gc.symbol_intern("whereis");
    let sym552 = vm.gc.symbol_intern("make-condition-variable");
    let sym553 = vm.gc.symbol_intern("condition-variable-wait!");
    let sym554 = vm.gc.symbol_intern("condition-variable-notify!");
    let sym555 = vm.gc.symbol_intern("condition-variable-notify-all!");
    let sym556 = vm.gc.symbol_intern("mutex?");
    let sym557 = vm.gc.symbol_intern("make-mutex");
    let sym558 = vm.gc.symbol_intern("mutex-lock!");
    let sym559 = vm.gc.symbol_intern("mutex-try-lock!");
    let sym560 = vm.gc.symbol_intern("mutex-unlock!");
    let sym561 = vm.gc.symbol_intern("make-vector");
    let sym562 = vm.gc.symbol_intern("vector-length");
    let sym563 = vm.gc.symbol_intern("vector-ref");
    let sym564 = vm.gc.symbol_intern("vector-set!");
    let sym565 = vm.gc.symbol_intern("create-directory");
    let sym566 = vm.gc.symbol_intern("delete-directory");
    let sym567 = vm.gc.symbol_intern("rename-file");
    let sym568 = vm.gc.symbol_intern("create-symbolic-link");
    let sym569 = vm.gc.symbol_intern("file-directory?");
    let sym570 = vm.gc.symbol_intern("file-symbolic-link?");
    let sym571 = vm.gc.symbol_intern("file-regular?");
    let sym572 = vm.gc.symbol_intern("file-readable?");
    let sym573 = vm.gc.symbol_intern("file-executable?");
    let sym574 = vm.gc.symbol_intern("file-writable?");
    let sym575 = vm.gc.symbol_intern("file-size-in-bytes");
    let sym576 = vm.gc.symbol_intern("file-stat-mtime");
    let sym577 = vm.gc.symbol_intern("file-stat-atime");
    let sym578 = vm.gc.symbol_intern("file-stat-ctime");
    let sym579 = vm.gc.symbol_intern("pointer?");
    let sym580 = vm.gc.symbol_intern("pointer->integer");
    let sym581 = vm.gc.symbol_intern("integer->pointer");
    let sym582 = vm.gc.symbol_intern("pointer-ref-c-uint8");
    let sym583 = vm.gc.symbol_intern("pointer-ref-c-uint16");
    let sym584 = vm.gc.symbol_intern("pointer-ref-c-uint32");
    let sym585 = vm.gc.symbol_intern("pointer-ref-c-uint64");
    let sym586 = vm.gc.symbol_intern("pointer-ref-c-int8");
    let sym587 = vm.gc.symbol_intern("pointer-ref-c-int16");
    let sym588 = vm.gc.symbol_intern("pointer-ref-c-int32");
    let sym589 = vm.gc.symbol_intern("pointer-ref-c-int64");
    let sym590 = vm.gc.symbol_intern("pointer-ref-c-signed-char");
    let sym591 = vm.gc.symbol_intern("pointer-ref-c-unsigned-char");
    let sym592 = vm.gc.symbol_intern("pointer-ref-c-signed-short");
    let sym593 = vm.gc.symbol_intern("pointer-ref-c-unsigned-short");
    let sym594 = vm.gc.symbol_intern("pointer-ref-c-signed-int");
    let sym595 = vm.gc.symbol_intern("pointer-ref-c-unsigned-int");
    let sym596 = vm.gc.symbol_intern("pointer-ref-c-signed-long");
    let sym597 = vm.gc.symbol_intern("pointer-ref-c-unsigned-long");
    let sym598 = vm.gc.symbol_intern("pointer-ref-c-signed-long-long");
    let sym599 = vm.gc.symbol_intern("pointer-ref-c-unsigned-long-long");
    let sym600 = vm.gc.symbol_intern("pointer-ref-c-float");
    let sym601 = vm.gc.symbol_intern("pointer-ref-c-double");
    let sym602 = vm.gc.symbol_intern("pointer-ref-c-pointer");
    let sym603 = vm.gc.symbol_intern("pointer-set-c-int8!");
    let sym604 = vm.gc.symbol_intern("pointer-set-c-int16!");
    let sym605 = vm.gc.symbol_intern("pointer-set-c-int32!");
    let sym606 = vm.gc.symbol_intern("pointer-set-c-int64!");
    let sym607 = vm.gc.symbol_intern("pointer-set-c-uint8!");
    let sym608 = vm.gc.symbol_intern("pointer-set-c-uint16!");
    let sym609 = vm.gc.symbol_intern("pointer-set-c-uint32!");
    let sym610 = vm.gc.symbol_intern("pointer-set-c-uint64!");
    let sym611 = vm.gc.symbol_intern("pointer-set-c-char!");
    let sym612 = vm.gc.symbol_intern("pointer-set-c-short!");
    let sym613 = vm.gc.symbol_intern("pointer-set-c-int!");
    let sym614 = vm.gc.symbol_intern("pointer-set-c-long!");
    let sym615 = vm.gc.symbol_intern("pointer-set-c-long-long!");
    let sym616 = vm.gc.symbol_intern("pointer-set-c-float!");
    let sym617 = vm.gc.symbol_intern("pointer-set-c-double!");
    let sym618 = vm.gc.symbol_intern("pointer-set-c-pointer!");
    let sym619 = vm.gc.symbol_intern("pointer-copy!");
    let sym620 = vm.gc.symbol_intern("bytevector-pointer");
    let sym621 = vm.gc.symbol_intern("shared-errno");
    let sym622 = vm.gc.symbol_intern("simple-struct?");
    let sym623 = vm.gc.symbol_intern("make-simple-struct");
    let sym624 = vm.gc.symbol_intern("simple-struct-ref");
    let sym625 = vm.gc.symbol_intern("simple-struct-set!");
    let sym626 = vm.gc.symbol_intern("simple-struct-name");
    let sym627 = vm.gc.symbol_intern("lookup-nongenerative-rtd");
    let sym628 = vm.gc.symbol_intern("nongenerative-rtd-set!");
    let sym629 = vm.gc.symbol_intern("same-marks*?");
    let sym630 = vm.gc.symbol_intern("same-marks?");
    let sym631 = vm.gc.symbol_intern("id->real-label");
    let sym632 = vm.gc.symbol_intern("join-wraps");
    let sym633 = vm.gc.symbol_intern("gensym-prefix-set!");
    let sym634 = vm.gc.symbol_intern("current-dynamic-winders");
    let sym635 = vm.gc.symbol_intern("sexp-map");
    let sym636 = vm.gc.symbol_intern("sexp-map/debug");
    let sym637 = vm.gc.symbol_intern("write/ss");
    let sym638 = vm.gc.symbol_intern("%monapi-message-send");
    let sym639 = vm.gc.symbol_intern("%monapi-name-whereis");
    let sym640 = vm.gc.symbol_intern("%monapi-message-receive");
    let sym641 = vm.gc.symbol_intern("%monapi-name-add!");
    let sym642 = vm.gc.symbol_intern("%monapi-message-send-receive");
    let sym643 = vm.gc.symbol_intern("%monapi-message-reply");
    let sym644 = vm.gc.symbol_intern("%monapi-make-stream");
    let sym645 = vm.gc.symbol_intern("%monapi-stream-handle");
    let sym646 = vm.gc.symbol_intern("%monapi-stream-write");
    let sym647 = vm.gc.symbol_intern("%monapi-stream-read");
    let sym648 = vm.gc.symbol_intern("process-list");
    let sym649 = vm.gc.symbol_intern("process-terminate!");
    let sym650 = vm.gc.symbol_intern("socket-sslize!");
    let sym651 = vm.gc.symbol_intern("ssl-socket?");
    let sym652 = vm.gc.symbol_intern("ssl-supported?");
    let sym653 = vm.gc.symbol_intern("file->string");
    let sym654 = vm.gc.symbol_intern("annotated-cons");
    let sym655 = vm.gc.symbol_intern("annotated-pair?");
    let sym656 = vm.gc.symbol_intern("get-annotation");
    let sym657 = vm.gc.symbol_intern("set-annotation!");
    let sym658 = vm.gc.symbol_intern("pointer->object");
    let sym659 = vm.gc.symbol_intern("object->pointer");
    let sym660 = vm.gc.symbol_intern("set-current-error-port!");
    let sym661 = vm.gc.symbol_intern("port-open?");
    let sym662 = vm.gc.symbol_intern("make-f64array");
    let sym663 = vm.gc.symbol_intern("f64array?");
    let sym664 = vm.gc.symbol_intern("f64array-ref");
    let sym665 = vm.gc.symbol_intern("f64array-set!");
    let sym666 = vm.gc.symbol_intern("f64array-shape");
    let sym667 = vm.gc.symbol_intern("f64array-dot-product");
    let sym668 = vm.gc.symbol_intern("compiler");
    let sym669 = vm.gc.symbol_intern("tuple-set!");
    let sym670 = vm.gc.symbol_intern("type:record-type-descriptor");
    let sym671 = vm.gc.symbol_intern("record-type-name");
    let sym672 = vm.gc.symbol_intern("make-record-type-descriptor");
    let sym673 = vm.gc.symbol_intern("mutable");
    let sym674 = vm.gc.symbol_intern("immutable");
    let sym675 = vm.gc.symbol_intern("type:record-constructor-descriptor");
    let sym676 = vm.gc.symbol_intern("make-record-constructor-descriptor");
    let sym677 = vm.gc.symbol_intern("record-rtd");
    let sym678 = vm.gc.symbol_intern("record-constructor");
    let sym679 = vm.gc.symbol_intern("record-predicate");
    let sym680 = vm.gc.symbol_intern("record-accssor");
    let sym681 = vm.gc.symbol_intern("record-mutator");
    let sym682 = vm.gc.symbol_intern("type:record-type");
    let sym683 = vm.gc.symbol_intern("record-type-rtd");
    let sym684 = vm.gc.symbol_intern("record-type-rcd");
    let sym685 = vm.gc.symbol_intern("enum-set");
    let sym686 = vm.gc.symbol_intern("enum-set-uid");
    let sym687 = vm.gc.symbol_intern("type");
    let sym688 = vm.gc.symbol_intern("members");
    let sym689 = vm.gc.symbol_intern("enum-type");
    let sym690 = vm.gc.symbol_intern("enum-type-uid");
    let sym691 = vm.gc.symbol_intern("universe");
    let sym692 = vm.gc.symbol_intern("indexer");
    let sym693 = vm.gc.symbol_intern("make-enumeration");
    let sym694 = vm.gc.symbol_intern("enum-set-constructor");
    let sym695 = vm.gc.symbol_intern("enum-set-union");
    let sym696 = vm.gc.symbol_intern("enum-set-intersection");
    let sym697 = vm.gc.symbol_intern("enum-set-difference");
    let sym698 = vm.gc.symbol_intern("&condition");
    let sym699 = vm.gc.symbol_intern("&conidion-uid");
    let sym700 = vm.gc.symbol_intern("type:condition");
    let sym701 = vm.gc.symbol_intern("condition");
    let sym702 = vm.gc.symbol_intern("simple-conditions");
    let sym703 = vm.gc.symbol_intern("condition-predicate");
    let sym704 = vm.gc.symbol_intern("condition-accessor");
    let sym705 = vm.gc.symbol_intern("&message");
    let sym706 = vm.gc.symbol_intern("&message-uid");
    let sym707 = vm.gc.symbol_intern("message");
    let sym708 = vm.gc.symbol_intern("&warning");
    let sym709 = vm.gc.symbol_intern("&warning-uid");
    let sym710 = vm.gc.symbol_intern("&serious");
    let sym711 = vm.gc.symbol_intern("&serious-uid");
    let sym712 = vm.gc.symbol_intern("&error");
    let sym713 = vm.gc.symbol_intern("&error-uid");
    let sym714 = vm.gc.symbol_intern("&violation");
    let sym715 = vm.gc.symbol_intern("&violation-uid");
    let sym716 = vm.gc.symbol_intern("&assertion");
    let sym717 = vm.gc.symbol_intern("&assertion-uid");
    let sym718 = vm.gc.symbol_intern("&irritants");
    let sym719 = vm.gc.symbol_intern("&irritants-uid");
    let sym720 = vm.gc.symbol_intern("irritants");
    let sym721 = vm.gc.symbol_intern("&who");
    let sym722 = vm.gc.symbol_intern("&who-uid");
    let sym723 = vm.gc.symbol_intern("who");
    let sym724 = vm.gc.symbol_intern("&non-continuable");
    let sym725 = vm.gc.symbol_intern("&non-continuable-uid");
    let sym726 = vm.gc.symbol_intern("&implementation-restriction");
    let sym727 = vm.gc.symbol_intern("&implementation-restriction-uid");
    let sym728 = vm.gc.symbol_intern("&lexical");
    let sym729 = vm.gc.symbol_intern("&lexical-uid");
    let sym730 = vm.gc.symbol_intern("&syntax");
    let sym731 = vm.gc.symbol_intern("&syntax-uid");
    let sym732 = vm.gc.symbol_intern("form");
    let sym733 = vm.gc.symbol_intern("subform");
    let sym734 = vm.gc.symbol_intern("&undefined");
    let sym735 = vm.gc.symbol_intern("&undefind-uid");
    let sym736 = vm.gc.symbol_intern("&i/o");
    let sym737 = vm.gc.symbol_intern("&i/o-uid");
    let sym738 = vm.gc.symbol_intern("&i/o-read");
    let sym739 = vm.gc.symbol_intern("&i/o-read-uid");
    let sym740 = vm.gc.symbol_intern("&i/o-write");
    let sym741 = vm.gc.symbol_intern("&i/o-write-uid");
    let sym742 = vm.gc.symbol_intern("&i/o-invalid-position");
    let sym743 = vm.gc.symbol_intern("&i/o-invalid-position-uid");
    let sym744 = vm.gc.symbol_intern("position");
    let sym745 = vm.gc.symbol_intern("&i/o-filename");
    let sym746 = vm.gc.symbol_intern("&i/o-filename-ui");
    let sym747 = vm.gc.symbol_intern("filename");
    let sym748 = vm.gc.symbol_intern("&i/o-file-protection");
    let sym749 = vm.gc.symbol_intern("&i/o-file-protection-uid");
    let sym750 = vm.gc.symbol_intern("&i/o-file-is-read-only");
    let sym751 = vm.gc.symbol_intern("&i/o-file-is-read-only-uid");
    let sym752 = vm.gc.symbol_intern("&i/o-file-already-exists");
    let sym753 = vm.gc.symbol_intern("&i/o-file-already-exists-uid");
    let sym754 = vm.gc.symbol_intern("&i/o-file-does-not-exist");
    let sym755 = vm.gc.symbol_intern("&i/o-file-does-not-exist-uid");
    let sym756 = vm.gc.symbol_intern("&i/o-port");
    let sym757 = vm.gc.symbol_intern("&i/o-port-uid");
    let sym758 = vm.gc.symbol_intern("port");
    let sym759 = vm.gc.symbol_intern("&i/o-decoding");
    let sym760 = vm.gc.symbol_intern("&i/o-decoding-uid");
    let sym761 = vm.gc.symbol_intern("&i/o-encoding");
    let sym762 = vm.gc.symbol_intern("char");
    let sym763 = vm.gc.symbol_intern("&no-infinities");
    let sym764 = vm.gc.symbol_intern("&no-infinities-uid");
    let sym765 = vm.gc.symbol_intern("&no-nans");
    let sym766 = vm.gc.symbol_intern("&no-nans-uid");
    let sym767 = vm.gc.symbol_intern("assertion-violation");
    let sym768 = vm.gc.symbol_intern("error");
    let sym769 = vm.gc.symbol_intern("define");
    let sym770 = vm.gc.symbol_intern("let");
    let sym771 = vm.gc.symbol_intern("letrec*");
    let sym772 = vm.gc.symbol_intern("quote");
    let sym773 = vm.gc.symbol_intern("define-macro");
    let sym774 = vm.gc.symbol_intern("let1");
    let sym775 = vm.gc.symbol_intern("let*");
    let sym776 = vm.gc.symbol_intern("cond");
    let sym777 = vm.gc.symbol_intern("call-with-values");
    let sym778 = vm.gc.symbol_intern("receive");
    let sym779 = vm.gc.symbol_intern("vals");
    let sym780 = vm.gc.symbol_intern("when");
    let sym781 = vm.gc.symbol_intern("unless");
    let sym782 = vm.gc.symbol_intern("not");
    let sym783 = vm.gc.symbol_intern("aif");
    let sym784 = vm.gc.symbol_intern("case");
    let sym785 = vm.gc.symbol_intern("quasiquote");
    let sym786 = vm.gc.symbol_intern("if");
    let sym787 = vm.gc.symbol_intern("else");
    let sym788 = vm.gc.symbol_intern("letrec");
    let sym789 = vm.gc.symbol_intern("it");
    let sym790 = vm.gc.symbol_intern("unquote");
    let sym791 = vm.gc.symbol_intern("unquote-splicing");
    let sym792 = vm.gc.symbol_intern("tmp");
    let sym793 = vm.gc.symbol_intern("=>");
    let sym794 = vm.gc.symbol_intern("rec");
    let sym795 = vm.gc.symbol_intern("CONS");
    let sym796 = vm.gc.symbol_intern("and");
    let sym797 = vm.gc.symbol_intern("or");
    let sym798 = vm.gc.symbol_intern("begin");
    let sym799 = vm.gc.symbol_intern("VALUES");
    let sym800 = vm.gc.symbol_intern("VECTOR");
    let sym801 = vm.gc.symbol_intern("set!");
    let sym802 = vm.gc.symbol_intern("undef");
    let sym803 = vm.gc.symbol_intern("call/cc");
    let sym804 = vm.gc.symbol_intern("call-with-current-continuation");
    let sym805 = vm.gc.symbol_intern("APPEND2");
    let sym806 = vm.gc.symbol_intern("NUMBER_ADD");
    let sym807 = vm.gc.symbol_intern("MINUS-ERROR");
    let sym808 = vm.gc.symbol_intern("NUMBER_SUB");
    let sym809 = vm.gc.symbol_intern("NUMBER_MUL");
    let sym810 = vm.gc.symbol_intern("NUMBER_DIV");
    let sym811 = vm.gc.symbol_intern("NUMBER_EQUAL");
    let sym812 = vm.gc.symbol_intern("NUMBER_GE");
    let sym813 = vm.gc.symbol_intern("NUMBER_GT");
    let sym814 = vm.gc.symbol_intern("NUMBER_LT");
    let sym815 = vm.gc.symbol_intern("NUMBER_LE");
    let sym816 = vm.gc.symbol_intern("VECTOR_P");
    let sym817 = vm.gc.symbol_intern("VECTOR_LENGTH");
    let sym818 = vm.gc.symbol_intern("VECTOR_SET");
    let sym819 = vm.gc.symbol_intern("VECTOR_REF");
    let sym820 = vm.gc.symbol_intern("SIMPLE_STRUCT_REF");
    let sym821 = vm.gc.symbol_intern("MAKE_VECTOR");
    let sym822 = vm.gc.symbol_intern("CAR");
    let sym823 = vm.gc.symbol_intern("CDR");
    let sym824 = vm.gc.symbol_intern("CAAR");
    let sym825 = vm.gc.symbol_intern("CADR");
    let sym826 = vm.gc.symbol_intern("CDAR");
    let sym827 = vm.gc.symbol_intern("CDDR");
    let sym828 = vm.gc.symbol_intern("SET_CAR");
    let sym829 = vm.gc.symbol_intern("SET_CDR");
    let sym830 = vm.gc.symbol_intern("EQ");
    let sym831 = vm.gc.symbol_intern("EQV");
    let sym832 = vm.gc.symbol_intern("EQUAL");
    let sym833 = vm.gc.symbol_intern("NOT");
    let sym834 = vm.gc.symbol_intern("NULL_P");
    let sym835 = vm.gc.symbol_intern("PAIR_P");
    let sym836 = vm.gc.symbol_intern("SYMBOL_P");
    let sym837 = vm.gc.symbol_intern("READ");
    let sym838 = vm.gc.symbol_intern("READ_CHAR");
    let sym839 = vm.gc.symbol_intern("NUMSUB2");
    let sym840 = vm.gc.symbol_intern("VEC-LEN");
    let sym841 = vm.gc.symbol_intern("VEC-REF");
    let sym842 = vm.gc.symbol_intern("VEC-SET");
    let sym843 = vm.gc.symbol_intern("NUMADD2");
    let sym844 = vm.gc.symbol_intern("NUMLT2");
    let sym845 = vm.gc.symbol_intern("NUMLE2");
    let sym846 = vm.gc.symbol_intern("NUMGT2");
    let sym847 = vm.gc.symbol_intern("NUMGE2");
    let sym848 = vm.gc.symbol_intern("dissolved");
    let sym849 = vm.gc.symbol_intern("embed");
    let sym850 = vm.gc.symbol_intern("jump");
    let sym851 = vm.gc.symbol_intern("local");
    let sym852 = vm.gc.symbol_intern("tail-rec");
    let sym853 = vm.gc.symbol_intern("no-create");
    let sym854 = vm.gc.symbol_intern("no-truncate");
    let sym855 = vm.gc.symbol_intern("PUSH");
    let sym856 = vm.gc.symbol_intern("REFER_LOCAL");
    let sym857 = vm.gc.symbol_intern("REFER_FREE");
    let sym858 = vm.gc.symbol_intern("ASSIGN_LOCAL");
    let sym859 = vm.gc.symbol_intern("ASSIGN_FREE");
    let sym860 = vm.gc.symbol_intern("BOX");
    let sym861 = vm.gc.symbol_intern("CONSTANT");
    let sym862 = vm.gc.symbol_intern("LIST");
    let sym863 = vm.gc.symbol_intern("INDIRECT");
    let sym864 = vm.gc.symbol_intern("REFER_GLOBAL");
    let sym865 = vm.gc.symbol_intern("ASSIGN_GLOBAL");
    let sym866 = vm.gc.symbol_intern("UNDEF");
    let sym867 = vm.gc.symbol_intern("OPEN_INPUT_FILE");
    let sym868 = vm.gc.symbol_intern("APPLY");
    let sym869 = vm.gc.symbol_intern("FRAME");
    let sym870 = vm.gc.symbol_intern("BRANCH_NOT_NULL");
    let sym871 = vm.gc.symbol_intern("BRANCH_NOT_EQ");
    let sym872 = vm.gc.symbol_intern("BRANCH_NOT_EQV");
    let sym873 = vm.gc.symbol_intern("BRANCH_NOT_EQUAL");
    let sym874 = vm.gc.symbol_intern("BRANCH_NOT_NUMBER_EQUAL");
    let sym875 = vm.gc.symbol_intern("BRANCH_NOT_LE");
    let sym876 = vm.gc.symbol_intern("BRANCH_NOT_LT");
    let sym877 = vm.gc.symbol_intern("BRANCH_NOT_GT");
    let sym878 = vm.gc.symbol_intern("BRANCH_NOT_GE");
    let sym879 = vm.gc.symbol_intern("UNFIXED_JUMP");
    let sym880 = vm.gc.symbol_intern("TEST");
    let sym881 = vm.gc.symbol_intern("DEFINE_GLOBAL");
    let sym882 = vm.gc.symbol_intern("SHIFTJ");
    let sym883 = vm.gc.symbol_intern("LET_FRAME");
    let sym884 = vm.gc.symbol_intern("DISPLAY");
    let sym885 = vm.gc.symbol_intern("ENTER");
    let sym886 = vm.gc.symbol_intern("LEAVE");
    let sym887 = vm.gc.symbol_intern("LOCAL_TAIL_CALL");
    let sym888 = vm.gc.symbol_intern("TAIL_CALL");
    let sym889 = vm.gc.symbol_intern("LOCAL_CALL");
    let sym890 = vm.gc.symbol_intern("CALL");
    let sym891 = vm.gc.symbol_intern("MAKE_CONTINUATION");
    let sym892 = vm.gc.symbol_intern("CLOSURE");
    let sym893 = vm.gc.symbol_intern("RETURN");
    let sym894 = vm.gc.symbol_intern("RECEIVE");
    let sym895 = vm.gc.symbol_intern("COMPILE_ERROR");
    let sym896 = vm.gc.symbol_intern("HALT");
    let sym897 = vm.gc.symbol_intern("fx+/carry");
    let sym898 = vm.gc.symbol_intern("fx-/carry");
    let sym899 = vm.gc.symbol_intern("fx*/carry");
    let sym900 = vm.gc.symbol_intern("bitwise-bit-field");
    let sym901 = vm.gc.symbol_intern("big");
    let sym902 = vm.gc.symbol_intern("little");
    let sym903 = vm.gc.symbol_intern("bytevector-uint-ref");
    let sym904 = vm.gc.symbol_intern("bytevector-sint-ref");
    let sym905 = vm.gc.symbol_intern("bytevector-uint-set!");
    let sym906 = vm.gc.symbol_intern("bytevector-sint-set!");
    let sym907 = vm.gc.symbol_intern("bytevector->uint-list");
    let sym908 = vm.gc.symbol_intern("bytevector->sint-list");
    let sym909 = vm.gc.symbol_intern("exact-integer-sqrt");
    let sym910 = vm.gc.symbol_intern("rationalize");
    let sym911 = vm.gc.symbol_intern("gcd");
    let sym912 = vm.gc.symbol_intern("lcm");
    let sym913 = vm.gc.symbol_intern("hashtable-update!");
    let list0 = vm.gc.listn(&[sym0, sym1, sym2, sym3, sym4, sym5, sym6, sym7]);
    let list1 = vm.gc.listn(&[sym8, Object::Number(0)]);
    let list2 = vm.gc.listn(&[sym8, Object::Number(1)]);
    let list3 = vm.gc.listn(&[sym8, Object::Number(11)]);
    let list4 = vm.gc.listn(&[sym8, Object::Number(13)]);
    let list5 = vm.gc.listn(&[sym8, Object::Number(14)]);
    let list6 = vm.gc.listn(&[sym8, Object::Number(16)]);
    let list7 = vm.gc.listn(&[sym8, Object::Number(176)]);
    let list8 = vm.gc.listn(&[sym8, Object::Number(19)]);
    let list9 = vm.gc.listn(&[sym8, Object::Number(2)]);
    let list10 = vm.gc.listn(&[sym8, Object::Number(23)]);
    let list11 = vm.gc.listn(&[sym8, Object::Number(26)]);
    let list12 = vm.gc.listn(&[sym8, Object::Number(27)]);
    let list13 = vm.gc.listn(&[sym8, Object::Number(31)]);
    let list14 = vm.gc.listn(&[sym8, Object::Number(37)]);
    let list15 = vm.gc.listn(&[sym8, Object::Number(38)]);
    let list16 = vm.gc.listn(&[sym8, Object::Number(39)]);
    let list17 = vm.gc.listn(&[sym8, Object::Number(41)]);
    let list18 = vm.gc.listn(&[sym8, Object::Number(42)]);
    let list19 = vm.gc.listn(&[sym8, Object::Number(43)]);
    let list20 = vm.gc.listn(&[sym8, Object::Number(48)]);
    let list21 = vm.gc.listn(&[sym8, Object::Number(6)]);
    let list22 = vm.gc.listn(&[sym8, Object::Number(61)]);
    let list23 = vm.gc.listn(&[sym8, Object::Number(64)]);
    let list24 = vm.gc.listn(&[sym8, Object::Number(67)]);
    let list25 = vm.gc.listn(&[sym8, Object::Number(78)]);
    let list26 = vm.gc.listn(&[sym8, Object::Number(8)]);
    let list27 = vm.gc.listn(&[sym8, Object::Number(9)]);
    let list28 = vm.gc.listn(&[sym8, Object::Number(98)]);
    let list29 = vm.gc.listn(&[sym8, Object::Number(99)]);
    let list30 = vm.gc.listn(&[sym8, Object::Number(151)]);
    let list31 = vm.gc.listn(&[sym7]);
    let list32 = vm.gc.listn(&[list1, list2, list3, list4, list5, list6, list7, list8, list9, list10, list11, list12, list13, list14, list15, list16, list17, list18, list19, list20, list21, list22, list23, list24, list25, list26, list27, list28, list29, list30, list31]);
    let list33 = vm.gc.listn(&[sym15]);
    let list34 = vm.gc.listn(&[sym19]);
    let list35 = vm.gc.listn(&[Object::Number(2392), Object::Number(2393), Object::Number(2394), Object::Number(2395), Object::Number(2396), Object::Number(2397), Object::Number(2398), Object::Number(2399), Object::Number(2524), Object::Number(2525), Object::Number(2527), Object::Number(2611), Object::Number(2614), Object::Number(2649), Object::Number(2650), Object::Number(2651), Object::Number(2654), Object::Number(2908), Object::Number(2909), Object::Number(3907), Object::Number(3917), Object::Number(3922), Object::Number(3927), Object::Number(3932), Object::Number(3945), Object::Number(3958), Object::Number(3960), Object::Number(3987), Object::Number(3997), Object::Number(4002), Object::Number(4007), Object::Number(4012), Object::Number(4025), Object::Number(64285), Object::Number(64287), Object::Number(64298), Object::Number(64299), Object::Number(64300), Object::Number(64301), Object::Number(64302), Object::Number(64303), Object::Number(64304), Object::Number(64305), Object::Number(64306), Object::Number(64307), Object::Number(64308), Object::Number(64309), Object::Number(64310), Object::Number(64312), Object::Number(64313), Object::Number(64314), Object::Number(64315), Object::Number(64316), Object::Number(64318), Object::Number(64320), Object::Number(64321), Object::Number(64323), Object::Number(64324), Object::Number(64326), Object::Number(64327), Object::Number(64328), Object::Number(64329), Object::Number(64330), Object::Number(64331), Object::Number(64332), Object::Number(64333), Object::Number(64334), Object::Number(10972), Object::Number(119134), Object::Number(119135), Object::Number(119136), Object::Number(119137), Object::Number(119138), Object::Number(119139), Object::Number(119140), Object::Number(119227), Object::Number(119228), Object::Number(119229), Object::Number(119230), Object::Number(119231), Object::Number(119232)]);
    let list36 = vm.gc.listn(&[Object::Number(160), Object::Number(32)]);
    let list37 = vm.gc.listn(&[Object::Number(168), Object::Number(32), Object::Number(776)]);
    let list38 = vm.gc.listn(&[Object::Number(170), Object::Number(97)]);
    let list39 = vm.gc.listn(&[Object::Number(175), Object::Number(32), Object::Number(772)]);
    let list40 = vm.gc.listn(&[Object::Number(178), Object::Number(50)]);
    let list41 = vm.gc.listn(&[Object::Number(179), Object::Number(51)]);
    let list42 = vm.gc.listn(&[Object::Number(180), Object::Number(32), Object::Number(769)]);
    let list43 = vm.gc.listn(&[Object::Number(181), Object::Number(956)]);
    let list44 = vm.gc.listn(&[Object::Number(184), Object::Number(32), Object::Number(807)]);
    let list45 = vm.gc.listn(&[Object::Number(185), Object::Number(49)]);
    let list46 = vm.gc.listn(&[Object::Number(186), Object::Number(111)]);
    let list47 = vm.gc.listn(&[Object::Number(188), Object::Number(49), Object::Number(8260), Object::Number(52)]);
    let list48 = vm.gc.listn(&[Object::Number(189), Object::Number(49), Object::Number(8260), Object::Number(50)]);
    let list49 = vm.gc.listn(&[Object::Number(190), Object::Number(51), Object::Number(8260), Object::Number(52)]);
    let list50 = vm.gc.listn(&[Object::Number(306), Object::Number(73), Object::Number(74)]);
    let list51 = vm.gc.listn(&[Object::Number(307), Object::Number(105), Object::Number(106)]);
    let list52 = vm.gc.listn(&[Object::Number(319), Object::Number(76), Object::Number(183)]);
    let list53 = vm.gc.listn(&[Object::Number(320), Object::Number(108), Object::Number(183)]);
    let list54 = vm.gc.listn(&[Object::Number(329), Object::Number(700), Object::Number(110)]);
    let list55 = vm.gc.listn(&[Object::Number(383), Object::Number(115)]);
    let list56 = vm.gc.listn(&[Object::Number(452), Object::Number(68), Object::Number(381)]);
    let list57 = vm.gc.listn(&[Object::Number(453), Object::Number(68), Object::Number(382)]);
    let list58 = vm.gc.listn(&[Object::Number(454), Object::Number(100), Object::Number(382)]);
    let list59 = vm.gc.listn(&[Object::Number(455), Object::Number(76), Object::Number(74)]);
    let list60 = vm.gc.listn(&[Object::Number(456), Object::Number(76), Object::Number(106)]);
    let list61 = vm.gc.listn(&[Object::Number(457), Object::Number(108), Object::Number(106)]);
    let list62 = vm.gc.listn(&[Object::Number(458), Object::Number(78), Object::Number(74)]);
    let list63 = vm.gc.listn(&[Object::Number(459), Object::Number(78), Object::Number(106)]);
    let list64 = vm.gc.listn(&[Object::Number(460), Object::Number(110), Object::Number(106)]);
    let list65 = vm.gc.listn(&[Object::Number(497), Object::Number(68), Object::Number(90)]);
    let list66 = vm.gc.listn(&[Object::Number(498), Object::Number(68), Object::Number(122)]);
    let list67 = vm.gc.listn(&[Object::Number(499), Object::Number(100), Object::Number(122)]);
    let list68 = vm.gc.listn(&[Object::Number(688), Object::Number(104)]);
    let list69 = vm.gc.listn(&[Object::Number(689), Object::Number(614)]);
    let list70 = vm.gc.listn(&[Object::Number(690), Object::Number(106)]);
    let list71 = vm.gc.listn(&[Object::Number(691), Object::Number(114)]);
    let list72 = vm.gc.listn(&[Object::Number(692), Object::Number(633)]);
    let list73 = vm.gc.listn(&[Object::Number(693), Object::Number(635)]);
    let list74 = vm.gc.listn(&[Object::Number(694), Object::Number(641)]);
    let list75 = vm.gc.listn(&[Object::Number(695), Object::Number(119)]);
    let list76 = vm.gc.listn(&[Object::Number(696), Object::Number(121)]);
    let list77 = vm.gc.listn(&[Object::Number(728), Object::Number(32), Object::Number(774)]);
    let list78 = vm.gc.listn(&[Object::Number(729), Object::Number(32), Object::Number(775)]);
    let list79 = vm.gc.listn(&[Object::Number(730), Object::Number(32), Object::Number(778)]);
    let list80 = vm.gc.listn(&[Object::Number(731), Object::Number(32), Object::Number(808)]);
    let list81 = vm.gc.listn(&[Object::Number(732), Object::Number(32), Object::Number(771)]);
    let list82 = vm.gc.listn(&[Object::Number(733), Object::Number(32), Object::Number(779)]);
    let list83 = vm.gc.listn(&[Object::Number(736), Object::Number(611)]);
    let list84 = vm.gc.listn(&[Object::Number(737), Object::Number(108)]);
    let list85 = vm.gc.listn(&[Object::Number(738), Object::Number(115)]);
    let list86 = vm.gc.listn(&[Object::Number(739), Object::Number(120)]);
    let list87 = vm.gc.listn(&[Object::Number(740), Object::Number(661)]);
    let list88 = vm.gc.listn(&[Object::Number(890), Object::Number(32), Object::Number(837)]);
    let list89 = vm.gc.listn(&[Object::Number(900), Object::Number(32), Object::Number(769)]);
    let list90 = vm.gc.listn(&[Object::Number(976), Object::Number(946)]);
    let list91 = vm.gc.listn(&[Object::Number(977), Object::Number(952)]);
    let list92 = vm.gc.listn(&[Object::Number(978), Object::Number(933)]);
    let list93 = vm.gc.listn(&[Object::Number(981), Object::Number(966)]);
    let list94 = vm.gc.listn(&[Object::Number(982), Object::Number(960)]);
    let list95 = vm.gc.listn(&[Object::Number(1008), Object::Number(954)]);
    let list96 = vm.gc.listn(&[Object::Number(1009), Object::Number(961)]);
    let list97 = vm.gc.listn(&[Object::Number(1010), Object::Number(962)]);
    let list98 = vm.gc.listn(&[Object::Number(1012), Object::Number(920)]);
    let list99 = vm.gc.listn(&[Object::Number(1013), Object::Number(949)]);
    let list100 = vm.gc.listn(&[Object::Number(1017), Object::Number(931)]);
    let list101 = vm.gc.listn(&[Object::Number(1415), Object::Number(1381), Object::Number(1410)]);
    let list102 = vm.gc.listn(&[Object::Number(1653), Object::Number(1575), Object::Number(1652)]);
    let list103 = vm.gc.listn(&[Object::Number(1654), Object::Number(1608), Object::Number(1652)]);
    let list104 = vm.gc.listn(&[Object::Number(1655), Object::Number(1735), Object::Number(1652)]);
    let list105 = vm.gc.listn(&[Object::Number(1656), Object::Number(1610), Object::Number(1652)]);
    let list106 = vm.gc.listn(&[Object::Number(3635), Object::Number(3661), Object::Number(3634)]);
    let list107 = vm.gc.listn(&[Object::Number(3763), Object::Number(3789), Object::Number(3762)]);
    let list108 = vm.gc.listn(&[Object::Number(3804), Object::Number(3755), Object::Number(3737)]);
    let list109 = vm.gc.listn(&[Object::Number(3805), Object::Number(3755), Object::Number(3745)]);
    let list110 = vm.gc.listn(&[Object::Number(3852), Object::Number(3851)]);
    let list111 = vm.gc.listn(&[Object::Number(3959), Object::Number(4018), Object::Number(3969)]);
    let list112 = vm.gc.listn(&[Object::Number(3961), Object::Number(4019), Object::Number(3969)]);
    let list113 = vm.gc.listn(&[Object::Number(4348), Object::Number(4316)]);
    let list114 = vm.gc.listn(&[Object::Number(7468), Object::Number(65)]);
    let list115 = vm.gc.listn(&[Object::Number(7469), Object::Number(198)]);
    let list116 = vm.gc.listn(&[Object::Number(7470), Object::Number(66)]);
    let list117 = vm.gc.listn(&[Object::Number(7472), Object::Number(68)]);
    let list118 = vm.gc.listn(&[Object::Number(7473), Object::Number(69)]);
    let list119 = vm.gc.listn(&[Object::Number(7474), Object::Number(398)]);
    let list120 = vm.gc.listn(&[Object::Number(7475), Object::Number(71)]);
    let list121 = vm.gc.listn(&[Object::Number(7476), Object::Number(72)]);
    let list122 = vm.gc.listn(&[Object::Number(7477), Object::Number(73)]);
    let list123 = vm.gc.listn(&[Object::Number(7478), Object::Number(74)]);
    let list124 = vm.gc.listn(&[Object::Number(7479), Object::Number(75)]);
    let list125 = vm.gc.listn(&[Object::Number(7480), Object::Number(76)]);
    let list126 = vm.gc.listn(&[Object::Number(7481), Object::Number(77)]);
    let list127 = vm.gc.listn(&[Object::Number(7482), Object::Number(78)]);
    let list128 = vm.gc.listn(&[Object::Number(7484), Object::Number(79)]);
    let list129 = vm.gc.listn(&[Object::Number(7485), Object::Number(546)]);
    let list130 = vm.gc.listn(&[Object::Number(7486), Object::Number(80)]);
    let list131 = vm.gc.listn(&[Object::Number(7487), Object::Number(82)]);
    let list132 = vm.gc.listn(&[Object::Number(7488), Object::Number(84)]);
    let list133 = vm.gc.listn(&[Object::Number(7489), Object::Number(85)]);
    let list134 = vm.gc.listn(&[Object::Number(7490), Object::Number(87)]);
    let list135 = vm.gc.listn(&[Object::Number(7491), Object::Number(97)]);
    let list136 = vm.gc.listn(&[Object::Number(7492), Object::Number(592)]);
    let list137 = vm.gc.listn(&[Object::Number(7493), Object::Number(593)]);
    let list138 = vm.gc.listn(&[Object::Number(7494), Object::Number(7426)]);
    let list139 = vm.gc.listn(&[Object::Number(7495), Object::Number(98)]);
    let list140 = vm.gc.listn(&[Object::Number(7496), Object::Number(100)]);
    let list141 = vm.gc.listn(&[Object::Number(7497), Object::Number(101)]);
    let list142 = vm.gc.listn(&[Object::Number(7498), Object::Number(601)]);
    let list143 = vm.gc.listn(&[Object::Number(7499), Object::Number(603)]);
    let list144 = vm.gc.listn(&[Object::Number(7500), Object::Number(604)]);
    let list145 = vm.gc.listn(&[Object::Number(7501), Object::Number(103)]);
    let list146 = vm.gc.listn(&[Object::Number(7503), Object::Number(107)]);
    let list147 = vm.gc.listn(&[Object::Number(7504), Object::Number(109)]);
    let list148 = vm.gc.listn(&[Object::Number(7505), Object::Number(331)]);
    let list149 = vm.gc.listn(&[Object::Number(7506), Object::Number(111)]);
    let list150 = vm.gc.listn(&[Object::Number(7507), Object::Number(596)]);
    let list151 = vm.gc.listn(&[Object::Number(7508), Object::Number(7446)]);
    let list152 = vm.gc.listn(&[Object::Number(7509), Object::Number(7447)]);
    let list153 = vm.gc.listn(&[Object::Number(7510), Object::Number(112)]);
    let list154 = vm.gc.listn(&[Object::Number(7511), Object::Number(116)]);
    let list155 = vm.gc.listn(&[Object::Number(7512), Object::Number(117)]);
    let list156 = vm.gc.listn(&[Object::Number(7513), Object::Number(7453)]);
    let list157 = vm.gc.listn(&[Object::Number(7514), Object::Number(623)]);
    let list158 = vm.gc.listn(&[Object::Number(7515), Object::Number(118)]);
    let list159 = vm.gc.listn(&[Object::Number(7516), Object::Number(7461)]);
    let list160 = vm.gc.listn(&[Object::Number(7517), Object::Number(946)]);
    let list161 = vm.gc.listn(&[Object::Number(7518), Object::Number(947)]);
    let list162 = vm.gc.listn(&[Object::Number(7519), Object::Number(948)]);
    let list163 = vm.gc.listn(&[Object::Number(7520), Object::Number(966)]);
    let list164 = vm.gc.listn(&[Object::Number(7521), Object::Number(967)]);
    let list165 = vm.gc.listn(&[Object::Number(7522), Object::Number(105)]);
    let list166 = vm.gc.listn(&[Object::Number(7523), Object::Number(114)]);
    let list167 = vm.gc.listn(&[Object::Number(7524), Object::Number(117)]);
    let list168 = vm.gc.listn(&[Object::Number(7525), Object::Number(118)]);
    let list169 = vm.gc.listn(&[Object::Number(7526), Object::Number(946)]);
    let list170 = vm.gc.listn(&[Object::Number(7527), Object::Number(947)]);
    let list171 = vm.gc.listn(&[Object::Number(7528), Object::Number(961)]);
    let list172 = vm.gc.listn(&[Object::Number(7529), Object::Number(966)]);
    let list173 = vm.gc.listn(&[Object::Number(7530), Object::Number(967)]);
    let list174 = vm.gc.listn(&[Object::Number(7544), Object::Number(1085)]);
    let list175 = vm.gc.listn(&[Object::Number(7579), Object::Number(594)]);
    let list176 = vm.gc.listn(&[Object::Number(7580), Object::Number(99)]);
    let list177 = vm.gc.listn(&[Object::Number(7581), Object::Number(597)]);
    let list178 = vm.gc.listn(&[Object::Number(7582), Object::Number(240)]);
    let list179 = vm.gc.listn(&[Object::Number(7583), Object::Number(604)]);
    let list180 = vm.gc.listn(&[Object::Number(7584), Object::Number(102)]);
    let list181 = vm.gc.listn(&[Object::Number(7585), Object::Number(607)]);
    let list182 = vm.gc.listn(&[Object::Number(7586), Object::Number(609)]);
    let list183 = vm.gc.listn(&[Object::Number(7587), Object::Number(613)]);
    let list184 = vm.gc.listn(&[Object::Number(7588), Object::Number(616)]);
    let list185 = vm.gc.listn(&[Object::Number(7589), Object::Number(617)]);
    let list186 = vm.gc.listn(&[Object::Number(7590), Object::Number(618)]);
    let list187 = vm.gc.listn(&[Object::Number(7591), Object::Number(7547)]);
    let list188 = vm.gc.listn(&[Object::Number(7592), Object::Number(669)]);
    let list189 = vm.gc.listn(&[Object::Number(7593), Object::Number(621)]);
    let list190 = vm.gc.listn(&[Object::Number(7594), Object::Number(7557)]);
    let list191 = vm.gc.listn(&[Object::Number(7595), Object::Number(671)]);
    let list192 = vm.gc.listn(&[Object::Number(7596), Object::Number(625)]);
    let list193 = vm.gc.listn(&[Object::Number(7597), Object::Number(624)]);
    let list194 = vm.gc.listn(&[Object::Number(7598), Object::Number(626)]);
    let list195 = vm.gc.listn(&[Object::Number(7599), Object::Number(627)]);
    let list196 = vm.gc.listn(&[Object::Number(7600), Object::Number(628)]);
    let list197 = vm.gc.listn(&[Object::Number(7601), Object::Number(629)]);
    let list198 = vm.gc.listn(&[Object::Number(7602), Object::Number(632)]);
    let list199 = vm.gc.listn(&[Object::Number(7603), Object::Number(642)]);
    let list200 = vm.gc.listn(&[Object::Number(7604), Object::Number(643)]);
    let list201 = vm.gc.listn(&[Object::Number(7605), Object::Number(427)]);
    let list202 = vm.gc.listn(&[Object::Number(7606), Object::Number(649)]);
    let list203 = vm.gc.listn(&[Object::Number(7607), Object::Number(650)]);
    let list204 = vm.gc.listn(&[Object::Number(7608), Object::Number(7452)]);
    let list205 = vm.gc.listn(&[Object::Number(7609), Object::Number(651)]);
    let list206 = vm.gc.listn(&[Object::Number(7610), Object::Number(652)]);
    let list207 = vm.gc.listn(&[Object::Number(7611), Object::Number(122)]);
    let list208 = vm.gc.listn(&[Object::Number(7612), Object::Number(656)]);
    let list209 = vm.gc.listn(&[Object::Number(7613), Object::Number(657)]);
    let list210 = vm.gc.listn(&[Object::Number(7614), Object::Number(658)]);
    let list211 = vm.gc.listn(&[Object::Number(7615), Object::Number(952)]);
    let list212 = vm.gc.listn(&[Object::Number(7834), Object::Number(97), Object::Number(702)]);
    let list213 = vm.gc.listn(&[Object::Number(8125), Object::Number(32), Object::Number(787)]);
    let list214 = vm.gc.listn(&[Object::Number(8127), Object::Number(32), Object::Number(787)]);
    let list215 = vm.gc.listn(&[Object::Number(8128), Object::Number(32), Object::Number(834)]);
    let list216 = vm.gc.listn(&[Object::Number(8190), Object::Number(32), Object::Number(788)]);
    let list217 = vm.gc.listn(&[Object::Number(8194), Object::Number(32)]);
    let list218 = vm.gc.listn(&[Object::Number(8195), Object::Number(32)]);
    let list219 = vm.gc.listn(&[Object::Number(8196), Object::Number(32)]);
    let list220 = vm.gc.listn(&[Object::Number(8197), Object::Number(32)]);
    let list221 = vm.gc.listn(&[Object::Number(8198), Object::Number(32)]);
    let list222 = vm.gc.listn(&[Object::Number(8199), Object::Number(32)]);
    let list223 = vm.gc.listn(&[Object::Number(8200), Object::Number(32)]);
    let list224 = vm.gc.listn(&[Object::Number(8201), Object::Number(32)]);
    let list225 = vm.gc.listn(&[Object::Number(8202), Object::Number(32)]);
    let list226 = vm.gc.listn(&[Object::Number(8209), Object::Number(8208)]);
    let list227 = vm.gc.listn(&[Object::Number(8215), Object::Number(32), Object::Number(819)]);
    let list228 = vm.gc.listn(&[Object::Number(8228), Object::Number(46)]);
    let list229 = vm.gc.listn(&[Object::Number(8229), Object::Number(46), Object::Number(46)]);
    let list230 = vm.gc.listn(&[Object::Number(8230), Object::Number(46), Object::Number(46), Object::Number(46)]);
    let list231 = vm.gc.listn(&[Object::Number(8239), Object::Number(32)]);
    let list232 = vm.gc.listn(&[Object::Number(8243), Object::Number(8242), Object::Number(8242)]);
    let list233 = vm.gc.listn(&[Object::Number(8244), Object::Number(8242), Object::Number(8242), Object::Number(8242)]);
    let list234 = vm.gc.listn(&[Object::Number(8246), Object::Number(8245), Object::Number(8245)]);
    let list235 = vm.gc.listn(&[Object::Number(8247), Object::Number(8245), Object::Number(8245), Object::Number(8245)]);
    let list236 = vm.gc.listn(&[Object::Number(8252), Object::Number(33), Object::Number(33)]);
    let list237 = vm.gc.listn(&[Object::Number(8254), Object::Number(32), Object::Number(773)]);
    let list238 = vm.gc.listn(&[Object::Number(8263), Object::Number(63), Object::Number(63)]);
    let list239 = vm.gc.listn(&[Object::Number(8264), Object::Number(63), Object::Number(33)]);
    let list240 = vm.gc.listn(&[Object::Number(8265), Object::Number(33), Object::Number(63)]);
    let list241 = vm.gc.listn(&[Object::Number(8279), Object::Number(8242), Object::Number(8242), Object::Number(8242), Object::Number(8242)]);
    let list242 = vm.gc.listn(&[Object::Number(8287), Object::Number(32)]);
    let list243 = vm.gc.listn(&[Object::Number(8304), Object::Number(48)]);
    let list244 = vm.gc.listn(&[Object::Number(8305), Object::Number(105)]);
    let list245 = vm.gc.listn(&[Object::Number(8308), Object::Number(52)]);
    let list246 = vm.gc.listn(&[Object::Number(8309), Object::Number(53)]);
    let list247 = vm.gc.listn(&[Object::Number(8310), Object::Number(54)]);
    let list248 = vm.gc.listn(&[Object::Number(8311), Object::Number(55)]);
    let list249 = vm.gc.listn(&[Object::Number(8312), Object::Number(56)]);
    let list250 = vm.gc.listn(&[Object::Number(8313), Object::Number(57)]);
    let list251 = vm.gc.listn(&[Object::Number(8314), Object::Number(43)]);
    let list252 = vm.gc.listn(&[Object::Number(8315), Object::Number(8722)]);
    let list253 = vm.gc.listn(&[Object::Number(8316), Object::Number(61)]);
    let list254 = vm.gc.listn(&[Object::Number(8317), Object::Number(40)]);
    let list255 = vm.gc.listn(&[Object::Number(8318), Object::Number(41)]);
    let list256 = vm.gc.listn(&[Object::Number(8319), Object::Number(110)]);
    let list257 = vm.gc.listn(&[Object::Number(8320), Object::Number(48)]);
    let list258 = vm.gc.listn(&[Object::Number(8321), Object::Number(49)]);
    let list259 = vm.gc.listn(&[Object::Number(8322), Object::Number(50)]);
    let list260 = vm.gc.listn(&[Object::Number(8323), Object::Number(51)]);
    let list261 = vm.gc.listn(&[Object::Number(8324), Object::Number(52)]);
    let list262 = vm.gc.listn(&[Object::Number(8325), Object::Number(53)]);
    let list263 = vm.gc.listn(&[Object::Number(8326), Object::Number(54)]);
    let list264 = vm.gc.listn(&[Object::Number(8327), Object::Number(55)]);
    let list265 = vm.gc.listn(&[Object::Number(8328), Object::Number(56)]);
    let list266 = vm.gc.listn(&[Object::Number(8329), Object::Number(57)]);
    let list267 = vm.gc.listn(&[Object::Number(8330), Object::Number(43)]);
    let list268 = vm.gc.listn(&[Object::Number(8331), Object::Number(8722)]);
    let list269 = vm.gc.listn(&[Object::Number(8332), Object::Number(61)]);
    let list270 = vm.gc.listn(&[Object::Number(8333), Object::Number(40)]);
    let list271 = vm.gc.listn(&[Object::Number(8334), Object::Number(41)]);
    let list272 = vm.gc.listn(&[Object::Number(8336), Object::Number(97)]);
    let list273 = vm.gc.listn(&[Object::Number(8337), Object::Number(101)]);
    let list274 = vm.gc.listn(&[Object::Number(8338), Object::Number(111)]);
    let list275 = vm.gc.listn(&[Object::Number(8339), Object::Number(120)]);
    let list276 = vm.gc.listn(&[Object::Number(8340), Object::Number(601)]);
    let list277 = vm.gc.listn(&[Object::Number(8360), Object::Number(82), Object::Number(115)]);
    let list278 = vm.gc.listn(&[Object::Number(8448), Object::Number(97), Object::Number(47), Object::Number(99)]);
    let list279 = vm.gc.listn(&[Object::Number(8449), Object::Number(97), Object::Number(47), Object::Number(115)]);
    let list280 = vm.gc.listn(&[Object::Number(8450), Object::Number(67)]);
    let list281 = vm.gc.listn(&[Object::Number(8451), Object::Number(176), Object::Number(67)]);
    let list282 = vm.gc.listn(&[Object::Number(8453), Object::Number(99), Object::Number(47), Object::Number(111)]);
    let list283 = vm.gc.listn(&[Object::Number(8454), Object::Number(99), Object::Number(47), Object::Number(117)]);
    let list284 = vm.gc.listn(&[Object::Number(8455), Object::Number(400)]);
    let list285 = vm.gc.listn(&[Object::Number(8457), Object::Number(176), Object::Number(70)]);
    let list286 = vm.gc.listn(&[Object::Number(8458), Object::Number(103)]);
    let list287 = vm.gc.listn(&[Object::Number(8459), Object::Number(72)]);
    let list288 = vm.gc.listn(&[Object::Number(8460), Object::Number(72)]);
    let list289 = vm.gc.listn(&[Object::Number(8461), Object::Number(72)]);
    let list290 = vm.gc.listn(&[Object::Number(8462), Object::Number(104)]);
    let list291 = vm.gc.listn(&[Object::Number(8463), Object::Number(295)]);
    let list292 = vm.gc.listn(&[Object::Number(8464), Object::Number(73)]);
    let list293 = vm.gc.listn(&[Object::Number(8465), Object::Number(73)]);
    let list294 = vm.gc.listn(&[Object::Number(8466), Object::Number(76)]);
    let list295 = vm.gc.listn(&[Object::Number(8467), Object::Number(108)]);
    let list296 = vm.gc.listn(&[Object::Number(8469), Object::Number(78)]);
    let list297 = vm.gc.listn(&[Object::Number(8470), Object::Number(78), Object::Number(111)]);
    let list298 = vm.gc.listn(&[Object::Number(8473), Object::Number(80)]);
    let list299 = vm.gc.listn(&[Object::Number(8474), Object::Number(81)]);
    let list300 = vm.gc.listn(&[Object::Number(8475), Object::Number(82)]);
    let list301 = vm.gc.listn(&[Object::Number(8476), Object::Number(82)]);
    let list302 = vm.gc.listn(&[Object::Number(8477), Object::Number(82)]);
    let list303 = vm.gc.listn(&[Object::Number(8480), Object::Number(83), Object::Number(77)]);
    let list304 = vm.gc.listn(&[Object::Number(8481), Object::Number(84), Object::Number(69), Object::Number(76)]);
    let list305 = vm.gc.listn(&[Object::Number(8482), Object::Number(84), Object::Number(77)]);
    let list306 = vm.gc.listn(&[Object::Number(8484), Object::Number(90)]);
    let list307 = vm.gc.listn(&[Object::Number(8488), Object::Number(90)]);
    let list308 = vm.gc.listn(&[Object::Number(8492), Object::Number(66)]);
    let list309 = vm.gc.listn(&[Object::Number(8493), Object::Number(67)]);
    let list310 = vm.gc.listn(&[Object::Number(8495), Object::Number(101)]);
    let list311 = vm.gc.listn(&[Object::Number(8496), Object::Number(69)]);
    let list312 = vm.gc.listn(&[Object::Number(8497), Object::Number(70)]);
    let list313 = vm.gc.listn(&[Object::Number(8499), Object::Number(77)]);
    let list314 = vm.gc.listn(&[Object::Number(8500), Object::Number(111)]);
    let list315 = vm.gc.listn(&[Object::Number(8501), Object::Number(1488)]);
    let list316 = vm.gc.listn(&[Object::Number(8502), Object::Number(1489)]);
    let list317 = vm.gc.listn(&[Object::Number(8503), Object::Number(1490)]);
    let list318 = vm.gc.listn(&[Object::Number(8504), Object::Number(1491)]);
    let list319 = vm.gc.listn(&[Object::Number(8505), Object::Number(105)]);
    let list320 = vm.gc.listn(&[Object::Number(8507), Object::Number(70), Object::Number(65), Object::Number(88)]);
    let list321 = vm.gc.listn(&[Object::Number(8508), Object::Number(960)]);
    let list322 = vm.gc.listn(&[Object::Number(8509), Object::Number(947)]);
    let list323 = vm.gc.listn(&[Object::Number(8510), Object::Number(915)]);
    let list324 = vm.gc.listn(&[Object::Number(8511), Object::Number(928)]);
    let list325 = vm.gc.listn(&[Object::Number(8512), Object::Number(8721)]);
    let list326 = vm.gc.listn(&[Object::Number(8517), Object::Number(68)]);
    let list327 = vm.gc.listn(&[Object::Number(8518), Object::Number(100)]);
    let list328 = vm.gc.listn(&[Object::Number(8519), Object::Number(101)]);
    let list329 = vm.gc.listn(&[Object::Number(8520), Object::Number(105)]);
    let list330 = vm.gc.listn(&[Object::Number(8521), Object::Number(106)]);
    let list331 = vm.gc.listn(&[Object::Number(8531), Object::Number(49), Object::Number(8260), Object::Number(51)]);
    let list332 = vm.gc.listn(&[Object::Number(8532), Object::Number(50), Object::Number(8260), Object::Number(51)]);
    let list333 = vm.gc.listn(&[Object::Number(8533), Object::Number(49), Object::Number(8260), Object::Number(53)]);
    let list334 = vm.gc.listn(&[Object::Number(8534), Object::Number(50), Object::Number(8260), Object::Number(53)]);
    let list335 = vm.gc.listn(&[Object::Number(8535), Object::Number(51), Object::Number(8260), Object::Number(53)]);
    let list336 = vm.gc.listn(&[Object::Number(8536), Object::Number(52), Object::Number(8260), Object::Number(53)]);
    let list337 = vm.gc.listn(&[Object::Number(8537), Object::Number(49), Object::Number(8260), Object::Number(54)]);
    let list338 = vm.gc.listn(&[Object::Number(8538), Object::Number(53), Object::Number(8260), Object::Number(54)]);
    let list339 = vm.gc.listn(&[Object::Number(8539), Object::Number(49), Object::Number(8260), Object::Number(56)]);
    let list340 = vm.gc.listn(&[Object::Number(8540), Object::Number(51), Object::Number(8260), Object::Number(56)]);
    let list341 = vm.gc.listn(&[Object::Number(8541), Object::Number(53), Object::Number(8260), Object::Number(56)]);
    let list342 = vm.gc.listn(&[Object::Number(8542), Object::Number(55), Object::Number(8260), Object::Number(56)]);
    let list343 = vm.gc.listn(&[Object::Number(8543), Object::Number(49), Object::Number(8260)]);
    let list344 = vm.gc.listn(&[Object::Number(8544), Object::Number(73)]);
    let list345 = vm.gc.listn(&[Object::Number(8545), Object::Number(73), Object::Number(73)]);
    let list346 = vm.gc.listn(&[Object::Number(8546), Object::Number(73), Object::Number(73), Object::Number(73)]);
    let list347 = vm.gc.listn(&[Object::Number(8547), Object::Number(73), Object::Number(86)]);
    let list348 = vm.gc.listn(&[Object::Number(8548), Object::Number(86)]);
    let list349 = vm.gc.listn(&[Object::Number(8549), Object::Number(86), Object::Number(73)]);
    let list350 = vm.gc.listn(&[Object::Number(8550), Object::Number(86), Object::Number(73), Object::Number(73)]);
    let list351 = vm.gc.listn(&[Object::Number(8551), Object::Number(86), Object::Number(73), Object::Number(73), Object::Number(73)]);
    let list352 = vm.gc.listn(&[Object::Number(8552), Object::Number(73), Object::Number(88)]);
    let list353 = vm.gc.listn(&[Object::Number(8553), Object::Number(88)]);
    let list354 = vm.gc.listn(&[Object::Number(8554), Object::Number(88), Object::Number(73)]);
    let list355 = vm.gc.listn(&[Object::Number(8555), Object::Number(88), Object::Number(73), Object::Number(73)]);
    let list356 = vm.gc.listn(&[Object::Number(8556), Object::Number(76)]);
    let list357 = vm.gc.listn(&[Object::Number(8557), Object::Number(67)]);
    let list358 = vm.gc.listn(&[Object::Number(8558), Object::Number(68)]);
    let list359 = vm.gc.listn(&[Object::Number(8559), Object::Number(77)]);
    let list360 = vm.gc.listn(&[Object::Number(8560), Object::Number(105)]);
    let list361 = vm.gc.listn(&[Object::Number(8561), Object::Number(105), Object::Number(105)]);
    let list362 = vm.gc.listn(&[Object::Number(8562), Object::Number(105), Object::Number(105), Object::Number(105)]);
    let list363 = vm.gc.listn(&[Object::Number(8563), Object::Number(105), Object::Number(118)]);
    let list364 = vm.gc.listn(&[Object::Number(8564), Object::Number(118)]);
    let list365 = vm.gc.listn(&[Object::Number(8565), Object::Number(118), Object::Number(105)]);
    let list366 = vm.gc.listn(&[Object::Number(8566), Object::Number(118), Object::Number(105), Object::Number(105)]);
    let list367 = vm.gc.listn(&[Object::Number(8567), Object::Number(118), Object::Number(105), Object::Number(105), Object::Number(105)]);
    let list368 = vm.gc.listn(&[Object::Number(8568), Object::Number(105), Object::Number(120)]);
    let list369 = vm.gc.listn(&[Object::Number(8569), Object::Number(120)]);
    let list370 = vm.gc.listn(&[Object::Number(8570), Object::Number(120), Object::Number(105)]);
    let list371 = vm.gc.listn(&[Object::Number(8571), Object::Number(120), Object::Number(105), Object::Number(105)]);
    let list372 = vm.gc.listn(&[Object::Number(8572), Object::Number(108)]);
    let list373 = vm.gc.listn(&[Object::Number(8573), Object::Number(99)]);
    let list374 = vm.gc.listn(&[Object::Number(8574), Object::Number(100)]);
    let list375 = vm.gc.listn(&[Object::Number(8575), Object::Number(109)]);
    let list376 = vm.gc.listn(&[Object::Number(8748), Object::Number(8747), Object::Number(8747)]);
    let list377 = vm.gc.listn(&[Object::Number(8749), Object::Number(8747), Object::Number(8747), Object::Number(8747)]);
    let list378 = vm.gc.listn(&[Object::Number(8751), Object::Number(8750), Object::Number(8750)]);
    let list379 = vm.gc.listn(&[Object::Number(8752), Object::Number(8750), Object::Number(8750), Object::Number(8750)]);
    let list380 = vm.gc.listn(&[Object::Number(9312), Object::Number(49)]);
    let list381 = vm.gc.listn(&[Object::Number(9313), Object::Number(50)]);
    let list382 = vm.gc.listn(&[Object::Number(9314), Object::Number(51)]);
    let list383 = vm.gc.listn(&[Object::Number(9315), Object::Number(52)]);
    let list384 = vm.gc.listn(&[Object::Number(9316), Object::Number(53)]);
    let list385 = vm.gc.listn(&[Object::Number(9317), Object::Number(54)]);
    let list386 = vm.gc.listn(&[Object::Number(9318), Object::Number(55)]);
    let list387 = vm.gc.listn(&[Object::Number(9319), Object::Number(56)]);
    let list388 = vm.gc.listn(&[Object::Number(9320), Object::Number(57)]);
    let list389 = vm.gc.listn(&[Object::Number(9321), Object::Number(49), Object::Number(48)]);
    let list390 = vm.gc.listn(&[Object::Number(9322), Object::Number(49), Object::Number(49)]);
    let list391 = vm.gc.listn(&[Object::Number(9323), Object::Number(49), Object::Number(50)]);
    let list392 = vm.gc.listn(&[Object::Number(9324), Object::Number(49), Object::Number(51)]);
    let list393 = vm.gc.listn(&[Object::Number(9325), Object::Number(49), Object::Number(52)]);
    let list394 = vm.gc.listn(&[Object::Number(9326), Object::Number(49), Object::Number(53)]);
    let list395 = vm.gc.listn(&[Object::Number(9327), Object::Number(49), Object::Number(54)]);
    let list396 = vm.gc.listn(&[Object::Number(9328), Object::Number(49), Object::Number(55)]);
    let list397 = vm.gc.listn(&[Object::Number(9329), Object::Number(49), Object::Number(56)]);
    let list398 = vm.gc.listn(&[Object::Number(9330), Object::Number(49), Object::Number(57)]);
    let list399 = vm.gc.listn(&[Object::Number(9331), Object::Number(50), Object::Number(48)]);
    let list400 = vm.gc.listn(&[Object::Number(9332), Object::Number(40), Object::Number(49), Object::Number(41)]);
    let list401 = vm.gc.listn(&[Object::Number(9333), Object::Number(40), Object::Number(50), Object::Number(41)]);
    let list402 = vm.gc.listn(&[Object::Number(9334), Object::Number(40), Object::Number(51), Object::Number(41)]);
    let list403 = vm.gc.listn(&[Object::Number(9335), Object::Number(40), Object::Number(52), Object::Number(41)]);
    let list404 = vm.gc.listn(&[Object::Number(9336), Object::Number(40), Object::Number(53), Object::Number(41)]);
    let list405 = vm.gc.listn(&[Object::Number(9337), Object::Number(40), Object::Number(54), Object::Number(41)]);
    let list406 = vm.gc.listn(&[Object::Number(9338), Object::Number(40), Object::Number(55), Object::Number(41)]);
    let list407 = vm.gc.listn(&[Object::Number(9339), Object::Number(40), Object::Number(56), Object::Number(41)]);
    let list408 = vm.gc.listn(&[Object::Number(9340), Object::Number(40), Object::Number(57), Object::Number(41)]);
    let list409 = vm.gc.listn(&[Object::Number(9341), Object::Number(40), Object::Number(49), Object::Number(48), Object::Number(41)]);
    let list410 = vm.gc.listn(&[Object::Number(9342), Object::Number(40), Object::Number(49), Object::Number(49), Object::Number(41)]);
    let list411 = vm.gc.listn(&[Object::Number(9343), Object::Number(40), Object::Number(49), Object::Number(50), Object::Number(41)]);
    let list412 = vm.gc.listn(&[Object::Number(9344), Object::Number(40), Object::Number(49), Object::Number(51), Object::Number(41)]);
    let list413 = vm.gc.listn(&[Object::Number(9345), Object::Number(40), Object::Number(49), Object::Number(52), Object::Number(41)]);
    let list414 = vm.gc.listn(&[Object::Number(9346), Object::Number(40), Object::Number(49), Object::Number(53), Object::Number(41)]);
    let list415 = vm.gc.listn(&[Object::Number(9347), Object::Number(40), Object::Number(49), Object::Number(54), Object::Number(41)]);
    let list416 = vm.gc.listn(&[Object::Number(9348), Object::Number(40), Object::Number(49), Object::Number(55), Object::Number(41)]);
    let list417 = vm.gc.listn(&[Object::Number(9349), Object::Number(40), Object::Number(49), Object::Number(56), Object::Number(41)]);
    let list418 = vm.gc.listn(&[Object::Number(9350), Object::Number(40), Object::Number(49), Object::Number(57), Object::Number(41)]);
    let list419 = vm.gc.listn(&[Object::Number(9351), Object::Number(40), Object::Number(50), Object::Number(48), Object::Number(41)]);
    let list420 = vm.gc.listn(&[Object::Number(9352), Object::Number(49), Object::Number(46)]);
    let list421 = vm.gc.listn(&[Object::Number(9353), Object::Number(50), Object::Number(46)]);
    let list422 = vm.gc.listn(&[Object::Number(9354), Object::Number(51), Object::Number(46)]);
    let list423 = vm.gc.listn(&[Object::Number(9355), Object::Number(52), Object::Number(46)]);
    let list424 = vm.gc.listn(&[Object::Number(9356), Object::Number(53), Object::Number(46)]);
    let list425 = vm.gc.listn(&[Object::Number(9357), Object::Number(54), Object::Number(46)]);
    let list426 = vm.gc.listn(&[Object::Number(9358), Object::Number(55), Object::Number(46)]);
    let list427 = vm.gc.listn(&[Object::Number(9359), Object::Number(56), Object::Number(46)]);
    let list428 = vm.gc.listn(&[Object::Number(9360), Object::Number(57), Object::Number(46)]);
    let list429 = vm.gc.listn(&[Object::Number(9361), Object::Number(49), Object::Number(48), Object::Number(46)]);
    let list430 = vm.gc.listn(&[Object::Number(9362), Object::Number(49), Object::Number(49), Object::Number(46)]);
    let list431 = vm.gc.listn(&[Object::Number(9363), Object::Number(49), Object::Number(50), Object::Number(46)]);
    let list432 = vm.gc.listn(&[Object::Number(9364), Object::Number(49), Object::Number(51), Object::Number(46)]);
    let list433 = vm.gc.listn(&[Object::Number(9365), Object::Number(49), Object::Number(52), Object::Number(46)]);
    let list434 = vm.gc.listn(&[Object::Number(9366), Object::Number(49), Object::Number(53), Object::Number(46)]);
    let list435 = vm.gc.listn(&[Object::Number(9367), Object::Number(49), Object::Number(54), Object::Number(46)]);
    let list436 = vm.gc.listn(&[Object::Number(9368), Object::Number(49), Object::Number(55), Object::Number(46)]);
    let list437 = vm.gc.listn(&[Object::Number(9369), Object::Number(49), Object::Number(56), Object::Number(46)]);
    let list438 = vm.gc.listn(&[Object::Number(9370), Object::Number(49), Object::Number(57), Object::Number(46)]);
    let list439 = vm.gc.listn(&[Object::Number(9371), Object::Number(50), Object::Number(48), Object::Number(46)]);
    let list440 = vm.gc.listn(&[Object::Number(9372), Object::Number(40), Object::Number(97), Object::Number(41)]);
    let list441 = vm.gc.listn(&[Object::Number(9373), Object::Number(40), Object::Number(98), Object::Number(41)]);
    let list442 = vm.gc.listn(&[Object::Number(9374), Object::Number(40), Object::Number(99), Object::Number(41)]);
    let list443 = vm.gc.listn(&[Object::Number(9375), Object::Number(40), Object::Number(100), Object::Number(41)]);
    let list444 = vm.gc.listn(&[Object::Number(9376), Object::Number(40), Object::Number(101), Object::Number(41)]);
    let list445 = vm.gc.listn(&[Object::Number(9377), Object::Number(40), Object::Number(102), Object::Number(41)]);
    let list446 = vm.gc.listn(&[Object::Number(9378), Object::Number(40), Object::Number(103), Object::Number(41)]);
    let list447 = vm.gc.listn(&[Object::Number(9379), Object::Number(40), Object::Number(104), Object::Number(41)]);
    let list448 = vm.gc.listn(&[Object::Number(9380), Object::Number(40), Object::Number(105), Object::Number(41)]);
    let list449 = vm.gc.listn(&[Object::Number(9381), Object::Number(40), Object::Number(106), Object::Number(41)]);
    let list450 = vm.gc.listn(&[Object::Number(9382), Object::Number(40), Object::Number(107), Object::Number(41)]);
    let list451 = vm.gc.listn(&[Object::Number(9383), Object::Number(40), Object::Number(108), Object::Number(41)]);
    let list452 = vm.gc.listn(&[Object::Number(9384), Object::Number(40), Object::Number(109), Object::Number(41)]);
    let list453 = vm.gc.listn(&[Object::Number(9385), Object::Number(40), Object::Number(110), Object::Number(41)]);
    let list454 = vm.gc.listn(&[Object::Number(9386), Object::Number(40), Object::Number(111), Object::Number(41)]);
    let list455 = vm.gc.listn(&[Object::Number(9387), Object::Number(40), Object::Number(112), Object::Number(41)]);
    let list456 = vm.gc.listn(&[Object::Number(9388), Object::Number(40), Object::Number(113), Object::Number(41)]);
    let list457 = vm.gc.listn(&[Object::Number(9389), Object::Number(40), Object::Number(114), Object::Number(41)]);
    let list458 = vm.gc.listn(&[Object::Number(9390), Object::Number(40), Object::Number(115), Object::Number(41)]);
    let list459 = vm.gc.listn(&[Object::Number(9391), Object::Number(40), Object::Number(116), Object::Number(41)]);
    let list460 = vm.gc.listn(&[Object::Number(9392), Object::Number(40), Object::Number(117), Object::Number(41)]);
    let list461 = vm.gc.listn(&[Object::Number(9393), Object::Number(40), Object::Number(118), Object::Number(41)]);
    let list462 = vm.gc.listn(&[Object::Number(9394), Object::Number(40), Object::Number(119), Object::Number(41)]);
    let list463 = vm.gc.listn(&[Object::Number(9395), Object::Number(40), Object::Number(120), Object::Number(41)]);
    let list464 = vm.gc.listn(&[Object::Number(9396), Object::Number(40), Object::Number(121), Object::Number(41)]);
    let list465 = vm.gc.listn(&[Object::Number(9397), Object::Number(40), Object::Number(122), Object::Number(41)]);
    let list466 = vm.gc.listn(&[Object::Number(9398), Object::Number(65)]);
    let list467 = vm.gc.listn(&[Object::Number(9399), Object::Number(66)]);
    let list468 = vm.gc.listn(&[Object::Number(9400), Object::Number(67)]);
    let list469 = vm.gc.listn(&[Object::Number(9401), Object::Number(68)]);
    let list470 = vm.gc.listn(&[Object::Number(9402), Object::Number(69)]);
    let list471 = vm.gc.listn(&[Object::Number(9403), Object::Number(70)]);
    let list472 = vm.gc.listn(&[Object::Number(9404), Object::Number(71)]);
    let list473 = vm.gc.listn(&[Object::Number(9405), Object::Number(72)]);
    let list474 = vm.gc.listn(&[Object::Number(9406), Object::Number(73)]);
    let list475 = vm.gc.listn(&[Object::Number(9407), Object::Number(74)]);
    let list476 = vm.gc.listn(&[Object::Number(9408), Object::Number(75)]);
    let list477 = vm.gc.listn(&[Object::Number(9409), Object::Number(76)]);
    let list478 = vm.gc.listn(&[Object::Number(9410), Object::Number(77)]);
    let list479 = vm.gc.listn(&[Object::Number(9411), Object::Number(78)]);
    let list480 = vm.gc.listn(&[Object::Number(9412), Object::Number(79)]);
    let list481 = vm.gc.listn(&[Object::Number(9413), Object::Number(80)]);
    let list482 = vm.gc.listn(&[Object::Number(9414), Object::Number(81)]);
    let list483 = vm.gc.listn(&[Object::Number(9415), Object::Number(82)]);
    let list484 = vm.gc.listn(&[Object::Number(9416), Object::Number(83)]);
    let list485 = vm.gc.listn(&[Object::Number(9417), Object::Number(84)]);
    let list486 = vm.gc.listn(&[Object::Number(9418), Object::Number(85)]);
    let list487 = vm.gc.listn(&[Object::Number(9419), Object::Number(86)]);
    let list488 = vm.gc.listn(&[Object::Number(9420), Object::Number(87)]);
    let list489 = vm.gc.listn(&[Object::Number(9421), Object::Number(88)]);
    let list490 = vm.gc.listn(&[Object::Number(9422), Object::Number(89)]);
    let list491 = vm.gc.listn(&[Object::Number(9423), Object::Number(90)]);
    let list492 = vm.gc.listn(&[Object::Number(9424), Object::Number(97)]);
    let list493 = vm.gc.listn(&[Object::Number(9425), Object::Number(98)]);
    let list494 = vm.gc.listn(&[Object::Number(9426), Object::Number(99)]);
    let list495 = vm.gc.listn(&[Object::Number(9427), Object::Number(100)]);
    let list496 = vm.gc.listn(&[Object::Number(9428), Object::Number(101)]);
    let list497 = vm.gc.listn(&[Object::Number(9429), Object::Number(102)]);
    let list498 = vm.gc.listn(&[Object::Number(9430), Object::Number(103)]);
    let list499 = vm.gc.listn(&[Object::Number(9431), Object::Number(104)]);
    let list500 = vm.gc.listn(&[Object::Number(9432), Object::Number(105)]);
    let list501 = vm.gc.listn(&[Object::Number(9433), Object::Number(106)]);
    let list502 = vm.gc.listn(&[Object::Number(9434), Object::Number(107)]);
    let list503 = vm.gc.listn(&[Object::Number(9435), Object::Number(108)]);
    let list504 = vm.gc.listn(&[Object::Number(9436), Object::Number(109)]);
    let list505 = vm.gc.listn(&[Object::Number(9437), Object::Number(110)]);
    let list506 = vm.gc.listn(&[Object::Number(9438), Object::Number(111)]);
    let list507 = vm.gc.listn(&[Object::Number(9439), Object::Number(112)]);
    let list508 = vm.gc.listn(&[Object::Number(9440), Object::Number(113)]);
    let list509 = vm.gc.listn(&[Object::Number(9441), Object::Number(114)]);
    let list510 = vm.gc.listn(&[Object::Number(9442), Object::Number(115)]);
    let list511 = vm.gc.listn(&[Object::Number(9443), Object::Number(116)]);
    let list512 = vm.gc.listn(&[Object::Number(9444), Object::Number(117)]);
    let list513 = vm.gc.listn(&[Object::Number(9445), Object::Number(118)]);
    let list514 = vm.gc.listn(&[Object::Number(9446), Object::Number(119)]);
    let list515 = vm.gc.listn(&[Object::Number(9447), Object::Number(120)]);
    let list516 = vm.gc.listn(&[Object::Number(9448), Object::Number(121)]);
    let list517 = vm.gc.listn(&[Object::Number(9449), Object::Number(122)]);
    let list518 = vm.gc.listn(&[Object::Number(9450), Object::Number(48)]);
    let list519 = vm.gc.listn(&[Object::Number(10764), Object::Number(8747), Object::Number(8747), Object::Number(8747), Object::Number(8747)]);
    let list520 = vm.gc.listn(&[Object::Number(10868), Object::Number(58), Object::Number(58), Object::Number(61)]);
    let list521 = vm.gc.listn(&[Object::Number(10869), Object::Number(61), Object::Number(61)]);
    let list522 = vm.gc.listn(&[Object::Number(10870), Object::Number(61), Object::Number(61), Object::Number(61)]);
    let list523 = vm.gc.listn(&[Object::Number(11388), Object::Number(106)]);
    let list524 = vm.gc.listn(&[Object::Number(11389), Object::Number(86)]);
    let list525 = vm.gc.listn(&[Object::Number(11631), Object::Number(11617)]);
    let list526 = vm.gc.listn(&[Object::Number(11935), Object::Number(27597)]);
    let list527 = vm.gc.listn(&[Object::Number(12019), Object::Number(40863)]);
    let list528 = vm.gc.listn(&[Object::Number(12032), Object::Number(19968)]);
    let list529 = vm.gc.listn(&[Object::Number(12033), Object::Number(20008)]);
    let list530 = vm.gc.listn(&[Object::Number(12034), Object::Number(20022)]);
    let list531 = vm.gc.listn(&[Object::Number(12035), Object::Number(20031)]);
    let list532 = vm.gc.listn(&[Object::Number(12036), Object::Number(20057)]);
    let list533 = vm.gc.listn(&[Object::Number(12037), Object::Number(20101)]);
    let list534 = vm.gc.listn(&[Object::Number(12038), Object::Number(20108)]);
    let list535 = vm.gc.listn(&[Object::Number(12039), Object::Number(20128)]);
    let list536 = vm.gc.listn(&[Object::Number(12040), Object::Number(20154)]);
    let list537 = vm.gc.listn(&[Object::Number(12041), Object::Number(20799)]);
    let list538 = vm.gc.listn(&[Object::Number(12042), Object::Number(20837)]);
    let list539 = vm.gc.listn(&[Object::Number(12043), Object::Number(20843)]);
    let list540 = vm.gc.listn(&[Object::Number(12044), Object::Number(20866)]);
    let list541 = vm.gc.listn(&[Object::Number(12045), Object::Number(20886)]);
    let list542 = vm.gc.listn(&[Object::Number(12046), Object::Number(20907)]);
    let list543 = vm.gc.listn(&[Object::Number(12047), Object::Number(20960)]);
    let list544 = vm.gc.listn(&[Object::Number(12048), Object::Number(20981)]);
    let list545 = vm.gc.listn(&[Object::Number(12049), Object::Number(20992)]);
    let list546 = vm.gc.listn(&[Object::Number(12050), Object::Number(21147)]);
    let list547 = vm.gc.listn(&[Object::Number(12051), Object::Number(21241)]);
    let list548 = vm.gc.listn(&[Object::Number(12052), Object::Number(21269)]);
    let list549 = vm.gc.listn(&[Object::Number(12053), Object::Number(21274)]);
    let list550 = vm.gc.listn(&[Object::Number(12054), Object::Number(21304)]);
    let list551 = vm.gc.listn(&[Object::Number(12055), Object::Number(21313)]);
    let list552 = vm.gc.listn(&[Object::Number(12056), Object::Number(21340)]);
    let list553 = vm.gc.listn(&[Object::Number(12057), Object::Number(21353)]);
    let list554 = vm.gc.listn(&[Object::Number(12058), Object::Number(21378)]);
    let list555 = vm.gc.listn(&[Object::Number(12059), Object::Number(21430)]);
    let list556 = vm.gc.listn(&[Object::Number(12060), Object::Number(21448)]);
    let list557 = vm.gc.listn(&[Object::Number(12061), Object::Number(21475)]);
    let list558 = vm.gc.listn(&[Object::Number(12062), Object::Number(22231)]);
    let list559 = vm.gc.listn(&[Object::Number(12063), Object::Number(22303)]);
    let list560 = vm.gc.listn(&[Object::Number(12064), Object::Number(22763)]);
    let list561 = vm.gc.listn(&[Object::Number(12065), Object::Number(22786)]);
    let list562 = vm.gc.listn(&[Object::Number(12066), Object::Number(22794)]);
    let list563 = vm.gc.listn(&[Object::Number(12067), Object::Number(22805)]);
    let list564 = vm.gc.listn(&[Object::Number(12068), Object::Number(22823)]);
    let list565 = vm.gc.listn(&[Object::Number(12069), Object::Number(22899)]);
    let list566 = vm.gc.listn(&[Object::Number(12070), Object::Number(23376)]);
    let list567 = vm.gc.listn(&[Object::Number(12071), Object::Number(23424)]);
    let list568 = vm.gc.listn(&[Object::Number(12072), Object::Number(23544)]);
    let list569 = vm.gc.listn(&[Object::Number(12073), Object::Number(23567)]);
    let list570 = vm.gc.listn(&[Object::Number(12074), Object::Number(23586)]);
    let list571 = vm.gc.listn(&[Object::Number(12075), Object::Number(23608)]);
    let list572 = vm.gc.listn(&[Object::Number(12076), Object::Number(23662)]);
    let list573 = vm.gc.listn(&[Object::Number(12077), Object::Number(23665)]);
    let list574 = vm.gc.listn(&[Object::Number(12078), Object::Number(24027)]);
    let list575 = vm.gc.listn(&[Object::Number(12079), Object::Number(24037)]);
    let list576 = vm.gc.listn(&[Object::Number(12080), Object::Number(24049)]);
    let list577 = vm.gc.listn(&[Object::Number(12081), Object::Number(24062)]);
    let list578 = vm.gc.listn(&[Object::Number(12082), Object::Number(24178)]);
    let list579 = vm.gc.listn(&[Object::Number(12083), Object::Number(24186)]);
    let list580 = vm.gc.listn(&[Object::Number(12084), Object::Number(24191)]);
    let list581 = vm.gc.listn(&[Object::Number(12085), Object::Number(24308)]);
    let list582 = vm.gc.listn(&[Object::Number(12086), Object::Number(24318)]);
    let list583 = vm.gc.listn(&[Object::Number(12087), Object::Number(24331)]);
    let list584 = vm.gc.listn(&[Object::Number(12088), Object::Number(24339)]);
    let list585 = vm.gc.listn(&[Object::Number(12089), Object::Number(24400)]);
    let list586 = vm.gc.listn(&[Object::Number(12090), Object::Number(24417)]);
    let list587 = vm.gc.listn(&[Object::Number(12091), Object::Number(24435)]);
    let list588 = vm.gc.listn(&[Object::Number(12092), Object::Number(24515)]);
    let list589 = vm.gc.listn(&[Object::Number(12093), Object::Number(25096)]);
    let list590 = vm.gc.listn(&[Object::Number(12094), Object::Number(25142)]);
    let list591 = vm.gc.listn(&[Object::Number(12095), Object::Number(25163)]);
    let list592 = vm.gc.listn(&[Object::Number(12096), Object::Number(25903)]);
    let list593 = vm.gc.listn(&[Object::Number(12097), Object::Number(25908)]);
    let list594 = vm.gc.listn(&[Object::Number(12098), Object::Number(25991)]);
    let list595 = vm.gc.listn(&[Object::Number(12099), Object::Number(26007)]);
    let list596 = vm.gc.listn(&[Object::Number(12100), Object::Number(26020)]);
    let list597 = vm.gc.listn(&[Object::Number(12101), Object::Number(26041)]);
    let list598 = vm.gc.listn(&[Object::Number(12102), Object::Number(26080)]);
    let list599 = vm.gc.listn(&[Object::Number(12103), Object::Number(26085)]);
    let list600 = vm.gc.listn(&[Object::Number(12104), Object::Number(26352)]);
    let list601 = vm.gc.listn(&[Object::Number(12105), Object::Number(26376)]);
    let list602 = vm.gc.listn(&[Object::Number(12106), Object::Number(26408)]);
    let list603 = vm.gc.listn(&[Object::Number(12107), Object::Number(27424)]);
    let list604 = vm.gc.listn(&[Object::Number(12108), Object::Number(27490)]);
    let list605 = vm.gc.listn(&[Object::Number(12109), Object::Number(27513)]);
    let list606 = vm.gc.listn(&[Object::Number(12110), Object::Number(27571)]);
    let list607 = vm.gc.listn(&[Object::Number(12111), Object::Number(27595)]);
    let list608 = vm.gc.listn(&[Object::Number(12112), Object::Number(27604)]);
    let list609 = vm.gc.listn(&[Object::Number(12113), Object::Number(27611)]);
    let list610 = vm.gc.listn(&[Object::Number(12114), Object::Number(27663)]);
    let list611 = vm.gc.listn(&[Object::Number(12115), Object::Number(27668)]);
    let list612 = vm.gc.listn(&[Object::Number(12116), Object::Number(27700)]);
    let list613 = vm.gc.listn(&[Object::Number(12117), Object::Number(28779)]);
    let list614 = vm.gc.listn(&[Object::Number(12118), Object::Number(29226)]);
    let list615 = vm.gc.listn(&[Object::Number(12119), Object::Number(29238)]);
    let list616 = vm.gc.listn(&[Object::Number(12120), Object::Number(29243)]);
    let list617 = vm.gc.listn(&[Object::Number(12121), Object::Number(29247)]);
    let list618 = vm.gc.listn(&[Object::Number(12122), Object::Number(29255)]);
    let list619 = vm.gc.listn(&[Object::Number(12123), Object::Number(29273)]);
    let list620 = vm.gc.listn(&[Object::Number(12124), Object::Number(29275)]);
    let list621 = vm.gc.listn(&[Object::Number(12125), Object::Number(29356)]);
    let list622 = vm.gc.listn(&[Object::Number(12126), Object::Number(29572)]);
    let list623 = vm.gc.listn(&[Object::Number(12127), Object::Number(29577)]);
    let list624 = vm.gc.listn(&[Object::Number(12128), Object::Number(29916)]);
    let list625 = vm.gc.listn(&[Object::Number(12129), Object::Number(29926)]);
    let list626 = vm.gc.listn(&[Object::Number(12130), Object::Number(29976)]);
    let list627 = vm.gc.listn(&[Object::Number(12131), Object::Number(29983)]);
    let list628 = vm.gc.listn(&[Object::Number(12132), Object::Number(29992)]);
    let list629 = vm.gc.listn(&[Object::Number(12133), Object::Number(30000)]);
    let list630 = vm.gc.listn(&[Object::Number(12134), Object::Number(30091)]);
    let list631 = vm.gc.listn(&[Object::Number(12135), Object::Number(30098)]);
    let list632 = vm.gc.listn(&[Object::Number(12136), Object::Number(30326)]);
    let list633 = vm.gc.listn(&[Object::Number(12137), Object::Number(30333)]);
    let list634 = vm.gc.listn(&[Object::Number(12138), Object::Number(30382)]);
    let list635 = vm.gc.listn(&[Object::Number(12139), Object::Number(30399)]);
    let list636 = vm.gc.listn(&[Object::Number(12140), Object::Number(30446)]);
    let list637 = vm.gc.listn(&[Object::Number(12141), Object::Number(30683)]);
    let list638 = vm.gc.listn(&[Object::Number(12142), Object::Number(30690)]);
    let list639 = vm.gc.listn(&[Object::Number(12143), Object::Number(30707)]);
    let list640 = vm.gc.listn(&[Object::Number(12144), Object::Number(31034)]);
    let list641 = vm.gc.listn(&[Object::Number(12145), Object::Number(31160)]);
    let list642 = vm.gc.listn(&[Object::Number(12146), Object::Number(31166)]);
    let list643 = vm.gc.listn(&[Object::Number(12147), Object::Number(31348)]);
    let list644 = vm.gc.listn(&[Object::Number(12148), Object::Number(31435)]);
    let list645 = vm.gc.listn(&[Object::Number(12149), Object::Number(31481)]);
    let list646 = vm.gc.listn(&[Object::Number(12150), Object::Number(31859)]);
    let list647 = vm.gc.listn(&[Object::Number(12151), Object::Number(31992)]);
    let list648 = vm.gc.listn(&[Object::Number(12152), Object::Number(32566)]);
    let list649 = vm.gc.listn(&[Object::Number(12153), Object::Number(32593)]);
    let list650 = vm.gc.listn(&[Object::Number(12154), Object::Number(32650)]);
    let list651 = vm.gc.listn(&[Object::Number(12155), Object::Number(32701)]);
    let list652 = vm.gc.listn(&[Object::Number(12156), Object::Number(32769)]);
    let list653 = vm.gc.listn(&[Object::Number(12157), Object::Number(32780)]);
    let list654 = vm.gc.listn(&[Object::Number(12158), Object::Number(32786)]);
    let list655 = vm.gc.listn(&[Object::Number(12159), Object::Number(32819)]);
    let list656 = vm.gc.listn(&[Object::Number(12160), Object::Number(32895)]);
    let list657 = vm.gc.listn(&[Object::Number(12161), Object::Number(32905)]);
    let list658 = vm.gc.listn(&[Object::Number(12162), Object::Number(33251)]);
    let list659 = vm.gc.listn(&[Object::Number(12163), Object::Number(33258)]);
    let list660 = vm.gc.listn(&[Object::Number(12164), Object::Number(33267)]);
    let list661 = vm.gc.listn(&[Object::Number(12165), Object::Number(33276)]);
    let list662 = vm.gc.listn(&[Object::Number(12166), Object::Number(33292)]);
    let list663 = vm.gc.listn(&[Object::Number(12167), Object::Number(33307)]);
    let list664 = vm.gc.listn(&[Object::Number(12168), Object::Number(33311)]);
    let list665 = vm.gc.listn(&[Object::Number(12169), Object::Number(33390)]);
    let list666 = vm.gc.listn(&[Object::Number(12170), Object::Number(33394)]);
    let list667 = vm.gc.listn(&[Object::Number(12171), Object::Number(33400)]);
    let list668 = vm.gc.listn(&[Object::Number(12172), Object::Number(34381)]);
    let list669 = vm.gc.listn(&[Object::Number(12173), Object::Number(34411)]);
    let list670 = vm.gc.listn(&[Object::Number(12174), Object::Number(34880)]);
    let list671 = vm.gc.listn(&[Object::Number(12175), Object::Number(34892)]);
    let list672 = vm.gc.listn(&[Object::Number(12176), Object::Number(34915)]);
    let list673 = vm.gc.listn(&[Object::Number(12177), Object::Number(35198)]);
    let list674 = vm.gc.listn(&[Object::Number(12178), Object::Number(35211)]);
    let list675 = vm.gc.listn(&[Object::Number(12179), Object::Number(35282)]);
    let list676 = vm.gc.listn(&[Object::Number(12180), Object::Number(35328)]);
    let list677 = vm.gc.listn(&[Object::Number(12181), Object::Number(35895)]);
    let list678 = vm.gc.listn(&[Object::Number(12182), Object::Number(35910)]);
    let list679 = vm.gc.listn(&[Object::Number(12183), Object::Number(35925)]);
    let list680 = vm.gc.listn(&[Object::Number(12184), Object::Number(35960)]);
    let list681 = vm.gc.listn(&[Object::Number(12185), Object::Number(35997)]);
    let list682 = vm.gc.listn(&[Object::Number(12186), Object::Number(36196)]);
    let list683 = vm.gc.listn(&[Object::Number(12187), Object::Number(36208)]);
    let list684 = vm.gc.listn(&[Object::Number(12188), Object::Number(36275)]);
    let list685 = vm.gc.listn(&[Object::Number(12189), Object::Number(36523)]);
    let list686 = vm.gc.listn(&[Object::Number(12190), Object::Number(36554)]);
    let list687 = vm.gc.listn(&[Object::Number(12191), Object::Number(36763)]);
    let list688 = vm.gc.listn(&[Object::Number(12192), Object::Number(36784)]);
    let list689 = vm.gc.listn(&[Object::Number(12193), Object::Number(36789)]);
    let list690 = vm.gc.listn(&[Object::Number(12194), Object::Number(37009)]);
    let list691 = vm.gc.listn(&[Object::Number(12195), Object::Number(37193)]);
    let list692 = vm.gc.listn(&[Object::Number(12196), Object::Number(37318)]);
    let list693 = vm.gc.listn(&[Object::Number(12197), Object::Number(37324)]);
    let list694 = vm.gc.listn(&[Object::Number(12198), Object::Number(37329)]);
    let list695 = vm.gc.listn(&[Object::Number(12199), Object::Number(38263)]);
    let list696 = vm.gc.listn(&[Object::Number(12200), Object::Number(38272)]);
    let list697 = vm.gc.listn(&[Object::Number(12201), Object::Number(38428)]);
    let list698 = vm.gc.listn(&[Object::Number(12202), Object::Number(38582)]);
    let list699 = vm.gc.listn(&[Object::Number(12203), Object::Number(38585)]);
    let list700 = vm.gc.listn(&[Object::Number(12204), Object::Number(38632)]);
    let list701 = vm.gc.listn(&[Object::Number(12205), Object::Number(38737)]);
    let list702 = vm.gc.listn(&[Object::Number(12206), Object::Number(38750)]);
    let list703 = vm.gc.listn(&[Object::Number(12207), Object::Number(38754)]);
    let list704 = vm.gc.listn(&[Object::Number(12208), Object::Number(38761)]);
    let list705 = vm.gc.listn(&[Object::Number(12209), Object::Number(38859)]);
    let list706 = vm.gc.listn(&[Object::Number(12210), Object::Number(38893)]);
    let list707 = vm.gc.listn(&[Object::Number(12211), Object::Number(38899)]);
    let list708 = vm.gc.listn(&[Object::Number(12212), Object::Number(38913)]);
    let list709 = vm.gc.listn(&[Object::Number(12213), Object::Number(39080)]);
    let list710 = vm.gc.listn(&[Object::Number(12214), Object::Number(39131)]);
    let list711 = vm.gc.listn(&[Object::Number(12215), Object::Number(39135)]);
    let list712 = vm.gc.listn(&[Object::Number(12216), Object::Number(39318)]);
    let list713 = vm.gc.listn(&[Object::Number(12217), Object::Number(39321)]);
    let list714 = vm.gc.listn(&[Object::Number(12218), Object::Number(39340)]);
    let list715 = vm.gc.listn(&[Object::Number(12219), Object::Number(39592)]);
    let list716 = vm.gc.listn(&[Object::Number(12220), Object::Number(39640)]);
    let list717 = vm.gc.listn(&[Object::Number(12221), Object::Number(39647)]);
    let list718 = vm.gc.listn(&[Object::Number(12222), Object::Number(39717)]);
    let list719 = vm.gc.listn(&[Object::Number(12223), Object::Number(39727)]);
    let list720 = vm.gc.listn(&[Object::Number(12224), Object::Number(39730)]);
    let list721 = vm.gc.listn(&[Object::Number(12225), Object::Number(39740)]);
    let list722 = vm.gc.listn(&[Object::Number(12226), Object::Number(39770)]);
    let list723 = vm.gc.listn(&[Object::Number(12227), Object::Number(40165)]);
    let list724 = vm.gc.listn(&[Object::Number(12228), Object::Number(40565)]);
    let list725 = vm.gc.listn(&[Object::Number(12229), Object::Number(40575)]);
    let list726 = vm.gc.listn(&[Object::Number(12230), Object::Number(40613)]);
    let list727 = vm.gc.listn(&[Object::Number(12231), Object::Number(40635)]);
    let list728 = vm.gc.listn(&[Object::Number(12232), Object::Number(40643)]);
    let list729 = vm.gc.listn(&[Object::Number(12233), Object::Number(40653)]);
    let list730 = vm.gc.listn(&[Object::Number(12234), Object::Number(40657)]);
    let list731 = vm.gc.listn(&[Object::Number(12235), Object::Number(40697)]);
    let list732 = vm.gc.listn(&[Object::Number(12236), Object::Number(40701)]);
    let list733 = vm.gc.listn(&[Object::Number(12237), Object::Number(40718)]);
    let list734 = vm.gc.listn(&[Object::Number(12238), Object::Number(40723)]);
    let list735 = vm.gc.listn(&[Object::Number(12239), Object::Number(40736)]);
    let list736 = vm.gc.listn(&[Object::Number(12240), Object::Number(40763)]);
    let list737 = vm.gc.listn(&[Object::Number(12241), Object::Number(40778)]);
    let list738 = vm.gc.listn(&[Object::Number(12242), Object::Number(40786)]);
    let list739 = vm.gc.listn(&[Object::Number(12243), Object::Number(40845)]);
    let list740 = vm.gc.listn(&[Object::Number(12244), Object::Number(40860)]);
    let list741 = vm.gc.listn(&[Object::Number(12245), Object::Number(40864)]);
    let list742 = vm.gc.listn(&[Object::Number(12288), Object::Number(32)]);
    let list743 = vm.gc.listn(&[Object::Number(12342), Object::Number(12306)]);
    let list744 = vm.gc.listn(&[Object::Number(12344), Object::Number(21313)]);
    let list745 = vm.gc.listn(&[Object::Number(12345), Object::Number(21316)]);
    let list746 = vm.gc.listn(&[Object::Number(12346), Object::Number(21317)]);
    let list747 = vm.gc.listn(&[Object::Number(12443), Object::Number(32), Object::Number(12441)]);
    let list748 = vm.gc.listn(&[Object::Number(12444), Object::Number(32), Object::Number(12442)]);
    let list749 = vm.gc.listn(&[Object::Number(12447), Object::Number(12424), Object::Number(12426)]);
    let list750 = vm.gc.listn(&[Object::Number(12543), Object::Number(12467), Object::Number(12488)]);
    let list751 = vm.gc.listn(&[Object::Number(12593), Object::Number(4352)]);
    let list752 = vm.gc.listn(&[Object::Number(12594), Object::Number(4353)]);
    let list753 = vm.gc.listn(&[Object::Number(12595), Object::Number(4522)]);
    let list754 = vm.gc.listn(&[Object::Number(12596), Object::Number(4354)]);
    let list755 = vm.gc.listn(&[Object::Number(12597), Object::Number(4524)]);
    let list756 = vm.gc.listn(&[Object::Number(12598), Object::Number(4525)]);
    let list757 = vm.gc.listn(&[Object::Number(12599), Object::Number(4355)]);
    let list758 = vm.gc.listn(&[Object::Number(12600), Object::Number(4356)]);
    let list759 = vm.gc.listn(&[Object::Number(12601), Object::Number(4357)]);
    let list760 = vm.gc.listn(&[Object::Number(12602), Object::Number(4528)]);
    let list761 = vm.gc.listn(&[Object::Number(12603), Object::Number(4529)]);
    let list762 = vm.gc.listn(&[Object::Number(12604), Object::Number(4530)]);
    let list763 = vm.gc.listn(&[Object::Number(12605), Object::Number(4531)]);
    let list764 = vm.gc.listn(&[Object::Number(12606), Object::Number(4532)]);
    let list765 = vm.gc.listn(&[Object::Number(12607), Object::Number(4533)]);
    let list766 = vm.gc.listn(&[Object::Number(12608), Object::Number(4378)]);
    let list767 = vm.gc.listn(&[Object::Number(12609), Object::Number(4358)]);
    let list768 = vm.gc.listn(&[Object::Number(12610), Object::Number(4359)]);
    let list769 = vm.gc.listn(&[Object::Number(12611), Object::Number(4360)]);
    let list770 = vm.gc.listn(&[Object::Number(12612), Object::Number(4385)]);
    let list771 = vm.gc.listn(&[Object::Number(12613), Object::Number(4361)]);
    let list772 = vm.gc.listn(&[Object::Number(12614), Object::Number(4362)]);
    let list773 = vm.gc.listn(&[Object::Number(12615), Object::Number(4363)]);
    let list774 = vm.gc.listn(&[Object::Number(12616), Object::Number(4364)]);
    let list775 = vm.gc.listn(&[Object::Number(12617), Object::Number(4365)]);
    let list776 = vm.gc.listn(&[Object::Number(12618), Object::Number(4366)]);
    let list777 = vm.gc.listn(&[Object::Number(12619), Object::Number(4367)]);
    let list778 = vm.gc.listn(&[Object::Number(12620), Object::Number(4368)]);
    let list779 = vm.gc.listn(&[Object::Number(12621), Object::Number(4369)]);
    let list780 = vm.gc.listn(&[Object::Number(12622), Object::Number(4370)]);
    let list781 = vm.gc.listn(&[Object::Number(12623), Object::Number(4449)]);
    let list782 = vm.gc.listn(&[Object::Number(12624), Object::Number(4450)]);
    let list783 = vm.gc.listn(&[Object::Number(12625), Object::Number(4451)]);
    let list784 = vm.gc.listn(&[Object::Number(12626), Object::Number(4452)]);
    let list785 = vm.gc.listn(&[Object::Number(12627), Object::Number(4453)]);
    let list786 = vm.gc.listn(&[Object::Number(12628), Object::Number(4454)]);
    let list787 = vm.gc.listn(&[Object::Number(12629), Object::Number(4455)]);
    let list788 = vm.gc.listn(&[Object::Number(12630), Object::Number(4456)]);
    let list789 = vm.gc.listn(&[Object::Number(12631), Object::Number(4457)]);
    let list790 = vm.gc.listn(&[Object::Number(12632), Object::Number(4458)]);
    let list791 = vm.gc.listn(&[Object::Number(12633), Object::Number(4459)]);
    let list792 = vm.gc.listn(&[Object::Number(12634), Object::Number(4460)]);
    let list793 = vm.gc.listn(&[Object::Number(12635), Object::Number(4461)]);
    let list794 = vm.gc.listn(&[Object::Number(12636), Object::Number(4462)]);
    let list795 = vm.gc.listn(&[Object::Number(12637), Object::Number(4463)]);
    let list796 = vm.gc.listn(&[Object::Number(12638), Object::Number(4464)]);
    let list797 = vm.gc.listn(&[Object::Number(12639), Object::Number(4465)]);
    let list798 = vm.gc.listn(&[Object::Number(12640), Object::Number(4466)]);
    let list799 = vm.gc.listn(&[Object::Number(12641), Object::Number(4467)]);
    let list800 = vm.gc.listn(&[Object::Number(12642), Object::Number(4468)]);
    let list801 = vm.gc.listn(&[Object::Number(12643), Object::Number(4469)]);
    let list802 = vm.gc.listn(&[Object::Number(12644), Object::Number(4448)]);
    let list803 = vm.gc.listn(&[Object::Number(12645), Object::Number(4372)]);
    let list804 = vm.gc.listn(&[Object::Number(12646), Object::Number(4373)]);
    let list805 = vm.gc.listn(&[Object::Number(12647), Object::Number(4551)]);
    let list806 = vm.gc.listn(&[Object::Number(12648), Object::Number(4552)]);
    let list807 = vm.gc.listn(&[Object::Number(12649), Object::Number(4556)]);
    let list808 = vm.gc.listn(&[Object::Number(12650), Object::Number(4558)]);
    let list809 = vm.gc.listn(&[Object::Number(12651), Object::Number(4563)]);
    let list810 = vm.gc.listn(&[Object::Number(12652), Object::Number(4567)]);
    let list811 = vm.gc.listn(&[Object::Number(12653), Object::Number(4569)]);
    let list812 = vm.gc.listn(&[Object::Number(12654), Object::Number(4380)]);
    let list813 = vm.gc.listn(&[Object::Number(12655), Object::Number(4573)]);
    let list814 = vm.gc.listn(&[Object::Number(12656), Object::Number(4575)]);
    let list815 = vm.gc.listn(&[Object::Number(12657), Object::Number(4381)]);
    let list816 = vm.gc.listn(&[Object::Number(12658), Object::Number(4382)]);
    let list817 = vm.gc.listn(&[Object::Number(12659), Object::Number(4384)]);
    let list818 = vm.gc.listn(&[Object::Number(12660), Object::Number(4386)]);
    let list819 = vm.gc.listn(&[Object::Number(12661), Object::Number(4387)]);
    let list820 = vm.gc.listn(&[Object::Number(12662), Object::Number(4391)]);
    let list821 = vm.gc.listn(&[Object::Number(12663), Object::Number(4393)]);
    let list822 = vm.gc.listn(&[Object::Number(12664), Object::Number(4395)]);
    let list823 = vm.gc.listn(&[Object::Number(12665), Object::Number(4396)]);
    let list824 = vm.gc.listn(&[Object::Number(12666), Object::Number(4397)]);
    let list825 = vm.gc.listn(&[Object::Number(12667), Object::Number(4398)]);
    let list826 = vm.gc.listn(&[Object::Number(12668), Object::Number(4399)]);
    let list827 = vm.gc.listn(&[Object::Number(12669), Object::Number(4402)]);
    let list828 = vm.gc.listn(&[Object::Number(12670), Object::Number(4406)]);
    let list829 = vm.gc.listn(&[Object::Number(12671), Object::Number(4416)]);
    let list830 = vm.gc.listn(&[Object::Number(12672), Object::Number(4423)]);
    let list831 = vm.gc.listn(&[Object::Number(12673), Object::Number(4428)]);
    let list832 = vm.gc.listn(&[Object::Number(12674), Object::Number(4593)]);
    let list833 = vm.gc.listn(&[Object::Number(12675), Object::Number(4594)]);
    let list834 = vm.gc.listn(&[Object::Number(12676), Object::Number(4439)]);
    let list835 = vm.gc.listn(&[Object::Number(12677), Object::Number(4440)]);
    let list836 = vm.gc.listn(&[Object::Number(12678), Object::Number(4441)]);
    let list837 = vm.gc.listn(&[Object::Number(12679), Object::Number(4484)]);
    let list838 = vm.gc.listn(&[Object::Number(12680), Object::Number(4485)]);
    let list839 = vm.gc.listn(&[Object::Number(12681), Object::Number(4488)]);
    let list840 = vm.gc.listn(&[Object::Number(12682), Object::Number(4497)]);
    let list841 = vm.gc.listn(&[Object::Number(12683), Object::Number(4498)]);
    let list842 = vm.gc.listn(&[Object::Number(12684), Object::Number(4500)]);
    let list843 = vm.gc.listn(&[Object::Number(12685), Object::Number(4510)]);
    let list844 = vm.gc.listn(&[Object::Number(12686), Object::Number(4513)]);
    let list845 = vm.gc.listn(&[Object::Number(12690), Object::Number(19968)]);
    let list846 = vm.gc.listn(&[Object::Number(12691), Object::Number(20108)]);
    let list847 = vm.gc.listn(&[Object::Number(12692), Object::Number(19977)]);
    let list848 = vm.gc.listn(&[Object::Number(12693), Object::Number(22235)]);
    let list849 = vm.gc.listn(&[Object::Number(12694), Object::Number(19978)]);
    let list850 = vm.gc.listn(&[Object::Number(12695), Object::Number(20013)]);
    let list851 = vm.gc.listn(&[Object::Number(12696), Object::Number(19979)]);
    let list852 = vm.gc.listn(&[Object::Number(12697), Object::Number(30002)]);
    let list853 = vm.gc.listn(&[Object::Number(12698), Object::Number(20057)]);
    let list854 = vm.gc.listn(&[Object::Number(12699), Object::Number(19993)]);
    let list855 = vm.gc.listn(&[Object::Number(12700), Object::Number(19969)]);
    let list856 = vm.gc.listn(&[Object::Number(12701), Object::Number(22825)]);
    let list857 = vm.gc.listn(&[Object::Number(12702), Object::Number(22320)]);
    let list858 = vm.gc.listn(&[Object::Number(12703), Object::Number(20154)]);
    let list859 = vm.gc.listn(&[Object::Number(12800), Object::Number(40), Object::Number(4352), Object::Number(41)]);
    let list860 = vm.gc.listn(&[Object::Number(12801), Object::Number(40), Object::Number(4354), Object::Number(41)]);
    let list861 = vm.gc.listn(&[Object::Number(12802), Object::Number(40), Object::Number(4355), Object::Number(41)]);
    let list862 = vm.gc.listn(&[Object::Number(12803), Object::Number(40), Object::Number(4357), Object::Number(41)]);
    let list863 = vm.gc.listn(&[Object::Number(12804), Object::Number(40), Object::Number(4358), Object::Number(41)]);
    let list864 = vm.gc.listn(&[Object::Number(12805), Object::Number(40), Object::Number(4359), Object::Number(41)]);
    let list865 = vm.gc.listn(&[Object::Number(12806), Object::Number(40), Object::Number(4361), Object::Number(41)]);
    let list866 = vm.gc.listn(&[Object::Number(12807), Object::Number(40), Object::Number(4363), Object::Number(41)]);
    let list867 = vm.gc.listn(&[Object::Number(12808), Object::Number(40), Object::Number(4364), Object::Number(41)]);
    let list868 = vm.gc.listn(&[Object::Number(12809), Object::Number(40), Object::Number(4366), Object::Number(41)]);
    let list869 = vm.gc.listn(&[Object::Number(12810), Object::Number(40), Object::Number(4367), Object::Number(41)]);
    let list870 = vm.gc.listn(&[Object::Number(12811), Object::Number(40), Object::Number(4368), Object::Number(41)]);
    let list871 = vm.gc.listn(&[Object::Number(12812), Object::Number(40), Object::Number(4369), Object::Number(41)]);
    let list872 = vm.gc.listn(&[Object::Number(12813), Object::Number(40), Object::Number(4370), Object::Number(41)]);
    let list873 = vm.gc.listn(&[Object::Number(12814), Object::Number(40), Object::Number(4352), Object::Number(4449), Object::Number(41)]);
    let list874 = vm.gc.listn(&[Object::Number(12815), Object::Number(40), Object::Number(4354), Object::Number(4449), Object::Number(41)]);
    let list875 = vm.gc.listn(&[Object::Number(12816), Object::Number(40), Object::Number(4355), Object::Number(4449), Object::Number(41)]);
    let list876 = vm.gc.listn(&[Object::Number(12817), Object::Number(40), Object::Number(4357), Object::Number(4449), Object::Number(41)]);
    let list877 = vm.gc.listn(&[Object::Number(12818), Object::Number(40), Object::Number(4358), Object::Number(4449), Object::Number(41)]);
    let list878 = vm.gc.listn(&[Object::Number(12819), Object::Number(40), Object::Number(4359), Object::Number(4449), Object::Number(41)]);
    let list879 = vm.gc.listn(&[Object::Number(12820), Object::Number(40), Object::Number(4361), Object::Number(4449), Object::Number(41)]);
    let list880 = vm.gc.listn(&[Object::Number(12821), Object::Number(40), Object::Number(4363), Object::Number(4449), Object::Number(41)]);
    let list881 = vm.gc.listn(&[Object::Number(12822), Object::Number(40), Object::Number(4364), Object::Number(4449), Object::Number(41)]);
    let list882 = vm.gc.listn(&[Object::Number(12823), Object::Number(40), Object::Number(4366), Object::Number(4449), Object::Number(41)]);
    let list883 = vm.gc.listn(&[Object::Number(12824), Object::Number(40), Object::Number(4367), Object::Number(4449), Object::Number(41)]);
    let list884 = vm.gc.listn(&[Object::Number(12825), Object::Number(40), Object::Number(4368), Object::Number(4449), Object::Number(41)]);
    let list885 = vm.gc.listn(&[Object::Number(12826), Object::Number(40), Object::Number(4369), Object::Number(4449), Object::Number(41)]);
    let list886 = vm.gc.listn(&[Object::Number(12827), Object::Number(40), Object::Number(4370), Object::Number(4449), Object::Number(41)]);
    let list887 = vm.gc.listn(&[Object::Number(12828), Object::Number(40), Object::Number(4364), Object::Number(4462), Object::Number(41)]);
    let list888 = vm.gc.listn(&[Object::Number(12829), Object::Number(40), Object::Number(4363), Object::Number(4457), Object::Number(4364), Object::Number(4453), Object::Number(4523), Object::Number(41)]);
    let list889 = vm.gc.listn(&[Object::Number(12830), Object::Number(40), Object::Number(4363), Object::Number(4457), Object::Number(4370), Object::Number(4462), Object::Number(41)]);
    let list890 = vm.gc.listn(&[Object::Number(12832), Object::Number(40), Object::Number(19968), Object::Number(41)]);
    let list891 = vm.gc.listn(&[Object::Number(12833), Object::Number(40), Object::Number(20108), Object::Number(41)]);
    let list892 = vm.gc.listn(&[Object::Number(12834), Object::Number(40), Object::Number(19977), Object::Number(41)]);
    let list893 = vm.gc.listn(&[Object::Number(12835), Object::Number(40), Object::Number(22235), Object::Number(41)]);
    let list894 = vm.gc.listn(&[Object::Number(12836), Object::Number(40), Object::Number(20116), Object::Number(41)]);
    let list895 = vm.gc.listn(&[Object::Number(12837), Object::Number(40), Object::Number(20845), Object::Number(41)]);
    let list896 = vm.gc.listn(&[Object::Number(12838), Object::Number(40), Object::Number(19971), Object::Number(41)]);
    let list897 = vm.gc.listn(&[Object::Number(12839), Object::Number(40), Object::Number(20843), Object::Number(41)]);
    let list898 = vm.gc.listn(&[Object::Number(12840), Object::Number(40), Object::Number(20061), Object::Number(41)]);
    let list899 = vm.gc.listn(&[Object::Number(12841), Object::Number(40), Object::Number(21313), Object::Number(41)]);
    let list900 = vm.gc.listn(&[Object::Number(12842), Object::Number(40), Object::Number(26376), Object::Number(41)]);
    let list901 = vm.gc.listn(&[Object::Number(12843), Object::Number(40), Object::Number(28779), Object::Number(41)]);
    let list902 = vm.gc.listn(&[Object::Number(12844), Object::Number(40), Object::Number(27700), Object::Number(41)]);
    let list903 = vm.gc.listn(&[Object::Number(12845), Object::Number(40), Object::Number(26408), Object::Number(41)]);
    let list904 = vm.gc.listn(&[Object::Number(12846), Object::Number(40), Object::Number(37329), Object::Number(41)]);
    let list905 = vm.gc.listn(&[Object::Number(12847), Object::Number(40), Object::Number(22303), Object::Number(41)]);
    let list906 = vm.gc.listn(&[Object::Number(12848), Object::Number(40), Object::Number(26085), Object::Number(41)]);
    let list907 = vm.gc.listn(&[Object::Number(12849), Object::Number(40), Object::Number(26666), Object::Number(41)]);
    let list908 = vm.gc.listn(&[Object::Number(12850), Object::Number(40), Object::Number(26377), Object::Number(41)]);
    let list909 = vm.gc.listn(&[Object::Number(12851), Object::Number(40), Object::Number(31038), Object::Number(41)]);
    let list910 = vm.gc.listn(&[Object::Number(12852), Object::Number(40), Object::Number(21517), Object::Number(41)]);
    let list911 = vm.gc.listn(&[Object::Number(12853), Object::Number(40), Object::Number(29305), Object::Number(41)]);
    let list912 = vm.gc.listn(&[Object::Number(12854), Object::Number(40), Object::Number(36001), Object::Number(41)]);
    let list913 = vm.gc.listn(&[Object::Number(12855), Object::Number(40), Object::Number(31069), Object::Number(41)]);
    let list914 = vm.gc.listn(&[Object::Number(12856), Object::Number(40), Object::Number(21172), Object::Number(41)]);
    let list915 = vm.gc.listn(&[Object::Number(12857), Object::Number(40), Object::Number(20195), Object::Number(41)]);
    let list916 = vm.gc.listn(&[Object::Number(12858), Object::Number(40), Object::Number(21628), Object::Number(41)]);
    let list917 = vm.gc.listn(&[Object::Number(12859), Object::Number(40), Object::Number(23398), Object::Number(41)]);
    let list918 = vm.gc.listn(&[Object::Number(12860), Object::Number(40), Object::Number(30435), Object::Number(41)]);
    let list919 = vm.gc.listn(&[Object::Number(12861), Object::Number(40), Object::Number(20225), Object::Number(41)]);
    let list920 = vm.gc.listn(&[Object::Number(12862), Object::Number(40), Object::Number(36039), Object::Number(41)]);
    let list921 = vm.gc.listn(&[Object::Number(12863), Object::Number(40), Object::Number(21332), Object::Number(41)]);
    let list922 = vm.gc.listn(&[Object::Number(12864), Object::Number(40), Object::Number(31085), Object::Number(41)]);
    let list923 = vm.gc.listn(&[Object::Number(12865), Object::Number(40), Object::Number(20241), Object::Number(41)]);
    let list924 = vm.gc.listn(&[Object::Number(12866), Object::Number(40), Object::Number(33258), Object::Number(41)]);
    let list925 = vm.gc.listn(&[Object::Number(12867), Object::Number(40), Object::Number(33267), Object::Number(41)]);
    let list926 = vm.gc.listn(&[Object::Number(12880), Object::Number(80), Object::Number(84), Object::Number(69)]);
    let list927 = vm.gc.listn(&[Object::Number(12881), Object::Number(50), Object::Number(49)]);
    let list928 = vm.gc.listn(&[Object::Number(12882), Object::Number(50), Object::Number(50)]);
    let list929 = vm.gc.listn(&[Object::Number(12883), Object::Number(50), Object::Number(51)]);
    let list930 = vm.gc.listn(&[Object::Number(12884), Object::Number(50), Object::Number(52)]);
    let list931 = vm.gc.listn(&[Object::Number(12885), Object::Number(50), Object::Number(53)]);
    let list932 = vm.gc.listn(&[Object::Number(12886), Object::Number(50), Object::Number(54)]);
    let list933 = vm.gc.listn(&[Object::Number(12887), Object::Number(50), Object::Number(55)]);
    let list934 = vm.gc.listn(&[Object::Number(12888), Object::Number(50), Object::Number(56)]);
    let list935 = vm.gc.listn(&[Object::Number(12889), Object::Number(50), Object::Number(57)]);
    let list936 = vm.gc.listn(&[Object::Number(12890), Object::Number(51), Object::Number(48)]);
    let list937 = vm.gc.listn(&[Object::Number(12891), Object::Number(51), Object::Number(49)]);
    let list938 = vm.gc.listn(&[Object::Number(12892), Object::Number(51), Object::Number(50)]);
    let list939 = vm.gc.listn(&[Object::Number(12893), Object::Number(51), Object::Number(51)]);
    let list940 = vm.gc.listn(&[Object::Number(12894), Object::Number(51), Object::Number(52)]);
    let list941 = vm.gc.listn(&[Object::Number(12895), Object::Number(51), Object::Number(53)]);
    let list942 = vm.gc.listn(&[Object::Number(12896), Object::Number(4352)]);
    let list943 = vm.gc.listn(&[Object::Number(12897), Object::Number(4354)]);
    let list944 = vm.gc.listn(&[Object::Number(12898), Object::Number(4355)]);
    let list945 = vm.gc.listn(&[Object::Number(12899), Object::Number(4357)]);
    let list946 = vm.gc.listn(&[Object::Number(12900), Object::Number(4358)]);
    let list947 = vm.gc.listn(&[Object::Number(12901), Object::Number(4359)]);
    let list948 = vm.gc.listn(&[Object::Number(12902), Object::Number(4361)]);
    let list949 = vm.gc.listn(&[Object::Number(12903), Object::Number(4363)]);
    let list950 = vm.gc.listn(&[Object::Number(12904), Object::Number(4364)]);
    let list951 = vm.gc.listn(&[Object::Number(12905), Object::Number(4366)]);
    let list952 = vm.gc.listn(&[Object::Number(12906), Object::Number(4367)]);
    let list953 = vm.gc.listn(&[Object::Number(12907), Object::Number(4368)]);
    let list954 = vm.gc.listn(&[Object::Number(12908), Object::Number(4369)]);
    let list955 = vm.gc.listn(&[Object::Number(12909), Object::Number(4370)]);
    let list956 = vm.gc.listn(&[Object::Number(12910), Object::Number(4352), Object::Number(4449)]);
    let list957 = vm.gc.listn(&[Object::Number(12911), Object::Number(4354), Object::Number(4449)]);
    let list958 = vm.gc.listn(&[Object::Number(12912), Object::Number(4355), Object::Number(4449)]);
    let list959 = vm.gc.listn(&[Object::Number(12913), Object::Number(4357), Object::Number(4449)]);
    let list960 = vm.gc.listn(&[Object::Number(12914), Object::Number(4358), Object::Number(4449)]);
    let list961 = vm.gc.listn(&[Object::Number(12915), Object::Number(4359), Object::Number(4449)]);
    let list962 = vm.gc.listn(&[Object::Number(12916), Object::Number(4361), Object::Number(4449)]);
    let list963 = vm.gc.listn(&[Object::Number(12917), Object::Number(4363), Object::Number(4449)]);
    let list964 = vm.gc.listn(&[Object::Number(12918), Object::Number(4364), Object::Number(4449)]);
    let list965 = vm.gc.listn(&[Object::Number(12919), Object::Number(4366), Object::Number(4449)]);
    let list966 = vm.gc.listn(&[Object::Number(12920), Object::Number(4367), Object::Number(4449)]);
    let list967 = vm.gc.listn(&[Object::Number(12921), Object::Number(4368), Object::Number(4449)]);
    let list968 = vm.gc.listn(&[Object::Number(12922), Object::Number(4369), Object::Number(4449)]);
    let list969 = vm.gc.listn(&[Object::Number(12923), Object::Number(4370), Object::Number(4449)]);
    let list970 = vm.gc.listn(&[Object::Number(12924), Object::Number(4366), Object::Number(4449), Object::Number(4535), Object::Number(4352), Object::Number(4457)]);
    let list971 = vm.gc.listn(&[Object::Number(12925), Object::Number(4364), Object::Number(4462), Object::Number(4363), Object::Number(4468)]);
    let list972 = vm.gc.listn(&[Object::Number(12926), Object::Number(4363), Object::Number(4462)]);
    let list973 = vm.gc.listn(&[Object::Number(12928), Object::Number(19968)]);
    let list974 = vm.gc.listn(&[Object::Number(12929), Object::Number(20108)]);
    let list975 = vm.gc.listn(&[Object::Number(12930), Object::Number(19977)]);
    let list976 = vm.gc.listn(&[Object::Number(12931), Object::Number(22235)]);
    let list977 = vm.gc.listn(&[Object::Number(12932), Object::Number(20116)]);
    let list978 = vm.gc.listn(&[Object::Number(12933), Object::Number(20845)]);
    let list979 = vm.gc.listn(&[Object::Number(12934), Object::Number(19971)]);
    let list980 = vm.gc.listn(&[Object::Number(12935), Object::Number(20843)]);
    let list981 = vm.gc.listn(&[Object::Number(12936), Object::Number(20061)]);
    let list982 = vm.gc.listn(&[Object::Number(12937), Object::Number(21313)]);
    let list983 = vm.gc.listn(&[Object::Number(12938), Object::Number(26376)]);
    let list984 = vm.gc.listn(&[Object::Number(12939), Object::Number(28779)]);
    let list985 = vm.gc.listn(&[Object::Number(12940), Object::Number(27700)]);
    let list986 = vm.gc.listn(&[Object::Number(12941), Object::Number(26408)]);
    let list987 = vm.gc.listn(&[Object::Number(12942), Object::Number(37329)]);
    let list988 = vm.gc.listn(&[Object::Number(12943), Object::Number(22303)]);
    let list989 = vm.gc.listn(&[Object::Number(12944), Object::Number(26085)]);
    let list990 = vm.gc.listn(&[Object::Number(12945), Object::Number(26666)]);
    let list991 = vm.gc.listn(&[Object::Number(12946), Object::Number(26377)]);
    let list992 = vm.gc.listn(&[Object::Number(12947), Object::Number(31038)]);
    let list993 = vm.gc.listn(&[Object::Number(12948), Object::Number(21517)]);
    let list994 = vm.gc.listn(&[Object::Number(12949), Object::Number(29305)]);
    let list995 = vm.gc.listn(&[Object::Number(12950), Object::Number(36001)]);
    let list996 = vm.gc.listn(&[Object::Number(12951), Object::Number(31069)]);
    let list997 = vm.gc.listn(&[Object::Number(12952), Object::Number(21172)]);
    let list998 = vm.gc.listn(&[Object::Number(12953), Object::Number(31192)]);
    let list999 = vm.gc.listn(&[Object::Number(12954), Object::Number(30007)]);
    let list1000 = vm.gc.listn(&[Object::Number(12955), Object::Number(22899)]);
    let list1001 = vm.gc.listn(&[Object::Number(12956), Object::Number(36969)]);
    let list1002 = vm.gc.listn(&[Object::Number(12957), Object::Number(20778)]);
    let list1003 = vm.gc.listn(&[Object::Number(12958), Object::Number(21360)]);
    let list1004 = vm.gc.listn(&[Object::Number(12959), Object::Number(27880)]);
    let list1005 = vm.gc.listn(&[Object::Number(12960), Object::Number(38917)]);
    let list1006 = vm.gc.listn(&[Object::Number(12961), Object::Number(20241)]);
    let list1007 = vm.gc.listn(&[Object::Number(12962), Object::Number(20889)]);
    let list1008 = vm.gc.listn(&[Object::Number(12963), Object::Number(27491)]);
    let list1009 = vm.gc.listn(&[Object::Number(12964), Object::Number(19978)]);
    let list1010 = vm.gc.listn(&[Object::Number(12965), Object::Number(20013)]);
    let list1011 = vm.gc.listn(&[Object::Number(12966), Object::Number(19979)]);
    let list1012 = vm.gc.listn(&[Object::Number(12967), Object::Number(24038)]);
    let list1013 = vm.gc.listn(&[Object::Number(12968), Object::Number(21491)]);
    let list1014 = vm.gc.listn(&[Object::Number(12969), Object::Number(21307)]);
    let list1015 = vm.gc.listn(&[Object::Number(12970), Object::Number(23447)]);
    let list1016 = vm.gc.listn(&[Object::Number(12971), Object::Number(23398)]);
    let list1017 = vm.gc.listn(&[Object::Number(12972), Object::Number(30435)]);
    let list1018 = vm.gc.listn(&[Object::Number(12973), Object::Number(20225)]);
    let list1019 = vm.gc.listn(&[Object::Number(12974), Object::Number(36039)]);
    let list1020 = vm.gc.listn(&[Object::Number(12975), Object::Number(21332)]);
    let list1021 = vm.gc.listn(&[Object::Number(12976), Object::Number(22812)]);
    let list1022 = vm.gc.listn(&[Object::Number(12977), Object::Number(51), Object::Number(54)]);
    let list1023 = vm.gc.listn(&[Object::Number(12978), Object::Number(51), Object::Number(55)]);
    let list1024 = vm.gc.listn(&[Object::Number(12979), Object::Number(51), Object::Number(56)]);
    let list1025 = vm.gc.listn(&[Object::Number(12980), Object::Number(51), Object::Number(57)]);
    let list1026 = vm.gc.listn(&[Object::Number(12981), Object::Number(52), Object::Number(48)]);
    let list1027 = vm.gc.listn(&[Object::Number(12982), Object::Number(52), Object::Number(49)]);
    let list1028 = vm.gc.listn(&[Object::Number(12983), Object::Number(52), Object::Number(50)]);
    let list1029 = vm.gc.listn(&[Object::Number(12984), Object::Number(52), Object::Number(51)]);
    let list1030 = vm.gc.listn(&[Object::Number(12985), Object::Number(52), Object::Number(52)]);
    let list1031 = vm.gc.listn(&[Object::Number(12986), Object::Number(52), Object::Number(53)]);
    let list1032 = vm.gc.listn(&[Object::Number(12987), Object::Number(52), Object::Number(54)]);
    let list1033 = vm.gc.listn(&[Object::Number(12988), Object::Number(52), Object::Number(55)]);
    let list1034 = vm.gc.listn(&[Object::Number(12989), Object::Number(52), Object::Number(56)]);
    let list1035 = vm.gc.listn(&[Object::Number(12990), Object::Number(52), Object::Number(57)]);
    let list1036 = vm.gc.listn(&[Object::Number(12991), Object::Number(53), Object::Number(48)]);
    let list1037 = vm.gc.listn(&[Object::Number(12992), Object::Number(49), Object::Number(26376)]);
    let list1038 = vm.gc.listn(&[Object::Number(12993), Object::Number(50), Object::Number(26376)]);
    let list1039 = vm.gc.listn(&[Object::Number(12994), Object::Number(51), Object::Number(26376)]);
    let list1040 = vm.gc.listn(&[Object::Number(12995), Object::Number(52), Object::Number(26376)]);
    let list1041 = vm.gc.listn(&[Object::Number(12996), Object::Number(53), Object::Number(26376)]);
    let list1042 = vm.gc.listn(&[Object::Number(12997), Object::Number(54), Object::Number(26376)]);
    let list1043 = vm.gc.listn(&[Object::Number(12998), Object::Number(55), Object::Number(26376)]);
    let list1044 = vm.gc.listn(&[Object::Number(12999), Object::Number(56), Object::Number(26376)]);
    let list1045 = vm.gc.listn(&[Object::Number(13000), Object::Number(57), Object::Number(26376)]);
    let list1046 = vm.gc.listn(&[Object::Number(13001), Object::Number(49), Object::Number(48), Object::Number(26376)]);
    let list1047 = vm.gc.listn(&[Object::Number(13002), Object::Number(49), Object::Number(49), Object::Number(26376)]);
    let list1048 = vm.gc.listn(&[Object::Number(13003), Object::Number(49), Object::Number(50), Object::Number(26376)]);
    let list1049 = vm.gc.listn(&[Object::Number(13004), Object::Number(72), Object::Number(103)]);
    let list1050 = vm.gc.listn(&[Object::Number(13005), Object::Number(101), Object::Number(114), Object::Number(103)]);
    let list1051 = vm.gc.listn(&[Object::Number(13006), Object::Number(101), Object::Number(86)]);
    let list1052 = vm.gc.listn(&[Object::Number(13007), Object::Number(76), Object::Number(84), Object::Number(68)]);
    let list1053 = vm.gc.listn(&[Object::Number(13008), Object::Number(12450)]);
    let list1054 = vm.gc.listn(&[Object::Number(13009), Object::Number(12452)]);
    let list1055 = vm.gc.listn(&[Object::Number(13010), Object::Number(12454)]);
    let list1056 = vm.gc.listn(&[Object::Number(13011), Object::Number(12456)]);
    let list1057 = vm.gc.listn(&[Object::Number(13012), Object::Number(12458)]);
    let list1058 = vm.gc.listn(&[Object::Number(13013), Object::Number(12459)]);
    let list1059 = vm.gc.listn(&[Object::Number(13014), Object::Number(12461)]);
    let list1060 = vm.gc.listn(&[Object::Number(13015), Object::Number(12463)]);
    let list1061 = vm.gc.listn(&[Object::Number(13016), Object::Number(12465)]);
    let list1062 = vm.gc.listn(&[Object::Number(13017), Object::Number(12467)]);
    let list1063 = vm.gc.listn(&[Object::Number(13018), Object::Number(12469)]);
    let list1064 = vm.gc.listn(&[Object::Number(13019), Object::Number(12471)]);
    let list1065 = vm.gc.listn(&[Object::Number(13020), Object::Number(12473)]);
    let list1066 = vm.gc.listn(&[Object::Number(13021), Object::Number(12475)]);
    let list1067 = vm.gc.listn(&[Object::Number(13022), Object::Number(12477)]);
    let list1068 = vm.gc.listn(&[Object::Number(13023), Object::Number(12479)]);
    let list1069 = vm.gc.listn(&[Object::Number(13024), Object::Number(12481)]);
    let list1070 = vm.gc.listn(&[Object::Number(13025), Object::Number(12484)]);
    let list1071 = vm.gc.listn(&[Object::Number(13026), Object::Number(12486)]);
    let list1072 = vm.gc.listn(&[Object::Number(13027), Object::Number(12488)]);
    let list1073 = vm.gc.listn(&[Object::Number(13028), Object::Number(12490)]);
    let list1074 = vm.gc.listn(&[Object::Number(13029), Object::Number(12491)]);
    let list1075 = vm.gc.listn(&[Object::Number(13030), Object::Number(12492)]);
    let list1076 = vm.gc.listn(&[Object::Number(13031), Object::Number(12493)]);
    let list1077 = vm.gc.listn(&[Object::Number(13032), Object::Number(12494)]);
    let list1078 = vm.gc.listn(&[Object::Number(13033), Object::Number(12495)]);
    let list1079 = vm.gc.listn(&[Object::Number(13034), Object::Number(12498)]);
    let list1080 = vm.gc.listn(&[Object::Number(13035), Object::Number(12501)]);
    let list1081 = vm.gc.listn(&[Object::Number(13036), Object::Number(12504)]);
    let list1082 = vm.gc.listn(&[Object::Number(13037), Object::Number(12507)]);
    let list1083 = vm.gc.listn(&[Object::Number(13038), Object::Number(12510)]);
    let list1084 = vm.gc.listn(&[Object::Number(13039), Object::Number(12511)]);
    let list1085 = vm.gc.listn(&[Object::Number(13040), Object::Number(12512)]);
    let list1086 = vm.gc.listn(&[Object::Number(13041), Object::Number(12513)]);
    let list1087 = vm.gc.listn(&[Object::Number(13042), Object::Number(12514)]);
    let list1088 = vm.gc.listn(&[Object::Number(13043), Object::Number(12516)]);
    let list1089 = vm.gc.listn(&[Object::Number(13044), Object::Number(12518)]);
    let list1090 = vm.gc.listn(&[Object::Number(13045), Object::Number(12520)]);
    let list1091 = vm.gc.listn(&[Object::Number(13046), Object::Number(12521)]);
    let list1092 = vm.gc.listn(&[Object::Number(13047), Object::Number(12522)]);
    let list1093 = vm.gc.listn(&[Object::Number(13048), Object::Number(12523)]);
    let list1094 = vm.gc.listn(&[Object::Number(13049), Object::Number(12524)]);
    let list1095 = vm.gc.listn(&[Object::Number(13050), Object::Number(12525)]);
    let list1096 = vm.gc.listn(&[Object::Number(13051), Object::Number(12527)]);
    let list1097 = vm.gc.listn(&[Object::Number(13052), Object::Number(12528)]);
    let list1098 = vm.gc.listn(&[Object::Number(13053), Object::Number(12529)]);
    let list1099 = vm.gc.listn(&[Object::Number(13054), Object::Number(12530)]);
    let list1100 = vm.gc.listn(&[Object::Number(13056), Object::Number(12450), Object::Number(12497), Object::Number(12540), Object::Number(12488)]);
    let list1101 = vm.gc.listn(&[Object::Number(13057), Object::Number(12450), Object::Number(12523), Object::Number(12501), Object::Number(12449)]);
    let list1102 = vm.gc.listn(&[Object::Number(13058), Object::Number(12450), Object::Number(12531), Object::Number(12506), Object::Number(12450)]);
    let list1103 = vm.gc.listn(&[Object::Number(13059), Object::Number(12450), Object::Number(12540), Object::Number(12523)]);
    let list1104 = vm.gc.listn(&[Object::Number(13060), Object::Number(12452), Object::Number(12491), Object::Number(12531), Object::Number(12464)]);
    let list1105 = vm.gc.listn(&[Object::Number(13061), Object::Number(12452), Object::Number(12531), Object::Number(12481)]);
    let list1106 = vm.gc.listn(&[Object::Number(13062), Object::Number(12454), Object::Number(12457), Object::Number(12531)]);
    let list1107 = vm.gc.listn(&[Object::Number(13063), Object::Number(12456), Object::Number(12473), Object::Number(12463), Object::Number(12540), Object::Number(12489)]);
    let list1108 = vm.gc.listn(&[Object::Number(13064), Object::Number(12456), Object::Number(12540), Object::Number(12459), Object::Number(12540)]);
    let list1109 = vm.gc.listn(&[Object::Number(13065), Object::Number(12458), Object::Number(12531), Object::Number(12473)]);
    let list1110 = vm.gc.listn(&[Object::Number(13066), Object::Number(12458), Object::Number(12540), Object::Number(12512)]);
    let list1111 = vm.gc.listn(&[Object::Number(13067), Object::Number(12459), Object::Number(12452), Object::Number(12522)]);
    let list1112 = vm.gc.listn(&[Object::Number(13068), Object::Number(12459), Object::Number(12521), Object::Number(12483), Object::Number(12488)]);
    let list1113 = vm.gc.listn(&[Object::Number(13069), Object::Number(12459), Object::Number(12525), Object::Number(12522), Object::Number(12540)]);
    let list1114 = vm.gc.listn(&[Object::Number(13070), Object::Number(12460), Object::Number(12525), Object::Number(12531)]);
    let list1115 = vm.gc.listn(&[Object::Number(13071), Object::Number(12460), Object::Number(12531), Object::Number(12510)]);
    let list1116 = vm.gc.listn(&[Object::Number(13072), Object::Number(12462), Object::Number(12460)]);
    let list1117 = vm.gc.listn(&[Object::Number(13073), Object::Number(12462), Object::Number(12491), Object::Number(12540)]);
    let list1118 = vm.gc.listn(&[Object::Number(13074), Object::Number(12461), Object::Number(12517), Object::Number(12522), Object::Number(12540)]);
    let list1119 = vm.gc.listn(&[Object::Number(13075), Object::Number(12462), Object::Number(12523), Object::Number(12480), Object::Number(12540)]);
    let list1120 = vm.gc.listn(&[Object::Number(13076), Object::Number(12461), Object::Number(12525)]);
    let list1121 = vm.gc.listn(&[Object::Number(13077), Object::Number(12461), Object::Number(12525), Object::Number(12464), Object::Number(12521), Object::Number(12512)]);
    let list1122 = vm.gc.listn(&[Object::Number(13078), Object::Number(12461), Object::Number(12525), Object::Number(12513), Object::Number(12540), Object::Number(12488), Object::Number(12523)]);
    let list1123 = vm.gc.listn(&[Object::Number(13079), Object::Number(12461), Object::Number(12525), Object::Number(12527), Object::Number(12483), Object::Number(12488)]);
    let list1124 = vm.gc.listn(&[Object::Number(13080), Object::Number(12464), Object::Number(12521), Object::Number(12512)]);
    let list1125 = vm.gc.listn(&[Object::Number(13081), Object::Number(12464), Object::Number(12521), Object::Number(12512), Object::Number(12488), Object::Number(12531)]);
    let list1126 = vm.gc.listn(&[Object::Number(13082), Object::Number(12463), Object::Number(12523), Object::Number(12476), Object::Number(12452), Object::Number(12525)]);
    let list1127 = vm.gc.listn(&[Object::Number(13083), Object::Number(12463), Object::Number(12525), Object::Number(12540), Object::Number(12493)]);
    let list1128 = vm.gc.listn(&[Object::Number(13084), Object::Number(12465), Object::Number(12540), Object::Number(12473)]);
    let list1129 = vm.gc.listn(&[Object::Number(13085), Object::Number(12467), Object::Number(12523), Object::Number(12490)]);
    let list1130 = vm.gc.listn(&[Object::Number(13086), Object::Number(12467), Object::Number(12540), Object::Number(12509)]);
    let list1131 = vm.gc.listn(&[Object::Number(13087), Object::Number(12469), Object::Number(12452), Object::Number(12463), Object::Number(12523)]);
    let list1132 = vm.gc.listn(&[Object::Number(13088), Object::Number(12469), Object::Number(12531), Object::Number(12481), Object::Number(12540), Object::Number(12512)]);
    let list1133 = vm.gc.listn(&[Object::Number(13089), Object::Number(12471), Object::Number(12522), Object::Number(12531), Object::Number(12464)]);
    let list1134 = vm.gc.listn(&[Object::Number(13090), Object::Number(12475), Object::Number(12531), Object::Number(12481)]);
    let list1135 = vm.gc.listn(&[Object::Number(13091), Object::Number(12475), Object::Number(12531), Object::Number(12488)]);
    let list1136 = vm.gc.listn(&[Object::Number(13092), Object::Number(12480), Object::Number(12540), Object::Number(12473)]);
    let list1137 = vm.gc.listn(&[Object::Number(13093), Object::Number(12487), Object::Number(12471)]);
    let list1138 = vm.gc.listn(&[Object::Number(13094), Object::Number(12489), Object::Number(12523)]);
    let list1139 = vm.gc.listn(&[Object::Number(13095), Object::Number(12488), Object::Number(12531)]);
    let list1140 = vm.gc.listn(&[Object::Number(13096), Object::Number(12490), Object::Number(12494)]);
    let list1141 = vm.gc.listn(&[Object::Number(13097), Object::Number(12494), Object::Number(12483), Object::Number(12488)]);
    let list1142 = vm.gc.listn(&[Object::Number(13098), Object::Number(12495), Object::Number(12452), Object::Number(12484)]);
    let list1143 = vm.gc.listn(&[Object::Number(13099), Object::Number(12497), Object::Number(12540), Object::Number(12475), Object::Number(12531), Object::Number(12488)]);
    let list1144 = vm.gc.listn(&[Object::Number(13100), Object::Number(12497), Object::Number(12540), Object::Number(12484)]);
    let list1145 = vm.gc.listn(&[Object::Number(13101), Object::Number(12496), Object::Number(12540), Object::Number(12524), Object::Number(12523)]);
    let list1146 = vm.gc.listn(&[Object::Number(13102), Object::Number(12500), Object::Number(12450), Object::Number(12473), Object::Number(12488), Object::Number(12523)]);
    let list1147 = vm.gc.listn(&[Object::Number(13103), Object::Number(12500), Object::Number(12463), Object::Number(12523)]);
    let list1148 = vm.gc.listn(&[Object::Number(13104), Object::Number(12500), Object::Number(12467)]);
    let list1149 = vm.gc.listn(&[Object::Number(13105), Object::Number(12499), Object::Number(12523)]);
    let list1150 = vm.gc.listn(&[Object::Number(13106), Object::Number(12501), Object::Number(12449), Object::Number(12521), Object::Number(12483), Object::Number(12489)]);
    let list1151 = vm.gc.listn(&[Object::Number(13107), Object::Number(12501), Object::Number(12451), Object::Number(12540), Object::Number(12488)]);
    let list1152 = vm.gc.listn(&[Object::Number(13108), Object::Number(12502), Object::Number(12483), Object::Number(12471), Object::Number(12455), Object::Number(12523)]);
    let list1153 = vm.gc.listn(&[Object::Number(13109), Object::Number(12501), Object::Number(12521), Object::Number(12531)]);
    let list1154 = vm.gc.listn(&[Object::Number(13110), Object::Number(12504), Object::Number(12463), Object::Number(12479), Object::Number(12540), Object::Number(12523)]);
    let list1155 = vm.gc.listn(&[Object::Number(13111), Object::Number(12506), Object::Number(12477)]);
    let list1156 = vm.gc.listn(&[Object::Number(13112), Object::Number(12506), Object::Number(12491), Object::Number(12498)]);
    let list1157 = vm.gc.listn(&[Object::Number(13113), Object::Number(12504), Object::Number(12523), Object::Number(12484)]);
    let list1158 = vm.gc.listn(&[Object::Number(13114), Object::Number(12506), Object::Number(12531), Object::Number(12473)]);
    let list1159 = vm.gc.listn(&[Object::Number(13115), Object::Number(12506), Object::Number(12540), Object::Number(12472)]);
    let list1160 = vm.gc.listn(&[Object::Number(13116), Object::Number(12505), Object::Number(12540), Object::Number(12479)]);
    let list1161 = vm.gc.listn(&[Object::Number(13117), Object::Number(12509), Object::Number(12452), Object::Number(12531), Object::Number(12488)]);
    let list1162 = vm.gc.listn(&[Object::Number(13118), Object::Number(12508), Object::Number(12523), Object::Number(12488)]);
    let list1163 = vm.gc.listn(&[Object::Number(13119), Object::Number(12507), Object::Number(12531)]);
    let list1164 = vm.gc.listn(&[Object::Number(13120), Object::Number(12509), Object::Number(12531), Object::Number(12489)]);
    let list1165 = vm.gc.listn(&[Object::Number(13121), Object::Number(12507), Object::Number(12540), Object::Number(12523)]);
    let list1166 = vm.gc.listn(&[Object::Number(13122), Object::Number(12507), Object::Number(12540), Object::Number(12531)]);
    let list1167 = vm.gc.listn(&[Object::Number(13123), Object::Number(12510), Object::Number(12452), Object::Number(12463), Object::Number(12525)]);
    let list1168 = vm.gc.listn(&[Object::Number(13124), Object::Number(12510), Object::Number(12452), Object::Number(12523)]);
    let list1169 = vm.gc.listn(&[Object::Number(13125), Object::Number(12510), Object::Number(12483), Object::Number(12495)]);
    let list1170 = vm.gc.listn(&[Object::Number(13126), Object::Number(12510), Object::Number(12523), Object::Number(12463)]);
    let list1171 = vm.gc.listn(&[Object::Number(13127), Object::Number(12510), Object::Number(12531), Object::Number(12471), Object::Number(12519), Object::Number(12531)]);
    let list1172 = vm.gc.listn(&[Object::Number(13128), Object::Number(12511), Object::Number(12463), Object::Number(12525), Object::Number(12531)]);
    let list1173 = vm.gc.listn(&[Object::Number(13129), Object::Number(12511), Object::Number(12522)]);
    let list1174 = vm.gc.listn(&[Object::Number(13130), Object::Number(12511), Object::Number(12522), Object::Number(12496), Object::Number(12540), Object::Number(12523)]);
    let list1175 = vm.gc.listn(&[Object::Number(13131), Object::Number(12513), Object::Number(12460)]);
    let list1176 = vm.gc.listn(&[Object::Number(13132), Object::Number(12513), Object::Number(12460), Object::Number(12488), Object::Number(12531)]);
    let list1177 = vm.gc.listn(&[Object::Number(13133), Object::Number(12513), Object::Number(12540), Object::Number(12488), Object::Number(12523)]);
    let list1178 = vm.gc.listn(&[Object::Number(13134), Object::Number(12516), Object::Number(12540), Object::Number(12489)]);
    let list1179 = vm.gc.listn(&[Object::Number(13135), Object::Number(12516), Object::Number(12540), Object::Number(12523)]);
    let list1180 = vm.gc.listn(&[Object::Number(13136), Object::Number(12518), Object::Number(12450), Object::Number(12531)]);
    let list1181 = vm.gc.listn(&[Object::Number(13137), Object::Number(12522), Object::Number(12483), Object::Number(12488), Object::Number(12523)]);
    let list1182 = vm.gc.listn(&[Object::Number(13138), Object::Number(12522), Object::Number(12521)]);
    let list1183 = vm.gc.listn(&[Object::Number(13139), Object::Number(12523), Object::Number(12500), Object::Number(12540)]);
    let list1184 = vm.gc.listn(&[Object::Number(13140), Object::Number(12523), Object::Number(12540), Object::Number(12502), Object::Number(12523)]);
    let list1185 = vm.gc.listn(&[Object::Number(13141), Object::Number(12524), Object::Number(12512)]);
    let list1186 = vm.gc.listn(&[Object::Number(13142), Object::Number(12524), Object::Number(12531), Object::Number(12488), Object::Number(12466), Object::Number(12531)]);
    let list1187 = vm.gc.listn(&[Object::Number(13143), Object::Number(12527), Object::Number(12483), Object::Number(12488)]);
    let list1188 = vm.gc.listn(&[Object::Number(13144), Object::Number(48), Object::Number(28857)]);
    let list1189 = vm.gc.listn(&[Object::Number(13145), Object::Number(49), Object::Number(28857)]);
    let list1190 = vm.gc.listn(&[Object::Number(13146), Object::Number(50), Object::Number(28857)]);
    let list1191 = vm.gc.listn(&[Object::Number(13147), Object::Number(51), Object::Number(28857)]);
    let list1192 = vm.gc.listn(&[Object::Number(13148), Object::Number(52), Object::Number(28857)]);
    let list1193 = vm.gc.listn(&[Object::Number(13149), Object::Number(53), Object::Number(28857)]);
    let list1194 = vm.gc.listn(&[Object::Number(13150), Object::Number(54), Object::Number(28857)]);
    let list1195 = vm.gc.listn(&[Object::Number(13151), Object::Number(55), Object::Number(28857)]);
    let list1196 = vm.gc.listn(&[Object::Number(13152), Object::Number(56), Object::Number(28857)]);
    let list1197 = vm.gc.listn(&[Object::Number(13153), Object::Number(57), Object::Number(28857)]);
    let list1198 = vm.gc.listn(&[Object::Number(13154), Object::Number(49), Object::Number(48), Object::Number(28857)]);
    let list1199 = vm.gc.listn(&[Object::Number(13155), Object::Number(49), Object::Number(49), Object::Number(28857)]);
    let list1200 = vm.gc.listn(&[Object::Number(13156), Object::Number(49), Object::Number(50), Object::Number(28857)]);
    let list1201 = vm.gc.listn(&[Object::Number(13157), Object::Number(49), Object::Number(51), Object::Number(28857)]);
    let list1202 = vm.gc.listn(&[Object::Number(13158), Object::Number(49), Object::Number(52), Object::Number(28857)]);
    let list1203 = vm.gc.listn(&[Object::Number(13159), Object::Number(49), Object::Number(53), Object::Number(28857)]);
    let list1204 = vm.gc.listn(&[Object::Number(13160), Object::Number(49), Object::Number(54), Object::Number(28857)]);
    let list1205 = vm.gc.listn(&[Object::Number(13161), Object::Number(49), Object::Number(55), Object::Number(28857)]);
    let list1206 = vm.gc.listn(&[Object::Number(13162), Object::Number(49), Object::Number(56), Object::Number(28857)]);
    let list1207 = vm.gc.listn(&[Object::Number(13163), Object::Number(49), Object::Number(57), Object::Number(28857)]);
    let list1208 = vm.gc.listn(&[Object::Number(13164), Object::Number(50), Object::Number(48), Object::Number(28857)]);
    let list1209 = vm.gc.listn(&[Object::Number(13165), Object::Number(50), Object::Number(49), Object::Number(28857)]);
    let list1210 = vm.gc.listn(&[Object::Number(13166), Object::Number(50), Object::Number(50), Object::Number(28857)]);
    let list1211 = vm.gc.listn(&[Object::Number(13167), Object::Number(50), Object::Number(51), Object::Number(28857)]);
    let list1212 = vm.gc.listn(&[Object::Number(13168), Object::Number(50), Object::Number(52), Object::Number(28857)]);
    let list1213 = vm.gc.listn(&[Object::Number(13169), Object::Number(104), Object::Number(80), Object::Number(97)]);
    let list1214 = vm.gc.listn(&[Object::Number(13170), Object::Number(100), Object::Number(97)]);
    let list1215 = vm.gc.listn(&[Object::Number(13171), Object::Number(65), Object::Number(85)]);
    let list1216 = vm.gc.listn(&[Object::Number(13172), Object::Number(98), Object::Number(97), Object::Number(114)]);
    let list1217 = vm.gc.listn(&[Object::Number(13173), Object::Number(111), Object::Number(86)]);
    let list1218 = vm.gc.listn(&[Object::Number(13174), Object::Number(112), Object::Number(99)]);
    let list1219 = vm.gc.listn(&[Object::Number(13175), Object::Number(100), Object::Number(109)]);
    let list1220 = vm.gc.listn(&[Object::Number(13176), Object::Number(100), Object::Number(109), Object::Number(178)]);
    let list1221 = vm.gc.listn(&[Object::Number(13177), Object::Number(100), Object::Number(109), Object::Number(179)]);
    let list1222 = vm.gc.listn(&[Object::Number(13178), Object::Number(73), Object::Number(85)]);
    let list1223 = vm.gc.listn(&[Object::Number(13179), Object::Number(24179), Object::Number(25104)]);
    let list1224 = vm.gc.listn(&[Object::Number(13180), Object::Number(26157), Object::Number(21644)]);
    let list1225 = vm.gc.listn(&[Object::Number(13181), Object::Number(22823), Object::Number(27491)]);
    let list1226 = vm.gc.listn(&[Object::Number(13182), Object::Number(26126), Object::Number(27835)]);
    let list1227 = vm.gc.listn(&[Object::Number(13183), Object::Number(26666), Object::Number(24335), Object::Number(20250), Object::Number(31038)]);
    let list1228 = vm.gc.listn(&[Object::Number(13184), Object::Number(112), Object::Number(65)]);
    let list1229 = vm.gc.listn(&[Object::Number(13185), Object::Number(110), Object::Number(65)]);
    let list1230 = vm.gc.listn(&[Object::Number(13186), Object::Number(956), Object::Number(65)]);
    let list1231 = vm.gc.listn(&[Object::Number(13187), Object::Number(109), Object::Number(65)]);
    let list1232 = vm.gc.listn(&[Object::Number(13188), Object::Number(107), Object::Number(65)]);
    let list1233 = vm.gc.listn(&[Object::Number(13189), Object::Number(75), Object::Number(66)]);
    let list1234 = vm.gc.listn(&[Object::Number(13190), Object::Number(77), Object::Number(66)]);
    let list1235 = vm.gc.listn(&[Object::Number(13191), Object::Number(71), Object::Number(66)]);
    let list1236 = vm.gc.listn(&[Object::Number(13192), Object::Number(99), Object::Number(97), Object::Number(108)]);
    let list1237 = vm.gc.listn(&[Object::Number(13193), Object::Number(107), Object::Number(99), Object::Number(97), Object::Number(108)]);
    let list1238 = vm.gc.listn(&[Object::Number(13194), Object::Number(112), Object::Number(70)]);
    let list1239 = vm.gc.listn(&[Object::Number(13195), Object::Number(110), Object::Number(70)]);
    let list1240 = vm.gc.listn(&[Object::Number(13196), Object::Number(956), Object::Number(70)]);
    let list1241 = vm.gc.listn(&[Object::Number(13197), Object::Number(956), Object::Number(103)]);
    let list1242 = vm.gc.listn(&[Object::Number(13198), Object::Number(109), Object::Number(103)]);
    let list1243 = vm.gc.listn(&[Object::Number(13199), Object::Number(107), Object::Number(103)]);
    let list1244 = vm.gc.listn(&[Object::Number(13200), Object::Number(72), Object::Number(122)]);
    let list1245 = vm.gc.listn(&[Object::Number(13201), Object::Number(107), Object::Number(72), Object::Number(122)]);
    let list1246 = vm.gc.listn(&[Object::Number(13202), Object::Number(77), Object::Number(72), Object::Number(122)]);
    let list1247 = vm.gc.listn(&[Object::Number(13203), Object::Number(71), Object::Number(72), Object::Number(122)]);
    let list1248 = vm.gc.listn(&[Object::Number(13204), Object::Number(84), Object::Number(72), Object::Number(122)]);
    let list1249 = vm.gc.listn(&[Object::Number(13205), Object::Number(956), Object::Number(8467)]);
    let list1250 = vm.gc.listn(&[Object::Number(13206), Object::Number(109), Object::Number(8467)]);
    let list1251 = vm.gc.listn(&[Object::Number(13207), Object::Number(100), Object::Number(8467)]);
    let list1252 = vm.gc.listn(&[Object::Number(13208), Object::Number(107), Object::Number(8467)]);
    let list1253 = vm.gc.listn(&[Object::Number(13209), Object::Number(102), Object::Number(109)]);
    let list1254 = vm.gc.listn(&[Object::Number(13210), Object::Number(110), Object::Number(109)]);
    let list1255 = vm.gc.listn(&[Object::Number(13211), Object::Number(956), Object::Number(109)]);
    let list1256 = vm.gc.listn(&[Object::Number(13212), Object::Number(109), Object::Number(109)]);
    let list1257 = vm.gc.listn(&[Object::Number(13213), Object::Number(99), Object::Number(109)]);
    let list1258 = vm.gc.listn(&[Object::Number(13214), Object::Number(107), Object::Number(109)]);
    let list1259 = vm.gc.listn(&[Object::Number(13215), Object::Number(109), Object::Number(109), Object::Number(178)]);
    let list1260 = vm.gc.listn(&[Object::Number(13216), Object::Number(99), Object::Number(109), Object::Number(178)]);
    let list1261 = vm.gc.listn(&[Object::Number(13217), Object::Number(109), Object::Number(178)]);
    let list1262 = vm.gc.listn(&[Object::Number(13218), Object::Number(107), Object::Number(109), Object::Number(178)]);
    let list1263 = vm.gc.listn(&[Object::Number(13219), Object::Number(109), Object::Number(109), Object::Number(179)]);
    let list1264 = vm.gc.listn(&[Object::Number(13220), Object::Number(99), Object::Number(109), Object::Number(179)]);
    let list1265 = vm.gc.listn(&[Object::Number(13221), Object::Number(109), Object::Number(179)]);
    let list1266 = vm.gc.listn(&[Object::Number(13222), Object::Number(107), Object::Number(109), Object::Number(179)]);
    let list1267 = vm.gc.listn(&[Object::Number(13223), Object::Number(109), Object::Number(8725), Object::Number(115)]);
    let list1268 = vm.gc.listn(&[Object::Number(13224), Object::Number(109), Object::Number(8725), Object::Number(115), Object::Number(178)]);
    let list1269 = vm.gc.listn(&[Object::Number(13225), Object::Number(80), Object::Number(97)]);
    let list1270 = vm.gc.listn(&[Object::Number(13226), Object::Number(107), Object::Number(80), Object::Number(97)]);
    let list1271 = vm.gc.listn(&[Object::Number(13227), Object::Number(77), Object::Number(80), Object::Number(97)]);
    let list1272 = vm.gc.listn(&[Object::Number(13228), Object::Number(71), Object::Number(80), Object::Number(97)]);
    let list1273 = vm.gc.listn(&[Object::Number(13229), Object::Number(114), Object::Number(97), Object::Number(100)]);
    let list1274 = vm.gc.listn(&[Object::Number(13230), Object::Number(114), Object::Number(97), Object::Number(100), Object::Number(8725), Object::Number(115)]);
    let list1275 = vm.gc.listn(&[Object::Number(13231), Object::Number(114), Object::Number(97), Object::Number(100), Object::Number(8725), Object::Number(115), Object::Number(178)]);
    let list1276 = vm.gc.listn(&[Object::Number(13232), Object::Number(112), Object::Number(115)]);
    let list1277 = vm.gc.listn(&[Object::Number(13233), Object::Number(110), Object::Number(115)]);
    let list1278 = vm.gc.listn(&[Object::Number(13234), Object::Number(956), Object::Number(115)]);
    let list1279 = vm.gc.listn(&[Object::Number(13235), Object::Number(109), Object::Number(115)]);
    let list1280 = vm.gc.listn(&[Object::Number(13236), Object::Number(112), Object::Number(86)]);
    let list1281 = vm.gc.listn(&[Object::Number(13237), Object::Number(110), Object::Number(86)]);
    let list1282 = vm.gc.listn(&[Object::Number(13238), Object::Number(956), Object::Number(86)]);
    let list1283 = vm.gc.listn(&[Object::Number(13239), Object::Number(109), Object::Number(86)]);
    let list1284 = vm.gc.listn(&[Object::Number(13240), Object::Number(107), Object::Number(86)]);
    let list1285 = vm.gc.listn(&[Object::Number(13241), Object::Number(77), Object::Number(86)]);
    let list1286 = vm.gc.listn(&[Object::Number(13242), Object::Number(112), Object::Number(87)]);
    let list1287 = vm.gc.listn(&[Object::Number(13243), Object::Number(110), Object::Number(87)]);
    let list1288 = vm.gc.listn(&[Object::Number(13244), Object::Number(956), Object::Number(87)]);
    let list1289 = vm.gc.listn(&[Object::Number(13245), Object::Number(109), Object::Number(87)]);
    let list1290 = vm.gc.listn(&[Object::Number(13246), Object::Number(107), Object::Number(87)]);
    let list1291 = vm.gc.listn(&[Object::Number(13247), Object::Number(77), Object::Number(87)]);
    let list1292 = vm.gc.listn(&[Object::Number(13248), Object::Number(107), Object::Number(937)]);
    let list1293 = vm.gc.listn(&[Object::Number(13249), Object::Number(77), Object::Number(937)]);
    let list1294 = vm.gc.listn(&[Object::Number(13250), Object::Number(97), Object::Number(46), Object::Number(109), Object::Number(46)]);
    let list1295 = vm.gc.listn(&[Object::Number(13251), Object::Number(66), Object::Number(113)]);
    let list1296 = vm.gc.listn(&[Object::Number(13252), Object::Number(99), Object::Number(99)]);
    let list1297 = vm.gc.listn(&[Object::Number(13253), Object::Number(99), Object::Number(100)]);
    let list1298 = vm.gc.listn(&[Object::Number(13254), Object::Number(67), Object::Number(8725), Object::Number(107), Object::Number(103)]);
    let list1299 = vm.gc.listn(&[Object::Number(13255), Object::Number(67), Object::Number(111), Object::Number(46)]);
    let list1300 = vm.gc.listn(&[Object::Number(13256), Object::Number(100), Object::Number(66)]);
    let list1301 = vm.gc.listn(&[Object::Number(13257), Object::Number(71), Object::Number(121)]);
    let list1302 = vm.gc.listn(&[Object::Number(13258), Object::Number(104), Object::Number(97)]);
    let list1303 = vm.gc.listn(&[Object::Number(13259), Object::Number(72), Object::Number(80)]);
    let list1304 = vm.gc.listn(&[Object::Number(13260), Object::Number(105), Object::Number(110)]);
    let list1305 = vm.gc.listn(&[Object::Number(13261), Object::Number(75), Object::Number(75)]);
    let list1306 = vm.gc.listn(&[Object::Number(13262), Object::Number(75), Object::Number(77)]);
    let list1307 = vm.gc.listn(&[Object::Number(13263), Object::Number(107), Object::Number(116)]);
    let list1308 = vm.gc.listn(&[Object::Number(13264), Object::Number(108), Object::Number(109)]);
    let list1309 = vm.gc.listn(&[Object::Number(13265), Object::Number(108), Object::Number(110)]);
    let list1310 = vm.gc.listn(&[Object::Number(13266), Object::Number(108), Object::Number(111), Object::Number(103)]);
    let list1311 = vm.gc.listn(&[Object::Number(13267), Object::Number(108), Object::Number(120)]);
    let list1312 = vm.gc.listn(&[Object::Number(13268), Object::Number(109), Object::Number(98)]);
    let list1313 = vm.gc.listn(&[Object::Number(13269), Object::Number(109), Object::Number(105), Object::Number(108)]);
    let list1314 = vm.gc.listn(&[Object::Number(13270), Object::Number(109), Object::Number(111), Object::Number(108)]);
    let list1315 = vm.gc.listn(&[Object::Number(13271), Object::Number(80), Object::Number(72)]);
    let list1316 = vm.gc.listn(&[Object::Number(13272), Object::Number(112), Object::Number(46), Object::Number(109), Object::Number(46)]);
    let list1317 = vm.gc.listn(&[Object::Number(13273), Object::Number(80), Object::Number(80), Object::Number(77)]);
    let list1318 = vm.gc.listn(&[Object::Number(13274), Object::Number(80), Object::Number(82)]);
    let list1319 = vm.gc.listn(&[Object::Number(13275), Object::Number(115), Object::Number(114)]);
    let list1320 = vm.gc.listn(&[Object::Number(13276), Object::Number(83), Object::Number(118)]);
    let list1321 = vm.gc.listn(&[Object::Number(13277), Object::Number(87), Object::Number(98)]);
    let list1322 = vm.gc.listn(&[Object::Number(13278), Object::Number(86), Object::Number(8725), Object::Number(109)]);
    let list1323 = vm.gc.listn(&[Object::Number(13279), Object::Number(65), Object::Number(8725), Object::Number(109)]);
    let list1324 = vm.gc.listn(&[Object::Number(13280), Object::Number(49), Object::Number(26085)]);
    let list1325 = vm.gc.listn(&[Object::Number(13281), Object::Number(50), Object::Number(26085)]);
    let list1326 = vm.gc.listn(&[Object::Number(13282), Object::Number(51), Object::Number(26085)]);
    let list1327 = vm.gc.listn(&[Object::Number(13283), Object::Number(52), Object::Number(26085)]);
    let list1328 = vm.gc.listn(&[Object::Number(13284), Object::Number(53), Object::Number(26085)]);
    let list1329 = vm.gc.listn(&[Object::Number(13285), Object::Number(54), Object::Number(26085)]);
    let list1330 = vm.gc.listn(&[Object::Number(13286), Object::Number(55), Object::Number(26085)]);
    let list1331 = vm.gc.listn(&[Object::Number(13287), Object::Number(56), Object::Number(26085)]);
    let list1332 = vm.gc.listn(&[Object::Number(13288), Object::Number(57), Object::Number(26085)]);
    let list1333 = vm.gc.listn(&[Object::Number(13289), Object::Number(49), Object::Number(48), Object::Number(26085)]);
    let list1334 = vm.gc.listn(&[Object::Number(13290), Object::Number(49), Object::Number(49), Object::Number(26085)]);
    let list1335 = vm.gc.listn(&[Object::Number(13291), Object::Number(49), Object::Number(50), Object::Number(26085)]);
    let list1336 = vm.gc.listn(&[Object::Number(13292), Object::Number(49), Object::Number(51), Object::Number(26085)]);
    let list1337 = vm.gc.listn(&[Object::Number(13293), Object::Number(49), Object::Number(52), Object::Number(26085)]);
    let list1338 = vm.gc.listn(&[Object::Number(13294), Object::Number(49), Object::Number(53), Object::Number(26085)]);
    let list1339 = vm.gc.listn(&[Object::Number(13295), Object::Number(49), Object::Number(54), Object::Number(26085)]);
    let list1340 = vm.gc.listn(&[Object::Number(13296), Object::Number(49), Object::Number(55), Object::Number(26085)]);
    let list1341 = vm.gc.listn(&[Object::Number(13297), Object::Number(49), Object::Number(56), Object::Number(26085)]);
    let list1342 = vm.gc.listn(&[Object::Number(13298), Object::Number(49), Object::Number(57), Object::Number(26085)]);
    let list1343 = vm.gc.listn(&[Object::Number(13299), Object::Number(50), Object::Number(48), Object::Number(26085)]);
    let list1344 = vm.gc.listn(&[Object::Number(13300), Object::Number(50), Object::Number(49), Object::Number(26085)]);
    let list1345 = vm.gc.listn(&[Object::Number(13301), Object::Number(50), Object::Number(50), Object::Number(26085)]);
    let list1346 = vm.gc.listn(&[Object::Number(13302), Object::Number(50), Object::Number(51), Object::Number(26085)]);
    let list1347 = vm.gc.listn(&[Object::Number(13303), Object::Number(50), Object::Number(52), Object::Number(26085)]);
    let list1348 = vm.gc.listn(&[Object::Number(13304), Object::Number(50), Object::Number(53), Object::Number(26085)]);
    let list1349 = vm.gc.listn(&[Object::Number(13305), Object::Number(50), Object::Number(54), Object::Number(26085)]);
    let list1350 = vm.gc.listn(&[Object::Number(13306), Object::Number(50), Object::Number(55), Object::Number(26085)]);
    let list1351 = vm.gc.listn(&[Object::Number(13307), Object::Number(50), Object::Number(56), Object::Number(26085)]);
    let list1352 = vm.gc.listn(&[Object::Number(13308), Object::Number(50), Object::Number(57), Object::Number(26085)]);
    let list1353 = vm.gc.listn(&[Object::Number(13309), Object::Number(51), Object::Number(48), Object::Number(26085)]);
    let list1354 = vm.gc.listn(&[Object::Number(13310), Object::Number(51), Object::Number(49), Object::Number(26085)]);
    let list1355 = vm.gc.listn(&[Object::Number(13311), Object::Number(103), Object::Number(97), Object::Number(108)]);
    let list1356 = vm.gc.listn(&[Object::Number(42864), Object::Number(42863)]);
    let list1357 = vm.gc.listn(&[Object::Number(64256), Object::Number(102), Object::Number(102)]);
    let list1358 = vm.gc.listn(&[Object::Number(64257), Object::Number(102), Object::Number(105)]);
    let list1359 = vm.gc.listn(&[Object::Number(64258), Object::Number(102), Object::Number(108)]);
    let list1360 = vm.gc.listn(&[Object::Number(64259), Object::Number(102), Object::Number(102), Object::Number(105)]);
    let list1361 = vm.gc.listn(&[Object::Number(64260), Object::Number(102), Object::Number(102), Object::Number(108)]);
    let list1362 = vm.gc.listn(&[Object::Number(64261), Object::Number(383), Object::Number(116)]);
    let list1363 = vm.gc.listn(&[Object::Number(64262), Object::Number(115), Object::Number(116)]);
    let list1364 = vm.gc.listn(&[Object::Number(64275), Object::Number(1396), Object::Number(1398)]);
    let list1365 = vm.gc.listn(&[Object::Number(64276), Object::Number(1396), Object::Number(1381)]);
    let list1366 = vm.gc.listn(&[Object::Number(64277), Object::Number(1396), Object::Number(1387)]);
    let list1367 = vm.gc.listn(&[Object::Number(64278), Object::Number(1406), Object::Number(1398)]);
    let list1368 = vm.gc.listn(&[Object::Number(64279), Object::Number(1396), Object::Number(1389)]);
    let list1369 = vm.gc.listn(&[Object::Number(64288), Object::Number(1506)]);
    let list1370 = vm.gc.listn(&[Object::Number(64289), Object::Number(1488)]);
    let list1371 = vm.gc.listn(&[Object::Number(64290), Object::Number(1491)]);
    let list1372 = vm.gc.listn(&[Object::Number(64291), Object::Number(1492)]);
    let list1373 = vm.gc.listn(&[Object::Number(64292), Object::Number(1499)]);
    let list1374 = vm.gc.listn(&[Object::Number(64293), Object::Number(1500)]);
    let list1375 = vm.gc.listn(&[Object::Number(64294), Object::Number(1501)]);
    let list1376 = vm.gc.listn(&[Object::Number(64295), Object::Number(1512)]);
    let list1377 = vm.gc.listn(&[Object::Number(64296), Object::Number(1514)]);
    let list1378 = vm.gc.listn(&[Object::Number(64297), Object::Number(43)]);
    let list1379 = vm.gc.listn(&[Object::Number(64335), Object::Number(1488), Object::Number(1500)]);
    let list1380 = vm.gc.listn(&[Object::Number(64336), Object::Number(1649)]);
    let list1381 = vm.gc.listn(&[Object::Number(64337), Object::Number(1649)]);
    let list1382 = vm.gc.listn(&[Object::Number(64338), Object::Number(1659)]);
    let list1383 = vm.gc.listn(&[Object::Number(64339), Object::Number(1659)]);
    let list1384 = vm.gc.listn(&[Object::Number(64340), Object::Number(1659)]);
    let list1385 = vm.gc.listn(&[Object::Number(64341), Object::Number(1659)]);
    let list1386 = vm.gc.listn(&[Object::Number(64342), Object::Number(1662)]);
    let list1387 = vm.gc.listn(&[Object::Number(64343), Object::Number(1662)]);
    let list1388 = vm.gc.listn(&[Object::Number(64344), Object::Number(1662)]);
    let list1389 = vm.gc.listn(&[Object::Number(64345), Object::Number(1662)]);
    let list1390 = vm.gc.listn(&[Object::Number(64346), Object::Number(1664)]);
    let list1391 = vm.gc.listn(&[Object::Number(64347), Object::Number(1664)]);
    let list1392 = vm.gc.listn(&[Object::Number(64348), Object::Number(1664)]);
    let list1393 = vm.gc.listn(&[Object::Number(64349), Object::Number(1664)]);
    let list1394 = vm.gc.listn(&[Object::Number(64350), Object::Number(1658)]);
    let list1395 = vm.gc.listn(&[Object::Number(64351), Object::Number(1658)]);
    let list1396 = vm.gc.listn(&[Object::Number(64352), Object::Number(1658)]);
    let list1397 = vm.gc.listn(&[Object::Number(64353), Object::Number(1658)]);
    let list1398 = vm.gc.listn(&[Object::Number(64354), Object::Number(1663)]);
    let list1399 = vm.gc.listn(&[Object::Number(64355), Object::Number(1663)]);
    let list1400 = vm.gc.listn(&[Object::Number(64356), Object::Number(1663)]);
    let list1401 = vm.gc.listn(&[Object::Number(64357), Object::Number(1663)]);
    let list1402 = vm.gc.listn(&[Object::Number(64358), Object::Number(1657)]);
    let list1403 = vm.gc.listn(&[Object::Number(64359), Object::Number(1657)]);
    let list1404 = vm.gc.listn(&[Object::Number(64360), Object::Number(1657)]);
    let list1405 = vm.gc.listn(&[Object::Number(64361), Object::Number(1657)]);
    let list1406 = vm.gc.listn(&[Object::Number(64362), Object::Number(1700)]);
    let list1407 = vm.gc.listn(&[Object::Number(64363), Object::Number(1700)]);
    let list1408 = vm.gc.listn(&[Object::Number(64364), Object::Number(1700)]);
    let list1409 = vm.gc.listn(&[Object::Number(64365), Object::Number(1700)]);
    let list1410 = vm.gc.listn(&[Object::Number(64366), Object::Number(1702)]);
    let list1411 = vm.gc.listn(&[Object::Number(64367), Object::Number(1702)]);
    let list1412 = vm.gc.listn(&[Object::Number(64368), Object::Number(1702)]);
    let list1413 = vm.gc.listn(&[Object::Number(64369), Object::Number(1702)]);
    let list1414 = vm.gc.listn(&[Object::Number(64370), Object::Number(1668)]);
    let list1415 = vm.gc.listn(&[Object::Number(64371), Object::Number(1668)]);
    let list1416 = vm.gc.listn(&[Object::Number(64372), Object::Number(1668)]);
    let list1417 = vm.gc.listn(&[Object::Number(64373), Object::Number(1668)]);
    let list1418 = vm.gc.listn(&[Object::Number(64374), Object::Number(1667)]);
    let list1419 = vm.gc.listn(&[Object::Number(64375), Object::Number(1667)]);
    let list1420 = vm.gc.listn(&[Object::Number(64376), Object::Number(1667)]);
    let list1421 = vm.gc.listn(&[Object::Number(64377), Object::Number(1667)]);
    let list1422 = vm.gc.listn(&[Object::Number(64378), Object::Number(1670)]);
    let list1423 = vm.gc.listn(&[Object::Number(64379), Object::Number(1670)]);
    let list1424 = vm.gc.listn(&[Object::Number(64380), Object::Number(1670)]);
    let list1425 = vm.gc.listn(&[Object::Number(64381), Object::Number(1670)]);
    let list1426 = vm.gc.listn(&[Object::Number(64382), Object::Number(1671)]);
    let list1427 = vm.gc.listn(&[Object::Number(64383), Object::Number(1671)]);
    let list1428 = vm.gc.listn(&[Object::Number(64384), Object::Number(1671)]);
    let list1429 = vm.gc.listn(&[Object::Number(64385), Object::Number(1671)]);
    let list1430 = vm.gc.listn(&[Object::Number(64386), Object::Number(1677)]);
    let list1431 = vm.gc.listn(&[Object::Number(64387), Object::Number(1677)]);
    let list1432 = vm.gc.listn(&[Object::Number(64388), Object::Number(1676)]);
    let list1433 = vm.gc.listn(&[Object::Number(64389), Object::Number(1676)]);
    let list1434 = vm.gc.listn(&[Object::Number(64390), Object::Number(1678)]);
    let list1435 = vm.gc.listn(&[Object::Number(64391), Object::Number(1678)]);
    let list1436 = vm.gc.listn(&[Object::Number(64392), Object::Number(1672)]);
    let list1437 = vm.gc.listn(&[Object::Number(64393), Object::Number(1672)]);
    let list1438 = vm.gc.listn(&[Object::Number(64394), Object::Number(1688)]);
    let list1439 = vm.gc.listn(&[Object::Number(64395), Object::Number(1688)]);
    let list1440 = vm.gc.listn(&[Object::Number(64396), Object::Number(1681)]);
    let list1441 = vm.gc.listn(&[Object::Number(64397), Object::Number(1681)]);
    let list1442 = vm.gc.listn(&[Object::Number(64398), Object::Number(1705)]);
    let list1443 = vm.gc.listn(&[Object::Number(64399), Object::Number(1705)]);
    let list1444 = vm.gc.listn(&[Object::Number(64400), Object::Number(1705)]);
    let list1445 = vm.gc.listn(&[Object::Number(64401), Object::Number(1705)]);
    let list1446 = vm.gc.listn(&[Object::Number(64402), Object::Number(1711)]);
    let list1447 = vm.gc.listn(&[Object::Number(64403), Object::Number(1711)]);
    let list1448 = vm.gc.listn(&[Object::Number(64404), Object::Number(1711)]);
    let list1449 = vm.gc.listn(&[Object::Number(64405), Object::Number(1711)]);
    let list1450 = vm.gc.listn(&[Object::Number(64406), Object::Number(1715)]);
    let list1451 = vm.gc.listn(&[Object::Number(64407), Object::Number(1715)]);
    let list1452 = vm.gc.listn(&[Object::Number(64408), Object::Number(1715)]);
    let list1453 = vm.gc.listn(&[Object::Number(64409), Object::Number(1715)]);
    let list1454 = vm.gc.listn(&[Object::Number(64410), Object::Number(1713)]);
    let list1455 = vm.gc.listn(&[Object::Number(64411), Object::Number(1713)]);
    let list1456 = vm.gc.listn(&[Object::Number(64412), Object::Number(1713)]);
    let list1457 = vm.gc.listn(&[Object::Number(64413), Object::Number(1713)]);
    let list1458 = vm.gc.listn(&[Object::Number(64414), Object::Number(1722)]);
    let list1459 = vm.gc.listn(&[Object::Number(64415), Object::Number(1722)]);
    let list1460 = vm.gc.listn(&[Object::Number(64416), Object::Number(1723)]);
    let list1461 = vm.gc.listn(&[Object::Number(64417), Object::Number(1723)]);
    let list1462 = vm.gc.listn(&[Object::Number(64418), Object::Number(1723)]);
    let list1463 = vm.gc.listn(&[Object::Number(64419), Object::Number(1723)]);
    let list1464 = vm.gc.listn(&[Object::Number(64420), Object::Number(1728)]);
    let list1465 = vm.gc.listn(&[Object::Number(64421), Object::Number(1728)]);
    let list1466 = vm.gc.listn(&[Object::Number(64422), Object::Number(1729)]);
    let list1467 = vm.gc.listn(&[Object::Number(64423), Object::Number(1729)]);
    let list1468 = vm.gc.listn(&[Object::Number(64424), Object::Number(1729)]);
    let list1469 = vm.gc.listn(&[Object::Number(64425), Object::Number(1729)]);
    let list1470 = vm.gc.listn(&[Object::Number(64426), Object::Number(1726)]);
    let list1471 = vm.gc.listn(&[Object::Number(64427), Object::Number(1726)]);
    let list1472 = vm.gc.listn(&[Object::Number(64428), Object::Number(1726)]);
    let list1473 = vm.gc.listn(&[Object::Number(64429), Object::Number(1726)]);
    let list1474 = vm.gc.listn(&[Object::Number(64430), Object::Number(1746)]);
    let list1475 = vm.gc.listn(&[Object::Number(64431), Object::Number(1746)]);
    let list1476 = vm.gc.listn(&[Object::Number(64432), Object::Number(1747)]);
    let list1477 = vm.gc.listn(&[Object::Number(64433), Object::Number(1747)]);
    let list1478 = vm.gc.listn(&[Object::Number(64467), Object::Number(1709)]);
    let list1479 = vm.gc.listn(&[Object::Number(64468), Object::Number(1709)]);
    let list1480 = vm.gc.listn(&[Object::Number(64469), Object::Number(1709)]);
    let list1481 = vm.gc.listn(&[Object::Number(64470), Object::Number(1709)]);
    let list1482 = vm.gc.listn(&[Object::Number(64471), Object::Number(1735)]);
    let list1483 = vm.gc.listn(&[Object::Number(64472), Object::Number(1735)]);
    let list1484 = vm.gc.listn(&[Object::Number(64473), Object::Number(1734)]);
    let list1485 = vm.gc.listn(&[Object::Number(64474), Object::Number(1734)]);
    let list1486 = vm.gc.listn(&[Object::Number(64475), Object::Number(1736)]);
    let list1487 = vm.gc.listn(&[Object::Number(64476), Object::Number(1736)]);
    let list1488 = vm.gc.listn(&[Object::Number(64477), Object::Number(1655)]);
    let list1489 = vm.gc.listn(&[Object::Number(64478), Object::Number(1739)]);
    let list1490 = vm.gc.listn(&[Object::Number(64479), Object::Number(1739)]);
    let list1491 = vm.gc.listn(&[Object::Number(64480), Object::Number(1733)]);
    let list1492 = vm.gc.listn(&[Object::Number(64481), Object::Number(1733)]);
    let list1493 = vm.gc.listn(&[Object::Number(64482), Object::Number(1737)]);
    let list1494 = vm.gc.listn(&[Object::Number(64483), Object::Number(1737)]);
    let list1495 = vm.gc.listn(&[Object::Number(64484), Object::Number(1744)]);
    let list1496 = vm.gc.listn(&[Object::Number(64485), Object::Number(1744)]);
    let list1497 = vm.gc.listn(&[Object::Number(64486), Object::Number(1744)]);
    let list1498 = vm.gc.listn(&[Object::Number(64487), Object::Number(1744)]);
    let list1499 = vm.gc.listn(&[Object::Number(64488), Object::Number(1609)]);
    let list1500 = vm.gc.listn(&[Object::Number(64489), Object::Number(1609)]);
    let list1501 = vm.gc.listn(&[Object::Number(64490), Object::Number(1574), Object::Number(1575)]);
    let list1502 = vm.gc.listn(&[Object::Number(64491), Object::Number(1574), Object::Number(1575)]);
    let list1503 = vm.gc.listn(&[Object::Number(64492), Object::Number(1574), Object::Number(1749)]);
    let list1504 = vm.gc.listn(&[Object::Number(64493), Object::Number(1574), Object::Number(1749)]);
    let list1505 = vm.gc.listn(&[Object::Number(64494), Object::Number(1574), Object::Number(1608)]);
    let list1506 = vm.gc.listn(&[Object::Number(64495), Object::Number(1574), Object::Number(1608)]);
    let list1507 = vm.gc.listn(&[Object::Number(64496), Object::Number(1574), Object::Number(1735)]);
    let list1508 = vm.gc.listn(&[Object::Number(64497), Object::Number(1574), Object::Number(1735)]);
    let list1509 = vm.gc.listn(&[Object::Number(64498), Object::Number(1574), Object::Number(1734)]);
    let list1510 = vm.gc.listn(&[Object::Number(64499), Object::Number(1574), Object::Number(1734)]);
    let list1511 = vm.gc.listn(&[Object::Number(64500), Object::Number(1574), Object::Number(1736)]);
    let list1512 = vm.gc.listn(&[Object::Number(64501), Object::Number(1574), Object::Number(1736)]);
    let list1513 = vm.gc.listn(&[Object::Number(64502), Object::Number(1574), Object::Number(1744)]);
    let list1514 = vm.gc.listn(&[Object::Number(64503), Object::Number(1574), Object::Number(1744)]);
    let list1515 = vm.gc.listn(&[Object::Number(64504), Object::Number(1574), Object::Number(1744)]);
    let list1516 = vm.gc.listn(&[Object::Number(64505), Object::Number(1574), Object::Number(1609)]);
    let list1517 = vm.gc.listn(&[Object::Number(64506), Object::Number(1574), Object::Number(1609)]);
    let list1518 = vm.gc.listn(&[Object::Number(64507), Object::Number(1574), Object::Number(1609)]);
    let list1519 = vm.gc.listn(&[Object::Number(64508), Object::Number(1740)]);
    let list1520 = vm.gc.listn(&[Object::Number(64509), Object::Number(1740)]);
    let list1521 = vm.gc.listn(&[Object::Number(64510), Object::Number(1740)]);
    let list1522 = vm.gc.listn(&[Object::Number(64511), Object::Number(1740)]);
    let list1523 = vm.gc.listn(&[Object::Number(64512), Object::Number(1574), Object::Number(1580)]);
    let list1524 = vm.gc.listn(&[Object::Number(64513), Object::Number(1574), Object::Number(1581)]);
    let list1525 = vm.gc.listn(&[Object::Number(64514), Object::Number(1574), Object::Number(1605)]);
    let list1526 = vm.gc.listn(&[Object::Number(64515), Object::Number(1574), Object::Number(1609)]);
    let list1527 = vm.gc.listn(&[Object::Number(64516), Object::Number(1574), Object::Number(1610)]);
    let list1528 = vm.gc.listn(&[Object::Number(64517), Object::Number(1576), Object::Number(1580)]);
    let list1529 = vm.gc.listn(&[Object::Number(64518), Object::Number(1576), Object::Number(1581)]);
    let list1530 = vm.gc.listn(&[Object::Number(64519), Object::Number(1576), Object::Number(1582)]);
    let list1531 = vm.gc.listn(&[Object::Number(64520), Object::Number(1576), Object::Number(1605)]);
    let list1532 = vm.gc.listn(&[Object::Number(64521), Object::Number(1576), Object::Number(1609)]);
    let list1533 = vm.gc.listn(&[Object::Number(64522), Object::Number(1576), Object::Number(1610)]);
    let list1534 = vm.gc.listn(&[Object::Number(64523), Object::Number(1578), Object::Number(1580)]);
    let list1535 = vm.gc.listn(&[Object::Number(64524), Object::Number(1578), Object::Number(1581)]);
    let list1536 = vm.gc.listn(&[Object::Number(64525), Object::Number(1578), Object::Number(1582)]);
    let list1537 = vm.gc.listn(&[Object::Number(64526), Object::Number(1578), Object::Number(1605)]);
    let list1538 = vm.gc.listn(&[Object::Number(64527), Object::Number(1578), Object::Number(1609)]);
    let list1539 = vm.gc.listn(&[Object::Number(64528), Object::Number(1578), Object::Number(1610)]);
    let list1540 = vm.gc.listn(&[Object::Number(64529), Object::Number(1579), Object::Number(1580)]);
    let list1541 = vm.gc.listn(&[Object::Number(64530), Object::Number(1579), Object::Number(1605)]);
    let list1542 = vm.gc.listn(&[Object::Number(64531), Object::Number(1579), Object::Number(1609)]);
    let list1543 = vm.gc.listn(&[Object::Number(64532), Object::Number(1579), Object::Number(1610)]);
    let list1544 = vm.gc.listn(&[Object::Number(64533), Object::Number(1580), Object::Number(1581)]);
    let list1545 = vm.gc.listn(&[Object::Number(64534), Object::Number(1580), Object::Number(1605)]);
    let list1546 = vm.gc.listn(&[Object::Number(64535), Object::Number(1581), Object::Number(1580)]);
    let list1547 = vm.gc.listn(&[Object::Number(64536), Object::Number(1581), Object::Number(1605)]);
    let list1548 = vm.gc.listn(&[Object::Number(64537), Object::Number(1582), Object::Number(1580)]);
    let list1549 = vm.gc.listn(&[Object::Number(64538), Object::Number(1582), Object::Number(1581)]);
    let list1550 = vm.gc.listn(&[Object::Number(64539), Object::Number(1582), Object::Number(1605)]);
    let list1551 = vm.gc.listn(&[Object::Number(64540), Object::Number(1587), Object::Number(1580)]);
    let list1552 = vm.gc.listn(&[Object::Number(64541), Object::Number(1587), Object::Number(1581)]);
    let list1553 = vm.gc.listn(&[Object::Number(64542), Object::Number(1587), Object::Number(1582)]);
    let list1554 = vm.gc.listn(&[Object::Number(64543), Object::Number(1587), Object::Number(1605)]);
    let list1555 = vm.gc.listn(&[Object::Number(64544), Object::Number(1589), Object::Number(1581)]);
    let list1556 = vm.gc.listn(&[Object::Number(64545), Object::Number(1589), Object::Number(1605)]);
    let list1557 = vm.gc.listn(&[Object::Number(64546), Object::Number(1590), Object::Number(1580)]);
    let list1558 = vm.gc.listn(&[Object::Number(64547), Object::Number(1590), Object::Number(1581)]);
    let list1559 = vm.gc.listn(&[Object::Number(64548), Object::Number(1590), Object::Number(1582)]);
    let list1560 = vm.gc.listn(&[Object::Number(64549), Object::Number(1590), Object::Number(1605)]);
    let list1561 = vm.gc.listn(&[Object::Number(64550), Object::Number(1591), Object::Number(1581)]);
    let list1562 = vm.gc.listn(&[Object::Number(64551), Object::Number(1591), Object::Number(1605)]);
    let list1563 = vm.gc.listn(&[Object::Number(64552), Object::Number(1592), Object::Number(1605)]);
    let list1564 = vm.gc.listn(&[Object::Number(64553), Object::Number(1593), Object::Number(1580)]);
    let list1565 = vm.gc.listn(&[Object::Number(64554), Object::Number(1593), Object::Number(1605)]);
    let list1566 = vm.gc.listn(&[Object::Number(64555), Object::Number(1594), Object::Number(1580)]);
    let list1567 = vm.gc.listn(&[Object::Number(64556), Object::Number(1594), Object::Number(1605)]);
    let list1568 = vm.gc.listn(&[Object::Number(64557), Object::Number(1601), Object::Number(1580)]);
    let list1569 = vm.gc.listn(&[Object::Number(64558), Object::Number(1601), Object::Number(1581)]);
    let list1570 = vm.gc.listn(&[Object::Number(64559), Object::Number(1601), Object::Number(1582)]);
    let list1571 = vm.gc.listn(&[Object::Number(64560), Object::Number(1601), Object::Number(1605)]);
    let list1572 = vm.gc.listn(&[Object::Number(64561), Object::Number(1601), Object::Number(1609)]);
    let list1573 = vm.gc.listn(&[Object::Number(64562), Object::Number(1601), Object::Number(1610)]);
    let list1574 = vm.gc.listn(&[Object::Number(64563), Object::Number(1602), Object::Number(1581)]);
    let list1575 = vm.gc.listn(&[Object::Number(64564), Object::Number(1602), Object::Number(1605)]);
    let list1576 = vm.gc.listn(&[Object::Number(64565), Object::Number(1602), Object::Number(1609)]);
    let list1577 = vm.gc.listn(&[Object::Number(64566), Object::Number(1602), Object::Number(1610)]);
    let list1578 = vm.gc.listn(&[Object::Number(64567), Object::Number(1603), Object::Number(1575)]);
    let list1579 = vm.gc.listn(&[Object::Number(64568), Object::Number(1603), Object::Number(1580)]);
    let list1580 = vm.gc.listn(&[Object::Number(64569), Object::Number(1603), Object::Number(1581)]);
    let list1581 = vm.gc.listn(&[Object::Number(64570), Object::Number(1603), Object::Number(1582)]);
    let list1582 = vm.gc.listn(&[Object::Number(64571), Object::Number(1603), Object::Number(1604)]);
    let list1583 = vm.gc.listn(&[Object::Number(64572), Object::Number(1603), Object::Number(1605)]);
    let list1584 = vm.gc.listn(&[Object::Number(64573), Object::Number(1603), Object::Number(1609)]);
    let list1585 = vm.gc.listn(&[Object::Number(64574), Object::Number(1603), Object::Number(1610)]);
    let list1586 = vm.gc.listn(&[Object::Number(64575), Object::Number(1604), Object::Number(1580)]);
    let list1587 = vm.gc.listn(&[Object::Number(64576), Object::Number(1604), Object::Number(1581)]);
    let list1588 = vm.gc.listn(&[Object::Number(64577), Object::Number(1604), Object::Number(1582)]);
    let list1589 = vm.gc.listn(&[Object::Number(64578), Object::Number(1604), Object::Number(1605)]);
    let list1590 = vm.gc.listn(&[Object::Number(64579), Object::Number(1604), Object::Number(1609)]);
    let list1591 = vm.gc.listn(&[Object::Number(64580), Object::Number(1604), Object::Number(1610)]);
    let list1592 = vm.gc.listn(&[Object::Number(64581), Object::Number(1605), Object::Number(1580)]);
    let list1593 = vm.gc.listn(&[Object::Number(64582), Object::Number(1605), Object::Number(1581)]);
    let list1594 = vm.gc.listn(&[Object::Number(64583), Object::Number(1605), Object::Number(1582)]);
    let list1595 = vm.gc.listn(&[Object::Number(64584), Object::Number(1605), Object::Number(1605)]);
    let list1596 = vm.gc.listn(&[Object::Number(64585), Object::Number(1605), Object::Number(1609)]);
    let list1597 = vm.gc.listn(&[Object::Number(64586), Object::Number(1605), Object::Number(1610)]);
    let list1598 = vm.gc.listn(&[Object::Number(64587), Object::Number(1606), Object::Number(1580)]);
    let list1599 = vm.gc.listn(&[Object::Number(64588), Object::Number(1606), Object::Number(1581)]);
    let list1600 = vm.gc.listn(&[Object::Number(64589), Object::Number(1606), Object::Number(1582)]);
    let list1601 = vm.gc.listn(&[Object::Number(64590), Object::Number(1606), Object::Number(1605)]);
    let list1602 = vm.gc.listn(&[Object::Number(64591), Object::Number(1606), Object::Number(1609)]);
    let list1603 = vm.gc.listn(&[Object::Number(64592), Object::Number(1606), Object::Number(1610)]);
    let list1604 = vm.gc.listn(&[Object::Number(64593), Object::Number(1607), Object::Number(1580)]);
    let list1605 = vm.gc.listn(&[Object::Number(64594), Object::Number(1607), Object::Number(1605)]);
    let list1606 = vm.gc.listn(&[Object::Number(64595), Object::Number(1607), Object::Number(1609)]);
    let list1607 = vm.gc.listn(&[Object::Number(64596), Object::Number(1607), Object::Number(1610)]);
    let list1608 = vm.gc.listn(&[Object::Number(64597), Object::Number(1610), Object::Number(1580)]);
    let list1609 = vm.gc.listn(&[Object::Number(64598), Object::Number(1610), Object::Number(1581)]);
    let list1610 = vm.gc.listn(&[Object::Number(64599), Object::Number(1610), Object::Number(1582)]);
    let list1611 = vm.gc.listn(&[Object::Number(64600), Object::Number(1610), Object::Number(1605)]);
    let list1612 = vm.gc.listn(&[Object::Number(64601), Object::Number(1610), Object::Number(1609)]);
    let list1613 = vm.gc.listn(&[Object::Number(64602), Object::Number(1610), Object::Number(1610)]);
    let list1614 = vm.gc.listn(&[Object::Number(64603), Object::Number(1584), Object::Number(1648)]);
    let list1615 = vm.gc.listn(&[Object::Number(64604), Object::Number(1585), Object::Number(1648)]);
    let list1616 = vm.gc.listn(&[Object::Number(64605), Object::Number(1609), Object::Number(1648)]);
    let list1617 = vm.gc.listn(&[Object::Number(64606), Object::Number(32), Object::Number(1612), Object::Number(1617)]);
    let list1618 = vm.gc.listn(&[Object::Number(64607), Object::Number(32), Object::Number(1613), Object::Number(1617)]);
    let list1619 = vm.gc.listn(&[Object::Number(64608), Object::Number(32), Object::Number(1614), Object::Number(1617)]);
    let list1620 = vm.gc.listn(&[Object::Number(64609), Object::Number(32), Object::Number(1615), Object::Number(1617)]);
    let list1621 = vm.gc.listn(&[Object::Number(64610), Object::Number(32), Object::Number(1616), Object::Number(1617)]);
    let list1622 = vm.gc.listn(&[Object::Number(64611), Object::Number(32), Object::Number(1617), Object::Number(1648)]);
    let list1623 = vm.gc.listn(&[Object::Number(64612), Object::Number(1574), Object::Number(1585)]);
    let list1624 = vm.gc.listn(&[Object::Number(64613), Object::Number(1574), Object::Number(1586)]);
    let list1625 = vm.gc.listn(&[Object::Number(64614), Object::Number(1574), Object::Number(1605)]);
    let list1626 = vm.gc.listn(&[Object::Number(64615), Object::Number(1574), Object::Number(1606)]);
    let list1627 = vm.gc.listn(&[Object::Number(64616), Object::Number(1574), Object::Number(1609)]);
    let list1628 = vm.gc.listn(&[Object::Number(64617), Object::Number(1574), Object::Number(1610)]);
    let list1629 = vm.gc.listn(&[Object::Number(64618), Object::Number(1576), Object::Number(1585)]);
    let list1630 = vm.gc.listn(&[Object::Number(64619), Object::Number(1576), Object::Number(1586)]);
    let list1631 = vm.gc.listn(&[Object::Number(64620), Object::Number(1576), Object::Number(1605)]);
    let list1632 = vm.gc.listn(&[Object::Number(64621), Object::Number(1576), Object::Number(1606)]);
    let list1633 = vm.gc.listn(&[Object::Number(64622), Object::Number(1576), Object::Number(1609)]);
    let list1634 = vm.gc.listn(&[Object::Number(64623), Object::Number(1576), Object::Number(1610)]);
    let list1635 = vm.gc.listn(&[Object::Number(64624), Object::Number(1578), Object::Number(1585)]);
    let list1636 = vm.gc.listn(&[Object::Number(64625), Object::Number(1578), Object::Number(1586)]);
    let list1637 = vm.gc.listn(&[Object::Number(64626), Object::Number(1578), Object::Number(1605)]);
    let list1638 = vm.gc.listn(&[Object::Number(64627), Object::Number(1578), Object::Number(1606)]);
    let list1639 = vm.gc.listn(&[Object::Number(64628), Object::Number(1578), Object::Number(1609)]);
    let list1640 = vm.gc.listn(&[Object::Number(64629), Object::Number(1578), Object::Number(1610)]);
    let list1641 = vm.gc.listn(&[Object::Number(64630), Object::Number(1579), Object::Number(1585)]);
    let list1642 = vm.gc.listn(&[Object::Number(64631), Object::Number(1579), Object::Number(1586)]);
    let list1643 = vm.gc.listn(&[Object::Number(64632), Object::Number(1579), Object::Number(1605)]);
    let list1644 = vm.gc.listn(&[Object::Number(64633), Object::Number(1579), Object::Number(1606)]);
    let list1645 = vm.gc.listn(&[Object::Number(64634), Object::Number(1579), Object::Number(1609)]);
    let list1646 = vm.gc.listn(&[Object::Number(64635), Object::Number(1579), Object::Number(1610)]);
    let list1647 = vm.gc.listn(&[Object::Number(64636), Object::Number(1601), Object::Number(1609)]);
    let list1648 = vm.gc.listn(&[Object::Number(64637), Object::Number(1601), Object::Number(1610)]);
    let list1649 = vm.gc.listn(&[Object::Number(64638), Object::Number(1602), Object::Number(1609)]);
    let list1650 = vm.gc.listn(&[Object::Number(64639), Object::Number(1602), Object::Number(1610)]);
    let list1651 = vm.gc.listn(&[Object::Number(64640), Object::Number(1603), Object::Number(1575)]);
    let list1652 = vm.gc.listn(&[Object::Number(64641), Object::Number(1603), Object::Number(1604)]);
    let list1653 = vm.gc.listn(&[Object::Number(64642), Object::Number(1603), Object::Number(1605)]);
    let list1654 = vm.gc.listn(&[Object::Number(64643), Object::Number(1603), Object::Number(1609)]);
    let list1655 = vm.gc.listn(&[Object::Number(64644), Object::Number(1603), Object::Number(1610)]);
    let list1656 = vm.gc.listn(&[Object::Number(64645), Object::Number(1604), Object::Number(1605)]);
    let list1657 = vm.gc.listn(&[Object::Number(64646), Object::Number(1604), Object::Number(1609)]);
    let list1658 = vm.gc.listn(&[Object::Number(64647), Object::Number(1604), Object::Number(1610)]);
    let list1659 = vm.gc.listn(&[Object::Number(64648), Object::Number(1605), Object::Number(1575)]);
    let list1660 = vm.gc.listn(&[Object::Number(64649), Object::Number(1605), Object::Number(1605)]);
    let list1661 = vm.gc.listn(&[Object::Number(64650), Object::Number(1606), Object::Number(1585)]);
    let list1662 = vm.gc.listn(&[Object::Number(64651), Object::Number(1606), Object::Number(1586)]);
    let list1663 = vm.gc.listn(&[Object::Number(64652), Object::Number(1606), Object::Number(1605)]);
    let list1664 = vm.gc.listn(&[Object::Number(64653), Object::Number(1606), Object::Number(1606)]);
    let list1665 = vm.gc.listn(&[Object::Number(64654), Object::Number(1606), Object::Number(1609)]);
    let list1666 = vm.gc.listn(&[Object::Number(64655), Object::Number(1606), Object::Number(1610)]);
    let list1667 = vm.gc.listn(&[Object::Number(64656), Object::Number(1609), Object::Number(1648)]);
    let list1668 = vm.gc.listn(&[Object::Number(64657), Object::Number(1610), Object::Number(1585)]);
    let list1669 = vm.gc.listn(&[Object::Number(64658), Object::Number(1610), Object::Number(1586)]);
    let list1670 = vm.gc.listn(&[Object::Number(64659), Object::Number(1610), Object::Number(1605)]);
    let list1671 = vm.gc.listn(&[Object::Number(64660), Object::Number(1610), Object::Number(1606)]);
    let list1672 = vm.gc.listn(&[Object::Number(64661), Object::Number(1610), Object::Number(1609)]);
    let list1673 = vm.gc.listn(&[Object::Number(64662), Object::Number(1610), Object::Number(1610)]);
    let list1674 = vm.gc.listn(&[Object::Number(64663), Object::Number(1574), Object::Number(1580)]);
    let list1675 = vm.gc.listn(&[Object::Number(64664), Object::Number(1574), Object::Number(1581)]);
    let list1676 = vm.gc.listn(&[Object::Number(64665), Object::Number(1574), Object::Number(1582)]);
    let list1677 = vm.gc.listn(&[Object::Number(64666), Object::Number(1574), Object::Number(1605)]);
    let list1678 = vm.gc.listn(&[Object::Number(64667), Object::Number(1574), Object::Number(1607)]);
    let list1679 = vm.gc.listn(&[Object::Number(64668), Object::Number(1576), Object::Number(1580)]);
    let list1680 = vm.gc.listn(&[Object::Number(64669), Object::Number(1576), Object::Number(1581)]);
    let list1681 = vm.gc.listn(&[Object::Number(64670), Object::Number(1576), Object::Number(1582)]);
    let list1682 = vm.gc.listn(&[Object::Number(64671), Object::Number(1576), Object::Number(1605)]);
    let list1683 = vm.gc.listn(&[Object::Number(64672), Object::Number(1576), Object::Number(1607)]);
    let list1684 = vm.gc.listn(&[Object::Number(64673), Object::Number(1578), Object::Number(1580)]);
    let list1685 = vm.gc.listn(&[Object::Number(64674), Object::Number(1578), Object::Number(1581)]);
    let list1686 = vm.gc.listn(&[Object::Number(64675), Object::Number(1578), Object::Number(1582)]);
    let list1687 = vm.gc.listn(&[Object::Number(64676), Object::Number(1578), Object::Number(1605)]);
    let list1688 = vm.gc.listn(&[Object::Number(64677), Object::Number(1578), Object::Number(1607)]);
    let list1689 = vm.gc.listn(&[Object::Number(64678), Object::Number(1579), Object::Number(1605)]);
    let list1690 = vm.gc.listn(&[Object::Number(64679), Object::Number(1580), Object::Number(1581)]);
    let list1691 = vm.gc.listn(&[Object::Number(64680), Object::Number(1580), Object::Number(1605)]);
    let list1692 = vm.gc.listn(&[Object::Number(64681), Object::Number(1581), Object::Number(1580)]);
    let list1693 = vm.gc.listn(&[Object::Number(64682), Object::Number(1581), Object::Number(1605)]);
    let list1694 = vm.gc.listn(&[Object::Number(64683), Object::Number(1582), Object::Number(1580)]);
    let list1695 = vm.gc.listn(&[Object::Number(64684), Object::Number(1582), Object::Number(1605)]);
    let list1696 = vm.gc.listn(&[Object::Number(64685), Object::Number(1587), Object::Number(1580)]);
    let list1697 = vm.gc.listn(&[Object::Number(64686), Object::Number(1587), Object::Number(1581)]);
    let list1698 = vm.gc.listn(&[Object::Number(64687), Object::Number(1587), Object::Number(1582)]);
    let list1699 = vm.gc.listn(&[Object::Number(64688), Object::Number(1587), Object::Number(1605)]);
    let list1700 = vm.gc.listn(&[Object::Number(64689), Object::Number(1589), Object::Number(1581)]);
    let list1701 = vm.gc.listn(&[Object::Number(64690), Object::Number(1589), Object::Number(1582)]);
    let list1702 = vm.gc.listn(&[Object::Number(64691), Object::Number(1589), Object::Number(1605)]);
    let list1703 = vm.gc.listn(&[Object::Number(64692), Object::Number(1590), Object::Number(1580)]);
    let list1704 = vm.gc.listn(&[Object::Number(64693), Object::Number(1590), Object::Number(1581)]);
    let list1705 = vm.gc.listn(&[Object::Number(64694), Object::Number(1590), Object::Number(1582)]);
    let list1706 = vm.gc.listn(&[Object::Number(64695), Object::Number(1590), Object::Number(1605)]);
    let list1707 = vm.gc.listn(&[Object::Number(64696), Object::Number(1591), Object::Number(1581)]);
    let list1708 = vm.gc.listn(&[Object::Number(64697), Object::Number(1592), Object::Number(1605)]);
    let list1709 = vm.gc.listn(&[Object::Number(64698), Object::Number(1593), Object::Number(1580)]);
    let list1710 = vm.gc.listn(&[Object::Number(64699), Object::Number(1593), Object::Number(1605)]);
    let list1711 = vm.gc.listn(&[Object::Number(64700), Object::Number(1594), Object::Number(1580)]);
    let list1712 = vm.gc.listn(&[Object::Number(64701), Object::Number(1594), Object::Number(1605)]);
    let list1713 = vm.gc.listn(&[Object::Number(64702), Object::Number(1601), Object::Number(1580)]);
    let list1714 = vm.gc.listn(&[Object::Number(64703), Object::Number(1601), Object::Number(1581)]);
    let list1715 = vm.gc.listn(&[Object::Number(64704), Object::Number(1601), Object::Number(1582)]);
    let list1716 = vm.gc.listn(&[Object::Number(64705), Object::Number(1601), Object::Number(1605)]);
    let list1717 = vm.gc.listn(&[Object::Number(64706), Object::Number(1602), Object::Number(1581)]);
    let list1718 = vm.gc.listn(&[Object::Number(64707), Object::Number(1602), Object::Number(1605)]);
    let list1719 = vm.gc.listn(&[Object::Number(64708), Object::Number(1603), Object::Number(1580)]);
    let list1720 = vm.gc.listn(&[Object::Number(64709), Object::Number(1603), Object::Number(1581)]);
    let list1721 = vm.gc.listn(&[Object::Number(64710), Object::Number(1603), Object::Number(1582)]);
    let list1722 = vm.gc.listn(&[Object::Number(64711), Object::Number(1603), Object::Number(1604)]);
    let list1723 = vm.gc.listn(&[Object::Number(64712), Object::Number(1603), Object::Number(1605)]);
    let list1724 = vm.gc.listn(&[Object::Number(64713), Object::Number(1604), Object::Number(1580)]);
    let list1725 = vm.gc.listn(&[Object::Number(64714), Object::Number(1604), Object::Number(1581)]);
    let list1726 = vm.gc.listn(&[Object::Number(64715), Object::Number(1604), Object::Number(1582)]);
    let list1727 = vm.gc.listn(&[Object::Number(64716), Object::Number(1604), Object::Number(1605)]);
    let list1728 = vm.gc.listn(&[Object::Number(64717), Object::Number(1604), Object::Number(1607)]);
    let list1729 = vm.gc.listn(&[Object::Number(64718), Object::Number(1605), Object::Number(1580)]);
    let list1730 = vm.gc.listn(&[Object::Number(64719), Object::Number(1605), Object::Number(1581)]);
    let list1731 = vm.gc.listn(&[Object::Number(64720), Object::Number(1605), Object::Number(1582)]);
    let list1732 = vm.gc.listn(&[Object::Number(64721), Object::Number(1605), Object::Number(1605)]);
    let list1733 = vm.gc.listn(&[Object::Number(64722), Object::Number(1606), Object::Number(1580)]);
    let list1734 = vm.gc.listn(&[Object::Number(64723), Object::Number(1606), Object::Number(1581)]);
    let list1735 = vm.gc.listn(&[Object::Number(64724), Object::Number(1606), Object::Number(1582)]);
    let list1736 = vm.gc.listn(&[Object::Number(64725), Object::Number(1606), Object::Number(1605)]);
    let list1737 = vm.gc.listn(&[Object::Number(64726), Object::Number(1606), Object::Number(1607)]);
    let list1738 = vm.gc.listn(&[Object::Number(64727), Object::Number(1607), Object::Number(1580)]);
    let list1739 = vm.gc.listn(&[Object::Number(64728), Object::Number(1607), Object::Number(1605)]);
    let list1740 = vm.gc.listn(&[Object::Number(64729), Object::Number(1607), Object::Number(1648)]);
    let list1741 = vm.gc.listn(&[Object::Number(64730), Object::Number(1610), Object::Number(1580)]);
    let list1742 = vm.gc.listn(&[Object::Number(64731), Object::Number(1610), Object::Number(1581)]);
    let list1743 = vm.gc.listn(&[Object::Number(64732), Object::Number(1610), Object::Number(1582)]);
    let list1744 = vm.gc.listn(&[Object::Number(64733), Object::Number(1610), Object::Number(1605)]);
    let list1745 = vm.gc.listn(&[Object::Number(64734), Object::Number(1610), Object::Number(1607)]);
    let list1746 = vm.gc.listn(&[Object::Number(64735), Object::Number(1574), Object::Number(1605)]);
    let list1747 = vm.gc.listn(&[Object::Number(64736), Object::Number(1574), Object::Number(1607)]);
    let list1748 = vm.gc.listn(&[Object::Number(64737), Object::Number(1576), Object::Number(1605)]);
    let list1749 = vm.gc.listn(&[Object::Number(64738), Object::Number(1576), Object::Number(1607)]);
    let list1750 = vm.gc.listn(&[Object::Number(64739), Object::Number(1578), Object::Number(1605)]);
    let list1751 = vm.gc.listn(&[Object::Number(64740), Object::Number(1578), Object::Number(1607)]);
    let list1752 = vm.gc.listn(&[Object::Number(64741), Object::Number(1579), Object::Number(1605)]);
    let list1753 = vm.gc.listn(&[Object::Number(64742), Object::Number(1579), Object::Number(1607)]);
    let list1754 = vm.gc.listn(&[Object::Number(64743), Object::Number(1587), Object::Number(1605)]);
    let list1755 = vm.gc.listn(&[Object::Number(64744), Object::Number(1587), Object::Number(1607)]);
    let list1756 = vm.gc.listn(&[Object::Number(64745), Object::Number(1588), Object::Number(1605)]);
    let list1757 = vm.gc.listn(&[Object::Number(64746), Object::Number(1588), Object::Number(1607)]);
    let list1758 = vm.gc.listn(&[Object::Number(64747), Object::Number(1603), Object::Number(1604)]);
    let list1759 = vm.gc.listn(&[Object::Number(64748), Object::Number(1603), Object::Number(1605)]);
    let list1760 = vm.gc.listn(&[Object::Number(64749), Object::Number(1604), Object::Number(1605)]);
    let list1761 = vm.gc.listn(&[Object::Number(64750), Object::Number(1606), Object::Number(1605)]);
    let list1762 = vm.gc.listn(&[Object::Number(64751), Object::Number(1606), Object::Number(1607)]);
    let list1763 = vm.gc.listn(&[Object::Number(64752), Object::Number(1610), Object::Number(1605)]);
    let list1764 = vm.gc.listn(&[Object::Number(64753), Object::Number(1610), Object::Number(1607)]);
    let list1765 = vm.gc.listn(&[Object::Number(64754), Object::Number(1600), Object::Number(1614), Object::Number(1617)]);
    let list1766 = vm.gc.listn(&[Object::Number(64755), Object::Number(1600), Object::Number(1615), Object::Number(1617)]);
    let list1767 = vm.gc.listn(&[Object::Number(64756), Object::Number(1600), Object::Number(1616), Object::Number(1617)]);
    let list1768 = vm.gc.listn(&[Object::Number(64757), Object::Number(1591), Object::Number(1609)]);
    let list1769 = vm.gc.listn(&[Object::Number(64758), Object::Number(1591), Object::Number(1610)]);
    let list1770 = vm.gc.listn(&[Object::Number(64759), Object::Number(1593), Object::Number(1609)]);
    let list1771 = vm.gc.listn(&[Object::Number(64760), Object::Number(1593), Object::Number(1610)]);
    let list1772 = vm.gc.listn(&[Object::Number(64761), Object::Number(1594), Object::Number(1609)]);
    let list1773 = vm.gc.listn(&[Object::Number(64762), Object::Number(1594), Object::Number(1610)]);
    let list1774 = vm.gc.listn(&[Object::Number(64763), Object::Number(1587), Object::Number(1609)]);
    let list1775 = vm.gc.listn(&[Object::Number(64764), Object::Number(1587), Object::Number(1610)]);
    let list1776 = vm.gc.listn(&[Object::Number(64765), Object::Number(1588), Object::Number(1609)]);
    let list1777 = vm.gc.listn(&[Object::Number(64766), Object::Number(1588), Object::Number(1610)]);
    let list1778 = vm.gc.listn(&[Object::Number(64767), Object::Number(1581), Object::Number(1609)]);
    let list1779 = vm.gc.listn(&[Object::Number(64768), Object::Number(1581), Object::Number(1610)]);
    let list1780 = vm.gc.listn(&[Object::Number(64769), Object::Number(1580), Object::Number(1609)]);
    let list1781 = vm.gc.listn(&[Object::Number(64770), Object::Number(1580), Object::Number(1610)]);
    let list1782 = vm.gc.listn(&[Object::Number(64771), Object::Number(1582), Object::Number(1609)]);
    let list1783 = vm.gc.listn(&[Object::Number(64772), Object::Number(1582), Object::Number(1610)]);
    let list1784 = vm.gc.listn(&[Object::Number(64773), Object::Number(1589), Object::Number(1609)]);
    let list1785 = vm.gc.listn(&[Object::Number(64774), Object::Number(1589), Object::Number(1610)]);
    let list1786 = vm.gc.listn(&[Object::Number(64775), Object::Number(1590), Object::Number(1609)]);
    let list1787 = vm.gc.listn(&[Object::Number(64776), Object::Number(1590), Object::Number(1610)]);
    let list1788 = vm.gc.listn(&[Object::Number(64777), Object::Number(1588), Object::Number(1580)]);
    let list1789 = vm.gc.listn(&[Object::Number(64778), Object::Number(1588), Object::Number(1581)]);
    let list1790 = vm.gc.listn(&[Object::Number(64779), Object::Number(1588), Object::Number(1582)]);
    let list1791 = vm.gc.listn(&[Object::Number(64780), Object::Number(1588), Object::Number(1605)]);
    let list1792 = vm.gc.listn(&[Object::Number(64781), Object::Number(1588), Object::Number(1585)]);
    let list1793 = vm.gc.listn(&[Object::Number(64782), Object::Number(1587), Object::Number(1585)]);
    let list1794 = vm.gc.listn(&[Object::Number(64783), Object::Number(1589), Object::Number(1585)]);
    let list1795 = vm.gc.listn(&[Object::Number(64784), Object::Number(1590), Object::Number(1585)]);
    let list1796 = vm.gc.listn(&[Object::Number(64785), Object::Number(1591), Object::Number(1609)]);
    let list1797 = vm.gc.listn(&[Object::Number(64786), Object::Number(1591), Object::Number(1610)]);
    let list1798 = vm.gc.listn(&[Object::Number(64787), Object::Number(1593), Object::Number(1609)]);
    let list1799 = vm.gc.listn(&[Object::Number(64788), Object::Number(1593), Object::Number(1610)]);
    let list1800 = vm.gc.listn(&[Object::Number(64789), Object::Number(1594), Object::Number(1609)]);
    let list1801 = vm.gc.listn(&[Object::Number(64790), Object::Number(1594), Object::Number(1610)]);
    let list1802 = vm.gc.listn(&[Object::Number(64791), Object::Number(1587), Object::Number(1609)]);
    let list1803 = vm.gc.listn(&[Object::Number(64792), Object::Number(1587), Object::Number(1610)]);
    let list1804 = vm.gc.listn(&[Object::Number(64793), Object::Number(1588), Object::Number(1609)]);
    let list1805 = vm.gc.listn(&[Object::Number(64794), Object::Number(1588), Object::Number(1610)]);
    let list1806 = vm.gc.listn(&[Object::Number(64795), Object::Number(1581), Object::Number(1609)]);
    let list1807 = vm.gc.listn(&[Object::Number(64796), Object::Number(1581), Object::Number(1610)]);
    let list1808 = vm.gc.listn(&[Object::Number(64797), Object::Number(1580), Object::Number(1609)]);
    let list1809 = vm.gc.listn(&[Object::Number(64798), Object::Number(1580), Object::Number(1610)]);
    let list1810 = vm.gc.listn(&[Object::Number(64799), Object::Number(1582), Object::Number(1609)]);
    let list1811 = vm.gc.listn(&[Object::Number(64800), Object::Number(1582), Object::Number(1610)]);
    let list1812 = vm.gc.listn(&[Object::Number(64801), Object::Number(1589), Object::Number(1609)]);
    let list1813 = vm.gc.listn(&[Object::Number(64802), Object::Number(1589), Object::Number(1610)]);
    let list1814 = vm.gc.listn(&[Object::Number(64803), Object::Number(1590), Object::Number(1609)]);
    let list1815 = vm.gc.listn(&[Object::Number(64804), Object::Number(1590), Object::Number(1610)]);
    let list1816 = vm.gc.listn(&[Object::Number(64805), Object::Number(1588), Object::Number(1580)]);
    let list1817 = vm.gc.listn(&[Object::Number(64806), Object::Number(1588), Object::Number(1581)]);
    let list1818 = vm.gc.listn(&[Object::Number(64807), Object::Number(1588), Object::Number(1582)]);
    let list1819 = vm.gc.listn(&[Object::Number(64808), Object::Number(1588), Object::Number(1605)]);
    let list1820 = vm.gc.listn(&[Object::Number(64809), Object::Number(1588), Object::Number(1585)]);
    let list1821 = vm.gc.listn(&[Object::Number(64810), Object::Number(1587), Object::Number(1585)]);
    let list1822 = vm.gc.listn(&[Object::Number(64811), Object::Number(1589), Object::Number(1585)]);
    let list1823 = vm.gc.listn(&[Object::Number(64812), Object::Number(1590), Object::Number(1585)]);
    let list1824 = vm.gc.listn(&[Object::Number(64813), Object::Number(1588), Object::Number(1580)]);
    let list1825 = vm.gc.listn(&[Object::Number(64814), Object::Number(1588), Object::Number(1581)]);
    let list1826 = vm.gc.listn(&[Object::Number(64815), Object::Number(1588), Object::Number(1582)]);
    let list1827 = vm.gc.listn(&[Object::Number(64816), Object::Number(1588), Object::Number(1605)]);
    let list1828 = vm.gc.listn(&[Object::Number(64817), Object::Number(1587), Object::Number(1607)]);
    let list1829 = vm.gc.listn(&[Object::Number(64818), Object::Number(1588), Object::Number(1607)]);
    let list1830 = vm.gc.listn(&[Object::Number(64819), Object::Number(1591), Object::Number(1605)]);
    let list1831 = vm.gc.listn(&[Object::Number(64820), Object::Number(1587), Object::Number(1580)]);
    let list1832 = vm.gc.listn(&[Object::Number(64821), Object::Number(1587), Object::Number(1581)]);
    let list1833 = vm.gc.listn(&[Object::Number(64822), Object::Number(1587), Object::Number(1582)]);
    let list1834 = vm.gc.listn(&[Object::Number(64823), Object::Number(1588), Object::Number(1580)]);
    let list1835 = vm.gc.listn(&[Object::Number(64824), Object::Number(1588), Object::Number(1581)]);
    let list1836 = vm.gc.listn(&[Object::Number(64825), Object::Number(1588), Object::Number(1582)]);
    let list1837 = vm.gc.listn(&[Object::Number(64826), Object::Number(1591), Object::Number(1605)]);
    let list1838 = vm.gc.listn(&[Object::Number(64827), Object::Number(1592), Object::Number(1605)]);
    let list1839 = vm.gc.listn(&[Object::Number(64828), Object::Number(1575), Object::Number(1611)]);
    let list1840 = vm.gc.listn(&[Object::Number(64829), Object::Number(1575), Object::Number(1611)]);
    let list1841 = vm.gc.listn(&[Object::Number(64848), Object::Number(1578), Object::Number(1580), Object::Number(1605)]);
    let list1842 = vm.gc.listn(&[Object::Number(64849), Object::Number(1578), Object::Number(1581), Object::Number(1580)]);
    let list1843 = vm.gc.listn(&[Object::Number(64850), Object::Number(1578), Object::Number(1581), Object::Number(1580)]);
    let list1844 = vm.gc.listn(&[Object::Number(64851), Object::Number(1578), Object::Number(1581), Object::Number(1605)]);
    let list1845 = vm.gc.listn(&[Object::Number(64852), Object::Number(1578), Object::Number(1582), Object::Number(1605)]);
    let list1846 = vm.gc.listn(&[Object::Number(64853), Object::Number(1578), Object::Number(1605), Object::Number(1580)]);
    let list1847 = vm.gc.listn(&[Object::Number(64854), Object::Number(1578), Object::Number(1605), Object::Number(1581)]);
    let list1848 = vm.gc.listn(&[Object::Number(64855), Object::Number(1578), Object::Number(1605), Object::Number(1582)]);
    let list1849 = vm.gc.listn(&[Object::Number(64856), Object::Number(1580), Object::Number(1605), Object::Number(1581)]);
    let list1850 = vm.gc.listn(&[Object::Number(64857), Object::Number(1580), Object::Number(1605), Object::Number(1581)]);
    let list1851 = vm.gc.listn(&[Object::Number(64858), Object::Number(1581), Object::Number(1605), Object::Number(1610)]);
    let list1852 = vm.gc.listn(&[Object::Number(64859), Object::Number(1581), Object::Number(1605), Object::Number(1609)]);
    let list1853 = vm.gc.listn(&[Object::Number(64860), Object::Number(1587), Object::Number(1581), Object::Number(1580)]);
    let list1854 = vm.gc.listn(&[Object::Number(64861), Object::Number(1587), Object::Number(1580), Object::Number(1581)]);
    let list1855 = vm.gc.listn(&[Object::Number(64862), Object::Number(1587), Object::Number(1580), Object::Number(1609)]);
    let list1856 = vm.gc.listn(&[Object::Number(64863), Object::Number(1587), Object::Number(1605), Object::Number(1581)]);
    let list1857 = vm.gc.listn(&[Object::Number(64864), Object::Number(1587), Object::Number(1605), Object::Number(1581)]);
    let list1858 = vm.gc.listn(&[Object::Number(64865), Object::Number(1587), Object::Number(1605), Object::Number(1580)]);
    let list1859 = vm.gc.listn(&[Object::Number(64866), Object::Number(1587), Object::Number(1605), Object::Number(1605)]);
    let list1860 = vm.gc.listn(&[Object::Number(64867), Object::Number(1587), Object::Number(1605), Object::Number(1605)]);
    let list1861 = vm.gc.listn(&[Object::Number(64868), Object::Number(1589), Object::Number(1581), Object::Number(1581)]);
    let list1862 = vm.gc.listn(&[Object::Number(64869), Object::Number(1589), Object::Number(1581), Object::Number(1581)]);
    let list1863 = vm.gc.listn(&[Object::Number(64870), Object::Number(1589), Object::Number(1605), Object::Number(1605)]);
    let list1864 = vm.gc.listn(&[Object::Number(64871), Object::Number(1588), Object::Number(1581), Object::Number(1605)]);
    let list1865 = vm.gc.listn(&[Object::Number(64872), Object::Number(1588), Object::Number(1581), Object::Number(1605)]);
    let list1866 = vm.gc.listn(&[Object::Number(64873), Object::Number(1588), Object::Number(1580), Object::Number(1610)]);
    let list1867 = vm.gc.listn(&[Object::Number(64874), Object::Number(1588), Object::Number(1605), Object::Number(1582)]);
    let list1868 = vm.gc.listn(&[Object::Number(64875), Object::Number(1588), Object::Number(1605), Object::Number(1582)]);
    let list1869 = vm.gc.listn(&[Object::Number(64876), Object::Number(1588), Object::Number(1605), Object::Number(1605)]);
    let list1870 = vm.gc.listn(&[Object::Number(64877), Object::Number(1588), Object::Number(1605), Object::Number(1605)]);
    let list1871 = vm.gc.listn(&[Object::Number(64878), Object::Number(1590), Object::Number(1581), Object::Number(1609)]);
    let list1872 = vm.gc.listn(&[Object::Number(64879), Object::Number(1590), Object::Number(1582), Object::Number(1605)]);
    let list1873 = vm.gc.listn(&[Object::Number(64880), Object::Number(1590), Object::Number(1582), Object::Number(1605)]);
    let list1874 = vm.gc.listn(&[Object::Number(64881), Object::Number(1591), Object::Number(1605), Object::Number(1581)]);
    let list1875 = vm.gc.listn(&[Object::Number(64882), Object::Number(1591), Object::Number(1605), Object::Number(1581)]);
    let list1876 = vm.gc.listn(&[Object::Number(64883), Object::Number(1591), Object::Number(1605), Object::Number(1605)]);
    let list1877 = vm.gc.listn(&[Object::Number(64884), Object::Number(1591), Object::Number(1605), Object::Number(1610)]);
    let list1878 = vm.gc.listn(&[Object::Number(64885), Object::Number(1593), Object::Number(1580), Object::Number(1605)]);
    let list1879 = vm.gc.listn(&[Object::Number(64886), Object::Number(1593), Object::Number(1605), Object::Number(1605)]);
    let list1880 = vm.gc.listn(&[Object::Number(64887), Object::Number(1593), Object::Number(1605), Object::Number(1605)]);
    let list1881 = vm.gc.listn(&[Object::Number(64888), Object::Number(1593), Object::Number(1605), Object::Number(1609)]);
    let list1882 = vm.gc.listn(&[Object::Number(64889), Object::Number(1594), Object::Number(1605), Object::Number(1605)]);
    let list1883 = vm.gc.listn(&[Object::Number(64890), Object::Number(1594), Object::Number(1605), Object::Number(1610)]);
    let list1884 = vm.gc.listn(&[Object::Number(64891), Object::Number(1594), Object::Number(1605), Object::Number(1609)]);
    let list1885 = vm.gc.listn(&[Object::Number(64892), Object::Number(1601), Object::Number(1582), Object::Number(1605)]);
    let list1886 = vm.gc.listn(&[Object::Number(64893), Object::Number(1601), Object::Number(1582), Object::Number(1605)]);
    let list1887 = vm.gc.listn(&[Object::Number(64894), Object::Number(1602), Object::Number(1605), Object::Number(1581)]);
    let list1888 = vm.gc.listn(&[Object::Number(64895), Object::Number(1602), Object::Number(1605), Object::Number(1605)]);
    let list1889 = vm.gc.listn(&[Object::Number(64896), Object::Number(1604), Object::Number(1581), Object::Number(1605)]);
    let list1890 = vm.gc.listn(&[Object::Number(64897), Object::Number(1604), Object::Number(1581), Object::Number(1610)]);
    let list1891 = vm.gc.listn(&[Object::Number(64898), Object::Number(1604), Object::Number(1581), Object::Number(1609)]);
    let list1892 = vm.gc.listn(&[Object::Number(64899), Object::Number(1604), Object::Number(1580), Object::Number(1580)]);
    let list1893 = vm.gc.listn(&[Object::Number(64900), Object::Number(1604), Object::Number(1580), Object::Number(1580)]);
    let list1894 = vm.gc.listn(&[Object::Number(64901), Object::Number(1604), Object::Number(1582), Object::Number(1605)]);
    let list1895 = vm.gc.listn(&[Object::Number(64902), Object::Number(1604), Object::Number(1582), Object::Number(1605)]);
    let list1896 = vm.gc.listn(&[Object::Number(64903), Object::Number(1604), Object::Number(1605), Object::Number(1581)]);
    let list1897 = vm.gc.listn(&[Object::Number(64904), Object::Number(1604), Object::Number(1605), Object::Number(1581)]);
    let list1898 = vm.gc.listn(&[Object::Number(64905), Object::Number(1605), Object::Number(1581), Object::Number(1580)]);
    let list1899 = vm.gc.listn(&[Object::Number(64906), Object::Number(1605), Object::Number(1581), Object::Number(1605)]);
    let list1900 = vm.gc.listn(&[Object::Number(64907), Object::Number(1605), Object::Number(1581), Object::Number(1610)]);
    let list1901 = vm.gc.listn(&[Object::Number(64908), Object::Number(1605), Object::Number(1580), Object::Number(1581)]);
    let list1902 = vm.gc.listn(&[Object::Number(64909), Object::Number(1605), Object::Number(1580), Object::Number(1605)]);
    let list1903 = vm.gc.listn(&[Object::Number(64910), Object::Number(1605), Object::Number(1582), Object::Number(1580)]);
    let list1904 = vm.gc.listn(&[Object::Number(64911), Object::Number(1605), Object::Number(1582), Object::Number(1605)]);
    let list1905 = vm.gc.listn(&[Object::Number(64914), Object::Number(1605), Object::Number(1580), Object::Number(1582)]);
    let list1906 = vm.gc.listn(&[Object::Number(64915), Object::Number(1607), Object::Number(1605), Object::Number(1580)]);
    let list1907 = vm.gc.listn(&[Object::Number(64916), Object::Number(1607), Object::Number(1605), Object::Number(1605)]);
    let list1908 = vm.gc.listn(&[Object::Number(64917), Object::Number(1606), Object::Number(1581), Object::Number(1605)]);
    let list1909 = vm.gc.listn(&[Object::Number(64918), Object::Number(1606), Object::Number(1581), Object::Number(1609)]);
    let list1910 = vm.gc.listn(&[Object::Number(64919), Object::Number(1606), Object::Number(1580), Object::Number(1605)]);
    let list1911 = vm.gc.listn(&[Object::Number(64920), Object::Number(1606), Object::Number(1580), Object::Number(1605)]);
    let list1912 = vm.gc.listn(&[Object::Number(64921), Object::Number(1606), Object::Number(1580), Object::Number(1609)]);
    let list1913 = vm.gc.listn(&[Object::Number(64922), Object::Number(1606), Object::Number(1605), Object::Number(1610)]);
    let list1914 = vm.gc.listn(&[Object::Number(64923), Object::Number(1606), Object::Number(1605), Object::Number(1609)]);
    let list1915 = vm.gc.listn(&[Object::Number(64924), Object::Number(1610), Object::Number(1605), Object::Number(1605)]);
    let list1916 = vm.gc.listn(&[Object::Number(64925), Object::Number(1610), Object::Number(1605), Object::Number(1605)]);
    let list1917 = vm.gc.listn(&[Object::Number(64926), Object::Number(1576), Object::Number(1582), Object::Number(1610)]);
    let list1918 = vm.gc.listn(&[Object::Number(64927), Object::Number(1578), Object::Number(1580), Object::Number(1610)]);
    let list1919 = vm.gc.listn(&[Object::Number(64928), Object::Number(1578), Object::Number(1580), Object::Number(1609)]);
    let list1920 = vm.gc.listn(&[Object::Number(64929), Object::Number(1578), Object::Number(1582), Object::Number(1610)]);
    let list1921 = vm.gc.listn(&[Object::Number(64930), Object::Number(1578), Object::Number(1582), Object::Number(1609)]);
    let list1922 = vm.gc.listn(&[Object::Number(64931), Object::Number(1578), Object::Number(1605), Object::Number(1610)]);
    let list1923 = vm.gc.listn(&[Object::Number(64932), Object::Number(1578), Object::Number(1605), Object::Number(1609)]);
    let list1924 = vm.gc.listn(&[Object::Number(64933), Object::Number(1580), Object::Number(1605), Object::Number(1610)]);
    let list1925 = vm.gc.listn(&[Object::Number(64934), Object::Number(1580), Object::Number(1581), Object::Number(1609)]);
    let list1926 = vm.gc.listn(&[Object::Number(64935), Object::Number(1580), Object::Number(1605), Object::Number(1609)]);
    let list1927 = vm.gc.listn(&[Object::Number(64936), Object::Number(1587), Object::Number(1582), Object::Number(1609)]);
    let list1928 = vm.gc.listn(&[Object::Number(64937), Object::Number(1589), Object::Number(1581), Object::Number(1610)]);
    let list1929 = vm.gc.listn(&[Object::Number(64938), Object::Number(1588), Object::Number(1581), Object::Number(1610)]);
    let list1930 = vm.gc.listn(&[Object::Number(64939), Object::Number(1590), Object::Number(1581), Object::Number(1610)]);
    let list1931 = vm.gc.listn(&[Object::Number(64940), Object::Number(1604), Object::Number(1580), Object::Number(1610)]);
    let list1932 = vm.gc.listn(&[Object::Number(64941), Object::Number(1604), Object::Number(1605), Object::Number(1610)]);
    let list1933 = vm.gc.listn(&[Object::Number(64942), Object::Number(1610), Object::Number(1581), Object::Number(1610)]);
    let list1934 = vm.gc.listn(&[Object::Number(64943), Object::Number(1610), Object::Number(1580), Object::Number(1610)]);
    let list1935 = vm.gc.listn(&[Object::Number(64944), Object::Number(1610), Object::Number(1605), Object::Number(1610)]);
    let list1936 = vm.gc.listn(&[Object::Number(64945), Object::Number(1605), Object::Number(1605), Object::Number(1610)]);
    let list1937 = vm.gc.listn(&[Object::Number(64946), Object::Number(1602), Object::Number(1605), Object::Number(1610)]);
    let list1938 = vm.gc.listn(&[Object::Number(64947), Object::Number(1606), Object::Number(1581), Object::Number(1610)]);
    let list1939 = vm.gc.listn(&[Object::Number(64948), Object::Number(1602), Object::Number(1605), Object::Number(1581)]);
    let list1940 = vm.gc.listn(&[Object::Number(64949), Object::Number(1604), Object::Number(1581), Object::Number(1605)]);
    let list1941 = vm.gc.listn(&[Object::Number(64950), Object::Number(1593), Object::Number(1605), Object::Number(1610)]);
    let list1942 = vm.gc.listn(&[Object::Number(64951), Object::Number(1603), Object::Number(1605), Object::Number(1610)]);
    let list1943 = vm.gc.listn(&[Object::Number(64952), Object::Number(1606), Object::Number(1580), Object::Number(1581)]);
    let list1944 = vm.gc.listn(&[Object::Number(64953), Object::Number(1605), Object::Number(1582), Object::Number(1610)]);
    let list1945 = vm.gc.listn(&[Object::Number(64954), Object::Number(1604), Object::Number(1580), Object::Number(1605)]);
    let list1946 = vm.gc.listn(&[Object::Number(64955), Object::Number(1603), Object::Number(1605), Object::Number(1605)]);
    let list1947 = vm.gc.listn(&[Object::Number(64956), Object::Number(1604), Object::Number(1580), Object::Number(1605)]);
    let list1948 = vm.gc.listn(&[Object::Number(64957), Object::Number(1606), Object::Number(1580), Object::Number(1581)]);
    let list1949 = vm.gc.listn(&[Object::Number(64958), Object::Number(1580), Object::Number(1581), Object::Number(1610)]);
    let list1950 = vm.gc.listn(&[Object::Number(64959), Object::Number(1581), Object::Number(1580), Object::Number(1610)]);
    let list1951 = vm.gc.listn(&[Object::Number(64960), Object::Number(1605), Object::Number(1580), Object::Number(1610)]);
    let list1952 = vm.gc.listn(&[Object::Number(64961), Object::Number(1601), Object::Number(1605), Object::Number(1610)]);
    let list1953 = vm.gc.listn(&[Object::Number(64962), Object::Number(1576), Object::Number(1581), Object::Number(1610)]);
    let list1954 = vm.gc.listn(&[Object::Number(64963), Object::Number(1603), Object::Number(1605), Object::Number(1605)]);
    let list1955 = vm.gc.listn(&[Object::Number(64964), Object::Number(1593), Object::Number(1580), Object::Number(1605)]);
    let list1956 = vm.gc.listn(&[Object::Number(64965), Object::Number(1589), Object::Number(1605), Object::Number(1605)]);
    let list1957 = vm.gc.listn(&[Object::Number(64966), Object::Number(1587), Object::Number(1582), Object::Number(1610)]);
    let list1958 = vm.gc.listn(&[Object::Number(64967), Object::Number(1606), Object::Number(1580), Object::Number(1610)]);
    let list1959 = vm.gc.listn(&[Object::Number(65008), Object::Number(1589), Object::Number(1604), Object::Number(1746)]);
    let list1960 = vm.gc.listn(&[Object::Number(65009), Object::Number(1602), Object::Number(1604), Object::Number(1746)]);
    let list1961 = vm.gc.listn(&[Object::Number(65010), Object::Number(1575), Object::Number(1604), Object::Number(1604), Object::Number(1607)]);
    let list1962 = vm.gc.listn(&[Object::Number(65011), Object::Number(1575), Object::Number(1603), Object::Number(1576), Object::Number(1585)]);
    let list1963 = vm.gc.listn(&[Object::Number(65012), Object::Number(1605), Object::Number(1581), Object::Number(1605), Object::Number(1583)]);
    let list1964 = vm.gc.listn(&[Object::Number(65013), Object::Number(1589), Object::Number(1604), Object::Number(1593), Object::Number(1605)]);
    let list1965 = vm.gc.listn(&[Object::Number(65014), Object::Number(1585), Object::Number(1587), Object::Number(1608), Object::Number(1604)]);
    let list1966 = vm.gc.listn(&[Object::Number(65015), Object::Number(1593), Object::Number(1604), Object::Number(1610), Object::Number(1607)]);
    let list1967 = vm.gc.listn(&[Object::Number(65016), Object::Number(1608), Object::Number(1587), Object::Number(1604), Object::Number(1605)]);
    let list1968 = vm.gc.listn(&[Object::Number(65017), Object::Number(1589), Object::Number(1604), Object::Number(1609)]);
    let list1969 = vm.gc.listn(&[Object::Number(65018), Object::Number(1589), Object::Number(1604), Object::Number(1609), Object::Number(32), Object::Number(1575), Object::Number(1604), Object::Number(1604), Object::Number(1607), Object::Number(32), Object::Number(1593), Object::Number(1604), Object::Number(1610), Object::Number(1607), Object::Number(32), Object::Number(1608), Object::Number(1587), Object::Number(1604), Object::Number(1605)]);
    let list1970 = vm.gc.listn(&[Object::Number(65019), Object::Number(1580), Object::Number(1604), Object::Number(32), Object::Number(1580), Object::Number(1604), Object::Number(1575), Object::Number(1604), Object::Number(1607)]);
    let list1971 = vm.gc.listn(&[Object::Number(65020), Object::Number(1585), Object::Number(1740), Object::Number(1575), Object::Number(1604)]);
    let list1972 = vm.gc.listn(&[Object::Number(65040), Object::Number(44)]);
    let list1973 = vm.gc.listn(&[Object::Number(65041), Object::Number(12289)]);
    let list1974 = vm.gc.listn(&[Object::Number(65042), Object::Number(12290)]);
    let list1975 = vm.gc.listn(&[Object::Number(65043), Object::Number(58)]);
    let list1976 = vm.gc.listn(&[Object::Number(65044), Object::Number(59)]);
    let list1977 = vm.gc.listn(&[Object::Number(65045), Object::Number(33)]);
    let list1978 = vm.gc.listn(&[Object::Number(65046), Object::Number(63)]);
    let list1979 = vm.gc.listn(&[Object::Number(65047), Object::Number(12310)]);
    let list1980 = vm.gc.listn(&[Object::Number(65048), Object::Number(12311)]);
    let list1981 = vm.gc.listn(&[Object::Number(65049), Object::Number(8230)]);
    let list1982 = vm.gc.listn(&[Object::Number(65072), Object::Number(8229)]);
    let list1983 = vm.gc.listn(&[Object::Number(65073), Object::Number(8212)]);
    let list1984 = vm.gc.listn(&[Object::Number(65074), Object::Number(8211)]);
    let list1985 = vm.gc.listn(&[Object::Number(65075), Object::Number(95)]);
    let list1986 = vm.gc.listn(&[Object::Number(65076), Object::Number(95)]);
    let list1987 = vm.gc.listn(&[Object::Number(65077), Object::Number(40)]);
    let list1988 = vm.gc.listn(&[Object::Number(65078), Object::Number(41)]);
    let list1989 = vm.gc.listn(&[Object::Number(65079), Object::Number(123)]);
    let list1990 = vm.gc.listn(&[Object::Number(65080), Object::Number(125)]);
    let list1991 = vm.gc.listn(&[Object::Number(65081), Object::Number(12308)]);
    let list1992 = vm.gc.listn(&[Object::Number(65082), Object::Number(12309)]);
    let list1993 = vm.gc.listn(&[Object::Number(65083), Object::Number(12304)]);
    let list1994 = vm.gc.listn(&[Object::Number(65084), Object::Number(12305)]);
    let list1995 = vm.gc.listn(&[Object::Number(65085), Object::Number(12298)]);
    let list1996 = vm.gc.listn(&[Object::Number(65086), Object::Number(12299)]);
    let list1997 = vm.gc.listn(&[Object::Number(65087), Object::Number(12296)]);
    let list1998 = vm.gc.listn(&[Object::Number(65088), Object::Number(12297)]);
    let list1999 = vm.gc.listn(&[Object::Number(65089), Object::Number(12300)]);
    let list2000 = vm.gc.listn(&[Object::Number(65090), Object::Number(12301)]);
    let list2001 = vm.gc.listn(&[Object::Number(65091), Object::Number(12302)]);
    let list2002 = vm.gc.listn(&[Object::Number(65092), Object::Number(12303)]);
    let list2003 = vm.gc.listn(&[Object::Number(65095), Object::Number(91)]);
    let list2004 = vm.gc.listn(&[Object::Number(65096), Object::Number(93)]);
    let list2005 = vm.gc.listn(&[Object::Number(65097), Object::Number(8254)]);
    let list2006 = vm.gc.listn(&[Object::Number(65098), Object::Number(8254)]);
    let list2007 = vm.gc.listn(&[Object::Number(65099), Object::Number(8254)]);
    let list2008 = vm.gc.listn(&[Object::Number(65100), Object::Number(8254)]);
    let list2009 = vm.gc.listn(&[Object::Number(65101), Object::Number(95)]);
    let list2010 = vm.gc.listn(&[Object::Number(65102), Object::Number(95)]);
    let list2011 = vm.gc.listn(&[Object::Number(65103), Object::Number(95)]);
    let list2012 = vm.gc.listn(&[Object::Number(65104), Object::Number(44)]);
    let list2013 = vm.gc.listn(&[Object::Number(65105), Object::Number(12289)]);
    let list2014 = vm.gc.listn(&[Object::Number(65106), Object::Number(46)]);
    let list2015 = vm.gc.listn(&[Object::Number(65108), Object::Number(59)]);
    let list2016 = vm.gc.listn(&[Object::Number(65109), Object::Number(58)]);
    let list2017 = vm.gc.listn(&[Object::Number(65110), Object::Number(63)]);
    let list2018 = vm.gc.listn(&[Object::Number(65111), Object::Number(33)]);
    let list2019 = vm.gc.listn(&[Object::Number(65112), Object::Number(8212)]);
    let list2020 = vm.gc.listn(&[Object::Number(65113), Object::Number(40)]);
    let list2021 = vm.gc.listn(&[Object::Number(65114), Object::Number(41)]);
    let list2022 = vm.gc.listn(&[Object::Number(65115), Object::Number(123)]);
    let list2023 = vm.gc.listn(&[Object::Number(65116), Object::Number(125)]);
    let list2024 = vm.gc.listn(&[Object::Number(65117), Object::Number(12308)]);
    let list2025 = vm.gc.listn(&[Object::Number(65118), Object::Number(12309)]);
    let list2026 = vm.gc.listn(&[Object::Number(65119), Object::Number(35)]);
    let list2027 = vm.gc.listn(&[Object::Number(65120), Object::Number(38)]);
    let list2028 = vm.gc.listn(&[Object::Number(65121), Object::Number(42)]);
    let list2029 = vm.gc.listn(&[Object::Number(65122), Object::Number(43)]);
    let list2030 = vm.gc.listn(&[Object::Number(65123), Object::Number(45)]);
    let list2031 = vm.gc.listn(&[Object::Number(65124), Object::Number(60)]);
    let list2032 = vm.gc.listn(&[Object::Number(65125), Object::Number(62)]);
    let list2033 = vm.gc.listn(&[Object::Number(65126), Object::Number(61)]);
    let list2034 = vm.gc.listn(&[Object::Number(65128), Object::Number(92)]);
    let list2035 = vm.gc.listn(&[Object::Number(65129), Object::Number(36)]);
    let list2036 = vm.gc.listn(&[Object::Number(65130), Object::Number(37)]);
    let list2037 = vm.gc.listn(&[Object::Number(65131), Object::Number(64)]);
    let list2038 = vm.gc.listn(&[Object::Number(65136), Object::Number(32), Object::Number(1611)]);
    let list2039 = vm.gc.listn(&[Object::Number(65137), Object::Number(1600), Object::Number(1611)]);
    let list2040 = vm.gc.listn(&[Object::Number(65138), Object::Number(32), Object::Number(1612)]);
    let list2041 = vm.gc.listn(&[Object::Number(65140), Object::Number(32), Object::Number(1613)]);
    let list2042 = vm.gc.listn(&[Object::Number(65142), Object::Number(32), Object::Number(1614)]);
    let list2043 = vm.gc.listn(&[Object::Number(65143), Object::Number(1600), Object::Number(1614)]);
    let list2044 = vm.gc.listn(&[Object::Number(65144), Object::Number(32), Object::Number(1615)]);
    let list2045 = vm.gc.listn(&[Object::Number(65145), Object::Number(1600), Object::Number(1615)]);
    let list2046 = vm.gc.listn(&[Object::Number(65146), Object::Number(32), Object::Number(1616)]);
    let list2047 = vm.gc.listn(&[Object::Number(65147), Object::Number(1600), Object::Number(1616)]);
    let list2048 = vm.gc.listn(&[Object::Number(65148), Object::Number(32), Object::Number(1617)]);
    let list2049 = vm.gc.listn(&[Object::Number(65149), Object::Number(1600), Object::Number(1617)]);
    let list2050 = vm.gc.listn(&[Object::Number(65150), Object::Number(32), Object::Number(1618)]);
    let list2051 = vm.gc.listn(&[Object::Number(65151), Object::Number(1600), Object::Number(1618)]);
    let list2052 = vm.gc.listn(&[Object::Number(65152), Object::Number(1569)]);
    let list2053 = vm.gc.listn(&[Object::Number(65153), Object::Number(1570)]);
    let list2054 = vm.gc.listn(&[Object::Number(65154), Object::Number(1570)]);
    let list2055 = vm.gc.listn(&[Object::Number(65155), Object::Number(1571)]);
    let list2056 = vm.gc.listn(&[Object::Number(65156), Object::Number(1571)]);
    let list2057 = vm.gc.listn(&[Object::Number(65157), Object::Number(1572)]);
    let list2058 = vm.gc.listn(&[Object::Number(65158), Object::Number(1572)]);
    let list2059 = vm.gc.listn(&[Object::Number(65159), Object::Number(1573)]);
    let list2060 = vm.gc.listn(&[Object::Number(65160), Object::Number(1573)]);
    let list2061 = vm.gc.listn(&[Object::Number(65161), Object::Number(1574)]);
    let list2062 = vm.gc.listn(&[Object::Number(65162), Object::Number(1574)]);
    let list2063 = vm.gc.listn(&[Object::Number(65163), Object::Number(1574)]);
    let list2064 = vm.gc.listn(&[Object::Number(65164), Object::Number(1574)]);
    let list2065 = vm.gc.listn(&[Object::Number(65165), Object::Number(1575)]);
    let list2066 = vm.gc.listn(&[Object::Number(65166), Object::Number(1575)]);
    let list2067 = vm.gc.listn(&[Object::Number(65167), Object::Number(1576)]);
    let list2068 = vm.gc.listn(&[Object::Number(65168), Object::Number(1576)]);
    let list2069 = vm.gc.listn(&[Object::Number(65169), Object::Number(1576)]);
    let list2070 = vm.gc.listn(&[Object::Number(65170), Object::Number(1576)]);
    let list2071 = vm.gc.listn(&[Object::Number(65171), Object::Number(1577)]);
    let list2072 = vm.gc.listn(&[Object::Number(65172), Object::Number(1577)]);
    let list2073 = vm.gc.listn(&[Object::Number(65173), Object::Number(1578)]);
    let list2074 = vm.gc.listn(&[Object::Number(65174), Object::Number(1578)]);
    let list2075 = vm.gc.listn(&[Object::Number(65175), Object::Number(1578)]);
    let list2076 = vm.gc.listn(&[Object::Number(65176), Object::Number(1578)]);
    let list2077 = vm.gc.listn(&[Object::Number(65177), Object::Number(1579)]);
    let list2078 = vm.gc.listn(&[Object::Number(65178), Object::Number(1579)]);
    let list2079 = vm.gc.listn(&[Object::Number(65179), Object::Number(1579)]);
    let list2080 = vm.gc.listn(&[Object::Number(65180), Object::Number(1579)]);
    let list2081 = vm.gc.listn(&[Object::Number(65181), Object::Number(1580)]);
    let list2082 = vm.gc.listn(&[Object::Number(65182), Object::Number(1580)]);
    let list2083 = vm.gc.listn(&[Object::Number(65183), Object::Number(1580)]);
    let list2084 = vm.gc.listn(&[Object::Number(65184), Object::Number(1580)]);
    let list2085 = vm.gc.listn(&[Object::Number(65185), Object::Number(1581)]);
    let list2086 = vm.gc.listn(&[Object::Number(65186), Object::Number(1581)]);
    let list2087 = vm.gc.listn(&[Object::Number(65187), Object::Number(1581)]);
    let list2088 = vm.gc.listn(&[Object::Number(65188), Object::Number(1581)]);
    let list2089 = vm.gc.listn(&[Object::Number(65189), Object::Number(1582)]);
    let list2090 = vm.gc.listn(&[Object::Number(65190), Object::Number(1582)]);
    let list2091 = vm.gc.listn(&[Object::Number(65191), Object::Number(1582)]);
    let list2092 = vm.gc.listn(&[Object::Number(65192), Object::Number(1582)]);
    let list2093 = vm.gc.listn(&[Object::Number(65193), Object::Number(1583)]);
    let list2094 = vm.gc.listn(&[Object::Number(65194), Object::Number(1583)]);
    let list2095 = vm.gc.listn(&[Object::Number(65195), Object::Number(1584)]);
    let list2096 = vm.gc.listn(&[Object::Number(65196), Object::Number(1584)]);
    let list2097 = vm.gc.listn(&[Object::Number(65197), Object::Number(1585)]);
    let list2098 = vm.gc.listn(&[Object::Number(65198), Object::Number(1585)]);
    let list2099 = vm.gc.listn(&[Object::Number(65199), Object::Number(1586)]);
    let list2100 = vm.gc.listn(&[Object::Number(65200), Object::Number(1586)]);
    let list2101 = vm.gc.listn(&[Object::Number(65201), Object::Number(1587)]);
    let list2102 = vm.gc.listn(&[Object::Number(65202), Object::Number(1587)]);
    let list2103 = vm.gc.listn(&[Object::Number(65203), Object::Number(1587)]);
    let list2104 = vm.gc.listn(&[Object::Number(65204), Object::Number(1587)]);
    let list2105 = vm.gc.listn(&[Object::Number(65205), Object::Number(1588)]);
    let list2106 = vm.gc.listn(&[Object::Number(65206), Object::Number(1588)]);
    let list2107 = vm.gc.listn(&[Object::Number(65207), Object::Number(1588)]);
    let list2108 = vm.gc.listn(&[Object::Number(65208), Object::Number(1588)]);
    let list2109 = vm.gc.listn(&[Object::Number(65209), Object::Number(1589)]);
    let list2110 = vm.gc.listn(&[Object::Number(65210), Object::Number(1589)]);
    let list2111 = vm.gc.listn(&[Object::Number(65211), Object::Number(1589)]);
    let list2112 = vm.gc.listn(&[Object::Number(65212), Object::Number(1589)]);
    let list2113 = vm.gc.listn(&[Object::Number(65213), Object::Number(1590)]);
    let list2114 = vm.gc.listn(&[Object::Number(65214), Object::Number(1590)]);
    let list2115 = vm.gc.listn(&[Object::Number(65215), Object::Number(1590)]);
    let list2116 = vm.gc.listn(&[Object::Number(65216), Object::Number(1590)]);
    let list2117 = vm.gc.listn(&[Object::Number(65217), Object::Number(1591)]);
    let list2118 = vm.gc.listn(&[Object::Number(65218), Object::Number(1591)]);
    let list2119 = vm.gc.listn(&[Object::Number(65219), Object::Number(1591)]);
    let list2120 = vm.gc.listn(&[Object::Number(65220), Object::Number(1591)]);
    let list2121 = vm.gc.listn(&[Object::Number(65221), Object::Number(1592)]);
    let list2122 = vm.gc.listn(&[Object::Number(65222), Object::Number(1592)]);
    let list2123 = vm.gc.listn(&[Object::Number(65223), Object::Number(1592)]);
    let list2124 = vm.gc.listn(&[Object::Number(65224), Object::Number(1592)]);
    let list2125 = vm.gc.listn(&[Object::Number(65225), Object::Number(1593)]);
    let list2126 = vm.gc.listn(&[Object::Number(65226), Object::Number(1593)]);
    let list2127 = vm.gc.listn(&[Object::Number(65227), Object::Number(1593)]);
    let list2128 = vm.gc.listn(&[Object::Number(65228), Object::Number(1593)]);
    let list2129 = vm.gc.listn(&[Object::Number(65229), Object::Number(1594)]);
    let list2130 = vm.gc.listn(&[Object::Number(65230), Object::Number(1594)]);
    let list2131 = vm.gc.listn(&[Object::Number(65231), Object::Number(1594)]);
    let list2132 = vm.gc.listn(&[Object::Number(65232), Object::Number(1594)]);
    let list2133 = vm.gc.listn(&[Object::Number(65233), Object::Number(1601)]);
    let list2134 = vm.gc.listn(&[Object::Number(65234), Object::Number(1601)]);
    let list2135 = vm.gc.listn(&[Object::Number(65235), Object::Number(1601)]);
    let list2136 = vm.gc.listn(&[Object::Number(65236), Object::Number(1601)]);
    let list2137 = vm.gc.listn(&[Object::Number(65237), Object::Number(1602)]);
    let list2138 = vm.gc.listn(&[Object::Number(65238), Object::Number(1602)]);
    let list2139 = vm.gc.listn(&[Object::Number(65239), Object::Number(1602)]);
    let list2140 = vm.gc.listn(&[Object::Number(65240), Object::Number(1602)]);
    let list2141 = vm.gc.listn(&[Object::Number(65241), Object::Number(1603)]);
    let list2142 = vm.gc.listn(&[Object::Number(65242), Object::Number(1603)]);
    let list2143 = vm.gc.listn(&[Object::Number(65243), Object::Number(1603)]);
    let list2144 = vm.gc.listn(&[Object::Number(65244), Object::Number(1603)]);
    let list2145 = vm.gc.listn(&[Object::Number(65245), Object::Number(1604)]);
    let list2146 = vm.gc.listn(&[Object::Number(65246), Object::Number(1604)]);
    let list2147 = vm.gc.listn(&[Object::Number(65247), Object::Number(1604)]);
    let list2148 = vm.gc.listn(&[Object::Number(65248), Object::Number(1604)]);
    let list2149 = vm.gc.listn(&[Object::Number(65249), Object::Number(1605)]);
    let list2150 = vm.gc.listn(&[Object::Number(65250), Object::Number(1605)]);
    let list2151 = vm.gc.listn(&[Object::Number(65251), Object::Number(1605)]);
    let list2152 = vm.gc.listn(&[Object::Number(65252), Object::Number(1605)]);
    let list2153 = vm.gc.listn(&[Object::Number(65253), Object::Number(1606)]);
    let list2154 = vm.gc.listn(&[Object::Number(65254), Object::Number(1606)]);
    let list2155 = vm.gc.listn(&[Object::Number(65255), Object::Number(1606)]);
    let list2156 = vm.gc.listn(&[Object::Number(65256), Object::Number(1606)]);
    let list2157 = vm.gc.listn(&[Object::Number(65257), Object::Number(1607)]);
    let list2158 = vm.gc.listn(&[Object::Number(65258), Object::Number(1607)]);
    let list2159 = vm.gc.listn(&[Object::Number(65259), Object::Number(1607)]);
    let list2160 = vm.gc.listn(&[Object::Number(65260), Object::Number(1607)]);
    let list2161 = vm.gc.listn(&[Object::Number(65261), Object::Number(1608)]);
    let list2162 = vm.gc.listn(&[Object::Number(65262), Object::Number(1608)]);
    let list2163 = vm.gc.listn(&[Object::Number(65263), Object::Number(1609)]);
    let list2164 = vm.gc.listn(&[Object::Number(65264), Object::Number(1609)]);
    let list2165 = vm.gc.listn(&[Object::Number(65265), Object::Number(1610)]);
    let list2166 = vm.gc.listn(&[Object::Number(65266), Object::Number(1610)]);
    let list2167 = vm.gc.listn(&[Object::Number(65267), Object::Number(1610)]);
    let list2168 = vm.gc.listn(&[Object::Number(65268), Object::Number(1610)]);
    let list2169 = vm.gc.listn(&[Object::Number(65269), Object::Number(1604), Object::Number(1570)]);
    let list2170 = vm.gc.listn(&[Object::Number(65270), Object::Number(1604), Object::Number(1570)]);
    let list2171 = vm.gc.listn(&[Object::Number(65271), Object::Number(1604), Object::Number(1571)]);
    let list2172 = vm.gc.listn(&[Object::Number(65272), Object::Number(1604), Object::Number(1571)]);
    let list2173 = vm.gc.listn(&[Object::Number(65273), Object::Number(1604), Object::Number(1573)]);
    let list2174 = vm.gc.listn(&[Object::Number(65274), Object::Number(1604), Object::Number(1573)]);
    let list2175 = vm.gc.listn(&[Object::Number(65275), Object::Number(1604), Object::Number(1575)]);
    let list2176 = vm.gc.listn(&[Object::Number(65276), Object::Number(1604), Object::Number(1575)]);
    let list2177 = vm.gc.listn(&[Object::Number(65281), Object::Number(33)]);
    let list2178 = vm.gc.listn(&[Object::Number(65282), Object::Number(34)]);
    let list2179 = vm.gc.listn(&[Object::Number(65283), Object::Number(35)]);
    let list2180 = vm.gc.listn(&[Object::Number(65284), Object::Number(36)]);
    let list2181 = vm.gc.listn(&[Object::Number(65285), Object::Number(37)]);
    let list2182 = vm.gc.listn(&[Object::Number(65286), Object::Number(38)]);
    let list2183 = vm.gc.listn(&[Object::Number(65287), Object::Number(39)]);
    let list2184 = vm.gc.listn(&[Object::Number(65288), Object::Number(40)]);
    let list2185 = vm.gc.listn(&[Object::Number(65289), Object::Number(41)]);
    let list2186 = vm.gc.listn(&[Object::Number(65290), Object::Number(42)]);
    let list2187 = vm.gc.listn(&[Object::Number(65291), Object::Number(43)]);
    let list2188 = vm.gc.listn(&[Object::Number(65292), Object::Number(44)]);
    let list2189 = vm.gc.listn(&[Object::Number(65293), Object::Number(45)]);
    let list2190 = vm.gc.listn(&[Object::Number(65294), Object::Number(46)]);
    let list2191 = vm.gc.listn(&[Object::Number(65295), Object::Number(47)]);
    let list2192 = vm.gc.listn(&[Object::Number(65296), Object::Number(48)]);
    let list2193 = vm.gc.listn(&[Object::Number(65297), Object::Number(49)]);
    let list2194 = vm.gc.listn(&[Object::Number(65298), Object::Number(50)]);
    let list2195 = vm.gc.listn(&[Object::Number(65299), Object::Number(51)]);
    let list2196 = vm.gc.listn(&[Object::Number(65300), Object::Number(52)]);
    let list2197 = vm.gc.listn(&[Object::Number(65301), Object::Number(53)]);
    let list2198 = vm.gc.listn(&[Object::Number(65302), Object::Number(54)]);
    let list2199 = vm.gc.listn(&[Object::Number(65303), Object::Number(55)]);
    let list2200 = vm.gc.listn(&[Object::Number(65304), Object::Number(56)]);
    let list2201 = vm.gc.listn(&[Object::Number(65305), Object::Number(57)]);
    let list2202 = vm.gc.listn(&[Object::Number(65306), Object::Number(58)]);
    let list2203 = vm.gc.listn(&[Object::Number(65307), Object::Number(59)]);
    let list2204 = vm.gc.listn(&[Object::Number(65308), Object::Number(60)]);
    let list2205 = vm.gc.listn(&[Object::Number(65309), Object::Number(61)]);
    let list2206 = vm.gc.listn(&[Object::Number(65310), Object::Number(62)]);
    let list2207 = vm.gc.listn(&[Object::Number(65311), Object::Number(63)]);
    let list2208 = vm.gc.listn(&[Object::Number(65312), Object::Number(64)]);
    let list2209 = vm.gc.listn(&[Object::Number(65313), Object::Number(65)]);
    let list2210 = vm.gc.listn(&[Object::Number(65314), Object::Number(66)]);
    let list2211 = vm.gc.listn(&[Object::Number(65315), Object::Number(67)]);
    let list2212 = vm.gc.listn(&[Object::Number(65316), Object::Number(68)]);
    let list2213 = vm.gc.listn(&[Object::Number(65317), Object::Number(69)]);
    let list2214 = vm.gc.listn(&[Object::Number(65318), Object::Number(70)]);
    let list2215 = vm.gc.listn(&[Object::Number(65319), Object::Number(71)]);
    let list2216 = vm.gc.listn(&[Object::Number(65320), Object::Number(72)]);
    let list2217 = vm.gc.listn(&[Object::Number(65321), Object::Number(73)]);
    let list2218 = vm.gc.listn(&[Object::Number(65322), Object::Number(74)]);
    let list2219 = vm.gc.listn(&[Object::Number(65323), Object::Number(75)]);
    let list2220 = vm.gc.listn(&[Object::Number(65324), Object::Number(76)]);
    let list2221 = vm.gc.listn(&[Object::Number(65325), Object::Number(77)]);
    let list2222 = vm.gc.listn(&[Object::Number(65326), Object::Number(78)]);
    let list2223 = vm.gc.listn(&[Object::Number(65327), Object::Number(79)]);
    let list2224 = vm.gc.listn(&[Object::Number(65328), Object::Number(80)]);
    let list2225 = vm.gc.listn(&[Object::Number(65329), Object::Number(81)]);
    let list2226 = vm.gc.listn(&[Object::Number(65330), Object::Number(82)]);
    let list2227 = vm.gc.listn(&[Object::Number(65331), Object::Number(83)]);
    let list2228 = vm.gc.listn(&[Object::Number(65332), Object::Number(84)]);
    let list2229 = vm.gc.listn(&[Object::Number(65333), Object::Number(85)]);
    let list2230 = vm.gc.listn(&[Object::Number(65334), Object::Number(86)]);
    let list2231 = vm.gc.listn(&[Object::Number(65335), Object::Number(87)]);
    let list2232 = vm.gc.listn(&[Object::Number(65336), Object::Number(88)]);
    let list2233 = vm.gc.listn(&[Object::Number(65337), Object::Number(89)]);
    let list2234 = vm.gc.listn(&[Object::Number(65338), Object::Number(90)]);
    let list2235 = vm.gc.listn(&[Object::Number(65339), Object::Number(91)]);
    let list2236 = vm.gc.listn(&[Object::Number(65340), Object::Number(92)]);
    let list2237 = vm.gc.listn(&[Object::Number(65341), Object::Number(93)]);
    let list2238 = vm.gc.listn(&[Object::Number(65342), Object::Number(94)]);
    let list2239 = vm.gc.listn(&[Object::Number(65343), Object::Number(95)]);
    let list2240 = vm.gc.listn(&[Object::Number(65344), Object::Number(96)]);
    let list2241 = vm.gc.listn(&[Object::Number(65345), Object::Number(97)]);
    let list2242 = vm.gc.listn(&[Object::Number(65346), Object::Number(98)]);
    let list2243 = vm.gc.listn(&[Object::Number(65347), Object::Number(99)]);
    let list2244 = vm.gc.listn(&[Object::Number(65348), Object::Number(100)]);
    let list2245 = vm.gc.listn(&[Object::Number(65349), Object::Number(101)]);
    let list2246 = vm.gc.listn(&[Object::Number(65350), Object::Number(102)]);
    let list2247 = vm.gc.listn(&[Object::Number(65351), Object::Number(103)]);
    let list2248 = vm.gc.listn(&[Object::Number(65352), Object::Number(104)]);
    let list2249 = vm.gc.listn(&[Object::Number(65353), Object::Number(105)]);
    let list2250 = vm.gc.listn(&[Object::Number(65354), Object::Number(106)]);
    let list2251 = vm.gc.listn(&[Object::Number(65355), Object::Number(107)]);
    let list2252 = vm.gc.listn(&[Object::Number(65356), Object::Number(108)]);
    let list2253 = vm.gc.listn(&[Object::Number(65357), Object::Number(109)]);
    let list2254 = vm.gc.listn(&[Object::Number(65358), Object::Number(110)]);
    let list2255 = vm.gc.listn(&[Object::Number(65359), Object::Number(111)]);
    let list2256 = vm.gc.listn(&[Object::Number(65360), Object::Number(112)]);
    let list2257 = vm.gc.listn(&[Object::Number(65361), Object::Number(113)]);
    let list2258 = vm.gc.listn(&[Object::Number(65362), Object::Number(114)]);
    let list2259 = vm.gc.listn(&[Object::Number(65363), Object::Number(115)]);
    let list2260 = vm.gc.listn(&[Object::Number(65364), Object::Number(116)]);
    let list2261 = vm.gc.listn(&[Object::Number(65365), Object::Number(117)]);
    let list2262 = vm.gc.listn(&[Object::Number(65366), Object::Number(118)]);
    let list2263 = vm.gc.listn(&[Object::Number(65367), Object::Number(119)]);
    let list2264 = vm.gc.listn(&[Object::Number(65368), Object::Number(120)]);
    let list2265 = vm.gc.listn(&[Object::Number(65369), Object::Number(121)]);
    let list2266 = vm.gc.listn(&[Object::Number(65370), Object::Number(122)]);
    let list2267 = vm.gc.listn(&[Object::Number(65371), Object::Number(123)]);
    let list2268 = vm.gc.listn(&[Object::Number(65372), Object::Number(124)]);
    let list2269 = vm.gc.listn(&[Object::Number(65373), Object::Number(125)]);
    let list2270 = vm.gc.listn(&[Object::Number(65374), Object::Number(126)]);
    let list2271 = vm.gc.listn(&[Object::Number(65375), Object::Number(10629)]);
    let list2272 = vm.gc.listn(&[Object::Number(65376), Object::Number(10630)]);
    let list2273 = vm.gc.listn(&[Object::Number(65377), Object::Number(12290)]);
    let list2274 = vm.gc.listn(&[Object::Number(65378), Object::Number(12300)]);
    let list2275 = vm.gc.listn(&[Object::Number(65379), Object::Number(12301)]);
    let list2276 = vm.gc.listn(&[Object::Number(65380), Object::Number(12289)]);
    let list2277 = vm.gc.listn(&[Object::Number(65381), Object::Number(12539)]);
    let list2278 = vm.gc.listn(&[Object::Number(65382), Object::Number(12530)]);
    let list2279 = vm.gc.listn(&[Object::Number(65383), Object::Number(12449)]);
    let list2280 = vm.gc.listn(&[Object::Number(65384), Object::Number(12451)]);
    let list2281 = vm.gc.listn(&[Object::Number(65385), Object::Number(12453)]);
    let list2282 = vm.gc.listn(&[Object::Number(65386), Object::Number(12455)]);
    let list2283 = vm.gc.listn(&[Object::Number(65387), Object::Number(12457)]);
    let list2284 = vm.gc.listn(&[Object::Number(65388), Object::Number(12515)]);
    let list2285 = vm.gc.listn(&[Object::Number(65389), Object::Number(12517)]);
    let list2286 = vm.gc.listn(&[Object::Number(65390), Object::Number(12519)]);
    let list2287 = vm.gc.listn(&[Object::Number(65391), Object::Number(12483)]);
    let list2288 = vm.gc.listn(&[Object::Number(65392), Object::Number(12540)]);
    let list2289 = vm.gc.listn(&[Object::Number(65393), Object::Number(12450)]);
    let list2290 = vm.gc.listn(&[Object::Number(65394), Object::Number(12452)]);
    let list2291 = vm.gc.listn(&[Object::Number(65395), Object::Number(12454)]);
    let list2292 = vm.gc.listn(&[Object::Number(65396), Object::Number(12456)]);
    let list2293 = vm.gc.listn(&[Object::Number(65397), Object::Number(12458)]);
    let list2294 = vm.gc.listn(&[Object::Number(65398), Object::Number(12459)]);
    let list2295 = vm.gc.listn(&[Object::Number(65399), Object::Number(12461)]);
    let list2296 = vm.gc.listn(&[Object::Number(65400), Object::Number(12463)]);
    let list2297 = vm.gc.listn(&[Object::Number(65401), Object::Number(12465)]);
    let list2298 = vm.gc.listn(&[Object::Number(65402), Object::Number(12467)]);
    let list2299 = vm.gc.listn(&[Object::Number(65403), Object::Number(12469)]);
    let list2300 = vm.gc.listn(&[Object::Number(65404), Object::Number(12471)]);
    let list2301 = vm.gc.listn(&[Object::Number(65405), Object::Number(12473)]);
    let list2302 = vm.gc.listn(&[Object::Number(65406), Object::Number(12475)]);
    let list2303 = vm.gc.listn(&[Object::Number(65407), Object::Number(12477)]);
    let list2304 = vm.gc.listn(&[Object::Number(65408), Object::Number(12479)]);
    let list2305 = vm.gc.listn(&[Object::Number(65409), Object::Number(12481)]);
    let list2306 = vm.gc.listn(&[Object::Number(65410), Object::Number(12484)]);
    let list2307 = vm.gc.listn(&[Object::Number(65411), Object::Number(12486)]);
    let list2308 = vm.gc.listn(&[Object::Number(65412), Object::Number(12488)]);
    let list2309 = vm.gc.listn(&[Object::Number(65413), Object::Number(12490)]);
    let list2310 = vm.gc.listn(&[Object::Number(65414), Object::Number(12491)]);
    let list2311 = vm.gc.listn(&[Object::Number(65415), Object::Number(12492)]);
    let list2312 = vm.gc.listn(&[Object::Number(65416), Object::Number(12493)]);
    let list2313 = vm.gc.listn(&[Object::Number(65417), Object::Number(12494)]);
    let list2314 = vm.gc.listn(&[Object::Number(65418), Object::Number(12495)]);
    let list2315 = vm.gc.listn(&[Object::Number(65419), Object::Number(12498)]);
    let list2316 = vm.gc.listn(&[Object::Number(65420), Object::Number(12501)]);
    let list2317 = vm.gc.listn(&[Object::Number(65421), Object::Number(12504)]);
    let list2318 = vm.gc.listn(&[Object::Number(65422), Object::Number(12507)]);
    let list2319 = vm.gc.listn(&[Object::Number(65423), Object::Number(12510)]);
    let list2320 = vm.gc.listn(&[Object::Number(65424), Object::Number(12511)]);
    let list2321 = vm.gc.listn(&[Object::Number(65425), Object::Number(12512)]);
    let list2322 = vm.gc.listn(&[Object::Number(65426), Object::Number(12513)]);
    let list2323 = vm.gc.listn(&[Object::Number(65427), Object::Number(12514)]);
    let list2324 = vm.gc.listn(&[Object::Number(65428), Object::Number(12516)]);
    let list2325 = vm.gc.listn(&[Object::Number(65429), Object::Number(12518)]);
    let list2326 = vm.gc.listn(&[Object::Number(65430), Object::Number(12520)]);
    let list2327 = vm.gc.listn(&[Object::Number(65431), Object::Number(12521)]);
    let list2328 = vm.gc.listn(&[Object::Number(65432), Object::Number(12522)]);
    let list2329 = vm.gc.listn(&[Object::Number(65433), Object::Number(12523)]);
    let list2330 = vm.gc.listn(&[Object::Number(65434), Object::Number(12524)]);
    let list2331 = vm.gc.listn(&[Object::Number(65435), Object::Number(12525)]);
    let list2332 = vm.gc.listn(&[Object::Number(65436), Object::Number(12527)]);
    let list2333 = vm.gc.listn(&[Object::Number(65437), Object::Number(12531)]);
    let list2334 = vm.gc.listn(&[Object::Number(65438), Object::Number(12441)]);
    let list2335 = vm.gc.listn(&[Object::Number(65439), Object::Number(12442)]);
    let list2336 = vm.gc.listn(&[Object::Number(65440), Object::Number(12644)]);
    let list2337 = vm.gc.listn(&[Object::Number(65441), Object::Number(12593)]);
    let list2338 = vm.gc.listn(&[Object::Number(65442), Object::Number(12594)]);
    let list2339 = vm.gc.listn(&[Object::Number(65443), Object::Number(12595)]);
    let list2340 = vm.gc.listn(&[Object::Number(65444), Object::Number(12596)]);
    let list2341 = vm.gc.listn(&[Object::Number(65445), Object::Number(12597)]);
    let list2342 = vm.gc.listn(&[Object::Number(65446), Object::Number(12598)]);
    let list2343 = vm.gc.listn(&[Object::Number(65447), Object::Number(12599)]);
    let list2344 = vm.gc.listn(&[Object::Number(65448), Object::Number(12600)]);
    let list2345 = vm.gc.listn(&[Object::Number(65449), Object::Number(12601)]);
    let list2346 = vm.gc.listn(&[Object::Number(65450), Object::Number(12602)]);
    let list2347 = vm.gc.listn(&[Object::Number(65451), Object::Number(12603)]);
    let list2348 = vm.gc.listn(&[Object::Number(65452), Object::Number(12604)]);
    let list2349 = vm.gc.listn(&[Object::Number(65453), Object::Number(12605)]);
    let list2350 = vm.gc.listn(&[Object::Number(65454), Object::Number(12606)]);
    let list2351 = vm.gc.listn(&[Object::Number(65455), Object::Number(12607)]);
    let list2352 = vm.gc.listn(&[Object::Number(65456), Object::Number(12608)]);
    let list2353 = vm.gc.listn(&[Object::Number(65457), Object::Number(12609)]);
    let list2354 = vm.gc.listn(&[Object::Number(65458), Object::Number(12610)]);
    let list2355 = vm.gc.listn(&[Object::Number(65459), Object::Number(12611)]);
    let list2356 = vm.gc.listn(&[Object::Number(65460), Object::Number(12612)]);
    let list2357 = vm.gc.listn(&[Object::Number(65461), Object::Number(12613)]);
    let list2358 = vm.gc.listn(&[Object::Number(65462), Object::Number(12614)]);
    let list2359 = vm.gc.listn(&[Object::Number(65463), Object::Number(12615)]);
    let list2360 = vm.gc.listn(&[Object::Number(65464), Object::Number(12616)]);
    let list2361 = vm.gc.listn(&[Object::Number(65465), Object::Number(12617)]);
    let list2362 = vm.gc.listn(&[Object::Number(65466), Object::Number(12618)]);
    let list2363 = vm.gc.listn(&[Object::Number(65467), Object::Number(12619)]);
    let list2364 = vm.gc.listn(&[Object::Number(65468), Object::Number(12620)]);
    let list2365 = vm.gc.listn(&[Object::Number(65469), Object::Number(12621)]);
    let list2366 = vm.gc.listn(&[Object::Number(65470), Object::Number(12622)]);
    let list2367 = vm.gc.listn(&[Object::Number(65474), Object::Number(12623)]);
    let list2368 = vm.gc.listn(&[Object::Number(65475), Object::Number(12624)]);
    let list2369 = vm.gc.listn(&[Object::Number(65476), Object::Number(12625)]);
    let list2370 = vm.gc.listn(&[Object::Number(65477), Object::Number(12626)]);
    let list2371 = vm.gc.listn(&[Object::Number(65478), Object::Number(12627)]);
    let list2372 = vm.gc.listn(&[Object::Number(65479), Object::Number(12628)]);
    let list2373 = vm.gc.listn(&[Object::Number(65482), Object::Number(12629)]);
    let list2374 = vm.gc.listn(&[Object::Number(65483), Object::Number(12630)]);
    let list2375 = vm.gc.listn(&[Object::Number(65484), Object::Number(12631)]);
    let list2376 = vm.gc.listn(&[Object::Number(65485), Object::Number(12632)]);
    let list2377 = vm.gc.listn(&[Object::Number(65486), Object::Number(12633)]);
    let list2378 = vm.gc.listn(&[Object::Number(65487), Object::Number(12634)]);
    let list2379 = vm.gc.listn(&[Object::Number(65490), Object::Number(12635)]);
    let list2380 = vm.gc.listn(&[Object::Number(65491), Object::Number(12636)]);
    let list2381 = vm.gc.listn(&[Object::Number(65492), Object::Number(12637)]);
    let list2382 = vm.gc.listn(&[Object::Number(65493), Object::Number(12638)]);
    let list2383 = vm.gc.listn(&[Object::Number(65494), Object::Number(12639)]);
    let list2384 = vm.gc.listn(&[Object::Number(65495), Object::Number(12640)]);
    let list2385 = vm.gc.listn(&[Object::Number(65498), Object::Number(12641)]);
    let list2386 = vm.gc.listn(&[Object::Number(65499), Object::Number(12642)]);
    let list2387 = vm.gc.listn(&[Object::Number(65500), Object::Number(12643)]);
    let list2388 = vm.gc.listn(&[Object::Number(65504), Object::Number(162)]);
    let list2389 = vm.gc.listn(&[Object::Number(65505), Object::Number(163)]);
    let list2390 = vm.gc.listn(&[Object::Number(65506), Object::Number(172)]);
    let list2391 = vm.gc.listn(&[Object::Number(65507), Object::Number(175)]);
    let list2392 = vm.gc.listn(&[Object::Number(65508), Object::Number(166)]);
    let list2393 = vm.gc.listn(&[Object::Number(65509), Object::Number(165)]);
    let list2394 = vm.gc.listn(&[Object::Number(65510), Object::Number(8361)]);
    let list2395 = vm.gc.listn(&[Object::Number(65512), Object::Number(9474)]);
    let list2396 = vm.gc.listn(&[Object::Number(65513), Object::Number(8592)]);
    let list2397 = vm.gc.listn(&[Object::Number(65514), Object::Number(8593)]);
    let list2398 = vm.gc.listn(&[Object::Number(65515), Object::Number(8594)]);
    let list2399 = vm.gc.listn(&[Object::Number(65516), Object::Number(8595)]);
    let list2400 = vm.gc.listn(&[Object::Number(65517), Object::Number(9632)]);
    let list2401 = vm.gc.listn(&[Object::Number(65518), Object::Number(9675)]);
    let list2402 = vm.gc.listn(&[Object::Number(119808), Object::Number(65)]);
    let list2403 = vm.gc.listn(&[Object::Number(119809), Object::Number(66)]);
    let list2404 = vm.gc.listn(&[Object::Number(119810), Object::Number(67)]);
    let list2405 = vm.gc.listn(&[Object::Number(119811), Object::Number(68)]);
    let list2406 = vm.gc.listn(&[Object::Number(119812), Object::Number(69)]);
    let list2407 = vm.gc.listn(&[Object::Number(119813), Object::Number(70)]);
    let list2408 = vm.gc.listn(&[Object::Number(119814), Object::Number(71)]);
    let list2409 = vm.gc.listn(&[Object::Number(119815), Object::Number(72)]);
    let list2410 = vm.gc.listn(&[Object::Number(119816), Object::Number(73)]);
    let list2411 = vm.gc.listn(&[Object::Number(119817), Object::Number(74)]);
    let list2412 = vm.gc.listn(&[Object::Number(119818), Object::Number(75)]);
    let list2413 = vm.gc.listn(&[Object::Number(119819), Object::Number(76)]);
    let list2414 = vm.gc.listn(&[Object::Number(119820), Object::Number(77)]);
    let list2415 = vm.gc.listn(&[Object::Number(119821), Object::Number(78)]);
    let list2416 = vm.gc.listn(&[Object::Number(119822), Object::Number(79)]);
    let list2417 = vm.gc.listn(&[Object::Number(119823), Object::Number(80)]);
    let list2418 = vm.gc.listn(&[Object::Number(119824), Object::Number(81)]);
    let list2419 = vm.gc.listn(&[Object::Number(119825), Object::Number(82)]);
    let list2420 = vm.gc.listn(&[Object::Number(119826), Object::Number(83)]);
    let list2421 = vm.gc.listn(&[Object::Number(119827), Object::Number(84)]);
    let list2422 = vm.gc.listn(&[Object::Number(119828), Object::Number(85)]);
    let list2423 = vm.gc.listn(&[Object::Number(119829), Object::Number(86)]);
    let list2424 = vm.gc.listn(&[Object::Number(119830), Object::Number(87)]);
    let list2425 = vm.gc.listn(&[Object::Number(119831), Object::Number(88)]);
    let list2426 = vm.gc.listn(&[Object::Number(119832), Object::Number(89)]);
    let list2427 = vm.gc.listn(&[Object::Number(119833), Object::Number(90)]);
    let list2428 = vm.gc.listn(&[Object::Number(119834), Object::Number(97)]);
    let list2429 = vm.gc.listn(&[Object::Number(119835), Object::Number(98)]);
    let list2430 = vm.gc.listn(&[Object::Number(119836), Object::Number(99)]);
    let list2431 = vm.gc.listn(&[Object::Number(119837), Object::Number(100)]);
    let list2432 = vm.gc.listn(&[Object::Number(119838), Object::Number(101)]);
    let list2433 = vm.gc.listn(&[Object::Number(119839), Object::Number(102)]);
    let list2434 = vm.gc.listn(&[Object::Number(119840), Object::Number(103)]);
    let list2435 = vm.gc.listn(&[Object::Number(119841), Object::Number(104)]);
    let list2436 = vm.gc.listn(&[Object::Number(119842), Object::Number(105)]);
    let list2437 = vm.gc.listn(&[Object::Number(119843), Object::Number(106)]);
    let list2438 = vm.gc.listn(&[Object::Number(119844), Object::Number(107)]);
    let list2439 = vm.gc.listn(&[Object::Number(119845), Object::Number(108)]);
    let list2440 = vm.gc.listn(&[Object::Number(119846), Object::Number(109)]);
    let list2441 = vm.gc.listn(&[Object::Number(119847), Object::Number(110)]);
    let list2442 = vm.gc.listn(&[Object::Number(119848), Object::Number(111)]);
    let list2443 = vm.gc.listn(&[Object::Number(119849), Object::Number(112)]);
    let list2444 = vm.gc.listn(&[Object::Number(119850), Object::Number(113)]);
    let list2445 = vm.gc.listn(&[Object::Number(119851), Object::Number(114)]);
    let list2446 = vm.gc.listn(&[Object::Number(119852), Object::Number(115)]);
    let list2447 = vm.gc.listn(&[Object::Number(119853), Object::Number(116)]);
    let list2448 = vm.gc.listn(&[Object::Number(119854), Object::Number(117)]);
    let list2449 = vm.gc.listn(&[Object::Number(119855), Object::Number(118)]);
    let list2450 = vm.gc.listn(&[Object::Number(119856), Object::Number(119)]);
    let list2451 = vm.gc.listn(&[Object::Number(119857), Object::Number(120)]);
    let list2452 = vm.gc.listn(&[Object::Number(119858), Object::Number(121)]);
    let list2453 = vm.gc.listn(&[Object::Number(119859), Object::Number(122)]);
    let list2454 = vm.gc.listn(&[Object::Number(119860), Object::Number(65)]);
    let list2455 = vm.gc.listn(&[Object::Number(119861), Object::Number(66)]);
    let list2456 = vm.gc.listn(&[Object::Number(119862), Object::Number(67)]);
    let list2457 = vm.gc.listn(&[Object::Number(119863), Object::Number(68)]);
    let list2458 = vm.gc.listn(&[Object::Number(119864), Object::Number(69)]);
    let list2459 = vm.gc.listn(&[Object::Number(119865), Object::Number(70)]);
    let list2460 = vm.gc.listn(&[Object::Number(119866), Object::Number(71)]);
    let list2461 = vm.gc.listn(&[Object::Number(119867), Object::Number(72)]);
    let list2462 = vm.gc.listn(&[Object::Number(119868), Object::Number(73)]);
    let list2463 = vm.gc.listn(&[Object::Number(119869), Object::Number(74)]);
    let list2464 = vm.gc.listn(&[Object::Number(119870), Object::Number(75)]);
    let list2465 = vm.gc.listn(&[Object::Number(119871), Object::Number(76)]);
    let list2466 = vm.gc.listn(&[Object::Number(119872), Object::Number(77)]);
    let list2467 = vm.gc.listn(&[Object::Number(119873), Object::Number(78)]);
    let list2468 = vm.gc.listn(&[Object::Number(119874), Object::Number(79)]);
    let list2469 = vm.gc.listn(&[Object::Number(119875), Object::Number(80)]);
    let list2470 = vm.gc.listn(&[Object::Number(119876), Object::Number(81)]);
    let list2471 = vm.gc.listn(&[Object::Number(119877), Object::Number(82)]);
    let list2472 = vm.gc.listn(&[Object::Number(119878), Object::Number(83)]);
    let list2473 = vm.gc.listn(&[Object::Number(119879), Object::Number(84)]);
    let list2474 = vm.gc.listn(&[Object::Number(119880), Object::Number(85)]);
    let list2475 = vm.gc.listn(&[Object::Number(119881), Object::Number(86)]);
    let list2476 = vm.gc.listn(&[Object::Number(119882), Object::Number(87)]);
    let list2477 = vm.gc.listn(&[Object::Number(119883), Object::Number(88)]);
    let list2478 = vm.gc.listn(&[Object::Number(119884), Object::Number(89)]);
    let list2479 = vm.gc.listn(&[Object::Number(119885), Object::Number(90)]);
    let list2480 = vm.gc.listn(&[Object::Number(119886), Object::Number(97)]);
    let list2481 = vm.gc.listn(&[Object::Number(119887), Object::Number(98)]);
    let list2482 = vm.gc.listn(&[Object::Number(119888), Object::Number(99)]);
    let list2483 = vm.gc.listn(&[Object::Number(119889), Object::Number(100)]);
    let list2484 = vm.gc.listn(&[Object::Number(119890), Object::Number(101)]);
    let list2485 = vm.gc.listn(&[Object::Number(119891), Object::Number(102)]);
    let list2486 = vm.gc.listn(&[Object::Number(119892), Object::Number(103)]);
    let list2487 = vm.gc.listn(&[Object::Number(119894), Object::Number(105)]);
    let list2488 = vm.gc.listn(&[Object::Number(119895), Object::Number(106)]);
    let list2489 = vm.gc.listn(&[Object::Number(119896), Object::Number(107)]);
    let list2490 = vm.gc.listn(&[Object::Number(119897), Object::Number(108)]);
    let list2491 = vm.gc.listn(&[Object::Number(119898), Object::Number(109)]);
    let list2492 = vm.gc.listn(&[Object::Number(119899), Object::Number(110)]);
    let list2493 = vm.gc.listn(&[Object::Number(119900), Object::Number(111)]);
    let list2494 = vm.gc.listn(&[Object::Number(119901), Object::Number(112)]);
    let list2495 = vm.gc.listn(&[Object::Number(119902), Object::Number(113)]);
    let list2496 = vm.gc.listn(&[Object::Number(119903), Object::Number(114)]);
    let list2497 = vm.gc.listn(&[Object::Number(119904), Object::Number(115)]);
    let list2498 = vm.gc.listn(&[Object::Number(119905), Object::Number(116)]);
    let list2499 = vm.gc.listn(&[Object::Number(119906), Object::Number(117)]);
    let list2500 = vm.gc.listn(&[Object::Number(119907), Object::Number(118)]);
    let list2501 = vm.gc.listn(&[Object::Number(119908), Object::Number(119)]);
    let list2502 = vm.gc.listn(&[Object::Number(119909), Object::Number(120)]);
    let list2503 = vm.gc.listn(&[Object::Number(119910), Object::Number(121)]);
    let list2504 = vm.gc.listn(&[Object::Number(119911), Object::Number(122)]);
    let list2505 = vm.gc.listn(&[Object::Number(119912), Object::Number(65)]);
    let list2506 = vm.gc.listn(&[Object::Number(119913), Object::Number(66)]);
    let list2507 = vm.gc.listn(&[Object::Number(119914), Object::Number(67)]);
    let list2508 = vm.gc.listn(&[Object::Number(119915), Object::Number(68)]);
    let list2509 = vm.gc.listn(&[Object::Number(119916), Object::Number(69)]);
    let list2510 = vm.gc.listn(&[Object::Number(119917), Object::Number(70)]);
    let list2511 = vm.gc.listn(&[Object::Number(119918), Object::Number(71)]);
    let list2512 = vm.gc.listn(&[Object::Number(119919), Object::Number(72)]);
    let list2513 = vm.gc.listn(&[Object::Number(119920), Object::Number(73)]);
    let list2514 = vm.gc.listn(&[Object::Number(119921), Object::Number(74)]);
    let list2515 = vm.gc.listn(&[Object::Number(119922), Object::Number(75)]);
    let list2516 = vm.gc.listn(&[Object::Number(119923), Object::Number(76)]);
    let list2517 = vm.gc.listn(&[Object::Number(119924), Object::Number(77)]);
    let list2518 = vm.gc.listn(&[Object::Number(119925), Object::Number(78)]);
    let list2519 = vm.gc.listn(&[Object::Number(119926), Object::Number(79)]);
    let list2520 = vm.gc.listn(&[Object::Number(119927), Object::Number(80)]);
    let list2521 = vm.gc.listn(&[Object::Number(119928), Object::Number(81)]);
    let list2522 = vm.gc.listn(&[Object::Number(119929), Object::Number(82)]);
    let list2523 = vm.gc.listn(&[Object::Number(119930), Object::Number(83)]);
    let list2524 = vm.gc.listn(&[Object::Number(119931), Object::Number(84)]);
    let list2525 = vm.gc.listn(&[Object::Number(119932), Object::Number(85)]);
    let list2526 = vm.gc.listn(&[Object::Number(119933), Object::Number(86)]);
    let list2527 = vm.gc.listn(&[Object::Number(119934), Object::Number(87)]);
    let list2528 = vm.gc.listn(&[Object::Number(119935), Object::Number(88)]);
    let list2529 = vm.gc.listn(&[Object::Number(119936), Object::Number(89)]);
    let list2530 = vm.gc.listn(&[Object::Number(119937), Object::Number(90)]);
    let list2531 = vm.gc.listn(&[Object::Number(119938), Object::Number(97)]);
    let list2532 = vm.gc.listn(&[Object::Number(119939), Object::Number(98)]);
    let list2533 = vm.gc.listn(&[Object::Number(119940), Object::Number(99)]);
    let list2534 = vm.gc.listn(&[Object::Number(119941), Object::Number(100)]);
    let list2535 = vm.gc.listn(&[Object::Number(119942), Object::Number(101)]);
    let list2536 = vm.gc.listn(&[Object::Number(119943), Object::Number(102)]);
    let list2537 = vm.gc.listn(&[Object::Number(119944), Object::Number(103)]);
    let list2538 = vm.gc.listn(&[Object::Number(119945), Object::Number(104)]);
    let list2539 = vm.gc.listn(&[Object::Number(119946), Object::Number(105)]);
    let list2540 = vm.gc.listn(&[Object::Number(119947), Object::Number(106)]);
    let list2541 = vm.gc.listn(&[Object::Number(119948), Object::Number(107)]);
    let list2542 = vm.gc.listn(&[Object::Number(119949), Object::Number(108)]);
    let list2543 = vm.gc.listn(&[Object::Number(119950), Object::Number(109)]);
    let list2544 = vm.gc.listn(&[Object::Number(119951), Object::Number(110)]);
    let list2545 = vm.gc.listn(&[Object::Number(119952), Object::Number(111)]);
    let list2546 = vm.gc.listn(&[Object::Number(119953), Object::Number(112)]);
    let list2547 = vm.gc.listn(&[Object::Number(119954), Object::Number(113)]);
    let list2548 = vm.gc.listn(&[Object::Number(119955), Object::Number(114)]);
    let list2549 = vm.gc.listn(&[Object::Number(119956), Object::Number(115)]);
    let list2550 = vm.gc.listn(&[Object::Number(119957), Object::Number(116)]);
    let list2551 = vm.gc.listn(&[Object::Number(119958), Object::Number(117)]);
    let list2552 = vm.gc.listn(&[Object::Number(119959), Object::Number(118)]);
    let list2553 = vm.gc.listn(&[Object::Number(119960), Object::Number(119)]);
    let list2554 = vm.gc.listn(&[Object::Number(119961), Object::Number(120)]);
    let list2555 = vm.gc.listn(&[Object::Number(119962), Object::Number(121)]);
    let list2556 = vm.gc.listn(&[Object::Number(119963), Object::Number(122)]);
    let list2557 = vm.gc.listn(&[Object::Number(119964), Object::Number(65)]);
    let list2558 = vm.gc.listn(&[Object::Number(119966), Object::Number(67)]);
    let list2559 = vm.gc.listn(&[Object::Number(119967), Object::Number(68)]);
    let list2560 = vm.gc.listn(&[Object::Number(119970), Object::Number(71)]);
    let list2561 = vm.gc.listn(&[Object::Number(119973), Object::Number(74)]);
    let list2562 = vm.gc.listn(&[Object::Number(119974), Object::Number(75)]);
    let list2563 = vm.gc.listn(&[Object::Number(119977), Object::Number(78)]);
    let list2564 = vm.gc.listn(&[Object::Number(119978), Object::Number(79)]);
    let list2565 = vm.gc.listn(&[Object::Number(119979), Object::Number(80)]);
    let list2566 = vm.gc.listn(&[Object::Number(119980), Object::Number(81)]);
    let list2567 = vm.gc.listn(&[Object::Number(119982), Object::Number(83)]);
    let list2568 = vm.gc.listn(&[Object::Number(119983), Object::Number(84)]);
    let list2569 = vm.gc.listn(&[Object::Number(119984), Object::Number(85)]);
    let list2570 = vm.gc.listn(&[Object::Number(119985), Object::Number(86)]);
    let list2571 = vm.gc.listn(&[Object::Number(119986), Object::Number(87)]);
    let list2572 = vm.gc.listn(&[Object::Number(119987), Object::Number(88)]);
    let list2573 = vm.gc.listn(&[Object::Number(119988), Object::Number(89)]);
    let list2574 = vm.gc.listn(&[Object::Number(119989), Object::Number(90)]);
    let list2575 = vm.gc.listn(&[Object::Number(119990), Object::Number(97)]);
    let list2576 = vm.gc.listn(&[Object::Number(119991), Object::Number(98)]);
    let list2577 = vm.gc.listn(&[Object::Number(119992), Object::Number(99)]);
    let list2578 = vm.gc.listn(&[Object::Number(119993), Object::Number(100)]);
    let list2579 = vm.gc.listn(&[Object::Number(119995), Object::Number(102)]);
    let list2580 = vm.gc.listn(&[Object::Number(119997), Object::Number(104)]);
    let list2581 = vm.gc.listn(&[Object::Number(119998), Object::Number(105)]);
    let list2582 = vm.gc.listn(&[Object::Number(119999), Object::Number(106)]);
    let list2583 = vm.gc.listn(&[Object::Number(120000), Object::Number(107)]);
    let list2584 = vm.gc.listn(&[Object::Number(120001), Object::Number(108)]);
    let list2585 = vm.gc.listn(&[Object::Number(120002), Object::Number(109)]);
    let list2586 = vm.gc.listn(&[Object::Number(120003), Object::Number(110)]);
    let list2587 = vm.gc.listn(&[Object::Number(120005), Object::Number(112)]);
    let list2588 = vm.gc.listn(&[Object::Number(120006), Object::Number(113)]);
    let list2589 = vm.gc.listn(&[Object::Number(120007), Object::Number(114)]);
    let list2590 = vm.gc.listn(&[Object::Number(120008), Object::Number(115)]);
    let list2591 = vm.gc.listn(&[Object::Number(120009), Object::Number(116)]);
    let list2592 = vm.gc.listn(&[Object::Number(120010), Object::Number(117)]);
    let list2593 = vm.gc.listn(&[Object::Number(120011), Object::Number(118)]);
    let list2594 = vm.gc.listn(&[Object::Number(120012), Object::Number(119)]);
    let list2595 = vm.gc.listn(&[Object::Number(120013), Object::Number(120)]);
    let list2596 = vm.gc.listn(&[Object::Number(120014), Object::Number(121)]);
    let list2597 = vm.gc.listn(&[Object::Number(120015), Object::Number(122)]);
    let list2598 = vm.gc.listn(&[Object::Number(120016), Object::Number(65)]);
    let list2599 = vm.gc.listn(&[Object::Number(120017), Object::Number(66)]);
    let list2600 = vm.gc.listn(&[Object::Number(120018), Object::Number(67)]);
    let list2601 = vm.gc.listn(&[Object::Number(120019), Object::Number(68)]);
    let list2602 = vm.gc.listn(&[Object::Number(120020), Object::Number(69)]);
    let list2603 = vm.gc.listn(&[Object::Number(120021), Object::Number(70)]);
    let list2604 = vm.gc.listn(&[Object::Number(120022), Object::Number(71)]);
    let list2605 = vm.gc.listn(&[Object::Number(120023), Object::Number(72)]);
    let list2606 = vm.gc.listn(&[Object::Number(120024), Object::Number(73)]);
    let list2607 = vm.gc.listn(&[Object::Number(120025), Object::Number(74)]);
    let list2608 = vm.gc.listn(&[Object::Number(120026), Object::Number(75)]);
    let list2609 = vm.gc.listn(&[Object::Number(120027), Object::Number(76)]);
    let list2610 = vm.gc.listn(&[Object::Number(120028), Object::Number(77)]);
    let list2611 = vm.gc.listn(&[Object::Number(120029), Object::Number(78)]);
    let list2612 = vm.gc.listn(&[Object::Number(120030), Object::Number(79)]);
    let list2613 = vm.gc.listn(&[Object::Number(120031), Object::Number(80)]);
    let list2614 = vm.gc.listn(&[Object::Number(120032), Object::Number(81)]);
    let list2615 = vm.gc.listn(&[Object::Number(120033), Object::Number(82)]);
    let list2616 = vm.gc.listn(&[Object::Number(120034), Object::Number(83)]);
    let list2617 = vm.gc.listn(&[Object::Number(120035), Object::Number(84)]);
    let list2618 = vm.gc.listn(&[Object::Number(120036), Object::Number(85)]);
    let list2619 = vm.gc.listn(&[Object::Number(120037), Object::Number(86)]);
    let list2620 = vm.gc.listn(&[Object::Number(120038), Object::Number(87)]);
    let list2621 = vm.gc.listn(&[Object::Number(120039), Object::Number(88)]);
    let list2622 = vm.gc.listn(&[Object::Number(120040), Object::Number(89)]);
    let list2623 = vm.gc.listn(&[Object::Number(120041), Object::Number(90)]);
    let list2624 = vm.gc.listn(&[Object::Number(120042), Object::Number(97)]);
    let list2625 = vm.gc.listn(&[Object::Number(120043), Object::Number(98)]);
    let list2626 = vm.gc.listn(&[Object::Number(120044), Object::Number(99)]);
    let list2627 = vm.gc.listn(&[Object::Number(120045), Object::Number(100)]);
    let list2628 = vm.gc.listn(&[Object::Number(120046), Object::Number(101)]);
    let list2629 = vm.gc.listn(&[Object::Number(120047), Object::Number(102)]);
    let list2630 = vm.gc.listn(&[Object::Number(120048), Object::Number(103)]);
    let list2631 = vm.gc.listn(&[Object::Number(120049), Object::Number(104)]);
    let list2632 = vm.gc.listn(&[Object::Number(120050), Object::Number(105)]);
    let list2633 = vm.gc.listn(&[Object::Number(120051), Object::Number(106)]);
    let list2634 = vm.gc.listn(&[Object::Number(120052), Object::Number(107)]);
    let list2635 = vm.gc.listn(&[Object::Number(120053), Object::Number(108)]);
    let list2636 = vm.gc.listn(&[Object::Number(120054), Object::Number(109)]);
    let list2637 = vm.gc.listn(&[Object::Number(120055), Object::Number(110)]);
    let list2638 = vm.gc.listn(&[Object::Number(120056), Object::Number(111)]);
    let list2639 = vm.gc.listn(&[Object::Number(120057), Object::Number(112)]);
    let list2640 = vm.gc.listn(&[Object::Number(120058), Object::Number(113)]);
    let list2641 = vm.gc.listn(&[Object::Number(120059), Object::Number(114)]);
    let list2642 = vm.gc.listn(&[Object::Number(120060), Object::Number(115)]);
    let list2643 = vm.gc.listn(&[Object::Number(120061), Object::Number(116)]);
    let list2644 = vm.gc.listn(&[Object::Number(120062), Object::Number(117)]);
    let list2645 = vm.gc.listn(&[Object::Number(120063), Object::Number(118)]);
    let list2646 = vm.gc.listn(&[Object::Number(120064), Object::Number(119)]);
    let list2647 = vm.gc.listn(&[Object::Number(120065), Object::Number(120)]);
    let list2648 = vm.gc.listn(&[Object::Number(120066), Object::Number(121)]);
    let list2649 = vm.gc.listn(&[Object::Number(120067), Object::Number(122)]);
    let list2650 = vm.gc.listn(&[Object::Number(120068), Object::Number(65)]);
    let list2651 = vm.gc.listn(&[Object::Number(120069), Object::Number(66)]);
    let list2652 = vm.gc.listn(&[Object::Number(120071), Object::Number(68)]);
    let list2653 = vm.gc.listn(&[Object::Number(120072), Object::Number(69)]);
    let list2654 = vm.gc.listn(&[Object::Number(120073), Object::Number(70)]);
    let list2655 = vm.gc.listn(&[Object::Number(120074), Object::Number(71)]);
    let list2656 = vm.gc.listn(&[Object::Number(120077), Object::Number(74)]);
    let list2657 = vm.gc.listn(&[Object::Number(120078), Object::Number(75)]);
    let list2658 = vm.gc.listn(&[Object::Number(120079), Object::Number(76)]);
    let list2659 = vm.gc.listn(&[Object::Number(120080), Object::Number(77)]);
    let list2660 = vm.gc.listn(&[Object::Number(120081), Object::Number(78)]);
    let list2661 = vm.gc.listn(&[Object::Number(120082), Object::Number(79)]);
    let list2662 = vm.gc.listn(&[Object::Number(120083), Object::Number(80)]);
    let list2663 = vm.gc.listn(&[Object::Number(120084), Object::Number(81)]);
    let list2664 = vm.gc.listn(&[Object::Number(120086), Object::Number(83)]);
    let list2665 = vm.gc.listn(&[Object::Number(120087), Object::Number(84)]);
    let list2666 = vm.gc.listn(&[Object::Number(120088), Object::Number(85)]);
    let list2667 = vm.gc.listn(&[Object::Number(120089), Object::Number(86)]);
    let list2668 = vm.gc.listn(&[Object::Number(120090), Object::Number(87)]);
    let list2669 = vm.gc.listn(&[Object::Number(120091), Object::Number(88)]);
    let list2670 = vm.gc.listn(&[Object::Number(120092), Object::Number(89)]);
    let list2671 = vm.gc.listn(&[Object::Number(120094), Object::Number(97)]);
    let list2672 = vm.gc.listn(&[Object::Number(120095), Object::Number(98)]);
    let list2673 = vm.gc.listn(&[Object::Number(120096), Object::Number(99)]);
    let list2674 = vm.gc.listn(&[Object::Number(120097), Object::Number(100)]);
    let list2675 = vm.gc.listn(&[Object::Number(120098), Object::Number(101)]);
    let list2676 = vm.gc.listn(&[Object::Number(120099), Object::Number(102)]);
    let list2677 = vm.gc.listn(&[Object::Number(120100), Object::Number(103)]);
    let list2678 = vm.gc.listn(&[Object::Number(120101), Object::Number(104)]);
    let list2679 = vm.gc.listn(&[Object::Number(120102), Object::Number(105)]);
    let list2680 = vm.gc.listn(&[Object::Number(120103), Object::Number(106)]);
    let list2681 = vm.gc.listn(&[Object::Number(120104), Object::Number(107)]);
    let list2682 = vm.gc.listn(&[Object::Number(120105), Object::Number(108)]);
    let list2683 = vm.gc.listn(&[Object::Number(120106), Object::Number(109)]);
    let list2684 = vm.gc.listn(&[Object::Number(120107), Object::Number(110)]);
    let list2685 = vm.gc.listn(&[Object::Number(120108), Object::Number(111)]);
    let list2686 = vm.gc.listn(&[Object::Number(120109), Object::Number(112)]);
    let list2687 = vm.gc.listn(&[Object::Number(120110), Object::Number(113)]);
    let list2688 = vm.gc.listn(&[Object::Number(120111), Object::Number(114)]);
    let list2689 = vm.gc.listn(&[Object::Number(120112), Object::Number(115)]);
    let list2690 = vm.gc.listn(&[Object::Number(120113), Object::Number(116)]);
    let list2691 = vm.gc.listn(&[Object::Number(120114), Object::Number(117)]);
    let list2692 = vm.gc.listn(&[Object::Number(120115), Object::Number(118)]);
    let list2693 = vm.gc.listn(&[Object::Number(120116), Object::Number(119)]);
    let list2694 = vm.gc.listn(&[Object::Number(120117), Object::Number(120)]);
    let list2695 = vm.gc.listn(&[Object::Number(120118), Object::Number(121)]);
    let list2696 = vm.gc.listn(&[Object::Number(120119), Object::Number(122)]);
    let list2697 = vm.gc.listn(&[Object::Number(120120), Object::Number(65)]);
    let list2698 = vm.gc.listn(&[Object::Number(120121), Object::Number(66)]);
    let list2699 = vm.gc.listn(&[Object::Number(120123), Object::Number(68)]);
    let list2700 = vm.gc.listn(&[Object::Number(120124), Object::Number(69)]);
    let list2701 = vm.gc.listn(&[Object::Number(120125), Object::Number(70)]);
    let list2702 = vm.gc.listn(&[Object::Number(120126), Object::Number(71)]);
    let list2703 = vm.gc.listn(&[Object::Number(120128), Object::Number(73)]);
    let list2704 = vm.gc.listn(&[Object::Number(120129), Object::Number(74)]);
    let list2705 = vm.gc.listn(&[Object::Number(120130), Object::Number(75)]);
    let list2706 = vm.gc.listn(&[Object::Number(120131), Object::Number(76)]);
    let list2707 = vm.gc.listn(&[Object::Number(120132), Object::Number(77)]);
    let list2708 = vm.gc.listn(&[Object::Number(120134), Object::Number(79)]);
    let list2709 = vm.gc.listn(&[Object::Number(120138), Object::Number(83)]);
    let list2710 = vm.gc.listn(&[Object::Number(120139), Object::Number(84)]);
    let list2711 = vm.gc.listn(&[Object::Number(120140), Object::Number(85)]);
    let list2712 = vm.gc.listn(&[Object::Number(120141), Object::Number(86)]);
    let list2713 = vm.gc.listn(&[Object::Number(120142), Object::Number(87)]);
    let list2714 = vm.gc.listn(&[Object::Number(120143), Object::Number(88)]);
    let list2715 = vm.gc.listn(&[Object::Number(120144), Object::Number(89)]);
    let list2716 = vm.gc.listn(&[Object::Number(120146), Object::Number(97)]);
    let list2717 = vm.gc.listn(&[Object::Number(120147), Object::Number(98)]);
    let list2718 = vm.gc.listn(&[Object::Number(120148), Object::Number(99)]);
    let list2719 = vm.gc.listn(&[Object::Number(120149), Object::Number(100)]);
    let list2720 = vm.gc.listn(&[Object::Number(120150), Object::Number(101)]);
    let list2721 = vm.gc.listn(&[Object::Number(120151), Object::Number(102)]);
    let list2722 = vm.gc.listn(&[Object::Number(120152), Object::Number(103)]);
    let list2723 = vm.gc.listn(&[Object::Number(120153), Object::Number(104)]);
    let list2724 = vm.gc.listn(&[Object::Number(120154), Object::Number(105)]);
    let list2725 = vm.gc.listn(&[Object::Number(120155), Object::Number(106)]);
    let list2726 = vm.gc.listn(&[Object::Number(120156), Object::Number(107)]);
    let list2727 = vm.gc.listn(&[Object::Number(120157), Object::Number(108)]);
    let list2728 = vm.gc.listn(&[Object::Number(120158), Object::Number(109)]);
    let list2729 = vm.gc.listn(&[Object::Number(120159), Object::Number(110)]);
    let list2730 = vm.gc.listn(&[Object::Number(120160), Object::Number(111)]);
    let list2731 = vm.gc.listn(&[Object::Number(120161), Object::Number(112)]);
    let list2732 = vm.gc.listn(&[Object::Number(120162), Object::Number(113)]);
    let list2733 = vm.gc.listn(&[Object::Number(120163), Object::Number(114)]);
    let list2734 = vm.gc.listn(&[Object::Number(120164), Object::Number(115)]);
    let list2735 = vm.gc.listn(&[Object::Number(120165), Object::Number(116)]);
    let list2736 = vm.gc.listn(&[Object::Number(120166), Object::Number(117)]);
    let list2737 = vm.gc.listn(&[Object::Number(120167), Object::Number(118)]);
    let list2738 = vm.gc.listn(&[Object::Number(120168), Object::Number(119)]);
    let list2739 = vm.gc.listn(&[Object::Number(120169), Object::Number(120)]);
    let list2740 = vm.gc.listn(&[Object::Number(120170), Object::Number(121)]);
    let list2741 = vm.gc.listn(&[Object::Number(120171), Object::Number(122)]);
    let list2742 = vm.gc.listn(&[Object::Number(120172), Object::Number(65)]);
    let list2743 = vm.gc.listn(&[Object::Number(120173), Object::Number(66)]);
    let list2744 = vm.gc.listn(&[Object::Number(120174), Object::Number(67)]);
    let list2745 = vm.gc.listn(&[Object::Number(120175), Object::Number(68)]);
    let list2746 = vm.gc.listn(&[Object::Number(120176), Object::Number(69)]);
    let list2747 = vm.gc.listn(&[Object::Number(120177), Object::Number(70)]);
    let list2748 = vm.gc.listn(&[Object::Number(120178), Object::Number(71)]);
    let list2749 = vm.gc.listn(&[Object::Number(120179), Object::Number(72)]);
    let list2750 = vm.gc.listn(&[Object::Number(120180), Object::Number(73)]);
    let list2751 = vm.gc.listn(&[Object::Number(120181), Object::Number(74)]);
    let list2752 = vm.gc.listn(&[Object::Number(120182), Object::Number(75)]);
    let list2753 = vm.gc.listn(&[Object::Number(120183), Object::Number(76)]);
    let list2754 = vm.gc.listn(&[Object::Number(120184), Object::Number(77)]);
    let list2755 = vm.gc.listn(&[Object::Number(120185), Object::Number(78)]);
    let list2756 = vm.gc.listn(&[Object::Number(120186), Object::Number(79)]);
    let list2757 = vm.gc.listn(&[Object::Number(120187), Object::Number(80)]);
    let list2758 = vm.gc.listn(&[Object::Number(120188), Object::Number(81)]);
    let list2759 = vm.gc.listn(&[Object::Number(120189), Object::Number(82)]);
    let list2760 = vm.gc.listn(&[Object::Number(120190), Object::Number(83)]);
    let list2761 = vm.gc.listn(&[Object::Number(120191), Object::Number(84)]);
    let list2762 = vm.gc.listn(&[Object::Number(120192), Object::Number(85)]);
    let list2763 = vm.gc.listn(&[Object::Number(120193), Object::Number(86)]);
    let list2764 = vm.gc.listn(&[Object::Number(120194), Object::Number(87)]);
    let list2765 = vm.gc.listn(&[Object::Number(120195), Object::Number(88)]);
    let list2766 = vm.gc.listn(&[Object::Number(120196), Object::Number(89)]);
    let list2767 = vm.gc.listn(&[Object::Number(120197), Object::Number(90)]);
    let list2768 = vm.gc.listn(&[Object::Number(120198), Object::Number(97)]);
    let list2769 = vm.gc.listn(&[Object::Number(120199), Object::Number(98)]);
    let list2770 = vm.gc.listn(&[Object::Number(120200), Object::Number(99)]);
    let list2771 = vm.gc.listn(&[Object::Number(120201), Object::Number(100)]);
    let list2772 = vm.gc.listn(&[Object::Number(120202), Object::Number(101)]);
    let list2773 = vm.gc.listn(&[Object::Number(120203), Object::Number(102)]);
    let list2774 = vm.gc.listn(&[Object::Number(120204), Object::Number(103)]);
    let list2775 = vm.gc.listn(&[Object::Number(120205), Object::Number(104)]);
    let list2776 = vm.gc.listn(&[Object::Number(120206), Object::Number(105)]);
    let list2777 = vm.gc.listn(&[Object::Number(120207), Object::Number(106)]);
    let list2778 = vm.gc.listn(&[Object::Number(120208), Object::Number(107)]);
    let list2779 = vm.gc.listn(&[Object::Number(120209), Object::Number(108)]);
    let list2780 = vm.gc.listn(&[Object::Number(120210), Object::Number(109)]);
    let list2781 = vm.gc.listn(&[Object::Number(120211), Object::Number(110)]);
    let list2782 = vm.gc.listn(&[Object::Number(120212), Object::Number(111)]);
    let list2783 = vm.gc.listn(&[Object::Number(120213), Object::Number(112)]);
    let list2784 = vm.gc.listn(&[Object::Number(120214), Object::Number(113)]);
    let list2785 = vm.gc.listn(&[Object::Number(120215), Object::Number(114)]);
    let list2786 = vm.gc.listn(&[Object::Number(120216), Object::Number(115)]);
    let list2787 = vm.gc.listn(&[Object::Number(120217), Object::Number(116)]);
    let list2788 = vm.gc.listn(&[Object::Number(120218), Object::Number(117)]);
    let list2789 = vm.gc.listn(&[Object::Number(120219), Object::Number(118)]);
    let list2790 = vm.gc.listn(&[Object::Number(120220), Object::Number(119)]);
    let list2791 = vm.gc.listn(&[Object::Number(120221), Object::Number(120)]);
    let list2792 = vm.gc.listn(&[Object::Number(120222), Object::Number(121)]);
    let list2793 = vm.gc.listn(&[Object::Number(120223), Object::Number(122)]);
    let list2794 = vm.gc.listn(&[Object::Number(120224), Object::Number(65)]);
    let list2795 = vm.gc.listn(&[Object::Number(120225), Object::Number(66)]);
    let list2796 = vm.gc.listn(&[Object::Number(120226), Object::Number(67)]);
    let list2797 = vm.gc.listn(&[Object::Number(120227), Object::Number(68)]);
    let list2798 = vm.gc.listn(&[Object::Number(120228), Object::Number(69)]);
    let list2799 = vm.gc.listn(&[Object::Number(120229), Object::Number(70)]);
    let list2800 = vm.gc.listn(&[Object::Number(120230), Object::Number(71)]);
    let list2801 = vm.gc.listn(&[Object::Number(120231), Object::Number(72)]);
    let list2802 = vm.gc.listn(&[Object::Number(120232), Object::Number(73)]);
    let list2803 = vm.gc.listn(&[Object::Number(120233), Object::Number(74)]);
    let list2804 = vm.gc.listn(&[Object::Number(120234), Object::Number(75)]);
    let list2805 = vm.gc.listn(&[Object::Number(120235), Object::Number(76)]);
    let list2806 = vm.gc.listn(&[Object::Number(120236), Object::Number(77)]);
    let list2807 = vm.gc.listn(&[Object::Number(120237), Object::Number(78)]);
    let list2808 = vm.gc.listn(&[Object::Number(120238), Object::Number(79)]);
    let list2809 = vm.gc.listn(&[Object::Number(120239), Object::Number(80)]);
    let list2810 = vm.gc.listn(&[Object::Number(120240), Object::Number(81)]);
    let list2811 = vm.gc.listn(&[Object::Number(120241), Object::Number(82)]);
    let list2812 = vm.gc.listn(&[Object::Number(120242), Object::Number(83)]);
    let list2813 = vm.gc.listn(&[Object::Number(120243), Object::Number(84)]);
    let list2814 = vm.gc.listn(&[Object::Number(120244), Object::Number(85)]);
    let list2815 = vm.gc.listn(&[Object::Number(120245), Object::Number(86)]);
    let list2816 = vm.gc.listn(&[Object::Number(120246), Object::Number(87)]);
    let list2817 = vm.gc.listn(&[Object::Number(120247), Object::Number(88)]);
    let list2818 = vm.gc.listn(&[Object::Number(120248), Object::Number(89)]);
    let list2819 = vm.gc.listn(&[Object::Number(120249), Object::Number(90)]);
    let list2820 = vm.gc.listn(&[Object::Number(120250), Object::Number(97)]);
    let list2821 = vm.gc.listn(&[Object::Number(120251), Object::Number(98)]);
    let list2822 = vm.gc.listn(&[Object::Number(120252), Object::Number(99)]);
    let list2823 = vm.gc.listn(&[Object::Number(120253), Object::Number(100)]);
    let list2824 = vm.gc.listn(&[Object::Number(120254), Object::Number(101)]);
    let list2825 = vm.gc.listn(&[Object::Number(120255), Object::Number(102)]);
    let list2826 = vm.gc.listn(&[Object::Number(120256), Object::Number(103)]);
    let list2827 = vm.gc.listn(&[Object::Number(120257), Object::Number(104)]);
    let list2828 = vm.gc.listn(&[Object::Number(120258), Object::Number(105)]);
    let list2829 = vm.gc.listn(&[Object::Number(120259), Object::Number(106)]);
    let list2830 = vm.gc.listn(&[Object::Number(120260), Object::Number(107)]);
    let list2831 = vm.gc.listn(&[Object::Number(120261), Object::Number(108)]);
    let list2832 = vm.gc.listn(&[Object::Number(120262), Object::Number(109)]);
    let list2833 = vm.gc.listn(&[Object::Number(120263), Object::Number(110)]);
    let list2834 = vm.gc.listn(&[Object::Number(120264), Object::Number(111)]);
    let list2835 = vm.gc.listn(&[Object::Number(120265), Object::Number(112)]);
    let list2836 = vm.gc.listn(&[Object::Number(120266), Object::Number(113)]);
    let list2837 = vm.gc.listn(&[Object::Number(120267), Object::Number(114)]);
    let list2838 = vm.gc.listn(&[Object::Number(120268), Object::Number(115)]);
    let list2839 = vm.gc.listn(&[Object::Number(120269), Object::Number(116)]);
    let list2840 = vm.gc.listn(&[Object::Number(120270), Object::Number(117)]);
    let list2841 = vm.gc.listn(&[Object::Number(120271), Object::Number(118)]);
    let list2842 = vm.gc.listn(&[Object::Number(120272), Object::Number(119)]);
    let list2843 = vm.gc.listn(&[Object::Number(120273), Object::Number(120)]);
    let list2844 = vm.gc.listn(&[Object::Number(120274), Object::Number(121)]);
    let list2845 = vm.gc.listn(&[Object::Number(120275), Object::Number(122)]);
    let list2846 = vm.gc.listn(&[Object::Number(120276), Object::Number(65)]);
    let list2847 = vm.gc.listn(&[Object::Number(120277), Object::Number(66)]);
    let list2848 = vm.gc.listn(&[Object::Number(120278), Object::Number(67)]);
    let list2849 = vm.gc.listn(&[Object::Number(120279), Object::Number(68)]);
    let list2850 = vm.gc.listn(&[Object::Number(120280), Object::Number(69)]);
    let list2851 = vm.gc.listn(&[Object::Number(120281), Object::Number(70)]);
    let list2852 = vm.gc.listn(&[Object::Number(120282), Object::Number(71)]);
    let list2853 = vm.gc.listn(&[Object::Number(120283), Object::Number(72)]);
    let list2854 = vm.gc.listn(&[Object::Number(120284), Object::Number(73)]);
    let list2855 = vm.gc.listn(&[Object::Number(120285), Object::Number(74)]);
    let list2856 = vm.gc.listn(&[Object::Number(120286), Object::Number(75)]);
    let list2857 = vm.gc.listn(&[Object::Number(120287), Object::Number(76)]);
    let list2858 = vm.gc.listn(&[Object::Number(120288), Object::Number(77)]);
    let list2859 = vm.gc.listn(&[Object::Number(120289), Object::Number(78)]);
    let list2860 = vm.gc.listn(&[Object::Number(120290), Object::Number(79)]);
    let list2861 = vm.gc.listn(&[Object::Number(120291), Object::Number(80)]);
    let list2862 = vm.gc.listn(&[Object::Number(120292), Object::Number(81)]);
    let list2863 = vm.gc.listn(&[Object::Number(120293), Object::Number(82)]);
    let list2864 = vm.gc.listn(&[Object::Number(120294), Object::Number(83)]);
    let list2865 = vm.gc.listn(&[Object::Number(120295), Object::Number(84)]);
    let list2866 = vm.gc.listn(&[Object::Number(120296), Object::Number(85)]);
    let list2867 = vm.gc.listn(&[Object::Number(120297), Object::Number(86)]);
    let list2868 = vm.gc.listn(&[Object::Number(120298), Object::Number(87)]);
    let list2869 = vm.gc.listn(&[Object::Number(120299), Object::Number(88)]);
    let list2870 = vm.gc.listn(&[Object::Number(120300), Object::Number(89)]);
    let list2871 = vm.gc.listn(&[Object::Number(120301), Object::Number(90)]);
    let list2872 = vm.gc.listn(&[Object::Number(120302), Object::Number(97)]);
    let list2873 = vm.gc.listn(&[Object::Number(120303), Object::Number(98)]);
    let list2874 = vm.gc.listn(&[Object::Number(120304), Object::Number(99)]);
    let list2875 = vm.gc.listn(&[Object::Number(120305), Object::Number(100)]);
    let list2876 = vm.gc.listn(&[Object::Number(120306), Object::Number(101)]);
    let list2877 = vm.gc.listn(&[Object::Number(120307), Object::Number(102)]);
    let list2878 = vm.gc.listn(&[Object::Number(120308), Object::Number(103)]);
    let list2879 = vm.gc.listn(&[Object::Number(120309), Object::Number(104)]);
    let list2880 = vm.gc.listn(&[Object::Number(120310), Object::Number(105)]);
    let list2881 = vm.gc.listn(&[Object::Number(120311), Object::Number(106)]);
    let list2882 = vm.gc.listn(&[Object::Number(120312), Object::Number(107)]);
    let list2883 = vm.gc.listn(&[Object::Number(120313), Object::Number(108)]);
    let list2884 = vm.gc.listn(&[Object::Number(120314), Object::Number(109)]);
    let list2885 = vm.gc.listn(&[Object::Number(120315), Object::Number(110)]);
    let list2886 = vm.gc.listn(&[Object::Number(120316), Object::Number(111)]);
    let list2887 = vm.gc.listn(&[Object::Number(120317), Object::Number(112)]);
    let list2888 = vm.gc.listn(&[Object::Number(120318), Object::Number(113)]);
    let list2889 = vm.gc.listn(&[Object::Number(120319), Object::Number(114)]);
    let list2890 = vm.gc.listn(&[Object::Number(120320), Object::Number(115)]);
    let list2891 = vm.gc.listn(&[Object::Number(120321), Object::Number(116)]);
    let list2892 = vm.gc.listn(&[Object::Number(120322), Object::Number(117)]);
    let list2893 = vm.gc.listn(&[Object::Number(120323), Object::Number(118)]);
    let list2894 = vm.gc.listn(&[Object::Number(120324), Object::Number(119)]);
    let list2895 = vm.gc.listn(&[Object::Number(120325), Object::Number(120)]);
    let list2896 = vm.gc.listn(&[Object::Number(120326), Object::Number(121)]);
    let list2897 = vm.gc.listn(&[Object::Number(120327), Object::Number(122)]);
    let list2898 = vm.gc.listn(&[Object::Number(120328), Object::Number(65)]);
    let list2899 = vm.gc.listn(&[Object::Number(120329), Object::Number(66)]);
    let list2900 = vm.gc.listn(&[Object::Number(120330), Object::Number(67)]);
    let list2901 = vm.gc.listn(&[Object::Number(120331), Object::Number(68)]);
    let list2902 = vm.gc.listn(&[Object::Number(120332), Object::Number(69)]);
    let list2903 = vm.gc.listn(&[Object::Number(120333), Object::Number(70)]);
    let list2904 = vm.gc.listn(&[Object::Number(120334), Object::Number(71)]);
    let list2905 = vm.gc.listn(&[Object::Number(120335), Object::Number(72)]);
    let list2906 = vm.gc.listn(&[Object::Number(120336), Object::Number(73)]);
    let list2907 = vm.gc.listn(&[Object::Number(120337), Object::Number(74)]);
    let list2908 = vm.gc.listn(&[Object::Number(120338), Object::Number(75)]);
    let list2909 = vm.gc.listn(&[Object::Number(120339), Object::Number(76)]);
    let list2910 = vm.gc.listn(&[Object::Number(120340), Object::Number(77)]);
    let list2911 = vm.gc.listn(&[Object::Number(120341), Object::Number(78)]);
    let list2912 = vm.gc.listn(&[Object::Number(120342), Object::Number(79)]);
    let list2913 = vm.gc.listn(&[Object::Number(120343), Object::Number(80)]);
    let list2914 = vm.gc.listn(&[Object::Number(120344), Object::Number(81)]);
    let list2915 = vm.gc.listn(&[Object::Number(120345), Object::Number(82)]);
    let list2916 = vm.gc.listn(&[Object::Number(120346), Object::Number(83)]);
    let list2917 = vm.gc.listn(&[Object::Number(120347), Object::Number(84)]);
    let list2918 = vm.gc.listn(&[Object::Number(120348), Object::Number(85)]);
    let list2919 = vm.gc.listn(&[Object::Number(120349), Object::Number(86)]);
    let list2920 = vm.gc.listn(&[Object::Number(120350), Object::Number(87)]);
    let list2921 = vm.gc.listn(&[Object::Number(120351), Object::Number(88)]);
    let list2922 = vm.gc.listn(&[Object::Number(120352), Object::Number(89)]);
    let list2923 = vm.gc.listn(&[Object::Number(120353), Object::Number(90)]);
    let list2924 = vm.gc.listn(&[Object::Number(120354), Object::Number(97)]);
    let list2925 = vm.gc.listn(&[Object::Number(120355), Object::Number(98)]);
    let list2926 = vm.gc.listn(&[Object::Number(120356), Object::Number(99)]);
    let list2927 = vm.gc.listn(&[Object::Number(120357), Object::Number(100)]);
    let list2928 = vm.gc.listn(&[Object::Number(120358), Object::Number(101)]);
    let list2929 = vm.gc.listn(&[Object::Number(120359), Object::Number(102)]);
    let list2930 = vm.gc.listn(&[Object::Number(120360), Object::Number(103)]);
    let list2931 = vm.gc.listn(&[Object::Number(120361), Object::Number(104)]);
    let list2932 = vm.gc.listn(&[Object::Number(120362), Object::Number(105)]);
    let list2933 = vm.gc.listn(&[Object::Number(120363), Object::Number(106)]);
    let list2934 = vm.gc.listn(&[Object::Number(120364), Object::Number(107)]);
    let list2935 = vm.gc.listn(&[Object::Number(120365), Object::Number(108)]);
    let list2936 = vm.gc.listn(&[Object::Number(120366), Object::Number(109)]);
    let list2937 = vm.gc.listn(&[Object::Number(120367), Object::Number(110)]);
    let list2938 = vm.gc.listn(&[Object::Number(120368), Object::Number(111)]);
    let list2939 = vm.gc.listn(&[Object::Number(120369), Object::Number(112)]);
    let list2940 = vm.gc.listn(&[Object::Number(120370), Object::Number(113)]);
    let list2941 = vm.gc.listn(&[Object::Number(120371), Object::Number(114)]);
    let list2942 = vm.gc.listn(&[Object::Number(120372), Object::Number(115)]);
    let list2943 = vm.gc.listn(&[Object::Number(120373), Object::Number(116)]);
    let list2944 = vm.gc.listn(&[Object::Number(120374), Object::Number(117)]);
    let list2945 = vm.gc.listn(&[Object::Number(120375), Object::Number(118)]);
    let list2946 = vm.gc.listn(&[Object::Number(120376), Object::Number(119)]);
    let list2947 = vm.gc.listn(&[Object::Number(120377), Object::Number(120)]);
    let list2948 = vm.gc.listn(&[Object::Number(120378), Object::Number(121)]);
    let list2949 = vm.gc.listn(&[Object::Number(120379), Object::Number(122)]);
    let list2950 = vm.gc.listn(&[Object::Number(120380), Object::Number(65)]);
    let list2951 = vm.gc.listn(&[Object::Number(120381), Object::Number(66)]);
    let list2952 = vm.gc.listn(&[Object::Number(120382), Object::Number(67)]);
    let list2953 = vm.gc.listn(&[Object::Number(120383), Object::Number(68)]);
    let list2954 = vm.gc.listn(&[Object::Number(120384), Object::Number(69)]);
    let list2955 = vm.gc.listn(&[Object::Number(120385), Object::Number(70)]);
    let list2956 = vm.gc.listn(&[Object::Number(120386), Object::Number(71)]);
    let list2957 = vm.gc.listn(&[Object::Number(120387), Object::Number(72)]);
    let list2958 = vm.gc.listn(&[Object::Number(120388), Object::Number(73)]);
    let list2959 = vm.gc.listn(&[Object::Number(120389), Object::Number(74)]);
    let list2960 = vm.gc.listn(&[Object::Number(120390), Object::Number(75)]);
    let list2961 = vm.gc.listn(&[Object::Number(120391), Object::Number(76)]);
    let list2962 = vm.gc.listn(&[Object::Number(120392), Object::Number(77)]);
    let list2963 = vm.gc.listn(&[Object::Number(120393), Object::Number(78)]);
    let list2964 = vm.gc.listn(&[Object::Number(120394), Object::Number(79)]);
    let list2965 = vm.gc.listn(&[Object::Number(120395), Object::Number(80)]);
    let list2966 = vm.gc.listn(&[Object::Number(120396), Object::Number(81)]);
    let list2967 = vm.gc.listn(&[Object::Number(120397), Object::Number(82)]);
    let list2968 = vm.gc.listn(&[Object::Number(120398), Object::Number(83)]);
    let list2969 = vm.gc.listn(&[Object::Number(120399), Object::Number(84)]);
    let list2970 = vm.gc.listn(&[Object::Number(120400), Object::Number(85)]);
    let list2971 = vm.gc.listn(&[Object::Number(120401), Object::Number(86)]);
    let list2972 = vm.gc.listn(&[Object::Number(120402), Object::Number(87)]);
    let list2973 = vm.gc.listn(&[Object::Number(120403), Object::Number(88)]);
    let list2974 = vm.gc.listn(&[Object::Number(120404), Object::Number(89)]);
    let list2975 = vm.gc.listn(&[Object::Number(120405), Object::Number(90)]);
    let list2976 = vm.gc.listn(&[Object::Number(120406), Object::Number(97)]);
    let list2977 = vm.gc.listn(&[Object::Number(120407), Object::Number(98)]);
    let list2978 = vm.gc.listn(&[Object::Number(120408), Object::Number(99)]);
    let list2979 = vm.gc.listn(&[Object::Number(120409), Object::Number(100)]);
    let list2980 = vm.gc.listn(&[Object::Number(120410), Object::Number(101)]);
    let list2981 = vm.gc.listn(&[Object::Number(120411), Object::Number(102)]);
    let list2982 = vm.gc.listn(&[Object::Number(120412), Object::Number(103)]);
    let list2983 = vm.gc.listn(&[Object::Number(120413), Object::Number(104)]);
    let list2984 = vm.gc.listn(&[Object::Number(120414), Object::Number(105)]);
    let list2985 = vm.gc.listn(&[Object::Number(120415), Object::Number(106)]);
    let list2986 = vm.gc.listn(&[Object::Number(120416), Object::Number(107)]);
    let list2987 = vm.gc.listn(&[Object::Number(120417), Object::Number(108)]);
    let list2988 = vm.gc.listn(&[Object::Number(120418), Object::Number(109)]);
    let list2989 = vm.gc.listn(&[Object::Number(120419), Object::Number(110)]);
    let list2990 = vm.gc.listn(&[Object::Number(120420), Object::Number(111)]);
    let list2991 = vm.gc.listn(&[Object::Number(120421), Object::Number(112)]);
    let list2992 = vm.gc.listn(&[Object::Number(120422), Object::Number(113)]);
    let list2993 = vm.gc.listn(&[Object::Number(120423), Object::Number(114)]);
    let list2994 = vm.gc.listn(&[Object::Number(120424), Object::Number(115)]);
    let list2995 = vm.gc.listn(&[Object::Number(120425), Object::Number(116)]);
    let list2996 = vm.gc.listn(&[Object::Number(120426), Object::Number(117)]);
    let list2997 = vm.gc.listn(&[Object::Number(120427), Object::Number(118)]);
    let list2998 = vm.gc.listn(&[Object::Number(120428), Object::Number(119)]);
    let list2999 = vm.gc.listn(&[Object::Number(120429), Object::Number(120)]);
    let list3000 = vm.gc.listn(&[Object::Number(120430), Object::Number(121)]);
    let list3001 = vm.gc.listn(&[Object::Number(120431), Object::Number(122)]);
    let list3002 = vm.gc.listn(&[Object::Number(120432), Object::Number(65)]);
    let list3003 = vm.gc.listn(&[Object::Number(120433), Object::Number(66)]);
    let list3004 = vm.gc.listn(&[Object::Number(120434), Object::Number(67)]);
    let list3005 = vm.gc.listn(&[Object::Number(120435), Object::Number(68)]);
    let list3006 = vm.gc.listn(&[Object::Number(120436), Object::Number(69)]);
    let list3007 = vm.gc.listn(&[Object::Number(120437), Object::Number(70)]);
    let list3008 = vm.gc.listn(&[Object::Number(120438), Object::Number(71)]);
    let list3009 = vm.gc.listn(&[Object::Number(120439), Object::Number(72)]);
    let list3010 = vm.gc.listn(&[Object::Number(120440), Object::Number(73)]);
    let list3011 = vm.gc.listn(&[Object::Number(120441), Object::Number(74)]);
    let list3012 = vm.gc.listn(&[Object::Number(120442), Object::Number(75)]);
    let list3013 = vm.gc.listn(&[Object::Number(120443), Object::Number(76)]);
    let list3014 = vm.gc.listn(&[Object::Number(120444), Object::Number(77)]);
    let list3015 = vm.gc.listn(&[Object::Number(120445), Object::Number(78)]);
    let list3016 = vm.gc.listn(&[Object::Number(120446), Object::Number(79)]);
    let list3017 = vm.gc.listn(&[Object::Number(120447), Object::Number(80)]);
    let list3018 = vm.gc.listn(&[Object::Number(120448), Object::Number(81)]);
    let list3019 = vm.gc.listn(&[Object::Number(120449), Object::Number(82)]);
    let list3020 = vm.gc.listn(&[Object::Number(120450), Object::Number(83)]);
    let list3021 = vm.gc.listn(&[Object::Number(120451), Object::Number(84)]);
    let list3022 = vm.gc.listn(&[Object::Number(120452), Object::Number(85)]);
    let list3023 = vm.gc.listn(&[Object::Number(120453), Object::Number(86)]);
    let list3024 = vm.gc.listn(&[Object::Number(120454), Object::Number(87)]);
    let list3025 = vm.gc.listn(&[Object::Number(120455), Object::Number(88)]);
    let list3026 = vm.gc.listn(&[Object::Number(120456), Object::Number(89)]);
    let list3027 = vm.gc.listn(&[Object::Number(120457), Object::Number(90)]);
    let list3028 = vm.gc.listn(&[Object::Number(120458), Object::Number(97)]);
    let list3029 = vm.gc.listn(&[Object::Number(120459), Object::Number(98)]);
    let list3030 = vm.gc.listn(&[Object::Number(120460), Object::Number(99)]);
    let list3031 = vm.gc.listn(&[Object::Number(120461), Object::Number(100)]);
    let list3032 = vm.gc.listn(&[Object::Number(120462), Object::Number(101)]);
    let list3033 = vm.gc.listn(&[Object::Number(120463), Object::Number(102)]);
    let list3034 = vm.gc.listn(&[Object::Number(120464), Object::Number(103)]);
    let list3035 = vm.gc.listn(&[Object::Number(120465), Object::Number(104)]);
    let list3036 = vm.gc.listn(&[Object::Number(120466), Object::Number(105)]);
    let list3037 = vm.gc.listn(&[Object::Number(120467), Object::Number(106)]);
    let list3038 = vm.gc.listn(&[Object::Number(120468), Object::Number(107)]);
    let list3039 = vm.gc.listn(&[Object::Number(120469), Object::Number(108)]);
    let list3040 = vm.gc.listn(&[Object::Number(120470), Object::Number(109)]);
    let list3041 = vm.gc.listn(&[Object::Number(120471), Object::Number(110)]);
    let list3042 = vm.gc.listn(&[Object::Number(120472), Object::Number(111)]);
    let list3043 = vm.gc.listn(&[Object::Number(120473), Object::Number(112)]);
    let list3044 = vm.gc.listn(&[Object::Number(120474), Object::Number(113)]);
    let list3045 = vm.gc.listn(&[Object::Number(120475), Object::Number(114)]);
    let list3046 = vm.gc.listn(&[Object::Number(120476), Object::Number(115)]);
    let list3047 = vm.gc.listn(&[Object::Number(120477), Object::Number(116)]);
    let list3048 = vm.gc.listn(&[Object::Number(120478), Object::Number(117)]);
    let list3049 = vm.gc.listn(&[Object::Number(120479), Object::Number(118)]);
    let list3050 = vm.gc.listn(&[Object::Number(120480), Object::Number(119)]);
    let list3051 = vm.gc.listn(&[Object::Number(120481), Object::Number(120)]);
    let list3052 = vm.gc.listn(&[Object::Number(120482), Object::Number(121)]);
    let list3053 = vm.gc.listn(&[Object::Number(120483), Object::Number(122)]);
    let list3054 = vm.gc.listn(&[Object::Number(120484), Object::Number(305)]);
    let list3055 = vm.gc.listn(&[Object::Number(120485), Object::Number(567)]);
    let list3056 = vm.gc.listn(&[Object::Number(120488), Object::Number(913)]);
    let list3057 = vm.gc.listn(&[Object::Number(120489), Object::Number(914)]);
    let list3058 = vm.gc.listn(&[Object::Number(120490), Object::Number(915)]);
    let list3059 = vm.gc.listn(&[Object::Number(120491), Object::Number(916)]);
    let list3060 = vm.gc.listn(&[Object::Number(120492), Object::Number(917)]);
    let list3061 = vm.gc.listn(&[Object::Number(120493), Object::Number(918)]);
    let list3062 = vm.gc.listn(&[Object::Number(120494), Object::Number(919)]);
    let list3063 = vm.gc.listn(&[Object::Number(120495), Object::Number(920)]);
    let list3064 = vm.gc.listn(&[Object::Number(120496), Object::Number(921)]);
    let list3065 = vm.gc.listn(&[Object::Number(120497), Object::Number(922)]);
    let list3066 = vm.gc.listn(&[Object::Number(120498), Object::Number(923)]);
    let list3067 = vm.gc.listn(&[Object::Number(120499), Object::Number(924)]);
    let list3068 = vm.gc.listn(&[Object::Number(120500), Object::Number(925)]);
    let list3069 = vm.gc.listn(&[Object::Number(120501), Object::Number(926)]);
    let list3070 = vm.gc.listn(&[Object::Number(120502), Object::Number(927)]);
    let list3071 = vm.gc.listn(&[Object::Number(120503), Object::Number(928)]);
    let list3072 = vm.gc.listn(&[Object::Number(120504), Object::Number(929)]);
    let list3073 = vm.gc.listn(&[Object::Number(120505), Object::Number(1012)]);
    let list3074 = vm.gc.listn(&[Object::Number(120506), Object::Number(931)]);
    let list3075 = vm.gc.listn(&[Object::Number(120507), Object::Number(932)]);
    let list3076 = vm.gc.listn(&[Object::Number(120508), Object::Number(933)]);
    let list3077 = vm.gc.listn(&[Object::Number(120509), Object::Number(934)]);
    let list3078 = vm.gc.listn(&[Object::Number(120510), Object::Number(935)]);
    let list3079 = vm.gc.listn(&[Object::Number(120511), Object::Number(936)]);
    let list3080 = vm.gc.listn(&[Object::Number(120512), Object::Number(937)]);
    let list3081 = vm.gc.listn(&[Object::Number(120513), Object::Number(8711)]);
    let list3082 = vm.gc.listn(&[Object::Number(120514), Object::Number(945)]);
    let list3083 = vm.gc.listn(&[Object::Number(120515), Object::Number(946)]);
    let list3084 = vm.gc.listn(&[Object::Number(120516), Object::Number(947)]);
    let list3085 = vm.gc.listn(&[Object::Number(120517), Object::Number(948)]);
    let list3086 = vm.gc.listn(&[Object::Number(120518), Object::Number(949)]);
    let list3087 = vm.gc.listn(&[Object::Number(120519), Object::Number(950)]);
    let list3088 = vm.gc.listn(&[Object::Number(120520), Object::Number(951)]);
    let list3089 = vm.gc.listn(&[Object::Number(120521), Object::Number(952)]);
    let list3090 = vm.gc.listn(&[Object::Number(120522), Object::Number(953)]);
    let list3091 = vm.gc.listn(&[Object::Number(120523), Object::Number(954)]);
    let list3092 = vm.gc.listn(&[Object::Number(120524), Object::Number(955)]);
    let list3093 = vm.gc.listn(&[Object::Number(120525), Object::Number(956)]);
    let list3094 = vm.gc.listn(&[Object::Number(120526), Object::Number(957)]);
    let list3095 = vm.gc.listn(&[Object::Number(120527), Object::Number(958)]);
    let list3096 = vm.gc.listn(&[Object::Number(120528), Object::Number(959)]);
    let list3097 = vm.gc.listn(&[Object::Number(120529), Object::Number(960)]);
    let list3098 = vm.gc.listn(&[Object::Number(120530), Object::Number(961)]);
    let list3099 = vm.gc.listn(&[Object::Number(120531), Object::Number(962)]);
    let list3100 = vm.gc.listn(&[Object::Number(120532), Object::Number(963)]);
    let list3101 = vm.gc.listn(&[Object::Number(120533), Object::Number(964)]);
    let list3102 = vm.gc.listn(&[Object::Number(120534), Object::Number(965)]);
    let list3103 = vm.gc.listn(&[Object::Number(120535), Object::Number(966)]);
    let list3104 = vm.gc.listn(&[Object::Number(120536), Object::Number(967)]);
    let list3105 = vm.gc.listn(&[Object::Number(120537), Object::Number(968)]);
    let list3106 = vm.gc.listn(&[Object::Number(120538), Object::Number(969)]);
    let list3107 = vm.gc.listn(&[Object::Number(120539), Object::Number(8706)]);
    let list3108 = vm.gc.listn(&[Object::Number(120540), Object::Number(1013)]);
    let list3109 = vm.gc.listn(&[Object::Number(120541), Object::Number(977)]);
    let list3110 = vm.gc.listn(&[Object::Number(120542), Object::Number(1008)]);
    let list3111 = vm.gc.listn(&[Object::Number(120543), Object::Number(981)]);
    let list3112 = vm.gc.listn(&[Object::Number(120544), Object::Number(1009)]);
    let list3113 = vm.gc.listn(&[Object::Number(120545), Object::Number(982)]);
    let list3114 = vm.gc.listn(&[Object::Number(120546), Object::Number(913)]);
    let list3115 = vm.gc.listn(&[Object::Number(120547), Object::Number(914)]);
    let list3116 = vm.gc.listn(&[Object::Number(120548), Object::Number(915)]);
    let list3117 = vm.gc.listn(&[Object::Number(120549), Object::Number(916)]);
    let list3118 = vm.gc.listn(&[Object::Number(120550), Object::Number(917)]);
    let list3119 = vm.gc.listn(&[Object::Number(120551), Object::Number(918)]);
    let list3120 = vm.gc.listn(&[Object::Number(120552), Object::Number(919)]);
    let list3121 = vm.gc.listn(&[Object::Number(120553), Object::Number(920)]);
    let list3122 = vm.gc.listn(&[Object::Number(120554), Object::Number(921)]);
    let list3123 = vm.gc.listn(&[Object::Number(120555), Object::Number(922)]);
    let list3124 = vm.gc.listn(&[Object::Number(120556), Object::Number(923)]);
    let list3125 = vm.gc.listn(&[Object::Number(120557), Object::Number(924)]);
    let list3126 = vm.gc.listn(&[Object::Number(120558), Object::Number(925)]);
    let list3127 = vm.gc.listn(&[Object::Number(120559), Object::Number(926)]);
    let list3128 = vm.gc.listn(&[Object::Number(120560), Object::Number(927)]);
    let list3129 = vm.gc.listn(&[Object::Number(120561), Object::Number(928)]);
    let list3130 = vm.gc.listn(&[Object::Number(120562), Object::Number(929)]);
    let list3131 = vm.gc.listn(&[Object::Number(120563), Object::Number(1012)]);
    let list3132 = vm.gc.listn(&[Object::Number(120564), Object::Number(931)]);
    let list3133 = vm.gc.listn(&[Object::Number(120565), Object::Number(932)]);
    let list3134 = vm.gc.listn(&[Object::Number(120566), Object::Number(933)]);
    let list3135 = vm.gc.listn(&[Object::Number(120567), Object::Number(934)]);
    let list3136 = vm.gc.listn(&[Object::Number(120568), Object::Number(935)]);
    let list3137 = vm.gc.listn(&[Object::Number(120569), Object::Number(936)]);
    let list3138 = vm.gc.listn(&[Object::Number(120570), Object::Number(937)]);
    let list3139 = vm.gc.listn(&[Object::Number(120571), Object::Number(8711)]);
    let list3140 = vm.gc.listn(&[Object::Number(120572), Object::Number(945)]);
    let list3141 = vm.gc.listn(&[Object::Number(120573), Object::Number(946)]);
    let list3142 = vm.gc.listn(&[Object::Number(120574), Object::Number(947)]);
    let list3143 = vm.gc.listn(&[Object::Number(120575), Object::Number(948)]);
    let list3144 = vm.gc.listn(&[Object::Number(120576), Object::Number(949)]);
    let list3145 = vm.gc.listn(&[Object::Number(120577), Object::Number(950)]);
    let list3146 = vm.gc.listn(&[Object::Number(120578), Object::Number(951)]);
    let list3147 = vm.gc.listn(&[Object::Number(120579), Object::Number(952)]);
    let list3148 = vm.gc.listn(&[Object::Number(120580), Object::Number(953)]);
    let list3149 = vm.gc.listn(&[Object::Number(120581), Object::Number(954)]);
    let list3150 = vm.gc.listn(&[Object::Number(120582), Object::Number(955)]);
    let list3151 = vm.gc.listn(&[Object::Number(120583), Object::Number(956)]);
    let list3152 = vm.gc.listn(&[Object::Number(120584), Object::Number(957)]);
    let list3153 = vm.gc.listn(&[Object::Number(120585), Object::Number(958)]);
    let list3154 = vm.gc.listn(&[Object::Number(120586), Object::Number(959)]);
    let list3155 = vm.gc.listn(&[Object::Number(120587), Object::Number(960)]);
    let list3156 = vm.gc.listn(&[Object::Number(120588), Object::Number(961)]);
    let list3157 = vm.gc.listn(&[Object::Number(120589), Object::Number(962)]);
    let list3158 = vm.gc.listn(&[Object::Number(120590), Object::Number(963)]);
    let list3159 = vm.gc.listn(&[Object::Number(120591), Object::Number(964)]);
    let list3160 = vm.gc.listn(&[Object::Number(120592), Object::Number(965)]);
    let list3161 = vm.gc.listn(&[Object::Number(120593), Object::Number(966)]);
    let list3162 = vm.gc.listn(&[Object::Number(120594), Object::Number(967)]);
    let list3163 = vm.gc.listn(&[Object::Number(120595), Object::Number(968)]);
    let list3164 = vm.gc.listn(&[Object::Number(120596), Object::Number(969)]);
    let list3165 = vm.gc.listn(&[Object::Number(120597), Object::Number(8706)]);
    let list3166 = vm.gc.listn(&[Object::Number(120598), Object::Number(1013)]);
    let list3167 = vm.gc.listn(&[Object::Number(120599), Object::Number(977)]);
    let list3168 = vm.gc.listn(&[Object::Number(120600), Object::Number(1008)]);
    let list3169 = vm.gc.listn(&[Object::Number(120601), Object::Number(981)]);
    let list3170 = vm.gc.listn(&[Object::Number(120602), Object::Number(1009)]);
    let list3171 = vm.gc.listn(&[Object::Number(120603), Object::Number(982)]);
    let list3172 = vm.gc.listn(&[Object::Number(120604), Object::Number(913)]);
    let list3173 = vm.gc.listn(&[Object::Number(120605), Object::Number(914)]);
    let list3174 = vm.gc.listn(&[Object::Number(120606), Object::Number(915)]);
    let list3175 = vm.gc.listn(&[Object::Number(120607), Object::Number(916)]);
    let list3176 = vm.gc.listn(&[Object::Number(120608), Object::Number(917)]);
    let list3177 = vm.gc.listn(&[Object::Number(120609), Object::Number(918)]);
    let list3178 = vm.gc.listn(&[Object::Number(120610), Object::Number(919)]);
    let list3179 = vm.gc.listn(&[Object::Number(120611), Object::Number(920)]);
    let list3180 = vm.gc.listn(&[Object::Number(120612), Object::Number(921)]);
    let list3181 = vm.gc.listn(&[Object::Number(120613), Object::Number(922)]);
    let list3182 = vm.gc.listn(&[Object::Number(120614), Object::Number(923)]);
    let list3183 = vm.gc.listn(&[Object::Number(120615), Object::Number(924)]);
    let list3184 = vm.gc.listn(&[Object::Number(120616), Object::Number(925)]);
    let list3185 = vm.gc.listn(&[Object::Number(120617), Object::Number(926)]);
    let list3186 = vm.gc.listn(&[Object::Number(120618), Object::Number(927)]);
    let list3187 = vm.gc.listn(&[Object::Number(120619), Object::Number(928)]);
    let list3188 = vm.gc.listn(&[Object::Number(120620), Object::Number(929)]);
    let list3189 = vm.gc.listn(&[Object::Number(120621), Object::Number(1012)]);
    let list3190 = vm.gc.listn(&[Object::Number(120622), Object::Number(931)]);
    let list3191 = vm.gc.listn(&[Object::Number(120623), Object::Number(932)]);
    let list3192 = vm.gc.listn(&[Object::Number(120624), Object::Number(933)]);
    let list3193 = vm.gc.listn(&[Object::Number(120625), Object::Number(934)]);
    let list3194 = vm.gc.listn(&[Object::Number(120626), Object::Number(935)]);
    let list3195 = vm.gc.listn(&[Object::Number(120627), Object::Number(936)]);
    let list3196 = vm.gc.listn(&[Object::Number(120628), Object::Number(937)]);
    let list3197 = vm.gc.listn(&[Object::Number(120629), Object::Number(8711)]);
    let list3198 = vm.gc.listn(&[Object::Number(120630), Object::Number(945)]);
    let list3199 = vm.gc.listn(&[Object::Number(120631), Object::Number(946)]);
    let list3200 = vm.gc.listn(&[Object::Number(120632), Object::Number(947)]);
    let list3201 = vm.gc.listn(&[Object::Number(120633), Object::Number(948)]);
    let list3202 = vm.gc.listn(&[Object::Number(120634), Object::Number(949)]);
    let list3203 = vm.gc.listn(&[Object::Number(120635), Object::Number(950)]);
    let list3204 = vm.gc.listn(&[Object::Number(120636), Object::Number(951)]);
    let list3205 = vm.gc.listn(&[Object::Number(120637), Object::Number(952)]);
    let list3206 = vm.gc.listn(&[Object::Number(120638), Object::Number(953)]);
    let list3207 = vm.gc.listn(&[Object::Number(120639), Object::Number(954)]);
    let list3208 = vm.gc.listn(&[Object::Number(120640), Object::Number(955)]);
    let list3209 = vm.gc.listn(&[Object::Number(120641), Object::Number(956)]);
    let list3210 = vm.gc.listn(&[Object::Number(120642), Object::Number(957)]);
    let list3211 = vm.gc.listn(&[Object::Number(120643), Object::Number(958)]);
    let list3212 = vm.gc.listn(&[Object::Number(120644), Object::Number(959)]);
    let list3213 = vm.gc.listn(&[Object::Number(120645), Object::Number(960)]);
    let list3214 = vm.gc.listn(&[Object::Number(120646), Object::Number(961)]);
    let list3215 = vm.gc.listn(&[Object::Number(120647), Object::Number(962)]);
    let list3216 = vm.gc.listn(&[Object::Number(120648), Object::Number(963)]);
    let list3217 = vm.gc.listn(&[Object::Number(120649), Object::Number(964)]);
    let list3218 = vm.gc.listn(&[Object::Number(120650), Object::Number(965)]);
    let list3219 = vm.gc.listn(&[Object::Number(120651), Object::Number(966)]);
    let list3220 = vm.gc.listn(&[Object::Number(120652), Object::Number(967)]);
    let list3221 = vm.gc.listn(&[Object::Number(120653), Object::Number(968)]);
    let list3222 = vm.gc.listn(&[Object::Number(120654), Object::Number(969)]);
    let list3223 = vm.gc.listn(&[Object::Number(120655), Object::Number(8706)]);
    let list3224 = vm.gc.listn(&[Object::Number(120656), Object::Number(1013)]);
    let list3225 = vm.gc.listn(&[Object::Number(120657), Object::Number(977)]);
    let list3226 = vm.gc.listn(&[Object::Number(120658), Object::Number(1008)]);
    let list3227 = vm.gc.listn(&[Object::Number(120659), Object::Number(981)]);
    let list3228 = vm.gc.listn(&[Object::Number(120660), Object::Number(1009)]);
    let list3229 = vm.gc.listn(&[Object::Number(120661), Object::Number(982)]);
    let list3230 = vm.gc.listn(&[Object::Number(120662), Object::Number(913)]);
    let list3231 = vm.gc.listn(&[Object::Number(120663), Object::Number(914)]);
    let list3232 = vm.gc.listn(&[Object::Number(120664), Object::Number(915)]);
    let list3233 = vm.gc.listn(&[Object::Number(120665), Object::Number(916)]);
    let list3234 = vm.gc.listn(&[Object::Number(120666), Object::Number(917)]);
    let list3235 = vm.gc.listn(&[Object::Number(120667), Object::Number(918)]);
    let list3236 = vm.gc.listn(&[Object::Number(120668), Object::Number(919)]);
    let list3237 = vm.gc.listn(&[Object::Number(120669), Object::Number(920)]);
    let list3238 = vm.gc.listn(&[Object::Number(120670), Object::Number(921)]);
    let list3239 = vm.gc.listn(&[Object::Number(120671), Object::Number(922)]);
    let list3240 = vm.gc.listn(&[Object::Number(120672), Object::Number(923)]);
    let list3241 = vm.gc.listn(&[Object::Number(120673), Object::Number(924)]);
    let list3242 = vm.gc.listn(&[Object::Number(120674), Object::Number(925)]);
    let list3243 = vm.gc.listn(&[Object::Number(120675), Object::Number(926)]);
    let list3244 = vm.gc.listn(&[Object::Number(120676), Object::Number(927)]);
    let list3245 = vm.gc.listn(&[Object::Number(120677), Object::Number(928)]);
    let list3246 = vm.gc.listn(&[Object::Number(120678), Object::Number(929)]);
    let list3247 = vm.gc.listn(&[Object::Number(120679), Object::Number(1012)]);
    let list3248 = vm.gc.listn(&[Object::Number(120680), Object::Number(931)]);
    let list3249 = vm.gc.listn(&[Object::Number(120681), Object::Number(932)]);
    let list3250 = vm.gc.listn(&[Object::Number(120682), Object::Number(933)]);
    let list3251 = vm.gc.listn(&[Object::Number(120683), Object::Number(934)]);
    let list3252 = vm.gc.listn(&[Object::Number(120684), Object::Number(935)]);
    let list3253 = vm.gc.listn(&[Object::Number(120685), Object::Number(936)]);
    let list3254 = vm.gc.listn(&[Object::Number(120686), Object::Number(937)]);
    let list3255 = vm.gc.listn(&[Object::Number(120687), Object::Number(8711)]);
    let list3256 = vm.gc.listn(&[Object::Number(120688), Object::Number(945)]);
    let list3257 = vm.gc.listn(&[Object::Number(120689), Object::Number(946)]);
    let list3258 = vm.gc.listn(&[Object::Number(120690), Object::Number(947)]);
    let list3259 = vm.gc.listn(&[Object::Number(120691), Object::Number(948)]);
    let list3260 = vm.gc.listn(&[Object::Number(120692), Object::Number(949)]);
    let list3261 = vm.gc.listn(&[Object::Number(120693), Object::Number(950)]);
    let list3262 = vm.gc.listn(&[Object::Number(120694), Object::Number(951)]);
    let list3263 = vm.gc.listn(&[Object::Number(120695), Object::Number(952)]);
    let list3264 = vm.gc.listn(&[Object::Number(120696), Object::Number(953)]);
    let list3265 = vm.gc.listn(&[Object::Number(120697), Object::Number(954)]);
    let list3266 = vm.gc.listn(&[Object::Number(120698), Object::Number(955)]);
    let list3267 = vm.gc.listn(&[Object::Number(120699), Object::Number(956)]);
    let list3268 = vm.gc.listn(&[Object::Number(120700), Object::Number(957)]);
    let list3269 = vm.gc.listn(&[Object::Number(120701), Object::Number(958)]);
    let list3270 = vm.gc.listn(&[Object::Number(120702), Object::Number(959)]);
    let list3271 = vm.gc.listn(&[Object::Number(120703), Object::Number(960)]);
    let list3272 = vm.gc.listn(&[Object::Number(120704), Object::Number(961)]);
    let list3273 = vm.gc.listn(&[Object::Number(120705), Object::Number(962)]);
    let list3274 = vm.gc.listn(&[Object::Number(120706), Object::Number(963)]);
    let list3275 = vm.gc.listn(&[Object::Number(120707), Object::Number(964)]);
    let list3276 = vm.gc.listn(&[Object::Number(120708), Object::Number(965)]);
    let list3277 = vm.gc.listn(&[Object::Number(120709), Object::Number(966)]);
    let list3278 = vm.gc.listn(&[Object::Number(120710), Object::Number(967)]);
    let list3279 = vm.gc.listn(&[Object::Number(120711), Object::Number(968)]);
    let list3280 = vm.gc.listn(&[Object::Number(120712), Object::Number(969)]);
    let list3281 = vm.gc.listn(&[Object::Number(120713), Object::Number(8706)]);
    let list3282 = vm.gc.listn(&[Object::Number(120714), Object::Number(1013)]);
    let list3283 = vm.gc.listn(&[Object::Number(120715), Object::Number(977)]);
    let list3284 = vm.gc.listn(&[Object::Number(120716), Object::Number(1008)]);
    let list3285 = vm.gc.listn(&[Object::Number(120717), Object::Number(981)]);
    let list3286 = vm.gc.listn(&[Object::Number(120718), Object::Number(1009)]);
    let list3287 = vm.gc.listn(&[Object::Number(120719), Object::Number(982)]);
    let list3288 = vm.gc.listn(&[Object::Number(120720), Object::Number(913)]);
    let list3289 = vm.gc.listn(&[Object::Number(120721), Object::Number(914)]);
    let list3290 = vm.gc.listn(&[Object::Number(120722), Object::Number(915)]);
    let list3291 = vm.gc.listn(&[Object::Number(120723), Object::Number(916)]);
    let list3292 = vm.gc.listn(&[Object::Number(120724), Object::Number(917)]);
    let list3293 = vm.gc.listn(&[Object::Number(120725), Object::Number(918)]);
    let list3294 = vm.gc.listn(&[Object::Number(120726), Object::Number(919)]);
    let list3295 = vm.gc.listn(&[Object::Number(120727), Object::Number(920)]);
    let list3296 = vm.gc.listn(&[Object::Number(120728), Object::Number(921)]);
    let list3297 = vm.gc.listn(&[Object::Number(120729), Object::Number(922)]);
    let list3298 = vm.gc.listn(&[Object::Number(120730), Object::Number(923)]);
    let list3299 = vm.gc.listn(&[Object::Number(120731), Object::Number(924)]);
    let list3300 = vm.gc.listn(&[Object::Number(120732), Object::Number(925)]);
    let list3301 = vm.gc.listn(&[Object::Number(120733), Object::Number(926)]);
    let list3302 = vm.gc.listn(&[Object::Number(120734), Object::Number(927)]);
    let list3303 = vm.gc.listn(&[Object::Number(120735), Object::Number(928)]);
    let list3304 = vm.gc.listn(&[Object::Number(120736), Object::Number(929)]);
    let list3305 = vm.gc.listn(&[Object::Number(120737), Object::Number(1012)]);
    let list3306 = vm.gc.listn(&[Object::Number(120738), Object::Number(931)]);
    let list3307 = vm.gc.listn(&[Object::Number(120739), Object::Number(932)]);
    let list3308 = vm.gc.listn(&[Object::Number(120740), Object::Number(933)]);
    let list3309 = vm.gc.listn(&[Object::Number(120741), Object::Number(934)]);
    let list3310 = vm.gc.listn(&[Object::Number(120742), Object::Number(935)]);
    let list3311 = vm.gc.listn(&[Object::Number(120743), Object::Number(936)]);
    let list3312 = vm.gc.listn(&[Object::Number(120744), Object::Number(937)]);
    let list3313 = vm.gc.listn(&[Object::Number(120745), Object::Number(8711)]);
    let list3314 = vm.gc.listn(&[Object::Number(120746), Object::Number(945)]);
    let list3315 = vm.gc.listn(&[Object::Number(120747), Object::Number(946)]);
    let list3316 = vm.gc.listn(&[Object::Number(120748), Object::Number(947)]);
    let list3317 = vm.gc.listn(&[Object::Number(120749), Object::Number(948)]);
    let list3318 = vm.gc.listn(&[Object::Number(120750), Object::Number(949)]);
    let list3319 = vm.gc.listn(&[Object::Number(120751), Object::Number(950)]);
    let list3320 = vm.gc.listn(&[Object::Number(120752), Object::Number(951)]);
    let list3321 = vm.gc.listn(&[Object::Number(120753), Object::Number(952)]);
    let list3322 = vm.gc.listn(&[Object::Number(120754), Object::Number(953)]);
    let list3323 = vm.gc.listn(&[Object::Number(120755), Object::Number(954)]);
    let list3324 = vm.gc.listn(&[Object::Number(120756), Object::Number(955)]);
    let list3325 = vm.gc.listn(&[Object::Number(120757), Object::Number(956)]);
    let list3326 = vm.gc.listn(&[Object::Number(120758), Object::Number(957)]);
    let list3327 = vm.gc.listn(&[Object::Number(120759), Object::Number(958)]);
    let list3328 = vm.gc.listn(&[Object::Number(120760), Object::Number(959)]);
    let list3329 = vm.gc.listn(&[Object::Number(120761), Object::Number(960)]);
    let list3330 = vm.gc.listn(&[Object::Number(120762), Object::Number(961)]);
    let list3331 = vm.gc.listn(&[Object::Number(120763), Object::Number(962)]);
    let list3332 = vm.gc.listn(&[Object::Number(120764), Object::Number(963)]);
    let list3333 = vm.gc.listn(&[Object::Number(120765), Object::Number(964)]);
    let list3334 = vm.gc.listn(&[Object::Number(120766), Object::Number(965)]);
    let list3335 = vm.gc.listn(&[Object::Number(120767), Object::Number(966)]);
    let list3336 = vm.gc.listn(&[Object::Number(120768), Object::Number(967)]);
    let list3337 = vm.gc.listn(&[Object::Number(120769), Object::Number(968)]);
    let list3338 = vm.gc.listn(&[Object::Number(120770), Object::Number(969)]);
    let list3339 = vm.gc.listn(&[Object::Number(120771), Object::Number(8706)]);
    let list3340 = vm.gc.listn(&[Object::Number(120772), Object::Number(1013)]);
    let list3341 = vm.gc.listn(&[Object::Number(120773), Object::Number(977)]);
    let list3342 = vm.gc.listn(&[Object::Number(120774), Object::Number(1008)]);
    let list3343 = vm.gc.listn(&[Object::Number(120775), Object::Number(981)]);
    let list3344 = vm.gc.listn(&[Object::Number(120776), Object::Number(1009)]);
    let list3345 = vm.gc.listn(&[Object::Number(120777), Object::Number(982)]);
    let list3346 = vm.gc.listn(&[Object::Number(120778), Object::Number(988)]);
    let list3347 = vm.gc.listn(&[Object::Number(120779), Object::Number(989)]);
    let list3348 = vm.gc.listn(&[Object::Number(120782), Object::Number(48)]);
    let list3349 = vm.gc.listn(&[Object::Number(120783), Object::Number(49)]);
    let list3350 = vm.gc.listn(&[Object::Number(120784), Object::Number(50)]);
    let list3351 = vm.gc.listn(&[Object::Number(120785), Object::Number(51)]);
    let list3352 = vm.gc.listn(&[Object::Number(120786), Object::Number(52)]);
    let list3353 = vm.gc.listn(&[Object::Number(120787), Object::Number(53)]);
    let list3354 = vm.gc.listn(&[Object::Number(120788), Object::Number(54)]);
    let list3355 = vm.gc.listn(&[Object::Number(120789), Object::Number(55)]);
    let list3356 = vm.gc.listn(&[Object::Number(120790), Object::Number(56)]);
    let list3357 = vm.gc.listn(&[Object::Number(120791), Object::Number(57)]);
    let list3358 = vm.gc.listn(&[Object::Number(120792), Object::Number(48)]);
    let list3359 = vm.gc.listn(&[Object::Number(120793), Object::Number(49)]);
    let list3360 = vm.gc.listn(&[Object::Number(120794), Object::Number(50)]);
    let list3361 = vm.gc.listn(&[Object::Number(120795), Object::Number(51)]);
    let list3362 = vm.gc.listn(&[Object::Number(120796), Object::Number(52)]);
    let list3363 = vm.gc.listn(&[Object::Number(120797), Object::Number(53)]);
    let list3364 = vm.gc.listn(&[Object::Number(120798), Object::Number(54)]);
    let list3365 = vm.gc.listn(&[Object::Number(120799), Object::Number(55)]);
    let list3366 = vm.gc.listn(&[Object::Number(120800), Object::Number(56)]);
    let list3367 = vm.gc.listn(&[Object::Number(120801), Object::Number(57)]);
    let list3368 = vm.gc.listn(&[Object::Number(120802), Object::Number(48)]);
    let list3369 = vm.gc.listn(&[Object::Number(120803), Object::Number(49)]);
    let list3370 = vm.gc.listn(&[Object::Number(120804), Object::Number(50)]);
    let list3371 = vm.gc.listn(&[Object::Number(120805), Object::Number(51)]);
    let list3372 = vm.gc.listn(&[Object::Number(120806), Object::Number(52)]);
    let list3373 = vm.gc.listn(&[Object::Number(120807), Object::Number(53)]);
    let list3374 = vm.gc.listn(&[Object::Number(120808), Object::Number(54)]);
    let list3375 = vm.gc.listn(&[Object::Number(120809), Object::Number(55)]);
    let list3376 = vm.gc.listn(&[Object::Number(120810), Object::Number(56)]);
    let list3377 = vm.gc.listn(&[Object::Number(120811), Object::Number(57)]);
    let list3378 = vm.gc.listn(&[Object::Number(120812), Object::Number(48)]);
    let list3379 = vm.gc.listn(&[Object::Number(120813), Object::Number(49)]);
    let list3380 = vm.gc.listn(&[Object::Number(120814), Object::Number(50)]);
    let list3381 = vm.gc.listn(&[Object::Number(120815), Object::Number(51)]);
    let list3382 = vm.gc.listn(&[Object::Number(120816), Object::Number(52)]);
    let list3383 = vm.gc.listn(&[Object::Number(120817), Object::Number(53)]);
    let list3384 = vm.gc.listn(&[Object::Number(120818), Object::Number(54)]);
    let list3385 = vm.gc.listn(&[Object::Number(120819), Object::Number(55)]);
    let list3386 = vm.gc.listn(&[Object::Number(120820), Object::Number(56)]);
    let list3387 = vm.gc.listn(&[Object::Number(120821), Object::Number(57)]);
    let list3388 = vm.gc.listn(&[Object::Number(120822), Object::Number(48)]);
    let list3389 = vm.gc.listn(&[Object::Number(120823), Object::Number(49)]);
    let list3390 = vm.gc.listn(&[Object::Number(120824), Object::Number(50)]);
    let list3391 = vm.gc.listn(&[Object::Number(120825), Object::Number(51)]);
    let list3392 = vm.gc.listn(&[Object::Number(120826), Object::Number(52)]);
    let list3393 = vm.gc.listn(&[Object::Number(120827), Object::Number(53)]);
    let list3394 = vm.gc.listn(&[Object::Number(120828), Object::Number(54)]);
    let list3395 = vm.gc.listn(&[Object::Number(120829), Object::Number(55)]);
    let list3396 = vm.gc.listn(&[Object::Number(120830), Object::Number(56)]);
    let list3397 = vm.gc.listn(&[Object::Number(120831), Object::Number(57)]);
    let list3398 = vm.gc.listn(&[list36, list37, list38, list39, list40, list41, list42, list43, list44, list45, list46, list47, list48, list49, list50, list51, list52, list53, list54, list55, list56, list57, list58, list59, list60, list61, list62, list63, list64, list65, list66, list67, list68, list69, list70, list71, list72, list73, list74, list75, list76, list77, list78, list79, list80, list81, list82, list83, list84, list85, list86, list87, list88, list89, list90, list91, list92, list93, list94, list95, list96, list97, list98, list99, list100, list101, list102, list103, list104, list105, list106, list107, list108, list109, list110, list111, list112, list113, list114, list115, list116, list117, list118, list119, list120, list121, list122, list123, list124, list125, list126, list127, list128, list129, list130, list131, list132, list133, list134, list135, list136, list137, list138, list139, list140, list141, list142, list143, list144, list145, list146, list147, list148, list149, list150, list151, list152, list153, list154, list155, list156, list157, list158, list159, list160, list161, list162, list163, list164, list165, list166, list167, list168, list169, list170, list171, list172, list173, list174, list175, list176, list177, list178, list179, list180, list181, list182, list183, list184, list185, list186, list187, list188, list189, list190, list191, list192, list193, list194, list195, list196, list197, list198, list199, list200, list201, list202, list203, list204, list205, list206, list207, list208, list209, list210, list211, list212, list213, list214, list215, list216, list217, list218, list219, list220, list221, list222, list223, list224, list225, list226, list227, list228, list229, list230, list231, list232, list233, list234, list235, list236, list237, list238, list239, list240, list241, list242, list243, list244, list245, list246, list247, list248, list249, list250, list251, list252, list253, list254, list255, list256, list257, list258, list259, list260, list261, list262, list263, list264, list265, list266, list267, list268, list269, list270, list271, list272, list273, list274, list275, list276, list277, list278, list279, list280, list281, list282, list283, list284, list285, list286, list287, list288, list289, list290, list291, list292, list293, list294, list295, list296, list297, list298, list299, list300, list301, list302, list303, list304, list305, list306, list307, list308, list309, list310, list311, list312, list313, list314, list315, list316, list317, list318, list319, list320, list321, list322, list323, list324, list325, list326, list327, list328, list329, list330, list331, list332, list333, list334, list335, list336, list337, list338, list339, list340, list341, list342, list343, list344, list345, list346, list347, list348, list349, list350, list351, list352, list353, list354, list355, list356, list357, list358, list359, list360, list361, list362, list363, list364, list365, list366, list367, list368, list369, list370, list371, list372, list373, list374, list375, list376, list377, list378, list379, list380, list381, list382, list383, list384, list385, list386, list387, list388, list389, list390, list391, list392, list393, list394, list395, list396, list397, list398, list399, list400, list401, list402, list403, list404, list405, list406, list407, list408, list409, list410, list411, list412, list413, list414, list415, list416, list417, list418, list419, list420, list421, list422, list423, list424, list425, list426, list427, list428, list429, list430, list431, list432, list433, list434, list435, list436, list437, list438, list439, list440, list441, list442, list443, list444, list445, list446, list447, list448, list449, list450, list451, list452, list453, list454, list455, list456, list457, list458, list459, list460, list461, list462, list463, list464, list465, list466, list467, list468, list469, list470, list471, list472, list473, list474, list475, list476, list477, list478, list479, list480, list481, list482, list483, list484, list485, list486, list487, list488, list489, list490, list491, list492, list493, list494, list495, list496, list497, list498, list499, list500, list501, list502, list503, list504, list505, list506, list507, list508, list509, list510, list511, list512, list513, list514, list515, list516, list517, list518, list519, list520, list521, list522, list523, list524, list525, list526, list527, list528, list529, list530, list531, list532, list533, list534, list535, list536, list537, list538, list539, list540, list541, list542, list543, list544, list545, list546, list547, list548, list549, list550, list551, list552, list553, list554, list555, list556, list557, list558, list559, list560, list561, list562, list563, list564, list565, list566, list567, list568, list569, list570, list571, list572, list573, list574, list575, list576, list577, list578, list579, list580, list581, list582, list583, list584, list585, list586, list587, list588, list589, list590, list591, list592, list593, list594, list595, list596, list597, list598, list599, list600, list601, list602, list603, list604, list605, list606, list607, list608, list609, list610, list611, list612, list613, list614, list615, list616, list617, list618, list619, list620, list621, list622, list623, list624, list625, list626, list627, list628, list629, list630, list631, list632, list633, list634, list635, list636, list637, list638, list639, list640, list641, list642, list643, list644, list645, list646, list647, list648, list649, list650, list651, list652, list653, list654, list655, list656, list657, list658, list659, list660, list661, list662, list663, list664, list665, list666, list667, list668, list669, list670, list671, list672, list673, list674, list675, list676, list677, list678, list679, list680, list681, list682, list683, list684, list685, list686, list687, list688, list689, list690, list691, list692, list693, list694, list695, list696, list697, list698, list699, list700, list701, list702, list703, list704, list705, list706, list707, list708, list709, list710, list711, list712, list713, list714, list715, list716, list717, list718, list719, list720, list721, list722, list723, list724, list725, list726, list727, list728, list729, list730, list731, list732, list733, list734, list735, list736, list737, list738, list739, list740, list741, list742, list743, list744, list745, list746, list747, list748, list749, list750, list751, list752, list753, list754, list755, list756, list757, list758, list759, list760, list761, list762, list763, list764, list765, list766, list767, list768, list769, list770, list771, list772, list773, list774, list775, list776, list777, list778, list779, list780, list781, list782, list783, list784, list785, list786, list787, list788, list789, list790, list791, list792, list793, list794, list795, list796, list797, list798, list799, list800, list801, list802, list803, list804, list805, list806, list807, list808, list809, list810, list811, list812, list813, list814, list815, list816, list817, list818, list819, list820, list821, list822, list823, list824, list825, list826, list827, list828, list829, list830, list831, list832, list833, list834, list835, list836, list837, list838, list839, list840, list841, list842, list843, list844, list845, list846, list847, list848, list849, list850, list851, list852, list853, list854, list855, list856, list857, list858, list859, list860, list861, list862, list863, list864, list865, list866, list867, list868, list869, list870, list871, list872, list873, list874, list875, list876, list877, list878, list879, list880, list881, list882, list883, list884, list885, list886, list887, list888, list889, list890, list891, list892, list893, list894, list895, list896, list897, list898, list899, list900, list901, list902, list903, list904, list905, list906, list907, list908, list909, list910, list911, list912, list913, list914, list915, list916, list917, list918, list919, list920, list921, list922, list923, list924, list925, list926, list927, list928, list929, list930, list931, list932, list933, list934, list935, list936, list937, list938, list939, list940, list941, list942, list943, list944, list945, list946, list947, list948, list949, list950, list951, list952, list953, list954, list955, list956, list957, list958, list959, list960, list961, list962, list963, list964, list965, list966, list967, list968, list969, list970, list971, list972, list973, list974, list975, list976, list977, list978, list979, list980, list981, list982, list983, list984, list985, list986, list987, list988, list989, list990, list991, list992, list993, list994, list995, list996, list997, list998, list999, list1000, list1001, list1002, list1003, list1004, list1005, list1006, list1007, list1008, list1009, list1010, list1011, list1012, list1013, list1014, list1015, list1016, list1017, list1018, list1019, list1020, list1021, list1022, list1023, list1024, list1025, list1026, list1027, list1028, list1029, list1030, list1031, list1032, list1033, list1034, list1035, list1036, list1037, list1038, list1039, list1040, list1041, list1042, list1043, list1044, list1045, list1046, list1047, list1048, list1049, list1050, list1051, list1052, list1053, list1054, list1055, list1056, list1057, list1058, list1059, list1060, list1061, list1062, list1063, list1064, list1065, list1066, list1067, list1068, list1069, list1070, list1071, list1072, list1073, list1074, list1075, list1076, list1077, list1078, list1079, list1080, list1081, list1082, list1083, list1084, list1085, list1086, list1087, list1088, list1089, list1090, list1091, list1092, list1093, list1094, list1095, list1096, list1097, list1098, list1099, list1100, list1101, list1102, list1103, list1104, list1105, list1106, list1107, list1108, list1109, list1110, list1111, list1112, list1113, list1114, list1115, list1116, list1117, list1118, list1119, list1120, list1121, list1122, list1123, list1124, list1125, list1126, list1127, list1128, list1129, list1130, list1131, list1132, list1133, list1134, list1135, list1136, list1137, list1138, list1139, list1140, list1141, list1142, list1143, list1144, list1145, list1146, list1147, list1148, list1149, list1150, list1151, list1152, list1153, list1154, list1155, list1156, list1157, list1158, list1159, list1160, list1161, list1162, list1163, list1164, list1165, list1166, list1167, list1168, list1169, list1170, list1171, list1172, list1173, list1174, list1175, list1176, list1177, list1178, list1179, list1180, list1181, list1182, list1183, list1184, list1185, list1186, list1187, list1188, list1189, list1190, list1191, list1192, list1193, list1194, list1195, list1196, list1197, list1198, list1199, list1200, list1201, list1202, list1203, list1204, list1205, list1206, list1207, list1208, list1209, list1210, list1211, list1212, list1213, list1214, list1215, list1216, list1217, list1218, list1219, list1220, list1221, list1222, list1223, list1224, list1225, list1226, list1227, list1228, list1229, list1230, list1231, list1232, list1233, list1234, list1235, list1236, list1237, list1238, list1239, list1240, list1241, list1242, list1243, list1244, list1245, list1246, list1247, list1248, list1249, list1250, list1251, list1252, list1253, list1254, list1255, list1256, list1257, list1258, list1259, list1260, list1261, list1262, list1263, list1264, list1265, list1266, list1267, list1268, list1269, list1270, list1271, list1272, list1273, list1274, list1275, list1276, list1277, list1278, list1279, list1280, list1281, list1282, list1283, list1284, list1285, list1286, list1287, list1288, list1289, list1290, list1291, list1292, list1293, list1294, list1295, list1296, list1297, list1298, list1299, list1300, list1301, list1302, list1303, list1304, list1305, list1306, list1307, list1308, list1309, list1310, list1311, list1312, list1313, list1314, list1315, list1316, list1317, list1318, list1319, list1320, list1321, list1322, list1323, list1324, list1325, list1326, list1327, list1328, list1329, list1330, list1331, list1332, list1333, list1334, list1335, list1336, list1337, list1338, list1339, list1340, list1341, list1342, list1343, list1344, list1345, list1346, list1347, list1348, list1349, list1350, list1351, list1352, list1353, list1354, list1355, list1356, list1357, list1358, list1359, list1360, list1361, list1362, list1363, list1364, list1365, list1366, list1367, list1368, list1369, list1370, list1371, list1372, list1373, list1374, list1375, list1376, list1377, list1378, list1379, list1380, list1381, list1382, list1383, list1384, list1385, list1386, list1387, list1388, list1389, list1390, list1391, list1392, list1393, list1394, list1395, list1396, list1397, list1398, list1399, list1400, list1401, list1402, list1403, list1404, list1405, list1406, list1407, list1408, list1409, list1410, list1411, list1412, list1413, list1414, list1415, list1416, list1417, list1418, list1419, list1420, list1421, list1422, list1423, list1424, list1425, list1426, list1427, list1428, list1429, list1430, list1431, list1432, list1433, list1434, list1435, list1436, list1437, list1438, list1439, list1440, list1441, list1442, list1443, list1444, list1445, list1446, list1447, list1448, list1449, list1450, list1451, list1452, list1453, list1454, list1455, list1456, list1457, list1458, list1459, list1460, list1461, list1462, list1463, list1464, list1465, list1466, list1467, list1468, list1469, list1470, list1471, list1472, list1473, list1474, list1475, list1476, list1477, list1478, list1479, list1480, list1481, list1482, list1483, list1484, list1485, list1486, list1487, list1488, list1489, list1490, list1491, list1492, list1493, list1494, list1495, list1496, list1497, list1498, list1499, list1500, list1501, list1502, list1503, list1504, list1505, list1506, list1507, list1508, list1509, list1510, list1511, list1512, list1513, list1514, list1515, list1516, list1517, list1518, list1519, list1520, list1521, list1522, list1523, list1524, list1525, list1526, list1527, list1528, list1529, list1530, list1531, list1532, list1533, list1534, list1535, list1536, list1537, list1538, list1539, list1540, list1541, list1542, list1543, list1544, list1545, list1546, list1547, list1548, list1549, list1550, list1551, list1552, list1553, list1554, list1555, list1556, list1557, list1558, list1559, list1560, list1561, list1562, list1563, list1564, list1565, list1566, list1567, list1568, list1569, list1570, list1571, list1572, list1573, list1574, list1575, list1576, list1577, list1578, list1579, list1580, list1581, list1582, list1583, list1584, list1585, list1586, list1587, list1588, list1589, list1590, list1591, list1592, list1593, list1594, list1595, list1596, list1597, list1598, list1599, list1600, list1601, list1602, list1603, list1604, list1605, list1606, list1607, list1608, list1609, list1610, list1611, list1612, list1613, list1614, list1615, list1616, list1617, list1618, list1619, list1620, list1621, list1622, list1623, list1624, list1625, list1626, list1627, list1628, list1629, list1630, list1631, list1632, list1633, list1634, list1635, list1636, list1637, list1638, list1639, list1640, list1641, list1642, list1643, list1644, list1645, list1646, list1647, list1648, list1649, list1650, list1651, list1652, list1653, list1654, list1655, list1656, list1657, list1658, list1659, list1660, list1661, list1662, list1663, list1664, list1665, list1666, list1667, list1668, list1669, list1670, list1671, list1672, list1673, list1674, list1675, list1676, list1677, list1678, list1679, list1680, list1681, list1682, list1683, list1684, list1685, list1686, list1687, list1688, list1689, list1690, list1691, list1692, list1693, list1694, list1695, list1696, list1697, list1698, list1699, list1700, list1701, list1702, list1703, list1704, list1705, list1706, list1707, list1708, list1709, list1710, list1711, list1712, list1713, list1714, list1715, list1716, list1717, list1718, list1719, list1720, list1721, list1722, list1723, list1724, list1725, list1726, list1727, list1728, list1729, list1730, list1731, list1732, list1733, list1734, list1735, list1736, list1737, list1738, list1739, list1740, list1741, list1742, list1743, list1744, list1745, list1746, list1747, list1748, list1749, list1750, list1751, list1752, list1753, list1754, list1755, list1756, list1757, list1758, list1759, list1760, list1761, list1762, list1763, list1764, list1765, list1766, list1767, list1768, list1769, list1770, list1771, list1772, list1773, list1774, list1775, list1776, list1777, list1778, list1779, list1780, list1781, list1782, list1783, list1784, list1785, list1786, list1787, list1788, list1789, list1790, list1791, list1792, list1793, list1794, list1795, list1796, list1797, list1798, list1799, list1800, list1801, list1802, list1803, list1804, list1805, list1806, list1807, list1808, list1809, list1810, list1811, list1812, list1813, list1814, list1815, list1816, list1817, list1818, list1819, list1820, list1821, list1822, list1823, list1824, list1825, list1826, list1827, list1828, list1829, list1830, list1831, list1832, list1833, list1834, list1835, list1836, list1837, list1838, list1839, list1840, list1841, list1842, list1843, list1844, list1845, list1846, list1847, list1848, list1849, list1850, list1851, list1852, list1853, list1854, list1855, list1856, list1857, list1858, list1859, list1860, list1861, list1862, list1863, list1864, list1865, list1866, list1867, list1868, list1869, list1870, list1871, list1872, list1873, list1874, list1875, list1876, list1877, list1878, list1879, list1880, list1881, list1882, list1883, list1884, list1885, list1886, list1887, list1888, list1889, list1890, list1891, list1892, list1893, list1894, list1895, list1896, list1897, list1898, list1899, list1900, list1901, list1902, list1903, list1904, list1905, list1906, list1907, list1908, list1909, list1910, list1911, list1912, list1913, list1914, list1915, list1916, list1917, list1918, list1919, list1920, list1921, list1922, list1923, list1924, list1925, list1926, list1927, list1928, list1929, list1930, list1931, list1932, list1933, list1934, list1935, list1936, list1937, list1938, list1939, list1940, list1941, list1942, list1943, list1944, list1945, list1946, list1947, list1948, list1949, list1950, list1951, list1952, list1953, list1954, list1955, list1956, list1957, list1958, list1959, list1960, list1961, list1962, list1963, list1964, list1965, list1966, list1967, list1968, list1969, list1970, list1971, list1972, list1973, list1974, list1975, list1976, list1977, list1978, list1979, list1980, list1981, list1982, list1983, list1984, list1985, list1986, list1987, list1988, list1989, list1990, list1991, list1992, list1993, list1994, list1995, list1996, list1997, list1998, list1999, list2000, list2001, list2002, list2003, list2004, list2005, list2006, list2007, list2008, list2009, list2010, list2011, list2012, list2013, list2014, list2015, list2016, list2017, list2018, list2019, list2020, list2021, list2022, list2023, list2024, list2025, list2026, list2027, list2028, list2029, list2030, list2031, list2032, list2033, list2034, list2035, list2036, list2037, list2038, list2039, list2040, list2041, list2042, list2043, list2044, list2045, list2046, list2047, list2048, list2049, list2050, list2051, list2052, list2053, list2054, list2055, list2056, list2057, list2058, list2059, list2060, list2061, list2062, list2063, list2064, list2065, list2066, list2067, list2068, list2069, list2070, list2071, list2072, list2073, list2074, list2075, list2076, list2077, list2078, list2079, list2080, list2081, list2082, list2083, list2084, list2085, list2086, list2087, list2088, list2089, list2090, list2091, list2092, list2093, list2094, list2095, list2096, list2097, list2098, list2099, list2100, list2101, list2102, list2103, list2104, list2105, list2106, list2107, list2108, list2109, list2110, list2111, list2112, list2113, list2114, list2115, list2116, list2117, list2118, list2119, list2120, list2121, list2122, list2123, list2124, list2125, list2126, list2127, list2128, list2129, list2130, list2131, list2132, list2133, list2134, list2135, list2136, list2137, list2138, list2139, list2140, list2141, list2142, list2143, list2144, list2145, list2146, list2147, list2148, list2149, list2150, list2151, list2152, list2153, list2154, list2155, list2156, list2157, list2158, list2159, list2160, list2161, list2162, list2163, list2164, list2165, list2166, list2167, list2168, list2169, list2170, list2171, list2172, list2173, list2174, list2175, list2176, list2177, list2178, list2179, list2180, list2181, list2182, list2183, list2184, list2185, list2186, list2187, list2188, list2189, list2190, list2191, list2192, list2193, list2194, list2195, list2196, list2197, list2198, list2199, list2200, list2201, list2202, list2203, list2204, list2205, list2206, list2207, list2208, list2209, list2210, list2211, list2212, list2213, list2214, list2215, list2216, list2217, list2218, list2219, list2220, list2221, list2222, list2223, list2224, list2225, list2226, list2227, list2228, list2229, list2230, list2231, list2232, list2233, list2234, list2235, list2236, list2237, list2238, list2239, list2240, list2241, list2242, list2243, list2244, list2245, list2246, list2247, list2248, list2249, list2250, list2251, list2252, list2253, list2254, list2255, list2256, list2257, list2258, list2259, list2260, list2261, list2262, list2263, list2264, list2265, list2266, list2267, list2268, list2269, list2270, list2271, list2272, list2273, list2274, list2275, list2276, list2277, list2278, list2279, list2280, list2281, list2282, list2283, list2284, list2285, list2286, list2287, list2288, list2289, list2290, list2291, list2292, list2293, list2294, list2295, list2296, list2297, list2298, list2299, list2300, list2301, list2302, list2303, list2304, list2305, list2306, list2307, list2308, list2309, list2310, list2311, list2312, list2313, list2314, list2315, list2316, list2317, list2318, list2319, list2320, list2321, list2322, list2323, list2324, list2325, list2326, list2327, list2328, list2329, list2330, list2331, list2332, list2333, list2334, list2335, list2336, list2337, list2338, list2339, list2340, list2341, list2342, list2343, list2344, list2345, list2346, list2347, list2348, list2349, list2350, list2351, list2352, list2353, list2354, list2355, list2356, list2357, list2358, list2359, list2360, list2361, list2362, list2363, list2364, list2365, list2366, list2367, list2368, list2369, list2370, list2371, list2372, list2373, list2374, list2375, list2376, list2377, list2378, list2379, list2380, list2381, list2382, list2383, list2384, list2385, list2386, list2387, list2388, list2389, list2390, list2391, list2392, list2393, list2394, list2395, list2396, list2397, list2398, list2399, list2400, list2401, list2402, list2403, list2404, list2405, list2406, list2407, list2408, list2409, list2410, list2411, list2412, list2413, list2414, list2415, list2416, list2417, list2418, list2419, list2420, list2421, list2422, list2423, list2424, list2425, list2426, list2427, list2428, list2429, list2430, list2431, list2432, list2433, list2434, list2435, list2436, list2437, list2438, list2439, list2440, list2441, list2442, list2443, list2444, list2445, list2446, list2447, list2448, list2449, list2450, list2451, list2452, list2453, list2454, list2455, list2456, list2457, list2458, list2459, list2460, list2461, list2462, list2463, list2464, list2465, list2466, list2467, list2468, list2469, list2470, list2471, list2472, list2473, list2474, list2475, list2476, list2477, list2478, list2479, list2480, list2481, list2482, list2483, list2484, list2485, list2486, list2487, list2488, list2489, list2490, list2491, list2492, list2493, list2494, list2495, list2496, list2497, list2498, list2499, list2500, list2501, list2502, list2503, list2504, list2505, list2506, list2507, list2508, list2509, list2510, list2511, list2512, list2513, list2514, list2515, list2516, list2517, list2518, list2519, list2520, list2521, list2522, list2523, list2524, list2525, list2526, list2527, list2528, list2529, list2530, list2531, list2532, list2533, list2534, list2535, list2536, list2537, list2538, list2539, list2540, list2541, list2542, list2543, list2544, list2545, list2546, list2547, list2548, list2549, list2550, list2551, list2552, list2553, list2554, list2555, list2556, list2557, list2558, list2559, list2560, list2561, list2562, list2563, list2564, list2565, list2566, list2567, list2568, list2569, list2570, list2571, list2572, list2573, list2574, list2575, list2576, list2577, list2578, list2579, list2580, list2581, list2582, list2583, list2584, list2585, list2586, list2587, list2588, list2589, list2590, list2591, list2592, list2593, list2594, list2595, list2596, list2597, list2598, list2599, list2600, list2601, list2602, list2603, list2604, list2605, list2606, list2607, list2608, list2609, list2610, list2611, list2612, list2613, list2614, list2615, list2616, list2617, list2618, list2619, list2620, list2621, list2622, list2623, list2624, list2625, list2626, list2627, list2628, list2629, list2630, list2631, list2632, list2633, list2634, list2635, list2636, list2637, list2638, list2639, list2640, list2641, list2642, list2643, list2644, list2645, list2646, list2647, list2648, list2649, list2650, list2651, list2652, list2653, list2654, list2655, list2656, list2657, list2658, list2659, list2660, list2661, list2662, list2663, list2664, list2665, list2666, list2667, list2668, list2669, list2670, list2671, list2672, list2673, list2674, list2675, list2676, list2677, list2678, list2679, list2680, list2681, list2682, list2683, list2684, list2685, list2686, list2687, list2688, list2689, list2690, list2691, list2692, list2693, list2694, list2695, list2696, list2697, list2698, list2699, list2700, list2701, list2702, list2703, list2704, list2705, list2706, list2707, list2708, list2709, list2710, list2711, list2712, list2713, list2714, list2715, list2716, list2717, list2718, list2719, list2720, list2721, list2722, list2723, list2724, list2725, list2726, list2727, list2728, list2729, list2730, list2731, list2732, list2733, list2734, list2735, list2736, list2737, list2738, list2739, list2740, list2741, list2742, list2743, list2744, list2745, list2746, list2747, list2748, list2749, list2750, list2751, list2752, list2753, list2754, list2755, list2756, list2757, list2758, list2759, list2760, list2761, list2762, list2763, list2764, list2765, list2766, list2767, list2768, list2769, list2770, list2771, list2772, list2773, list2774, list2775, list2776, list2777, list2778, list2779, list2780, list2781, list2782, list2783, list2784, list2785, list2786, list2787, list2788, list2789, list2790, list2791, list2792, list2793, list2794, list2795, list2796, list2797, list2798, list2799, list2800, list2801, list2802, list2803, list2804, list2805, list2806, list2807, list2808, list2809, list2810, list2811, list2812, list2813, list2814, list2815, list2816, list2817, list2818, list2819, list2820, list2821, list2822, list2823, list2824, list2825, list2826, list2827, list2828, list2829, list2830, list2831, list2832, list2833, list2834, list2835, list2836, list2837, list2838, list2839, list2840, list2841, list2842, list2843, list2844, list2845, list2846, list2847, list2848, list2849, list2850, list2851, list2852, list2853, list2854, list2855, list2856, list2857, list2858, list2859, list2860, list2861, list2862, list2863, list2864, list2865, list2866, list2867, list2868, list2869, list2870, list2871, list2872, list2873, list2874, list2875, list2876, list2877, list2878, list2879, list2880, list2881, list2882, list2883, list2884, list2885, list2886, list2887, list2888, list2889, list2890, list2891, list2892, list2893, list2894, list2895, list2896, list2897, list2898, list2899, list2900, list2901, list2902, list2903, list2904, list2905, list2906, list2907, list2908, list2909, list2910, list2911, list2912, list2913, list2914, list2915, list2916, list2917, list2918, list2919, list2920, list2921, list2922, list2923, list2924, list2925, list2926, list2927, list2928, list2929, list2930, list2931, list2932, list2933, list2934, list2935, list2936, list2937, list2938, list2939, list2940, list2941, list2942, list2943, list2944, list2945, list2946, list2947, list2948, list2949, list2950, list2951, list2952, list2953, list2954, list2955, list2956, list2957, list2958, list2959, list2960, list2961, list2962, list2963, list2964, list2965, list2966, list2967, list2968, list2969, list2970, list2971, list2972, list2973, list2974, list2975, list2976, list2977, list2978, list2979, list2980, list2981, list2982, list2983, list2984, list2985, list2986, list2987, list2988, list2989, list2990, list2991, list2992, list2993, list2994, list2995, list2996, list2997, list2998, list2999, list3000, list3001, list3002, list3003, list3004, list3005, list3006, list3007, list3008, list3009, list3010, list3011, list3012, list3013, list3014, list3015, list3016, list3017, list3018, list3019, list3020, list3021, list3022, list3023, list3024, list3025, list3026, list3027, list3028, list3029, list3030, list3031, list3032, list3033, list3034, list3035, list3036, list3037, list3038, list3039, list3040, list3041, list3042, list3043, list3044, list3045, list3046, list3047, list3048, list3049, list3050, list3051, list3052, list3053, list3054, list3055, list3056, list3057, list3058, list3059, list3060, list3061, list3062, list3063, list3064, list3065, list3066, list3067, list3068, list3069, list3070, list3071, list3072, list3073, list3074, list3075, list3076, list3077, list3078, list3079, list3080, list3081, list3082, list3083, list3084, list3085, list3086, list3087, list3088, list3089, list3090, list3091, list3092, list3093, list3094, list3095, list3096, list3097, list3098, list3099, list3100, list3101, list3102, list3103, list3104, list3105, list3106, list3107, list3108, list3109, list3110, list3111, list3112, list3113, list3114, list3115, list3116, list3117, list3118, list3119, list3120, list3121, list3122, list3123, list3124, list3125, list3126, list3127, list3128, list3129, list3130, list3131, list3132, list3133, list3134, list3135, list3136, list3137, list3138, list3139, list3140, list3141, list3142, list3143, list3144, list3145, list3146, list3147, list3148, list3149, list3150, list3151, list3152, list3153, list3154, list3155, list3156, list3157, list3158, list3159, list3160, list3161, list3162, list3163, list3164, list3165, list3166, list3167, list3168, list3169, list3170, list3171, list3172, list3173, list3174, list3175, list3176, list3177, list3178, list3179, list3180, list3181, list3182, list3183, list3184, list3185, list3186, list3187, list3188, list3189, list3190, list3191, list3192, list3193, list3194, list3195, list3196, list3197, list3198, list3199, list3200, list3201, list3202, list3203, list3204, list3205, list3206, list3207, list3208, list3209, list3210, list3211, list3212, list3213, list3214, list3215, list3216, list3217, list3218, list3219, list3220, list3221, list3222, list3223, list3224, list3225, list3226, list3227, list3228, list3229, list3230, list3231, list3232, list3233, list3234, list3235, list3236, list3237, list3238, list3239, list3240, list3241, list3242, list3243, list3244, list3245, list3246, list3247, list3248, list3249, list3250, list3251, list3252, list3253, list3254, list3255, list3256, list3257, list3258, list3259, list3260, list3261, list3262, list3263, list3264, list3265, list3266, list3267, list3268, list3269, list3270, list3271, list3272, list3273, list3274, list3275, list3276, list3277, list3278, list3279, list3280, list3281, list3282, list3283, list3284, list3285, list3286, list3287, list3288, list3289, list3290, list3291, list3292, list3293, list3294, list3295, list3296, list3297, list3298, list3299, list3300, list3301, list3302, list3303, list3304, list3305, list3306, list3307, list3308, list3309, list3310, list3311, list3312, list3313, list3314, list3315, list3316, list3317, list3318, list3319, list3320, list3321, list3322, list3323, list3324, list3325, list3326, list3327, list3328, list3329, list3330, list3331, list3332, list3333, list3334, list3335, list3336, list3337, list3338, list3339, list3340, list3341, list3342, list3343, list3344, list3345, list3346, list3347, list3348, list3349, list3350, list3351, list3352, list3353, list3354, list3355, list3356, list3357, list3358, list3359, list3360, list3361, list3362, list3363, list3364, list3365, list3366, list3367, list3368, list3369, list3370, list3371, list3372, list3373, list3374, list3375, list3376, list3377, list3378, list3379, list3380, list3381, list3382, list3383, list3384, list3385, list3386, list3387, list3388, list3389, list3390, list3391, list3392, list3393, list3394, list3395, list3396, list3397]);
    let list3399 = vm.gc.listn(&[Object::Number(1), Object::Number(820), Object::Number(821), Object::Number(822), Object::Number(823), Object::Number(824), Object::Number(8402), Object::Number(8403), Object::Number(8408), Object::Number(8409), Object::Number(8410), Object::Number(8421), Object::Number(8422), Object::Number(8426), Object::Number(8427), Object::Number(68153), Object::Number(119143), Object::Number(119144), Object::Number(119145)]);
    let list3400 = vm.gc.listn(&[Object::Number(103), Object::Number(3640), Object::Number(3641)]);
    let list3401 = vm.gc.listn(&[Object::Number(7), Object::Number(2364), Object::Number(2492), Object::Number(2620), Object::Number(2748), Object::Number(2876), Object::Number(3260), Object::Number(4151), Object::Number(6964), Object::Number(7223)]);
    let list3402 = vm.gc.listn(&[Object::Number(202), Object::Number(801), Object::Number(802), Object::Number(807), Object::Number(808), Object::Number(7632)]);
    let list3403 = vm.gc.listn(&[Object::Number(8), Object::Number(12441), Object::Number(12442)]);
    let list3404 = vm.gc.listn(&[Object::Number(9), Object::Number(2381), Object::Number(2509), Object::Number(2637), Object::Number(2765), Object::Number(2893), Object::Number(3021), Object::Number(3149), Object::Number(3277), Object::Number(3405), Object::Number(3530), Object::Number(3642), Object::Number(3972), Object::Number(4153), Object::Number(4154), Object::Number(5908), Object::Number(5940), Object::Number(6098), Object::Number(6980), Object::Number(7082), Object::Number(43014), Object::Number(43204), Object::Number(43347), Object::Number(68159)]);
    let list3405 = vm.gc.listn(&[Object::Number(107), Object::Number(3656), Object::Number(3657), Object::Number(3658), Object::Number(3659)]);
    let list3406 = vm.gc.listn(&[Object::Number(10), Object::Number(1456)]);
    let list3407 = vm.gc.listn(&[Object::Number(11), Object::Number(1457)]);
    let list3408 = vm.gc.listn(&[Object::Number(12), Object::Number(1458)]);
    let list3409 = vm.gc.listn(&[Object::Number(13), Object::Number(1459)]);
    let list3410 = vm.gc.listn(&[Object::Number(14), Object::Number(1460)]);
    let list3411 = vm.gc.listn(&[Object::Number(15), Object::Number(1461)]);
    let list3412 = vm.gc.listn(&[Object::Number(16), Object::Number(1462)]);
    let list3413 = vm.gc.listn(&[Object::Number(17), Object::Number(1463)]);
    let list3414 = vm.gc.listn(&[Object::Number(18), Object::Number(1464), Object::Number(1479)]);
    let list3415 = vm.gc.listn(&[Object::Number(19), Object::Number(1465), Object::Number(1466)]);
    let list3416 = vm.gc.listn(&[Object::Number(214), Object::Number(7630)]);
    let list3417 = vm.gc.listn(&[Object::Number(20), Object::Number(1467)]);
    let list3418 = vm.gc.listn(&[Object::Number(118), Object::Number(3768), Object::Number(3769)]);
    let list3419 = vm.gc.listn(&[Object::Number(21), Object::Number(1468)]);
    let list3420 = vm.gc.listn(&[Object::Number(216), Object::Number(795), Object::Number(3897), Object::Number(119141), Object::Number(119142), Object::Number(119150), Object::Number(119151), Object::Number(119152), Object::Number(119153), Object::Number(119154)]);
    let list3421 = vm.gc.listn(&[Object::Number(22), Object::Number(1469)]);
    let list3422 = vm.gc.listn(&[Object::Number(23), Object::Number(1471)]);
    let list3423 = vm.gc.listn(&[Object::Number(218), Object::Number(12330)]);
    let list3424 = vm.gc.listn(&[Object::Number(24), Object::Number(1473)]);
    let list3425 = vm.gc.listn(&[Object::Number(122), Object::Number(3784), Object::Number(3785), Object::Number(3786), Object::Number(3787)]);
    let list3426 = vm.gc.listn(&[Object::Number(25), Object::Number(1474)]);
    let list3427 = vm.gc.listn(&[Object::Number(220), Object::Number(790), Object::Number(791), Object::Number(792), Object::Number(793), Object::Number(796), Object::Number(797), Object::Number(798), Object::Number(799), Object::Number(800), Object::Number(803), Object::Number(804), Object::Number(805), Object::Number(806), Object::Number(809), Object::Number(810), Object::Number(811), Object::Number(812), Object::Number(813), Object::Number(814), Object::Number(815), Object::Number(816), Object::Number(817), Object::Number(818), Object::Number(819), Object::Number(825), Object::Number(826), Object::Number(827), Object::Number(828), Object::Number(839), Object::Number(840), Object::Number(841), Object::Number(845), Object::Number(846), Object::Number(851), Object::Number(852), Object::Number(853), Object::Number(854), Object::Number(857), Object::Number(858), Object::Number(1425), Object::Number(1430), Object::Number(1435), Object::Number(1442), Object::Number(1443), Object::Number(1444), Object::Number(1445), Object::Number(1446), Object::Number(1447), Object::Number(1450), Object::Number(1477), Object::Number(1621), Object::Number(1622), Object::Number(1628), Object::Number(1763), Object::Number(1770), Object::Number(1773), Object::Number(1841), Object::Number(1844), Object::Number(1847), Object::Number(1848), Object::Number(1849), Object::Number(1851), Object::Number(1852), Object::Number(1854), Object::Number(1858), Object::Number(1860), Object::Number(1862), Object::Number(1864), Object::Number(2034), Object::Number(2386), Object::Number(3864), Object::Number(3865), Object::Number(3893), Object::Number(3895), Object::Number(4038), Object::Number(4237), Object::Number(6459), Object::Number(6680), Object::Number(7020), Object::Number(7618), Object::Number(7626), Object::Number(7631), Object::Number(7679), Object::Number(8424), Object::Number(8428), Object::Number(8429), Object::Number(8430), Object::Number(8431), Object::Number(43307), Object::Number(43308), Object::Number(43309), Object::Number(66045), Object::Number(68109), Object::Number(68154), Object::Number(119163), Object::Number(119164), Object::Number(119165), Object::Number(119166), Object::Number(119167), Object::Number(119168), Object::Number(119169), Object::Number(119170), Object::Number(119178), Object::Number(119179)]);
    let list3428 = vm.gc.listn(&[Object::Number(26), Object::Number(64286)]);
    let list3429 = vm.gc.listn(&[Object::Number(27), Object::Number(1611)]);
    let list3430 = vm.gc.listn(&[Object::Number(222), Object::Number(1434), Object::Number(1453), Object::Number(6457), Object::Number(12333)]);
    let list3431 = vm.gc.listn(&[Object::Number(28), Object::Number(1612)]);
    let list3432 = vm.gc.listn(&[Object::Number(29), Object::Number(1613)]);
    let list3433 = vm.gc.listn(&[Object::Number(224), Object::Number(12334), Object::Number(12335)]);
    let list3434 = vm.gc.listn(&[Object::Number(30), Object::Number(1560), Object::Number(1614)]);
    let list3435 = vm.gc.listn(&[Object::Number(31), Object::Number(1561), Object::Number(1615)]);
    let list3436 = vm.gc.listn(&[Object::Number(226), Object::Number(119149)]);
    let list3437 = vm.gc.listn(&[Object::Number(129), Object::Number(3953)]);
    let list3438 = vm.gc.listn(&[Object::Number(32), Object::Number(1562), Object::Number(1616)]);
    let list3439 = vm.gc.listn(&[Object::Number(130), Object::Number(3954), Object::Number(3962), Object::Number(3963), Object::Number(3964), Object::Number(3965), Object::Number(3968)]);
    let list3440 = vm.gc.listn(&[Object::Number(33), Object::Number(1617)]);
    let list3441 = vm.gc.listn(&[Object::Number(228), Object::Number(1454), Object::Number(6313), Object::Number(12331)]);
    let list3442 = vm.gc.listn(&[Object::Number(34), Object::Number(1618)]);
    let list3443 = vm.gc.listn(&[Object::Number(132), Object::Number(3956)]);
    let list3444 = vm.gc.listn(&[Object::Number(35), Object::Number(1648)]);
    let list3445 = vm.gc.listn(&[Object::Number(230), Object::Number(768), Object::Number(769), Object::Number(770), Object::Number(771), Object::Number(772), Object::Number(773), Object::Number(774), Object::Number(775), Object::Number(776), Object::Number(777), Object::Number(778), Object::Number(779), Object::Number(780), Object::Number(781), Object::Number(782), Object::Number(783), Object::Number(784), Object::Number(785), Object::Number(786), Object::Number(787), Object::Number(788), Object::Number(829), Object::Number(830), Object::Number(831), Object::Number(832), Object::Number(833), Object::Number(834), Object::Number(835), Object::Number(836), Object::Number(838), Object::Number(842), Object::Number(843), Object::Number(844), Object::Number(848), Object::Number(849), Object::Number(850), Object::Number(855), Object::Number(859), Object::Number(867), Object::Number(868), Object::Number(869), Object::Number(870), Object::Number(871), Object::Number(872), Object::Number(873), Object::Number(874), Object::Number(875), Object::Number(876), Object::Number(877), Object::Number(878), Object::Number(879), Object::Number(1155), Object::Number(1156), Object::Number(1157), Object::Number(1158), Object::Number(1159), Object::Number(1426), Object::Number(1427), Object::Number(1428), Object::Number(1429), Object::Number(1431), Object::Number(1432), Object::Number(1433), Object::Number(1436), Object::Number(1437), Object::Number(1438), Object::Number(1439), Object::Number(1440), Object::Number(1441), Object::Number(1448), Object::Number(1449), Object::Number(1451), Object::Number(1452), Object::Number(1455), Object::Number(1476), Object::Number(1552), Object::Number(1553), Object::Number(1554), Object::Number(1555), Object::Number(1556), Object::Number(1557), Object::Number(1558), Object::Number(1559), Object::Number(1619), Object::Number(1620), Object::Number(1623), Object::Number(1624), Object::Number(1625), Object::Number(1626), Object::Number(1627), Object::Number(1629), Object::Number(1630), Object::Number(1750), Object::Number(1751), Object::Number(1752), Object::Number(1753), Object::Number(1754), Object::Number(1755), Object::Number(1756), Object::Number(1759), Object::Number(1760), Object::Number(1761), Object::Number(1762), Object::Number(1764), Object::Number(1767), Object::Number(1768), Object::Number(1771), Object::Number(1772), Object::Number(1840), Object::Number(1842), Object::Number(1843), Object::Number(1845), Object::Number(1846), Object::Number(1850), Object::Number(1853), Object::Number(1855), Object::Number(1856), Object::Number(1857), Object::Number(1859), Object::Number(1861), Object::Number(1863), Object::Number(1865), Object::Number(1866), Object::Number(2027), Object::Number(2028), Object::Number(2029), Object::Number(2030), Object::Number(2031), Object::Number(2032), Object::Number(2033), Object::Number(2035), Object::Number(2385), Object::Number(2387), Object::Number(2388), Object::Number(3970), Object::Number(3971), Object::Number(3974), Object::Number(3975), Object::Number(4959), Object::Number(6109), Object::Number(6458), Object::Number(6679), Object::Number(7019), Object::Number(7021), Object::Number(7022), Object::Number(7023), Object::Number(7024), Object::Number(7025), Object::Number(7026), Object::Number(7027), Object::Number(7616), Object::Number(7617), Object::Number(7619), Object::Number(7620), Object::Number(7621), Object::Number(7622), Object::Number(7623), Object::Number(7624), Object::Number(7625), Object::Number(7627), Object::Number(7628), Object::Number(7633), Object::Number(7634), Object::Number(7635), Object::Number(7636), Object::Number(7637), Object::Number(7638), Object::Number(7639), Object::Number(7640), Object::Number(7641), Object::Number(7642), Object::Number(7643), Object::Number(7644), Object::Number(7645), Object::Number(7646), Object::Number(7647), Object::Number(7648), Object::Number(7649), Object::Number(7650), Object::Number(7651), Object::Number(7652), Object::Number(7653), Object::Number(7654), Object::Number(7678), Object::Number(8400), Object::Number(8401), Object::Number(8404), Object::Number(8405), Object::Number(8406), Object::Number(8407), Object::Number(8411), Object::Number(8412), Object::Number(8417), Object::Number(8423), Object::Number(8425), Object::Number(8432), Object::Number(11744), Object::Number(11745), Object::Number(11746), Object::Number(11747), Object::Number(11748), Object::Number(11749), Object::Number(11750), Object::Number(11751), Object::Number(11752), Object::Number(11753), Object::Number(11754), Object::Number(11755), Object::Number(11756), Object::Number(11757), Object::Number(11758), Object::Number(11759), Object::Number(11760), Object::Number(11761), Object::Number(11762), Object::Number(11763), Object::Number(11764), Object::Number(11765), Object::Number(11766), Object::Number(11767), Object::Number(11768), Object::Number(11769), Object::Number(11770), Object::Number(11771), Object::Number(11772), Object::Number(11773), Object::Number(11774), Object::Number(11775), Object::Number(42607), Object::Number(42620), Object::Number(42621), Object::Number(65056), Object::Number(65057), Object::Number(65058), Object::Number(65059), Object::Number(65060), Object::Number(65061), Object::Number(65062), Object::Number(68111), Object::Number(68152), Object::Number(119173), Object::Number(119174), Object::Number(119175), Object::Number(119176), Object::Number(119177), Object::Number(119210), Object::Number(119211), Object::Number(119212), Object::Number(119213), Object::Number(119362), Object::Number(119363), Object::Number(119364)]);
    let list3446 = vm.gc.listn(&[Object::Number(36), Object::Number(1809)]);
    let list3447 = vm.gc.listn(&[Object::Number(232), Object::Number(789), Object::Number(794), Object::Number(856), Object::Number(12332)]);
    let list3448 = vm.gc.listn(&[Object::Number(233), Object::Number(860), Object::Number(863), Object::Number(866)]);
    let list3449 = vm.gc.listn(&[Object::Number(234), Object::Number(861), Object::Number(862), Object::Number(864), Object::Number(865), Object::Number(7629)]);
    let list3450 = vm.gc.listn(&[Object::Number(240), Object::Number(837)]);
    let list3451 = vm.gc.listn(&[Object::Number(84), Object::Number(3157)]);
    let list3452 = vm.gc.listn(&[Object::Number(91), Object::Number(3158)]);
    let list3453 = vm.gc.listn(&[list3399, list3400, list3401, list3402, list3403, list3404, list3405, list3406, list3407, list3408, list3409, list3410, list3411, list3412, list3413, list3414, list3415, list3416, list3417, list3418, list3419, list3420, list3421, list3422, list3423, list3424, list3425, list3426, list3427, list3428, list3429, list3430, list3431, list3432, list3433, list3434, list3435, list3436, list3437, list3438, list3439, list3440, list3441, list3442, list3443, list3444, list3445, list3446, list3447, list3448, list3449, list3450, list3451, list3452]);
    let list3454 = vm.gc.listn(&[Object::Number(192), Object::Number(65), Object::Number(768)]);
    let list3455 = vm.gc.listn(&[Object::Number(193), Object::Number(65), Object::Number(769)]);
    let list3456 = vm.gc.listn(&[Object::Number(194), Object::Number(65), Object::Number(770)]);
    let list3457 = vm.gc.listn(&[Object::Number(195), Object::Number(65), Object::Number(771)]);
    let list3458 = vm.gc.listn(&[Object::Number(196), Object::Number(65), Object::Number(776)]);
    let list3459 = vm.gc.listn(&[Object::Number(197), Object::Number(65), Object::Number(778)]);
    let list3460 = vm.gc.listn(&[Object::Number(199), Object::Number(67), Object::Number(807)]);
    let list3461 = vm.gc.listn(&[Object::Number(200), Object::Number(69), Object::Number(768)]);
    let list3462 = vm.gc.listn(&[Object::Number(201), Object::Number(69), Object::Number(769)]);
    let list3463 = vm.gc.listn(&[Object::Number(202), Object::Number(69), Object::Number(770)]);
    let list3464 = vm.gc.listn(&[Object::Number(203), Object::Number(69), Object::Number(776)]);
    let list3465 = vm.gc.listn(&[Object::Number(204), Object::Number(73), Object::Number(768)]);
    let list3466 = vm.gc.listn(&[Object::Number(205), Object::Number(73), Object::Number(769)]);
    let list3467 = vm.gc.listn(&[Object::Number(206), Object::Number(73), Object::Number(770)]);
    let list3468 = vm.gc.listn(&[Object::Number(207), Object::Number(73), Object::Number(776)]);
    let list3469 = vm.gc.listn(&[Object::Number(209), Object::Number(78), Object::Number(771)]);
    let list3470 = vm.gc.listn(&[Object::Number(210), Object::Number(79), Object::Number(768)]);
    let list3471 = vm.gc.listn(&[Object::Number(211), Object::Number(79), Object::Number(769)]);
    let list3472 = vm.gc.listn(&[Object::Number(212), Object::Number(79), Object::Number(770)]);
    let list3473 = vm.gc.listn(&[Object::Number(213), Object::Number(79), Object::Number(771)]);
    let list3474 = vm.gc.listn(&[Object::Number(214), Object::Number(79), Object::Number(776)]);
    let list3475 = vm.gc.listn(&[Object::Number(217), Object::Number(85), Object::Number(768)]);
    let list3476 = vm.gc.listn(&[Object::Number(218), Object::Number(85), Object::Number(769)]);
    let list3477 = vm.gc.listn(&[Object::Number(219), Object::Number(85), Object::Number(770)]);
    let list3478 = vm.gc.listn(&[Object::Number(220), Object::Number(85), Object::Number(776)]);
    let list3479 = vm.gc.listn(&[Object::Number(221), Object::Number(89), Object::Number(769)]);
    let list3480 = vm.gc.listn(&[Object::Number(224), Object::Number(97), Object::Number(768)]);
    let list3481 = vm.gc.listn(&[Object::Number(225), Object::Number(97), Object::Number(769)]);
    let list3482 = vm.gc.listn(&[Object::Number(226), Object::Number(97), Object::Number(770)]);
    let list3483 = vm.gc.listn(&[Object::Number(227), Object::Number(97), Object::Number(771)]);
    let list3484 = vm.gc.listn(&[Object::Number(228), Object::Number(97), Object::Number(776)]);
    let list3485 = vm.gc.listn(&[Object::Number(229), Object::Number(97), Object::Number(778)]);
    let list3486 = vm.gc.listn(&[Object::Number(231), Object::Number(99), Object::Number(807)]);
    let list3487 = vm.gc.listn(&[Object::Number(232), Object::Number(101), Object::Number(768)]);
    let list3488 = vm.gc.listn(&[Object::Number(233), Object::Number(101), Object::Number(769)]);
    let list3489 = vm.gc.listn(&[Object::Number(234), Object::Number(101), Object::Number(770)]);
    let list3490 = vm.gc.listn(&[Object::Number(235), Object::Number(101), Object::Number(776)]);
    let list3491 = vm.gc.listn(&[Object::Number(236), Object::Number(105), Object::Number(768)]);
    let list3492 = vm.gc.listn(&[Object::Number(237), Object::Number(105), Object::Number(769)]);
    let list3493 = vm.gc.listn(&[Object::Number(238), Object::Number(105), Object::Number(770)]);
    let list3494 = vm.gc.listn(&[Object::Number(239), Object::Number(105), Object::Number(776)]);
    let list3495 = vm.gc.listn(&[Object::Number(241), Object::Number(110), Object::Number(771)]);
    let list3496 = vm.gc.listn(&[Object::Number(242), Object::Number(111), Object::Number(768)]);
    let list3497 = vm.gc.listn(&[Object::Number(243), Object::Number(111), Object::Number(769)]);
    let list3498 = vm.gc.listn(&[Object::Number(244), Object::Number(111), Object::Number(770)]);
    let list3499 = vm.gc.listn(&[Object::Number(245), Object::Number(111), Object::Number(771)]);
    let list3500 = vm.gc.listn(&[Object::Number(246), Object::Number(111), Object::Number(776)]);
    let list3501 = vm.gc.listn(&[Object::Number(249), Object::Number(117), Object::Number(768)]);
    let list3502 = vm.gc.listn(&[Object::Number(250), Object::Number(117), Object::Number(769)]);
    let list3503 = vm.gc.listn(&[Object::Number(251), Object::Number(117), Object::Number(770)]);
    let list3504 = vm.gc.listn(&[Object::Number(252), Object::Number(117), Object::Number(776)]);
    let list3505 = vm.gc.listn(&[Object::Number(253), Object::Number(121), Object::Number(769)]);
    let list3506 = vm.gc.listn(&[Object::Number(255), Object::Number(121), Object::Number(776)]);
    let list3507 = vm.gc.listn(&[Object::Number(256), Object::Number(65), Object::Number(772)]);
    let list3508 = vm.gc.listn(&[Object::Number(257), Object::Number(97), Object::Number(772)]);
    let list3509 = vm.gc.listn(&[Object::Number(258), Object::Number(65), Object::Number(774)]);
    let list3510 = vm.gc.listn(&[Object::Number(259), Object::Number(97), Object::Number(774)]);
    let list3511 = vm.gc.listn(&[Object::Number(260), Object::Number(65), Object::Number(808)]);
    let list3512 = vm.gc.listn(&[Object::Number(261), Object::Number(97), Object::Number(808)]);
    let list3513 = vm.gc.listn(&[Object::Number(262), Object::Number(67), Object::Number(769)]);
    let list3514 = vm.gc.listn(&[Object::Number(263), Object::Number(99), Object::Number(769)]);
    let list3515 = vm.gc.listn(&[Object::Number(264), Object::Number(67), Object::Number(770)]);
    let list3516 = vm.gc.listn(&[Object::Number(265), Object::Number(99), Object::Number(770)]);
    let list3517 = vm.gc.listn(&[Object::Number(266), Object::Number(67), Object::Number(775)]);
    let list3518 = vm.gc.listn(&[Object::Number(267), Object::Number(99), Object::Number(775)]);
    let list3519 = vm.gc.listn(&[Object::Number(268), Object::Number(67), Object::Number(780)]);
    let list3520 = vm.gc.listn(&[Object::Number(269), Object::Number(99), Object::Number(780)]);
    let list3521 = vm.gc.listn(&[Object::Number(270), Object::Number(68), Object::Number(780)]);
    let list3522 = vm.gc.listn(&[Object::Number(271), Object::Number(100), Object::Number(780)]);
    let list3523 = vm.gc.listn(&[Object::Number(274), Object::Number(69), Object::Number(772)]);
    let list3524 = vm.gc.listn(&[Object::Number(275), Object::Number(101), Object::Number(772)]);
    let list3525 = vm.gc.listn(&[Object::Number(276), Object::Number(69), Object::Number(774)]);
    let list3526 = vm.gc.listn(&[Object::Number(277), Object::Number(101), Object::Number(774)]);
    let list3527 = vm.gc.listn(&[Object::Number(278), Object::Number(69), Object::Number(775)]);
    let list3528 = vm.gc.listn(&[Object::Number(279), Object::Number(101), Object::Number(775)]);
    let list3529 = vm.gc.listn(&[Object::Number(280), Object::Number(69), Object::Number(808)]);
    let list3530 = vm.gc.listn(&[Object::Number(281), Object::Number(101), Object::Number(808)]);
    let list3531 = vm.gc.listn(&[Object::Number(282), Object::Number(69), Object::Number(780)]);
    let list3532 = vm.gc.listn(&[Object::Number(283), Object::Number(101), Object::Number(780)]);
    let list3533 = vm.gc.listn(&[Object::Number(284), Object::Number(71), Object::Number(770)]);
    let list3534 = vm.gc.listn(&[Object::Number(285), Object::Number(103), Object::Number(770)]);
    let list3535 = vm.gc.listn(&[Object::Number(286), Object::Number(71), Object::Number(774)]);
    let list3536 = vm.gc.listn(&[Object::Number(287), Object::Number(103), Object::Number(774)]);
    let list3537 = vm.gc.listn(&[Object::Number(288), Object::Number(71), Object::Number(775)]);
    let list3538 = vm.gc.listn(&[Object::Number(289), Object::Number(103), Object::Number(775)]);
    let list3539 = vm.gc.listn(&[Object::Number(290), Object::Number(71), Object::Number(807)]);
    let list3540 = vm.gc.listn(&[Object::Number(291), Object::Number(103), Object::Number(807)]);
    let list3541 = vm.gc.listn(&[Object::Number(292), Object::Number(72), Object::Number(770)]);
    let list3542 = vm.gc.listn(&[Object::Number(293), Object::Number(104), Object::Number(770)]);
    let list3543 = vm.gc.listn(&[Object::Number(296), Object::Number(73), Object::Number(771)]);
    let list3544 = vm.gc.listn(&[Object::Number(297), Object::Number(105), Object::Number(771)]);
    let list3545 = vm.gc.listn(&[Object::Number(298), Object::Number(73), Object::Number(772)]);
    let list3546 = vm.gc.listn(&[Object::Number(299), Object::Number(105), Object::Number(772)]);
    let list3547 = vm.gc.listn(&[Object::Number(300), Object::Number(73), Object::Number(774)]);
    let list3548 = vm.gc.listn(&[Object::Number(301), Object::Number(105), Object::Number(774)]);
    let list3549 = vm.gc.listn(&[Object::Number(302), Object::Number(73), Object::Number(808)]);
    let list3550 = vm.gc.listn(&[Object::Number(303), Object::Number(105), Object::Number(808)]);
    let list3551 = vm.gc.listn(&[Object::Number(304), Object::Number(73), Object::Number(775)]);
    let list3552 = vm.gc.listn(&[Object::Number(308), Object::Number(74), Object::Number(770)]);
    let list3553 = vm.gc.listn(&[Object::Number(309), Object::Number(106), Object::Number(770)]);
    let list3554 = vm.gc.listn(&[Object::Number(310), Object::Number(75), Object::Number(807)]);
    let list3555 = vm.gc.listn(&[Object::Number(311), Object::Number(107), Object::Number(807)]);
    let list3556 = vm.gc.listn(&[Object::Number(313), Object::Number(76), Object::Number(769)]);
    let list3557 = vm.gc.listn(&[Object::Number(314), Object::Number(108), Object::Number(769)]);
    let list3558 = vm.gc.listn(&[Object::Number(315), Object::Number(76), Object::Number(807)]);
    let list3559 = vm.gc.listn(&[Object::Number(316), Object::Number(108), Object::Number(807)]);
    let list3560 = vm.gc.listn(&[Object::Number(317), Object::Number(76), Object::Number(780)]);
    let list3561 = vm.gc.listn(&[Object::Number(318), Object::Number(108), Object::Number(780)]);
    let list3562 = vm.gc.listn(&[Object::Number(323), Object::Number(78), Object::Number(769)]);
    let list3563 = vm.gc.listn(&[Object::Number(324), Object::Number(110), Object::Number(769)]);
    let list3564 = vm.gc.listn(&[Object::Number(325), Object::Number(78), Object::Number(807)]);
    let list3565 = vm.gc.listn(&[Object::Number(326), Object::Number(110), Object::Number(807)]);
    let list3566 = vm.gc.listn(&[Object::Number(327), Object::Number(78), Object::Number(780)]);
    let list3567 = vm.gc.listn(&[Object::Number(328), Object::Number(110), Object::Number(780)]);
    let list3568 = vm.gc.listn(&[Object::Number(332), Object::Number(79), Object::Number(772)]);
    let list3569 = vm.gc.listn(&[Object::Number(333), Object::Number(111), Object::Number(772)]);
    let list3570 = vm.gc.listn(&[Object::Number(334), Object::Number(79), Object::Number(774)]);
    let list3571 = vm.gc.listn(&[Object::Number(335), Object::Number(111), Object::Number(774)]);
    let list3572 = vm.gc.listn(&[Object::Number(336), Object::Number(79), Object::Number(779)]);
    let list3573 = vm.gc.listn(&[Object::Number(337), Object::Number(111), Object::Number(779)]);
    let list3574 = vm.gc.listn(&[Object::Number(340), Object::Number(82), Object::Number(769)]);
    let list3575 = vm.gc.listn(&[Object::Number(341), Object::Number(114), Object::Number(769)]);
    let list3576 = vm.gc.listn(&[Object::Number(342), Object::Number(82), Object::Number(807)]);
    let list3577 = vm.gc.listn(&[Object::Number(343), Object::Number(114), Object::Number(807)]);
    let list3578 = vm.gc.listn(&[Object::Number(344), Object::Number(82), Object::Number(780)]);
    let list3579 = vm.gc.listn(&[Object::Number(345), Object::Number(114), Object::Number(780)]);
    let list3580 = vm.gc.listn(&[Object::Number(346), Object::Number(83), Object::Number(769)]);
    let list3581 = vm.gc.listn(&[Object::Number(347), Object::Number(115), Object::Number(769)]);
    let list3582 = vm.gc.listn(&[Object::Number(348), Object::Number(83), Object::Number(770)]);
    let list3583 = vm.gc.listn(&[Object::Number(349), Object::Number(115), Object::Number(770)]);
    let list3584 = vm.gc.listn(&[Object::Number(350), Object::Number(83), Object::Number(807)]);
    let list3585 = vm.gc.listn(&[Object::Number(351), Object::Number(115), Object::Number(807)]);
    let list3586 = vm.gc.listn(&[Object::Number(352), Object::Number(83), Object::Number(780)]);
    let list3587 = vm.gc.listn(&[Object::Number(353), Object::Number(115), Object::Number(780)]);
    let list3588 = vm.gc.listn(&[Object::Number(354), Object::Number(84), Object::Number(807)]);
    let list3589 = vm.gc.listn(&[Object::Number(355), Object::Number(116), Object::Number(807)]);
    let list3590 = vm.gc.listn(&[Object::Number(356), Object::Number(84), Object::Number(780)]);
    let list3591 = vm.gc.listn(&[Object::Number(357), Object::Number(116), Object::Number(780)]);
    let list3592 = vm.gc.listn(&[Object::Number(360), Object::Number(85), Object::Number(771)]);
    let list3593 = vm.gc.listn(&[Object::Number(361), Object::Number(117), Object::Number(771)]);
    let list3594 = vm.gc.listn(&[Object::Number(362), Object::Number(85), Object::Number(772)]);
    let list3595 = vm.gc.listn(&[Object::Number(363), Object::Number(117), Object::Number(772)]);
    let list3596 = vm.gc.listn(&[Object::Number(364), Object::Number(85), Object::Number(774)]);
    let list3597 = vm.gc.listn(&[Object::Number(365), Object::Number(117), Object::Number(774)]);
    let list3598 = vm.gc.listn(&[Object::Number(366), Object::Number(85), Object::Number(778)]);
    let list3599 = vm.gc.listn(&[Object::Number(367), Object::Number(117), Object::Number(778)]);
    let list3600 = vm.gc.listn(&[Object::Number(368), Object::Number(85), Object::Number(779)]);
    let list3601 = vm.gc.listn(&[Object::Number(369), Object::Number(117), Object::Number(779)]);
    let list3602 = vm.gc.listn(&[Object::Number(370), Object::Number(85), Object::Number(808)]);
    let list3603 = vm.gc.listn(&[Object::Number(371), Object::Number(117), Object::Number(808)]);
    let list3604 = vm.gc.listn(&[Object::Number(372), Object::Number(87), Object::Number(770)]);
    let list3605 = vm.gc.listn(&[Object::Number(373), Object::Number(119), Object::Number(770)]);
    let list3606 = vm.gc.listn(&[Object::Number(374), Object::Number(89), Object::Number(770)]);
    let list3607 = vm.gc.listn(&[Object::Number(375), Object::Number(121), Object::Number(770)]);
    let list3608 = vm.gc.listn(&[Object::Number(376), Object::Number(89), Object::Number(776)]);
    let list3609 = vm.gc.listn(&[Object::Number(377), Object::Number(90), Object::Number(769)]);
    let list3610 = vm.gc.listn(&[Object::Number(378), Object::Number(122), Object::Number(769)]);
    let list3611 = vm.gc.listn(&[Object::Number(379), Object::Number(90), Object::Number(775)]);
    let list3612 = vm.gc.listn(&[Object::Number(380), Object::Number(122), Object::Number(775)]);
    let list3613 = vm.gc.listn(&[Object::Number(381), Object::Number(90), Object::Number(780)]);
    let list3614 = vm.gc.listn(&[Object::Number(382), Object::Number(122), Object::Number(780)]);
    let list3615 = vm.gc.listn(&[Object::Number(416), Object::Number(79), Object::Number(795)]);
    let list3616 = vm.gc.listn(&[Object::Number(417), Object::Number(111), Object::Number(795)]);
    let list3617 = vm.gc.listn(&[Object::Number(431), Object::Number(85), Object::Number(795)]);
    let list3618 = vm.gc.listn(&[Object::Number(432), Object::Number(117), Object::Number(795)]);
    let list3619 = vm.gc.listn(&[Object::Number(461), Object::Number(65), Object::Number(780)]);
    let list3620 = vm.gc.listn(&[Object::Number(462), Object::Number(97), Object::Number(780)]);
    let list3621 = vm.gc.listn(&[Object::Number(463), Object::Number(73), Object::Number(780)]);
    let list3622 = vm.gc.listn(&[Object::Number(464), Object::Number(105), Object::Number(780)]);
    let list3623 = vm.gc.listn(&[Object::Number(465), Object::Number(79), Object::Number(780)]);
    let list3624 = vm.gc.listn(&[Object::Number(466), Object::Number(111), Object::Number(780)]);
    let list3625 = vm.gc.listn(&[Object::Number(467), Object::Number(85), Object::Number(780)]);
    let list3626 = vm.gc.listn(&[Object::Number(468), Object::Number(117), Object::Number(780)]);
    let list3627 = vm.gc.listn(&[Object::Number(469), Object::Number(220), Object::Number(772)]);
    let list3628 = vm.gc.listn(&[Object::Number(470), Object::Number(252), Object::Number(772)]);
    let list3629 = vm.gc.listn(&[Object::Number(471), Object::Number(220), Object::Number(769)]);
    let list3630 = vm.gc.listn(&[Object::Number(472), Object::Number(252), Object::Number(769)]);
    let list3631 = vm.gc.listn(&[Object::Number(473), Object::Number(220), Object::Number(780)]);
    let list3632 = vm.gc.listn(&[Object::Number(474), Object::Number(252), Object::Number(780)]);
    let list3633 = vm.gc.listn(&[Object::Number(475), Object::Number(220), Object::Number(768)]);
    let list3634 = vm.gc.listn(&[Object::Number(476), Object::Number(252), Object::Number(768)]);
    let list3635 = vm.gc.listn(&[Object::Number(478), Object::Number(196), Object::Number(772)]);
    let list3636 = vm.gc.listn(&[Object::Number(479), Object::Number(228), Object::Number(772)]);
    let list3637 = vm.gc.listn(&[Object::Number(480), Object::Number(550), Object::Number(772)]);
    let list3638 = vm.gc.listn(&[Object::Number(481), Object::Number(551), Object::Number(772)]);
    let list3639 = vm.gc.listn(&[Object::Number(482), Object::Number(198), Object::Number(772)]);
    let list3640 = vm.gc.listn(&[Object::Number(483), Object::Number(230), Object::Number(772)]);
    let list3641 = vm.gc.listn(&[Object::Number(486), Object::Number(71), Object::Number(780)]);
    let list3642 = vm.gc.listn(&[Object::Number(487), Object::Number(103), Object::Number(780)]);
    let list3643 = vm.gc.listn(&[Object::Number(488), Object::Number(75), Object::Number(780)]);
    let list3644 = vm.gc.listn(&[Object::Number(489), Object::Number(107), Object::Number(780)]);
    let list3645 = vm.gc.listn(&[Object::Number(490), Object::Number(79), Object::Number(808)]);
    let list3646 = vm.gc.listn(&[Object::Number(491), Object::Number(111), Object::Number(808)]);
    let list3647 = vm.gc.listn(&[Object::Number(492), Object::Number(490), Object::Number(772)]);
    let list3648 = vm.gc.listn(&[Object::Number(493), Object::Number(491), Object::Number(772)]);
    let list3649 = vm.gc.listn(&[Object::Number(494), Object::Number(439), Object::Number(780)]);
    let list3650 = vm.gc.listn(&[Object::Number(495), Object::Number(658), Object::Number(780)]);
    let list3651 = vm.gc.listn(&[Object::Number(496), Object::Number(106), Object::Number(780)]);
    let list3652 = vm.gc.listn(&[Object::Number(500), Object::Number(71), Object::Number(769)]);
    let list3653 = vm.gc.listn(&[Object::Number(501), Object::Number(103), Object::Number(769)]);
    let list3654 = vm.gc.listn(&[Object::Number(504), Object::Number(78), Object::Number(768)]);
    let list3655 = vm.gc.listn(&[Object::Number(505), Object::Number(110), Object::Number(768)]);
    let list3656 = vm.gc.listn(&[Object::Number(506), Object::Number(197), Object::Number(769)]);
    let list3657 = vm.gc.listn(&[Object::Number(507), Object::Number(229), Object::Number(769)]);
    let list3658 = vm.gc.listn(&[Object::Number(508), Object::Number(198), Object::Number(769)]);
    let list3659 = vm.gc.listn(&[Object::Number(509), Object::Number(230), Object::Number(769)]);
    let list3660 = vm.gc.listn(&[Object::Number(510), Object::Number(216), Object::Number(769)]);
    let list3661 = vm.gc.listn(&[Object::Number(511), Object::Number(248), Object::Number(769)]);
    let list3662 = vm.gc.listn(&[Object::Number(512), Object::Number(65), Object::Number(783)]);
    let list3663 = vm.gc.listn(&[Object::Number(513), Object::Number(97), Object::Number(783)]);
    let list3664 = vm.gc.listn(&[Object::Number(514), Object::Number(65), Object::Number(785)]);
    let list3665 = vm.gc.listn(&[Object::Number(515), Object::Number(97), Object::Number(785)]);
    let list3666 = vm.gc.listn(&[Object::Number(516), Object::Number(69), Object::Number(783)]);
    let list3667 = vm.gc.listn(&[Object::Number(517), Object::Number(101), Object::Number(783)]);
    let list3668 = vm.gc.listn(&[Object::Number(518), Object::Number(69), Object::Number(785)]);
    let list3669 = vm.gc.listn(&[Object::Number(519), Object::Number(101), Object::Number(785)]);
    let list3670 = vm.gc.listn(&[Object::Number(520), Object::Number(73), Object::Number(783)]);
    let list3671 = vm.gc.listn(&[Object::Number(521), Object::Number(105), Object::Number(783)]);
    let list3672 = vm.gc.listn(&[Object::Number(522), Object::Number(73), Object::Number(785)]);
    let list3673 = vm.gc.listn(&[Object::Number(523), Object::Number(105), Object::Number(785)]);
    let list3674 = vm.gc.listn(&[Object::Number(524), Object::Number(79), Object::Number(783)]);
    let list3675 = vm.gc.listn(&[Object::Number(525), Object::Number(111), Object::Number(783)]);
    let list3676 = vm.gc.listn(&[Object::Number(526), Object::Number(79), Object::Number(785)]);
    let list3677 = vm.gc.listn(&[Object::Number(527), Object::Number(111), Object::Number(785)]);
    let list3678 = vm.gc.listn(&[Object::Number(528), Object::Number(82), Object::Number(783)]);
    let list3679 = vm.gc.listn(&[Object::Number(529), Object::Number(114), Object::Number(783)]);
    let list3680 = vm.gc.listn(&[Object::Number(530), Object::Number(82), Object::Number(785)]);
    let list3681 = vm.gc.listn(&[Object::Number(531), Object::Number(114), Object::Number(785)]);
    let list3682 = vm.gc.listn(&[Object::Number(532), Object::Number(85), Object::Number(783)]);
    let list3683 = vm.gc.listn(&[Object::Number(533), Object::Number(117), Object::Number(783)]);
    let list3684 = vm.gc.listn(&[Object::Number(534), Object::Number(85), Object::Number(785)]);
    let list3685 = vm.gc.listn(&[Object::Number(535), Object::Number(117), Object::Number(785)]);
    let list3686 = vm.gc.listn(&[Object::Number(536), Object::Number(83), Object::Number(806)]);
    let list3687 = vm.gc.listn(&[Object::Number(537), Object::Number(115), Object::Number(806)]);
    let list3688 = vm.gc.listn(&[Object::Number(538), Object::Number(84), Object::Number(806)]);
    let list3689 = vm.gc.listn(&[Object::Number(539), Object::Number(116), Object::Number(806)]);
    let list3690 = vm.gc.listn(&[Object::Number(542), Object::Number(72), Object::Number(780)]);
    let list3691 = vm.gc.listn(&[Object::Number(543), Object::Number(104), Object::Number(780)]);
    let list3692 = vm.gc.listn(&[Object::Number(550), Object::Number(65), Object::Number(775)]);
    let list3693 = vm.gc.listn(&[Object::Number(551), Object::Number(97), Object::Number(775)]);
    let list3694 = vm.gc.listn(&[Object::Number(552), Object::Number(69), Object::Number(807)]);
    let list3695 = vm.gc.listn(&[Object::Number(553), Object::Number(101), Object::Number(807)]);
    let list3696 = vm.gc.listn(&[Object::Number(554), Object::Number(214), Object::Number(772)]);
    let list3697 = vm.gc.listn(&[Object::Number(555), Object::Number(246), Object::Number(772)]);
    let list3698 = vm.gc.listn(&[Object::Number(556), Object::Number(213), Object::Number(772)]);
    let list3699 = vm.gc.listn(&[Object::Number(557), Object::Number(245), Object::Number(772)]);
    let list3700 = vm.gc.listn(&[Object::Number(558), Object::Number(79), Object::Number(775)]);
    let list3701 = vm.gc.listn(&[Object::Number(559), Object::Number(111), Object::Number(775)]);
    let list3702 = vm.gc.listn(&[Object::Number(560), Object::Number(558), Object::Number(772)]);
    let list3703 = vm.gc.listn(&[Object::Number(561), Object::Number(559), Object::Number(772)]);
    let list3704 = vm.gc.listn(&[Object::Number(562), Object::Number(89), Object::Number(772)]);
    let list3705 = vm.gc.listn(&[Object::Number(563), Object::Number(121), Object::Number(772)]);
    let list3706 = vm.gc.listn(&[Object::Number(832), Object::Number(768)]);
    let list3707 = vm.gc.listn(&[Object::Number(833), Object::Number(769)]);
    let list3708 = vm.gc.listn(&[Object::Number(835), Object::Number(787)]);
    let list3709 = vm.gc.listn(&[Object::Number(836), Object::Number(776), Object::Number(769)]);
    let list3710 = vm.gc.listn(&[Object::Number(884), Object::Number(697)]);
    let list3711 = vm.gc.listn(&[Object::Number(894), Object::Number(59)]);
    let list3712 = vm.gc.listn(&[Object::Number(901), Object::Number(168), Object::Number(769)]);
    let list3713 = vm.gc.listn(&[Object::Number(902), Object::Number(913), Object::Number(769)]);
    let list3714 = vm.gc.listn(&[Object::Number(903), Object::Number(183)]);
    let list3715 = vm.gc.listn(&[Object::Number(904), Object::Number(917), Object::Number(769)]);
    let list3716 = vm.gc.listn(&[Object::Number(905), Object::Number(919), Object::Number(769)]);
    let list3717 = vm.gc.listn(&[Object::Number(906), Object::Number(921), Object::Number(769)]);
    let list3718 = vm.gc.listn(&[Object::Number(908), Object::Number(927), Object::Number(769)]);
    let list3719 = vm.gc.listn(&[Object::Number(910), Object::Number(933), Object::Number(769)]);
    let list3720 = vm.gc.listn(&[Object::Number(911), Object::Number(937), Object::Number(769)]);
    let list3721 = vm.gc.listn(&[Object::Number(912), Object::Number(970), Object::Number(769)]);
    let list3722 = vm.gc.listn(&[Object::Number(938), Object::Number(921), Object::Number(776)]);
    let list3723 = vm.gc.listn(&[Object::Number(939), Object::Number(933), Object::Number(776)]);
    let list3724 = vm.gc.listn(&[Object::Number(940), Object::Number(945), Object::Number(769)]);
    let list3725 = vm.gc.listn(&[Object::Number(941), Object::Number(949), Object::Number(769)]);
    let list3726 = vm.gc.listn(&[Object::Number(942), Object::Number(951), Object::Number(769)]);
    let list3727 = vm.gc.listn(&[Object::Number(943), Object::Number(953), Object::Number(769)]);
    let list3728 = vm.gc.listn(&[Object::Number(944), Object::Number(971), Object::Number(769)]);
    let list3729 = vm.gc.listn(&[Object::Number(970), Object::Number(953), Object::Number(776)]);
    let list3730 = vm.gc.listn(&[Object::Number(971), Object::Number(965), Object::Number(776)]);
    let list3731 = vm.gc.listn(&[Object::Number(972), Object::Number(959), Object::Number(769)]);
    let list3732 = vm.gc.listn(&[Object::Number(973), Object::Number(965), Object::Number(769)]);
    let list3733 = vm.gc.listn(&[Object::Number(974), Object::Number(969), Object::Number(769)]);
    let list3734 = vm.gc.listn(&[Object::Number(979), Object::Number(978), Object::Number(769)]);
    let list3735 = vm.gc.listn(&[Object::Number(980), Object::Number(978), Object::Number(776)]);
    let list3736 = vm.gc.listn(&[Object::Number(1024), Object::Number(1045), Object::Number(768)]);
    let list3737 = vm.gc.listn(&[Object::Number(1025), Object::Number(1045), Object::Number(776)]);
    let list3738 = vm.gc.listn(&[Object::Number(1027), Object::Number(1043), Object::Number(769)]);
    let list3739 = vm.gc.listn(&[Object::Number(1031), Object::Number(1030), Object::Number(776)]);
    let list3740 = vm.gc.listn(&[Object::Number(1036), Object::Number(1050), Object::Number(769)]);
    let list3741 = vm.gc.listn(&[Object::Number(1037), Object::Number(1048), Object::Number(768)]);
    let list3742 = vm.gc.listn(&[Object::Number(1038), Object::Number(1059), Object::Number(774)]);
    let list3743 = vm.gc.listn(&[Object::Number(1049), Object::Number(1048), Object::Number(774)]);
    let list3744 = vm.gc.listn(&[Object::Number(1081), Object::Number(1080), Object::Number(774)]);
    let list3745 = vm.gc.listn(&[Object::Number(1104), Object::Number(1077), Object::Number(768)]);
    let list3746 = vm.gc.listn(&[Object::Number(1105), Object::Number(1077), Object::Number(776)]);
    let list3747 = vm.gc.listn(&[Object::Number(1107), Object::Number(1075), Object::Number(769)]);
    let list3748 = vm.gc.listn(&[Object::Number(1111), Object::Number(1110), Object::Number(776)]);
    let list3749 = vm.gc.listn(&[Object::Number(1116), Object::Number(1082), Object::Number(769)]);
    let list3750 = vm.gc.listn(&[Object::Number(1117), Object::Number(1080), Object::Number(768)]);
    let list3751 = vm.gc.listn(&[Object::Number(1118), Object::Number(1091), Object::Number(774)]);
    let list3752 = vm.gc.listn(&[Object::Number(1142), Object::Number(1140), Object::Number(783)]);
    let list3753 = vm.gc.listn(&[Object::Number(1143), Object::Number(1141), Object::Number(783)]);
    let list3754 = vm.gc.listn(&[Object::Number(1217), Object::Number(1046), Object::Number(774)]);
    let list3755 = vm.gc.listn(&[Object::Number(1218), Object::Number(1078), Object::Number(774)]);
    let list3756 = vm.gc.listn(&[Object::Number(1232), Object::Number(1040), Object::Number(774)]);
    let list3757 = vm.gc.listn(&[Object::Number(1233), Object::Number(1072), Object::Number(774)]);
    let list3758 = vm.gc.listn(&[Object::Number(1234), Object::Number(1040), Object::Number(776)]);
    let list3759 = vm.gc.listn(&[Object::Number(1235), Object::Number(1072), Object::Number(776)]);
    let list3760 = vm.gc.listn(&[Object::Number(1238), Object::Number(1045), Object::Number(774)]);
    let list3761 = vm.gc.listn(&[Object::Number(1239), Object::Number(1077), Object::Number(774)]);
    let list3762 = vm.gc.listn(&[Object::Number(1242), Object::Number(1240), Object::Number(776)]);
    let list3763 = vm.gc.listn(&[Object::Number(1243), Object::Number(1241), Object::Number(776)]);
    let list3764 = vm.gc.listn(&[Object::Number(1244), Object::Number(1046), Object::Number(776)]);
    let list3765 = vm.gc.listn(&[Object::Number(1245), Object::Number(1078), Object::Number(776)]);
    let list3766 = vm.gc.listn(&[Object::Number(1246), Object::Number(1047), Object::Number(776)]);
    let list3767 = vm.gc.listn(&[Object::Number(1247), Object::Number(1079), Object::Number(776)]);
    let list3768 = vm.gc.listn(&[Object::Number(1250), Object::Number(1048), Object::Number(772)]);
    let list3769 = vm.gc.listn(&[Object::Number(1251), Object::Number(1080), Object::Number(772)]);
    let list3770 = vm.gc.listn(&[Object::Number(1252), Object::Number(1048), Object::Number(776)]);
    let list3771 = vm.gc.listn(&[Object::Number(1253), Object::Number(1080), Object::Number(776)]);
    let list3772 = vm.gc.listn(&[Object::Number(1254), Object::Number(1054), Object::Number(776)]);
    let list3773 = vm.gc.listn(&[Object::Number(1255), Object::Number(1086), Object::Number(776)]);
    let list3774 = vm.gc.listn(&[Object::Number(1258), Object::Number(1256), Object::Number(776)]);
    let list3775 = vm.gc.listn(&[Object::Number(1259), Object::Number(1257), Object::Number(776)]);
    let list3776 = vm.gc.listn(&[Object::Number(1260), Object::Number(1069), Object::Number(776)]);
    let list3777 = vm.gc.listn(&[Object::Number(1261), Object::Number(1101), Object::Number(776)]);
    let list3778 = vm.gc.listn(&[Object::Number(1262), Object::Number(1059), Object::Number(772)]);
    let list3779 = vm.gc.listn(&[Object::Number(1263), Object::Number(1091), Object::Number(772)]);
    let list3780 = vm.gc.listn(&[Object::Number(1264), Object::Number(1059), Object::Number(776)]);
    let list3781 = vm.gc.listn(&[Object::Number(1265), Object::Number(1091), Object::Number(776)]);
    let list3782 = vm.gc.listn(&[Object::Number(1266), Object::Number(1059), Object::Number(779)]);
    let list3783 = vm.gc.listn(&[Object::Number(1267), Object::Number(1091), Object::Number(779)]);
    let list3784 = vm.gc.listn(&[Object::Number(1268), Object::Number(1063), Object::Number(776)]);
    let list3785 = vm.gc.listn(&[Object::Number(1269), Object::Number(1095), Object::Number(776)]);
    let list3786 = vm.gc.listn(&[Object::Number(1272), Object::Number(1067), Object::Number(776)]);
    let list3787 = vm.gc.listn(&[Object::Number(1273), Object::Number(1099), Object::Number(776)]);
    let list3788 = vm.gc.listn(&[Object::Number(1570), Object::Number(1575), Object::Number(1619)]);
    let list3789 = vm.gc.listn(&[Object::Number(1571), Object::Number(1575), Object::Number(1620)]);
    let list3790 = vm.gc.listn(&[Object::Number(1572), Object::Number(1608), Object::Number(1620)]);
    let list3791 = vm.gc.listn(&[Object::Number(1573), Object::Number(1575), Object::Number(1621)]);
    let list3792 = vm.gc.listn(&[Object::Number(1574), Object::Number(1610), Object::Number(1620)]);
    let list3793 = vm.gc.listn(&[Object::Number(1728), Object::Number(1749), Object::Number(1620)]);
    let list3794 = vm.gc.listn(&[Object::Number(1730), Object::Number(1729), Object::Number(1620)]);
    let list3795 = vm.gc.listn(&[Object::Number(1747), Object::Number(1746), Object::Number(1620)]);
    let list3796 = vm.gc.listn(&[Object::Number(2345), Object::Number(2344), Object::Number(2364)]);
    let list3797 = vm.gc.listn(&[Object::Number(2353), Object::Number(2352), Object::Number(2364)]);
    let list3798 = vm.gc.listn(&[Object::Number(2356), Object::Number(2355), Object::Number(2364)]);
    let list3799 = vm.gc.listn(&[Object::Number(2392), Object::Number(2325), Object::Number(2364)]);
    let list3800 = vm.gc.listn(&[Object::Number(2393), Object::Number(2326), Object::Number(2364)]);
    let list3801 = vm.gc.listn(&[Object::Number(2394), Object::Number(2327), Object::Number(2364)]);
    let list3802 = vm.gc.listn(&[Object::Number(2395), Object::Number(2332), Object::Number(2364)]);
    let list3803 = vm.gc.listn(&[Object::Number(2396), Object::Number(2337), Object::Number(2364)]);
    let list3804 = vm.gc.listn(&[Object::Number(2397), Object::Number(2338), Object::Number(2364)]);
    let list3805 = vm.gc.listn(&[Object::Number(2398), Object::Number(2347), Object::Number(2364)]);
    let list3806 = vm.gc.listn(&[Object::Number(2399), Object::Number(2351), Object::Number(2364)]);
    let list3807 = vm.gc.listn(&[Object::Number(2507), Object::Number(2503), Object::Number(2494)]);
    let list3808 = vm.gc.listn(&[Object::Number(2508), Object::Number(2503), Object::Number(2519)]);
    let list3809 = vm.gc.listn(&[Object::Number(2524), Object::Number(2465), Object::Number(2492)]);
    let list3810 = vm.gc.listn(&[Object::Number(2525), Object::Number(2466), Object::Number(2492)]);
    let list3811 = vm.gc.listn(&[Object::Number(2527), Object::Number(2479), Object::Number(2492)]);
    let list3812 = vm.gc.listn(&[Object::Number(2611), Object::Number(2610), Object::Number(2620)]);
    let list3813 = vm.gc.listn(&[Object::Number(2614), Object::Number(2616), Object::Number(2620)]);
    let list3814 = vm.gc.listn(&[Object::Number(2649), Object::Number(2582), Object::Number(2620)]);
    let list3815 = vm.gc.listn(&[Object::Number(2650), Object::Number(2583), Object::Number(2620)]);
    let list3816 = vm.gc.listn(&[Object::Number(2651), Object::Number(2588), Object::Number(2620)]);
    let list3817 = vm.gc.listn(&[Object::Number(2654), Object::Number(2603), Object::Number(2620)]);
    let list3818 = vm.gc.listn(&[Object::Number(2888), Object::Number(2887), Object::Number(2902)]);
    let list3819 = vm.gc.listn(&[Object::Number(2891), Object::Number(2887), Object::Number(2878)]);
    let list3820 = vm.gc.listn(&[Object::Number(2892), Object::Number(2887), Object::Number(2903)]);
    let list3821 = vm.gc.listn(&[Object::Number(2908), Object::Number(2849), Object::Number(2876)]);
    let list3822 = vm.gc.listn(&[Object::Number(2909), Object::Number(2850), Object::Number(2876)]);
    let list3823 = vm.gc.listn(&[Object::Number(2964), Object::Number(2962), Object::Number(3031)]);
    let list3824 = vm.gc.listn(&[Object::Number(3018), Object::Number(3014), Object::Number(3006)]);
    let list3825 = vm.gc.listn(&[Object::Number(3019), Object::Number(3015), Object::Number(3006)]);
    let list3826 = vm.gc.listn(&[Object::Number(3020), Object::Number(3014), Object::Number(3031)]);
    let list3827 = vm.gc.listn(&[Object::Number(3144), Object::Number(3142), Object::Number(3158)]);
    let list3828 = vm.gc.listn(&[Object::Number(3264), Object::Number(3263), Object::Number(3285)]);
    let list3829 = vm.gc.listn(&[Object::Number(3271), Object::Number(3270), Object::Number(3285)]);
    let list3830 = vm.gc.listn(&[Object::Number(3272), Object::Number(3270), Object::Number(3286)]);
    let list3831 = vm.gc.listn(&[Object::Number(3274), Object::Number(3270), Object::Number(3266)]);
    let list3832 = vm.gc.listn(&[Object::Number(3275), Object::Number(3274), Object::Number(3285)]);
    let list3833 = vm.gc.listn(&[Object::Number(3402), Object::Number(3398), Object::Number(3390)]);
    let list3834 = vm.gc.listn(&[Object::Number(3403), Object::Number(3399), Object::Number(3390)]);
    let list3835 = vm.gc.listn(&[Object::Number(3404), Object::Number(3398), Object::Number(3415)]);
    let list3836 = vm.gc.listn(&[Object::Number(3546), Object::Number(3545), Object::Number(3530)]);
    let list3837 = vm.gc.listn(&[Object::Number(3548), Object::Number(3545), Object::Number(3535)]);
    let list3838 = vm.gc.listn(&[Object::Number(3549), Object::Number(3548), Object::Number(3530)]);
    let list3839 = vm.gc.listn(&[Object::Number(3550), Object::Number(3545), Object::Number(3551)]);
    let list3840 = vm.gc.listn(&[Object::Number(3907), Object::Number(3906), Object::Number(4023)]);
    let list3841 = vm.gc.listn(&[Object::Number(3917), Object::Number(3916), Object::Number(4023)]);
    let list3842 = vm.gc.listn(&[Object::Number(3922), Object::Number(3921), Object::Number(4023)]);
    let list3843 = vm.gc.listn(&[Object::Number(3927), Object::Number(3926), Object::Number(4023)]);
    let list3844 = vm.gc.listn(&[Object::Number(3932), Object::Number(3931), Object::Number(4023)]);
    let list3845 = vm.gc.listn(&[Object::Number(3945), Object::Number(3904), Object::Number(4021)]);
    let list3846 = vm.gc.listn(&[Object::Number(3955), Object::Number(3953), Object::Number(3954)]);
    let list3847 = vm.gc.listn(&[Object::Number(3957), Object::Number(3953), Object::Number(3956)]);
    let list3848 = vm.gc.listn(&[Object::Number(3958), Object::Number(4018), Object::Number(3968)]);
    let list3849 = vm.gc.listn(&[Object::Number(3960), Object::Number(4019), Object::Number(3968)]);
    let list3850 = vm.gc.listn(&[Object::Number(3969), Object::Number(3953), Object::Number(3968)]);
    let list3851 = vm.gc.listn(&[Object::Number(3987), Object::Number(3986), Object::Number(4023)]);
    let list3852 = vm.gc.listn(&[Object::Number(3997), Object::Number(3996), Object::Number(4023)]);
    let list3853 = vm.gc.listn(&[Object::Number(4002), Object::Number(4001), Object::Number(4023)]);
    let list3854 = vm.gc.listn(&[Object::Number(4007), Object::Number(4006), Object::Number(4023)]);
    let list3855 = vm.gc.listn(&[Object::Number(4012), Object::Number(4011), Object::Number(4023)]);
    let list3856 = vm.gc.listn(&[Object::Number(4025), Object::Number(3984), Object::Number(4021)]);
    let list3857 = vm.gc.listn(&[Object::Number(4134), Object::Number(4133), Object::Number(4142)]);
    let list3858 = vm.gc.listn(&[Object::Number(6918), Object::Number(6917), Object::Number(6965)]);
    let list3859 = vm.gc.listn(&[Object::Number(6920), Object::Number(6919), Object::Number(6965)]);
    let list3860 = vm.gc.listn(&[Object::Number(6922), Object::Number(6921), Object::Number(6965)]);
    let list3861 = vm.gc.listn(&[Object::Number(6924), Object::Number(6923), Object::Number(6965)]);
    let list3862 = vm.gc.listn(&[Object::Number(6926), Object::Number(6925), Object::Number(6965)]);
    let list3863 = vm.gc.listn(&[Object::Number(6930), Object::Number(6929), Object::Number(6965)]);
    let list3864 = vm.gc.listn(&[Object::Number(6971), Object::Number(6970), Object::Number(6965)]);
    let list3865 = vm.gc.listn(&[Object::Number(6973), Object::Number(6972), Object::Number(6965)]);
    let list3866 = vm.gc.listn(&[Object::Number(6976), Object::Number(6974), Object::Number(6965)]);
    let list3867 = vm.gc.listn(&[Object::Number(6977), Object::Number(6975), Object::Number(6965)]);
    let list3868 = vm.gc.listn(&[Object::Number(6979), Object::Number(6978), Object::Number(6965)]);
    let list3869 = vm.gc.listn(&[Object::Number(7680), Object::Number(65), Object::Number(805)]);
    let list3870 = vm.gc.listn(&[Object::Number(7681), Object::Number(97), Object::Number(805)]);
    let list3871 = vm.gc.listn(&[Object::Number(7682), Object::Number(66), Object::Number(775)]);
    let list3872 = vm.gc.listn(&[Object::Number(7683), Object::Number(98), Object::Number(775)]);
    let list3873 = vm.gc.listn(&[Object::Number(7684), Object::Number(66), Object::Number(803)]);
    let list3874 = vm.gc.listn(&[Object::Number(7685), Object::Number(98), Object::Number(803)]);
    let list3875 = vm.gc.listn(&[Object::Number(7686), Object::Number(66), Object::Number(817)]);
    let list3876 = vm.gc.listn(&[Object::Number(7687), Object::Number(98), Object::Number(817)]);
    let list3877 = vm.gc.listn(&[Object::Number(7688), Object::Number(199), Object::Number(769)]);
    let list3878 = vm.gc.listn(&[Object::Number(7689), Object::Number(231), Object::Number(769)]);
    let list3879 = vm.gc.listn(&[Object::Number(7690), Object::Number(68), Object::Number(775)]);
    let list3880 = vm.gc.listn(&[Object::Number(7691), Object::Number(100), Object::Number(775)]);
    let list3881 = vm.gc.listn(&[Object::Number(7692), Object::Number(68), Object::Number(803)]);
    let list3882 = vm.gc.listn(&[Object::Number(7693), Object::Number(100), Object::Number(803)]);
    let list3883 = vm.gc.listn(&[Object::Number(7694), Object::Number(68), Object::Number(817)]);
    let list3884 = vm.gc.listn(&[Object::Number(7695), Object::Number(100), Object::Number(817)]);
    let list3885 = vm.gc.listn(&[Object::Number(7696), Object::Number(68), Object::Number(807)]);
    let list3886 = vm.gc.listn(&[Object::Number(7697), Object::Number(100), Object::Number(807)]);
    let list3887 = vm.gc.listn(&[Object::Number(7698), Object::Number(68), Object::Number(813)]);
    let list3888 = vm.gc.listn(&[Object::Number(7699), Object::Number(100), Object::Number(813)]);
    let list3889 = vm.gc.listn(&[Object::Number(7700), Object::Number(274), Object::Number(768)]);
    let list3890 = vm.gc.listn(&[Object::Number(7701), Object::Number(275), Object::Number(768)]);
    let list3891 = vm.gc.listn(&[Object::Number(7702), Object::Number(274), Object::Number(769)]);
    let list3892 = vm.gc.listn(&[Object::Number(7703), Object::Number(275), Object::Number(769)]);
    let list3893 = vm.gc.listn(&[Object::Number(7704), Object::Number(69), Object::Number(813)]);
    let list3894 = vm.gc.listn(&[Object::Number(7705), Object::Number(101), Object::Number(813)]);
    let list3895 = vm.gc.listn(&[Object::Number(7706), Object::Number(69), Object::Number(816)]);
    let list3896 = vm.gc.listn(&[Object::Number(7707), Object::Number(101), Object::Number(816)]);
    let list3897 = vm.gc.listn(&[Object::Number(7708), Object::Number(552), Object::Number(774)]);
    let list3898 = vm.gc.listn(&[Object::Number(7709), Object::Number(553), Object::Number(774)]);
    let list3899 = vm.gc.listn(&[Object::Number(7710), Object::Number(70), Object::Number(775)]);
    let list3900 = vm.gc.listn(&[Object::Number(7711), Object::Number(102), Object::Number(775)]);
    let list3901 = vm.gc.listn(&[Object::Number(7712), Object::Number(71), Object::Number(772)]);
    let list3902 = vm.gc.listn(&[Object::Number(7713), Object::Number(103), Object::Number(772)]);
    let list3903 = vm.gc.listn(&[Object::Number(7714), Object::Number(72), Object::Number(775)]);
    let list3904 = vm.gc.listn(&[Object::Number(7715), Object::Number(104), Object::Number(775)]);
    let list3905 = vm.gc.listn(&[Object::Number(7716), Object::Number(72), Object::Number(803)]);
    let list3906 = vm.gc.listn(&[Object::Number(7717), Object::Number(104), Object::Number(803)]);
    let list3907 = vm.gc.listn(&[Object::Number(7718), Object::Number(72), Object::Number(776)]);
    let list3908 = vm.gc.listn(&[Object::Number(7719), Object::Number(104), Object::Number(776)]);
    let list3909 = vm.gc.listn(&[Object::Number(7720), Object::Number(72), Object::Number(807)]);
    let list3910 = vm.gc.listn(&[Object::Number(7721), Object::Number(104), Object::Number(807)]);
    let list3911 = vm.gc.listn(&[Object::Number(7722), Object::Number(72), Object::Number(814)]);
    let list3912 = vm.gc.listn(&[Object::Number(7723), Object::Number(104), Object::Number(814)]);
    let list3913 = vm.gc.listn(&[Object::Number(7724), Object::Number(73), Object::Number(816)]);
    let list3914 = vm.gc.listn(&[Object::Number(7725), Object::Number(105), Object::Number(816)]);
    let list3915 = vm.gc.listn(&[Object::Number(7726), Object::Number(207), Object::Number(769)]);
    let list3916 = vm.gc.listn(&[Object::Number(7727), Object::Number(239), Object::Number(769)]);
    let list3917 = vm.gc.listn(&[Object::Number(7728), Object::Number(75), Object::Number(769)]);
    let list3918 = vm.gc.listn(&[Object::Number(7729), Object::Number(107), Object::Number(769)]);
    let list3919 = vm.gc.listn(&[Object::Number(7730), Object::Number(75), Object::Number(803)]);
    let list3920 = vm.gc.listn(&[Object::Number(7731), Object::Number(107), Object::Number(803)]);
    let list3921 = vm.gc.listn(&[Object::Number(7732), Object::Number(75), Object::Number(817)]);
    let list3922 = vm.gc.listn(&[Object::Number(7733), Object::Number(107), Object::Number(817)]);
    let list3923 = vm.gc.listn(&[Object::Number(7734), Object::Number(76), Object::Number(803)]);
    let list3924 = vm.gc.listn(&[Object::Number(7735), Object::Number(108), Object::Number(803)]);
    let list3925 = vm.gc.listn(&[Object::Number(7736), Object::Number(7734), Object::Number(772)]);
    let list3926 = vm.gc.listn(&[Object::Number(7737), Object::Number(7735), Object::Number(772)]);
    let list3927 = vm.gc.listn(&[Object::Number(7738), Object::Number(76), Object::Number(817)]);
    let list3928 = vm.gc.listn(&[Object::Number(7739), Object::Number(108), Object::Number(817)]);
    let list3929 = vm.gc.listn(&[Object::Number(7740), Object::Number(76), Object::Number(813)]);
    let list3930 = vm.gc.listn(&[Object::Number(7741), Object::Number(108), Object::Number(813)]);
    let list3931 = vm.gc.listn(&[Object::Number(7742), Object::Number(77), Object::Number(769)]);
    let list3932 = vm.gc.listn(&[Object::Number(7743), Object::Number(109), Object::Number(769)]);
    let list3933 = vm.gc.listn(&[Object::Number(7744), Object::Number(77), Object::Number(775)]);
    let list3934 = vm.gc.listn(&[Object::Number(7745), Object::Number(109), Object::Number(775)]);
    let list3935 = vm.gc.listn(&[Object::Number(7746), Object::Number(77), Object::Number(803)]);
    let list3936 = vm.gc.listn(&[Object::Number(7747), Object::Number(109), Object::Number(803)]);
    let list3937 = vm.gc.listn(&[Object::Number(7748), Object::Number(78), Object::Number(775)]);
    let list3938 = vm.gc.listn(&[Object::Number(7749), Object::Number(110), Object::Number(775)]);
    let list3939 = vm.gc.listn(&[Object::Number(7750), Object::Number(78), Object::Number(803)]);
    let list3940 = vm.gc.listn(&[Object::Number(7751), Object::Number(110), Object::Number(803)]);
    let list3941 = vm.gc.listn(&[Object::Number(7752), Object::Number(78), Object::Number(817)]);
    let list3942 = vm.gc.listn(&[Object::Number(7753), Object::Number(110), Object::Number(817)]);
    let list3943 = vm.gc.listn(&[Object::Number(7754), Object::Number(78), Object::Number(813)]);
    let list3944 = vm.gc.listn(&[Object::Number(7755), Object::Number(110), Object::Number(813)]);
    let list3945 = vm.gc.listn(&[Object::Number(7756), Object::Number(213), Object::Number(769)]);
    let list3946 = vm.gc.listn(&[Object::Number(7757), Object::Number(245), Object::Number(769)]);
    let list3947 = vm.gc.listn(&[Object::Number(7758), Object::Number(213), Object::Number(776)]);
    let list3948 = vm.gc.listn(&[Object::Number(7759), Object::Number(245), Object::Number(776)]);
    let list3949 = vm.gc.listn(&[Object::Number(7760), Object::Number(332), Object::Number(768)]);
    let list3950 = vm.gc.listn(&[Object::Number(7761), Object::Number(333), Object::Number(768)]);
    let list3951 = vm.gc.listn(&[Object::Number(7762), Object::Number(332), Object::Number(769)]);
    let list3952 = vm.gc.listn(&[Object::Number(7763), Object::Number(333), Object::Number(769)]);
    let list3953 = vm.gc.listn(&[Object::Number(7764), Object::Number(80), Object::Number(769)]);
    let list3954 = vm.gc.listn(&[Object::Number(7765), Object::Number(112), Object::Number(769)]);
    let list3955 = vm.gc.listn(&[Object::Number(7766), Object::Number(80), Object::Number(775)]);
    let list3956 = vm.gc.listn(&[Object::Number(7767), Object::Number(112), Object::Number(775)]);
    let list3957 = vm.gc.listn(&[Object::Number(7768), Object::Number(82), Object::Number(775)]);
    let list3958 = vm.gc.listn(&[Object::Number(7769), Object::Number(114), Object::Number(775)]);
    let list3959 = vm.gc.listn(&[Object::Number(7770), Object::Number(82), Object::Number(803)]);
    let list3960 = vm.gc.listn(&[Object::Number(7771), Object::Number(114), Object::Number(803)]);
    let list3961 = vm.gc.listn(&[Object::Number(7772), Object::Number(7770), Object::Number(772)]);
    let list3962 = vm.gc.listn(&[Object::Number(7773), Object::Number(7771), Object::Number(772)]);
    let list3963 = vm.gc.listn(&[Object::Number(7774), Object::Number(82), Object::Number(817)]);
    let list3964 = vm.gc.listn(&[Object::Number(7775), Object::Number(114), Object::Number(817)]);
    let list3965 = vm.gc.listn(&[Object::Number(7776), Object::Number(83), Object::Number(775)]);
    let list3966 = vm.gc.listn(&[Object::Number(7777), Object::Number(115), Object::Number(775)]);
    let list3967 = vm.gc.listn(&[Object::Number(7778), Object::Number(83), Object::Number(803)]);
    let list3968 = vm.gc.listn(&[Object::Number(7779), Object::Number(115), Object::Number(803)]);
    let list3969 = vm.gc.listn(&[Object::Number(7780), Object::Number(346), Object::Number(775)]);
    let list3970 = vm.gc.listn(&[Object::Number(7781), Object::Number(347), Object::Number(775)]);
    let list3971 = vm.gc.listn(&[Object::Number(7782), Object::Number(352), Object::Number(775)]);
    let list3972 = vm.gc.listn(&[Object::Number(7783), Object::Number(353), Object::Number(775)]);
    let list3973 = vm.gc.listn(&[Object::Number(7784), Object::Number(7778), Object::Number(775)]);
    let list3974 = vm.gc.listn(&[Object::Number(7785), Object::Number(7779), Object::Number(775)]);
    let list3975 = vm.gc.listn(&[Object::Number(7786), Object::Number(84), Object::Number(775)]);
    let list3976 = vm.gc.listn(&[Object::Number(7787), Object::Number(116), Object::Number(775)]);
    let list3977 = vm.gc.listn(&[Object::Number(7788), Object::Number(84), Object::Number(803)]);
    let list3978 = vm.gc.listn(&[Object::Number(7789), Object::Number(116), Object::Number(803)]);
    let list3979 = vm.gc.listn(&[Object::Number(7790), Object::Number(84), Object::Number(817)]);
    let list3980 = vm.gc.listn(&[Object::Number(7791), Object::Number(116), Object::Number(817)]);
    let list3981 = vm.gc.listn(&[Object::Number(7792), Object::Number(84), Object::Number(813)]);
    let list3982 = vm.gc.listn(&[Object::Number(7793), Object::Number(116), Object::Number(813)]);
    let list3983 = vm.gc.listn(&[Object::Number(7794), Object::Number(85), Object::Number(804)]);
    let list3984 = vm.gc.listn(&[Object::Number(7795), Object::Number(117), Object::Number(804)]);
    let list3985 = vm.gc.listn(&[Object::Number(7796), Object::Number(85), Object::Number(816)]);
    let list3986 = vm.gc.listn(&[Object::Number(7797), Object::Number(117), Object::Number(816)]);
    let list3987 = vm.gc.listn(&[Object::Number(7798), Object::Number(85), Object::Number(813)]);
    let list3988 = vm.gc.listn(&[Object::Number(7799), Object::Number(117), Object::Number(813)]);
    let list3989 = vm.gc.listn(&[Object::Number(7800), Object::Number(360), Object::Number(769)]);
    let list3990 = vm.gc.listn(&[Object::Number(7801), Object::Number(361), Object::Number(769)]);
    let list3991 = vm.gc.listn(&[Object::Number(7802), Object::Number(362), Object::Number(776)]);
    let list3992 = vm.gc.listn(&[Object::Number(7803), Object::Number(363), Object::Number(776)]);
    let list3993 = vm.gc.listn(&[Object::Number(7804), Object::Number(86), Object::Number(771)]);
    let list3994 = vm.gc.listn(&[Object::Number(7805), Object::Number(118), Object::Number(771)]);
    let list3995 = vm.gc.listn(&[Object::Number(7806), Object::Number(86), Object::Number(803)]);
    let list3996 = vm.gc.listn(&[Object::Number(7807), Object::Number(118), Object::Number(803)]);
    let list3997 = vm.gc.listn(&[Object::Number(7808), Object::Number(87), Object::Number(768)]);
    let list3998 = vm.gc.listn(&[Object::Number(7809), Object::Number(119), Object::Number(768)]);
    let list3999 = vm.gc.listn(&[Object::Number(7810), Object::Number(87), Object::Number(769)]);
    let list4000 = vm.gc.listn(&[Object::Number(7811), Object::Number(119), Object::Number(769)]);
    let list4001 = vm.gc.listn(&[Object::Number(7812), Object::Number(87), Object::Number(776)]);
    let list4002 = vm.gc.listn(&[Object::Number(7813), Object::Number(119), Object::Number(776)]);
    let list4003 = vm.gc.listn(&[Object::Number(7814), Object::Number(87), Object::Number(775)]);
    let list4004 = vm.gc.listn(&[Object::Number(7815), Object::Number(119), Object::Number(775)]);
    let list4005 = vm.gc.listn(&[Object::Number(7816), Object::Number(87), Object::Number(803)]);
    let list4006 = vm.gc.listn(&[Object::Number(7817), Object::Number(119), Object::Number(803)]);
    let list4007 = vm.gc.listn(&[Object::Number(7818), Object::Number(88), Object::Number(775)]);
    let list4008 = vm.gc.listn(&[Object::Number(7819), Object::Number(120), Object::Number(775)]);
    let list4009 = vm.gc.listn(&[Object::Number(7820), Object::Number(88), Object::Number(776)]);
    let list4010 = vm.gc.listn(&[Object::Number(7821), Object::Number(120), Object::Number(776)]);
    let list4011 = vm.gc.listn(&[Object::Number(7822), Object::Number(89), Object::Number(775)]);
    let list4012 = vm.gc.listn(&[Object::Number(7823), Object::Number(121), Object::Number(775)]);
    let list4013 = vm.gc.listn(&[Object::Number(7824), Object::Number(90), Object::Number(770)]);
    let list4014 = vm.gc.listn(&[Object::Number(7825), Object::Number(122), Object::Number(770)]);
    let list4015 = vm.gc.listn(&[Object::Number(7826), Object::Number(90), Object::Number(803)]);
    let list4016 = vm.gc.listn(&[Object::Number(7827), Object::Number(122), Object::Number(803)]);
    let list4017 = vm.gc.listn(&[Object::Number(7828), Object::Number(90), Object::Number(817)]);
    let list4018 = vm.gc.listn(&[Object::Number(7829), Object::Number(122), Object::Number(817)]);
    let list4019 = vm.gc.listn(&[Object::Number(7830), Object::Number(104), Object::Number(817)]);
    let list4020 = vm.gc.listn(&[Object::Number(7831), Object::Number(116), Object::Number(776)]);
    let list4021 = vm.gc.listn(&[Object::Number(7832), Object::Number(119), Object::Number(778)]);
    let list4022 = vm.gc.listn(&[Object::Number(7833), Object::Number(121), Object::Number(778)]);
    let list4023 = vm.gc.listn(&[Object::Number(7835), Object::Number(383), Object::Number(775)]);
    let list4024 = vm.gc.listn(&[Object::Number(7840), Object::Number(65), Object::Number(803)]);
    let list4025 = vm.gc.listn(&[Object::Number(7841), Object::Number(97), Object::Number(803)]);
    let list4026 = vm.gc.listn(&[Object::Number(7842), Object::Number(65), Object::Number(777)]);
    let list4027 = vm.gc.listn(&[Object::Number(7843), Object::Number(97), Object::Number(777)]);
    let list4028 = vm.gc.listn(&[Object::Number(7844), Object::Number(194), Object::Number(769)]);
    let list4029 = vm.gc.listn(&[Object::Number(7845), Object::Number(226), Object::Number(769)]);
    let list4030 = vm.gc.listn(&[Object::Number(7846), Object::Number(194), Object::Number(768)]);
    let list4031 = vm.gc.listn(&[Object::Number(7847), Object::Number(226), Object::Number(768)]);
    let list4032 = vm.gc.listn(&[Object::Number(7848), Object::Number(194), Object::Number(777)]);
    let list4033 = vm.gc.listn(&[Object::Number(7849), Object::Number(226), Object::Number(777)]);
    let list4034 = vm.gc.listn(&[Object::Number(7850), Object::Number(194), Object::Number(771)]);
    let list4035 = vm.gc.listn(&[Object::Number(7851), Object::Number(226), Object::Number(771)]);
    let list4036 = vm.gc.listn(&[Object::Number(7852), Object::Number(7840), Object::Number(770)]);
    let list4037 = vm.gc.listn(&[Object::Number(7853), Object::Number(7841), Object::Number(770)]);
    let list4038 = vm.gc.listn(&[Object::Number(7854), Object::Number(258), Object::Number(769)]);
    let list4039 = vm.gc.listn(&[Object::Number(7855), Object::Number(259), Object::Number(769)]);
    let list4040 = vm.gc.listn(&[Object::Number(7856), Object::Number(258), Object::Number(768)]);
    let list4041 = vm.gc.listn(&[Object::Number(7857), Object::Number(259), Object::Number(768)]);
    let list4042 = vm.gc.listn(&[Object::Number(7858), Object::Number(258), Object::Number(777)]);
    let list4043 = vm.gc.listn(&[Object::Number(7859), Object::Number(259), Object::Number(777)]);
    let list4044 = vm.gc.listn(&[Object::Number(7860), Object::Number(258), Object::Number(771)]);
    let list4045 = vm.gc.listn(&[Object::Number(7861), Object::Number(259), Object::Number(771)]);
    let list4046 = vm.gc.listn(&[Object::Number(7862), Object::Number(7840), Object::Number(774)]);
    let list4047 = vm.gc.listn(&[Object::Number(7863), Object::Number(7841), Object::Number(774)]);
    let list4048 = vm.gc.listn(&[Object::Number(7864), Object::Number(69), Object::Number(803)]);
    let list4049 = vm.gc.listn(&[Object::Number(7865), Object::Number(101), Object::Number(803)]);
    let list4050 = vm.gc.listn(&[Object::Number(7866), Object::Number(69), Object::Number(777)]);
    let list4051 = vm.gc.listn(&[Object::Number(7867), Object::Number(101), Object::Number(777)]);
    let list4052 = vm.gc.listn(&[Object::Number(7868), Object::Number(69), Object::Number(771)]);
    let list4053 = vm.gc.listn(&[Object::Number(7869), Object::Number(101), Object::Number(771)]);
    let list4054 = vm.gc.listn(&[Object::Number(7870), Object::Number(202), Object::Number(769)]);
    let list4055 = vm.gc.listn(&[Object::Number(7871), Object::Number(234), Object::Number(769)]);
    let list4056 = vm.gc.listn(&[Object::Number(7872), Object::Number(202), Object::Number(768)]);
    let list4057 = vm.gc.listn(&[Object::Number(7873), Object::Number(234), Object::Number(768)]);
    let list4058 = vm.gc.listn(&[Object::Number(7874), Object::Number(202), Object::Number(777)]);
    let list4059 = vm.gc.listn(&[Object::Number(7875), Object::Number(234), Object::Number(777)]);
    let list4060 = vm.gc.listn(&[Object::Number(7876), Object::Number(202), Object::Number(771)]);
    let list4061 = vm.gc.listn(&[Object::Number(7877), Object::Number(234), Object::Number(771)]);
    let list4062 = vm.gc.listn(&[Object::Number(7878), Object::Number(7864), Object::Number(770)]);
    let list4063 = vm.gc.listn(&[Object::Number(7879), Object::Number(7865), Object::Number(770)]);
    let list4064 = vm.gc.listn(&[Object::Number(7880), Object::Number(73), Object::Number(777)]);
    let list4065 = vm.gc.listn(&[Object::Number(7881), Object::Number(105), Object::Number(777)]);
    let list4066 = vm.gc.listn(&[Object::Number(7882), Object::Number(73), Object::Number(803)]);
    let list4067 = vm.gc.listn(&[Object::Number(7883), Object::Number(105), Object::Number(803)]);
    let list4068 = vm.gc.listn(&[Object::Number(7884), Object::Number(79), Object::Number(803)]);
    let list4069 = vm.gc.listn(&[Object::Number(7885), Object::Number(111), Object::Number(803)]);
    let list4070 = vm.gc.listn(&[Object::Number(7886), Object::Number(79), Object::Number(777)]);
    let list4071 = vm.gc.listn(&[Object::Number(7887), Object::Number(111), Object::Number(777)]);
    let list4072 = vm.gc.listn(&[Object::Number(7888), Object::Number(212), Object::Number(769)]);
    let list4073 = vm.gc.listn(&[Object::Number(7889), Object::Number(244), Object::Number(769)]);
    let list4074 = vm.gc.listn(&[Object::Number(7890), Object::Number(212), Object::Number(768)]);
    let list4075 = vm.gc.listn(&[Object::Number(7891), Object::Number(244), Object::Number(768)]);
    let list4076 = vm.gc.listn(&[Object::Number(7892), Object::Number(212), Object::Number(777)]);
    let list4077 = vm.gc.listn(&[Object::Number(7893), Object::Number(244), Object::Number(777)]);
    let list4078 = vm.gc.listn(&[Object::Number(7894), Object::Number(212), Object::Number(771)]);
    let list4079 = vm.gc.listn(&[Object::Number(7895), Object::Number(244), Object::Number(771)]);
    let list4080 = vm.gc.listn(&[Object::Number(7896), Object::Number(7884), Object::Number(770)]);
    let list4081 = vm.gc.listn(&[Object::Number(7897), Object::Number(7885), Object::Number(770)]);
    let list4082 = vm.gc.listn(&[Object::Number(7898), Object::Number(416), Object::Number(769)]);
    let list4083 = vm.gc.listn(&[Object::Number(7899), Object::Number(417), Object::Number(769)]);
    let list4084 = vm.gc.listn(&[Object::Number(7900), Object::Number(416), Object::Number(768)]);
    let list4085 = vm.gc.listn(&[Object::Number(7901), Object::Number(417), Object::Number(768)]);
    let list4086 = vm.gc.listn(&[Object::Number(7902), Object::Number(416), Object::Number(777)]);
    let list4087 = vm.gc.listn(&[Object::Number(7903), Object::Number(417), Object::Number(777)]);
    let list4088 = vm.gc.listn(&[Object::Number(7904), Object::Number(416), Object::Number(771)]);
    let list4089 = vm.gc.listn(&[Object::Number(7905), Object::Number(417), Object::Number(771)]);
    let list4090 = vm.gc.listn(&[Object::Number(7906), Object::Number(416), Object::Number(803)]);
    let list4091 = vm.gc.listn(&[Object::Number(7907), Object::Number(417), Object::Number(803)]);
    let list4092 = vm.gc.listn(&[Object::Number(7908), Object::Number(85), Object::Number(803)]);
    let list4093 = vm.gc.listn(&[Object::Number(7909), Object::Number(117), Object::Number(803)]);
    let list4094 = vm.gc.listn(&[Object::Number(7910), Object::Number(85), Object::Number(777)]);
    let list4095 = vm.gc.listn(&[Object::Number(7911), Object::Number(117), Object::Number(777)]);
    let list4096 = vm.gc.listn(&[Object::Number(7912), Object::Number(431), Object::Number(769)]);
    let list4097 = vm.gc.listn(&[Object::Number(7913), Object::Number(432), Object::Number(769)]);
    let list4098 = vm.gc.listn(&[Object::Number(7914), Object::Number(431), Object::Number(768)]);
    let list4099 = vm.gc.listn(&[Object::Number(7915), Object::Number(432), Object::Number(768)]);
    let list4100 = vm.gc.listn(&[Object::Number(7916), Object::Number(431), Object::Number(777)]);
    let list4101 = vm.gc.listn(&[Object::Number(7917), Object::Number(432), Object::Number(777)]);
    let list4102 = vm.gc.listn(&[Object::Number(7918), Object::Number(431), Object::Number(771)]);
    let list4103 = vm.gc.listn(&[Object::Number(7919), Object::Number(432), Object::Number(771)]);
    let list4104 = vm.gc.listn(&[Object::Number(7920), Object::Number(431), Object::Number(803)]);
    let list4105 = vm.gc.listn(&[Object::Number(7921), Object::Number(432), Object::Number(803)]);
    let list4106 = vm.gc.listn(&[Object::Number(7922), Object::Number(89), Object::Number(768)]);
    let list4107 = vm.gc.listn(&[Object::Number(7923), Object::Number(121), Object::Number(768)]);
    let list4108 = vm.gc.listn(&[Object::Number(7924), Object::Number(89), Object::Number(803)]);
    let list4109 = vm.gc.listn(&[Object::Number(7925), Object::Number(121), Object::Number(803)]);
    let list4110 = vm.gc.listn(&[Object::Number(7926), Object::Number(89), Object::Number(777)]);
    let list4111 = vm.gc.listn(&[Object::Number(7927), Object::Number(121), Object::Number(777)]);
    let list4112 = vm.gc.listn(&[Object::Number(7928), Object::Number(89), Object::Number(771)]);
    let list4113 = vm.gc.listn(&[Object::Number(7929), Object::Number(121), Object::Number(771)]);
    let list4114 = vm.gc.listn(&[Object::Number(7936), Object::Number(945), Object::Number(787)]);
    let list4115 = vm.gc.listn(&[Object::Number(7937), Object::Number(945), Object::Number(788)]);
    let list4116 = vm.gc.listn(&[Object::Number(7938), Object::Number(7936), Object::Number(768)]);
    let list4117 = vm.gc.listn(&[Object::Number(7939), Object::Number(7937), Object::Number(768)]);
    let list4118 = vm.gc.listn(&[Object::Number(7940), Object::Number(7936), Object::Number(769)]);
    let list4119 = vm.gc.listn(&[Object::Number(7941), Object::Number(7937), Object::Number(769)]);
    let list4120 = vm.gc.listn(&[Object::Number(7942), Object::Number(7936), Object::Number(834)]);
    let list4121 = vm.gc.listn(&[Object::Number(7943), Object::Number(7937), Object::Number(834)]);
    let list4122 = vm.gc.listn(&[Object::Number(7944), Object::Number(913), Object::Number(787)]);
    let list4123 = vm.gc.listn(&[Object::Number(7945), Object::Number(913), Object::Number(788)]);
    let list4124 = vm.gc.listn(&[Object::Number(7946), Object::Number(7944), Object::Number(768)]);
    let list4125 = vm.gc.listn(&[Object::Number(7947), Object::Number(7945), Object::Number(768)]);
    let list4126 = vm.gc.listn(&[Object::Number(7948), Object::Number(7944), Object::Number(769)]);
    let list4127 = vm.gc.listn(&[Object::Number(7949), Object::Number(7945), Object::Number(769)]);
    let list4128 = vm.gc.listn(&[Object::Number(7950), Object::Number(7944), Object::Number(834)]);
    let list4129 = vm.gc.listn(&[Object::Number(7951), Object::Number(7945), Object::Number(834)]);
    let list4130 = vm.gc.listn(&[Object::Number(7952), Object::Number(949), Object::Number(787)]);
    let list4131 = vm.gc.listn(&[Object::Number(7953), Object::Number(949), Object::Number(788)]);
    let list4132 = vm.gc.listn(&[Object::Number(7954), Object::Number(7952), Object::Number(768)]);
    let list4133 = vm.gc.listn(&[Object::Number(7955), Object::Number(7953), Object::Number(768)]);
    let list4134 = vm.gc.listn(&[Object::Number(7956), Object::Number(7952), Object::Number(769)]);
    let list4135 = vm.gc.listn(&[Object::Number(7957), Object::Number(7953), Object::Number(769)]);
    let list4136 = vm.gc.listn(&[Object::Number(7960), Object::Number(917), Object::Number(787)]);
    let list4137 = vm.gc.listn(&[Object::Number(7961), Object::Number(917), Object::Number(788)]);
    let list4138 = vm.gc.listn(&[Object::Number(7962), Object::Number(7960), Object::Number(768)]);
    let list4139 = vm.gc.listn(&[Object::Number(7963), Object::Number(7961), Object::Number(768)]);
    let list4140 = vm.gc.listn(&[Object::Number(7964), Object::Number(7960), Object::Number(769)]);
    let list4141 = vm.gc.listn(&[Object::Number(7965), Object::Number(7961), Object::Number(769)]);
    let list4142 = vm.gc.listn(&[Object::Number(7968), Object::Number(951), Object::Number(787)]);
    let list4143 = vm.gc.listn(&[Object::Number(7969), Object::Number(951), Object::Number(788)]);
    let list4144 = vm.gc.listn(&[Object::Number(7970), Object::Number(7968), Object::Number(768)]);
    let list4145 = vm.gc.listn(&[Object::Number(7971), Object::Number(7969), Object::Number(768)]);
    let list4146 = vm.gc.listn(&[Object::Number(7972), Object::Number(7968), Object::Number(769)]);
    let list4147 = vm.gc.listn(&[Object::Number(7973), Object::Number(7969), Object::Number(769)]);
    let list4148 = vm.gc.listn(&[Object::Number(7974), Object::Number(7968), Object::Number(834)]);
    let list4149 = vm.gc.listn(&[Object::Number(7975), Object::Number(7969), Object::Number(834)]);
    let list4150 = vm.gc.listn(&[Object::Number(7976), Object::Number(919), Object::Number(787)]);
    let list4151 = vm.gc.listn(&[Object::Number(7977), Object::Number(919), Object::Number(788)]);
    let list4152 = vm.gc.listn(&[Object::Number(7978), Object::Number(7976), Object::Number(768)]);
    let list4153 = vm.gc.listn(&[Object::Number(7979), Object::Number(7977), Object::Number(768)]);
    let list4154 = vm.gc.listn(&[Object::Number(7980), Object::Number(7976), Object::Number(769)]);
    let list4155 = vm.gc.listn(&[Object::Number(7981), Object::Number(7977), Object::Number(769)]);
    let list4156 = vm.gc.listn(&[Object::Number(7982), Object::Number(7976), Object::Number(834)]);
    let list4157 = vm.gc.listn(&[Object::Number(7983), Object::Number(7977), Object::Number(834)]);
    let list4158 = vm.gc.listn(&[Object::Number(7984), Object::Number(953), Object::Number(787)]);
    let list4159 = vm.gc.listn(&[Object::Number(7985), Object::Number(953), Object::Number(788)]);
    let list4160 = vm.gc.listn(&[Object::Number(7986), Object::Number(7984), Object::Number(768)]);
    let list4161 = vm.gc.listn(&[Object::Number(7987), Object::Number(7985), Object::Number(768)]);
    let list4162 = vm.gc.listn(&[Object::Number(7988), Object::Number(7984), Object::Number(769)]);
    let list4163 = vm.gc.listn(&[Object::Number(7989), Object::Number(7985), Object::Number(769)]);
    let list4164 = vm.gc.listn(&[Object::Number(7990), Object::Number(7984), Object::Number(834)]);
    let list4165 = vm.gc.listn(&[Object::Number(7991), Object::Number(7985), Object::Number(834)]);
    let list4166 = vm.gc.listn(&[Object::Number(7992), Object::Number(921), Object::Number(787)]);
    let list4167 = vm.gc.listn(&[Object::Number(7993), Object::Number(921), Object::Number(788)]);
    let list4168 = vm.gc.listn(&[Object::Number(7994), Object::Number(7992), Object::Number(768)]);
    let list4169 = vm.gc.listn(&[Object::Number(7995), Object::Number(7993), Object::Number(768)]);
    let list4170 = vm.gc.listn(&[Object::Number(7996), Object::Number(7992), Object::Number(769)]);
    let list4171 = vm.gc.listn(&[Object::Number(7997), Object::Number(7993), Object::Number(769)]);
    let list4172 = vm.gc.listn(&[Object::Number(7998), Object::Number(7992), Object::Number(834)]);
    let list4173 = vm.gc.listn(&[Object::Number(7999), Object::Number(7993), Object::Number(834)]);
    let list4174 = vm.gc.listn(&[Object::Number(8000), Object::Number(959), Object::Number(787)]);
    let list4175 = vm.gc.listn(&[Object::Number(8001), Object::Number(959), Object::Number(788)]);
    let list4176 = vm.gc.listn(&[Object::Number(8002), Object::Number(8000), Object::Number(768)]);
    let list4177 = vm.gc.listn(&[Object::Number(8003), Object::Number(8001), Object::Number(768)]);
    let list4178 = vm.gc.listn(&[Object::Number(8004), Object::Number(8000), Object::Number(769)]);
    let list4179 = vm.gc.listn(&[Object::Number(8005), Object::Number(8001), Object::Number(769)]);
    let list4180 = vm.gc.listn(&[Object::Number(8008), Object::Number(927), Object::Number(787)]);
    let list4181 = vm.gc.listn(&[Object::Number(8009), Object::Number(927), Object::Number(788)]);
    let list4182 = vm.gc.listn(&[Object::Number(8010), Object::Number(8008), Object::Number(768)]);
    let list4183 = vm.gc.listn(&[Object::Number(8011), Object::Number(8009), Object::Number(768)]);
    let list4184 = vm.gc.listn(&[Object::Number(8012), Object::Number(8008), Object::Number(769)]);
    let list4185 = vm.gc.listn(&[Object::Number(8013), Object::Number(8009), Object::Number(769)]);
    let list4186 = vm.gc.listn(&[Object::Number(8016), Object::Number(965), Object::Number(787)]);
    let list4187 = vm.gc.listn(&[Object::Number(8017), Object::Number(965), Object::Number(788)]);
    let list4188 = vm.gc.listn(&[Object::Number(8018), Object::Number(8016), Object::Number(768)]);
    let list4189 = vm.gc.listn(&[Object::Number(8019), Object::Number(8017), Object::Number(768)]);
    let list4190 = vm.gc.listn(&[Object::Number(8020), Object::Number(8016), Object::Number(769)]);
    let list4191 = vm.gc.listn(&[Object::Number(8021), Object::Number(8017), Object::Number(769)]);
    let list4192 = vm.gc.listn(&[Object::Number(8022), Object::Number(8016), Object::Number(834)]);
    let list4193 = vm.gc.listn(&[Object::Number(8023), Object::Number(8017), Object::Number(834)]);
    let list4194 = vm.gc.listn(&[Object::Number(8025), Object::Number(933), Object::Number(788)]);
    let list4195 = vm.gc.listn(&[Object::Number(8027), Object::Number(8025), Object::Number(768)]);
    let list4196 = vm.gc.listn(&[Object::Number(8029), Object::Number(8025), Object::Number(769)]);
    let list4197 = vm.gc.listn(&[Object::Number(8031), Object::Number(8025), Object::Number(834)]);
    let list4198 = vm.gc.listn(&[Object::Number(8032), Object::Number(969), Object::Number(787)]);
    let list4199 = vm.gc.listn(&[Object::Number(8033), Object::Number(969), Object::Number(788)]);
    let list4200 = vm.gc.listn(&[Object::Number(8034), Object::Number(8032), Object::Number(768)]);
    let list4201 = vm.gc.listn(&[Object::Number(8035), Object::Number(8033), Object::Number(768)]);
    let list4202 = vm.gc.listn(&[Object::Number(8036), Object::Number(8032), Object::Number(769)]);
    let list4203 = vm.gc.listn(&[Object::Number(8037), Object::Number(8033), Object::Number(769)]);
    let list4204 = vm.gc.listn(&[Object::Number(8038), Object::Number(8032), Object::Number(834)]);
    let list4205 = vm.gc.listn(&[Object::Number(8039), Object::Number(8033), Object::Number(834)]);
    let list4206 = vm.gc.listn(&[Object::Number(8040), Object::Number(937), Object::Number(787)]);
    let list4207 = vm.gc.listn(&[Object::Number(8041), Object::Number(937), Object::Number(788)]);
    let list4208 = vm.gc.listn(&[Object::Number(8042), Object::Number(8040), Object::Number(768)]);
    let list4209 = vm.gc.listn(&[Object::Number(8043), Object::Number(8041), Object::Number(768)]);
    let list4210 = vm.gc.listn(&[Object::Number(8044), Object::Number(8040), Object::Number(769)]);
    let list4211 = vm.gc.listn(&[Object::Number(8045), Object::Number(8041), Object::Number(769)]);
    let list4212 = vm.gc.listn(&[Object::Number(8046), Object::Number(8040), Object::Number(834)]);
    let list4213 = vm.gc.listn(&[Object::Number(8047), Object::Number(8041), Object::Number(834)]);
    let list4214 = vm.gc.listn(&[Object::Number(8048), Object::Number(945), Object::Number(768)]);
    let list4215 = vm.gc.listn(&[Object::Number(8049), Object::Number(940)]);
    let list4216 = vm.gc.listn(&[Object::Number(8050), Object::Number(949), Object::Number(768)]);
    let list4217 = vm.gc.listn(&[Object::Number(8051), Object::Number(941)]);
    let list4218 = vm.gc.listn(&[Object::Number(8052), Object::Number(951), Object::Number(768)]);
    let list4219 = vm.gc.listn(&[Object::Number(8053), Object::Number(942)]);
    let list4220 = vm.gc.listn(&[Object::Number(8054), Object::Number(953), Object::Number(768)]);
    let list4221 = vm.gc.listn(&[Object::Number(8055), Object::Number(943)]);
    let list4222 = vm.gc.listn(&[Object::Number(8056), Object::Number(959), Object::Number(768)]);
    let list4223 = vm.gc.listn(&[Object::Number(8057), Object::Number(972)]);
    let list4224 = vm.gc.listn(&[Object::Number(8058), Object::Number(965), Object::Number(768)]);
    let list4225 = vm.gc.listn(&[Object::Number(8059), Object::Number(973)]);
    let list4226 = vm.gc.listn(&[Object::Number(8060), Object::Number(969), Object::Number(768)]);
    let list4227 = vm.gc.listn(&[Object::Number(8061), Object::Number(974)]);
    let list4228 = vm.gc.listn(&[Object::Number(8064), Object::Number(7936), Object::Number(837)]);
    let list4229 = vm.gc.listn(&[Object::Number(8065), Object::Number(7937), Object::Number(837)]);
    let list4230 = vm.gc.listn(&[Object::Number(8066), Object::Number(7938), Object::Number(837)]);
    let list4231 = vm.gc.listn(&[Object::Number(8067), Object::Number(7939), Object::Number(837)]);
    let list4232 = vm.gc.listn(&[Object::Number(8068), Object::Number(7940), Object::Number(837)]);
    let list4233 = vm.gc.listn(&[Object::Number(8069), Object::Number(7941), Object::Number(837)]);
    let list4234 = vm.gc.listn(&[Object::Number(8070), Object::Number(7942), Object::Number(837)]);
    let list4235 = vm.gc.listn(&[Object::Number(8071), Object::Number(7943), Object::Number(837)]);
    let list4236 = vm.gc.listn(&[Object::Number(8072), Object::Number(7944), Object::Number(837)]);
    let list4237 = vm.gc.listn(&[Object::Number(8073), Object::Number(7945), Object::Number(837)]);
    let list4238 = vm.gc.listn(&[Object::Number(8074), Object::Number(7946), Object::Number(837)]);
    let list4239 = vm.gc.listn(&[Object::Number(8075), Object::Number(7947), Object::Number(837)]);
    let list4240 = vm.gc.listn(&[Object::Number(8076), Object::Number(7948), Object::Number(837)]);
    let list4241 = vm.gc.listn(&[Object::Number(8077), Object::Number(7949), Object::Number(837)]);
    let list4242 = vm.gc.listn(&[Object::Number(8078), Object::Number(7950), Object::Number(837)]);
    let list4243 = vm.gc.listn(&[Object::Number(8079), Object::Number(7951), Object::Number(837)]);
    let list4244 = vm.gc.listn(&[Object::Number(8080), Object::Number(7968), Object::Number(837)]);
    let list4245 = vm.gc.listn(&[Object::Number(8081), Object::Number(7969), Object::Number(837)]);
    let list4246 = vm.gc.listn(&[Object::Number(8082), Object::Number(7970), Object::Number(837)]);
    let list4247 = vm.gc.listn(&[Object::Number(8083), Object::Number(7971), Object::Number(837)]);
    let list4248 = vm.gc.listn(&[Object::Number(8084), Object::Number(7972), Object::Number(837)]);
    let list4249 = vm.gc.listn(&[Object::Number(8085), Object::Number(7973), Object::Number(837)]);
    let list4250 = vm.gc.listn(&[Object::Number(8086), Object::Number(7974), Object::Number(837)]);
    let list4251 = vm.gc.listn(&[Object::Number(8087), Object::Number(7975), Object::Number(837)]);
    let list4252 = vm.gc.listn(&[Object::Number(8088), Object::Number(7976), Object::Number(837)]);
    let list4253 = vm.gc.listn(&[Object::Number(8089), Object::Number(7977), Object::Number(837)]);
    let list4254 = vm.gc.listn(&[Object::Number(8090), Object::Number(7978), Object::Number(837)]);
    let list4255 = vm.gc.listn(&[Object::Number(8091), Object::Number(7979), Object::Number(837)]);
    let list4256 = vm.gc.listn(&[Object::Number(8092), Object::Number(7980), Object::Number(837)]);
    let list4257 = vm.gc.listn(&[Object::Number(8093), Object::Number(7981), Object::Number(837)]);
    let list4258 = vm.gc.listn(&[Object::Number(8094), Object::Number(7982), Object::Number(837)]);
    let list4259 = vm.gc.listn(&[Object::Number(8095), Object::Number(7983), Object::Number(837)]);
    let list4260 = vm.gc.listn(&[Object::Number(8096), Object::Number(8032), Object::Number(837)]);
    let list4261 = vm.gc.listn(&[Object::Number(8097), Object::Number(8033), Object::Number(837)]);
    let list4262 = vm.gc.listn(&[Object::Number(8098), Object::Number(8034), Object::Number(837)]);
    let list4263 = vm.gc.listn(&[Object::Number(8099), Object::Number(8035), Object::Number(837)]);
    let list4264 = vm.gc.listn(&[Object::Number(8100), Object::Number(8036), Object::Number(837)]);
    let list4265 = vm.gc.listn(&[Object::Number(8101), Object::Number(8037), Object::Number(837)]);
    let list4266 = vm.gc.listn(&[Object::Number(8102), Object::Number(8038), Object::Number(837)]);
    let list4267 = vm.gc.listn(&[Object::Number(8103), Object::Number(8039), Object::Number(837)]);
    let list4268 = vm.gc.listn(&[Object::Number(8104), Object::Number(8040), Object::Number(837)]);
    let list4269 = vm.gc.listn(&[Object::Number(8105), Object::Number(8041), Object::Number(837)]);
    let list4270 = vm.gc.listn(&[Object::Number(8106), Object::Number(8042), Object::Number(837)]);
    let list4271 = vm.gc.listn(&[Object::Number(8107), Object::Number(8043), Object::Number(837)]);
    let list4272 = vm.gc.listn(&[Object::Number(8108), Object::Number(8044), Object::Number(837)]);
    let list4273 = vm.gc.listn(&[Object::Number(8109), Object::Number(8045), Object::Number(837)]);
    let list4274 = vm.gc.listn(&[Object::Number(8110), Object::Number(8046), Object::Number(837)]);
    let list4275 = vm.gc.listn(&[Object::Number(8111), Object::Number(8047), Object::Number(837)]);
    let list4276 = vm.gc.listn(&[Object::Number(8112), Object::Number(945), Object::Number(774)]);
    let list4277 = vm.gc.listn(&[Object::Number(8113), Object::Number(945), Object::Number(772)]);
    let list4278 = vm.gc.listn(&[Object::Number(8114), Object::Number(8048), Object::Number(837)]);
    let list4279 = vm.gc.listn(&[Object::Number(8115), Object::Number(945), Object::Number(837)]);
    let list4280 = vm.gc.listn(&[Object::Number(8116), Object::Number(940), Object::Number(837)]);
    let list4281 = vm.gc.listn(&[Object::Number(8118), Object::Number(945), Object::Number(834)]);
    let list4282 = vm.gc.listn(&[Object::Number(8119), Object::Number(8118), Object::Number(837)]);
    let list4283 = vm.gc.listn(&[Object::Number(8120), Object::Number(913), Object::Number(774)]);
    let list4284 = vm.gc.listn(&[Object::Number(8121), Object::Number(913), Object::Number(772)]);
    let list4285 = vm.gc.listn(&[Object::Number(8122), Object::Number(913), Object::Number(768)]);
    let list4286 = vm.gc.listn(&[Object::Number(8123), Object::Number(902)]);
    let list4287 = vm.gc.listn(&[Object::Number(8124), Object::Number(913), Object::Number(837)]);
    let list4288 = vm.gc.listn(&[Object::Number(8126), Object::Number(953)]);
    let list4289 = vm.gc.listn(&[Object::Number(8129), Object::Number(168), Object::Number(834)]);
    let list4290 = vm.gc.listn(&[Object::Number(8130), Object::Number(8052), Object::Number(837)]);
    let list4291 = vm.gc.listn(&[Object::Number(8131), Object::Number(951), Object::Number(837)]);
    let list4292 = vm.gc.listn(&[Object::Number(8132), Object::Number(942), Object::Number(837)]);
    let list4293 = vm.gc.listn(&[Object::Number(8134), Object::Number(951), Object::Number(834)]);
    let list4294 = vm.gc.listn(&[Object::Number(8135), Object::Number(8134), Object::Number(837)]);
    let list4295 = vm.gc.listn(&[Object::Number(8136), Object::Number(917), Object::Number(768)]);
    let list4296 = vm.gc.listn(&[Object::Number(8137), Object::Number(904)]);
    let list4297 = vm.gc.listn(&[Object::Number(8138), Object::Number(919), Object::Number(768)]);
    let list4298 = vm.gc.listn(&[Object::Number(8139), Object::Number(905)]);
    let list4299 = vm.gc.listn(&[Object::Number(8140), Object::Number(919), Object::Number(837)]);
    let list4300 = vm.gc.listn(&[Object::Number(8141), Object::Number(8127), Object::Number(768)]);
    let list4301 = vm.gc.listn(&[Object::Number(8142), Object::Number(8127), Object::Number(769)]);
    let list4302 = vm.gc.listn(&[Object::Number(8143), Object::Number(8127), Object::Number(834)]);
    let list4303 = vm.gc.listn(&[Object::Number(8144), Object::Number(953), Object::Number(774)]);
    let list4304 = vm.gc.listn(&[Object::Number(8145), Object::Number(953), Object::Number(772)]);
    let list4305 = vm.gc.listn(&[Object::Number(8146), Object::Number(970), Object::Number(768)]);
    let list4306 = vm.gc.listn(&[Object::Number(8147), Object::Number(912)]);
    let list4307 = vm.gc.listn(&[Object::Number(8150), Object::Number(953), Object::Number(834)]);
    let list4308 = vm.gc.listn(&[Object::Number(8151), Object::Number(970), Object::Number(834)]);
    let list4309 = vm.gc.listn(&[Object::Number(8152), Object::Number(921), Object::Number(774)]);
    let list4310 = vm.gc.listn(&[Object::Number(8153), Object::Number(921), Object::Number(772)]);
    let list4311 = vm.gc.listn(&[Object::Number(8154), Object::Number(921), Object::Number(768)]);
    let list4312 = vm.gc.listn(&[Object::Number(8155), Object::Number(906)]);
    let list4313 = vm.gc.listn(&[Object::Number(8157), Object::Number(8190), Object::Number(768)]);
    let list4314 = vm.gc.listn(&[Object::Number(8158), Object::Number(8190), Object::Number(769)]);
    let list4315 = vm.gc.listn(&[Object::Number(8159), Object::Number(8190), Object::Number(834)]);
    let list4316 = vm.gc.listn(&[Object::Number(8160), Object::Number(965), Object::Number(774)]);
    let list4317 = vm.gc.listn(&[Object::Number(8161), Object::Number(965), Object::Number(772)]);
    let list4318 = vm.gc.listn(&[Object::Number(8162), Object::Number(971), Object::Number(768)]);
    let list4319 = vm.gc.listn(&[Object::Number(8163), Object::Number(944)]);
    let list4320 = vm.gc.listn(&[Object::Number(8164), Object::Number(961), Object::Number(787)]);
    let list4321 = vm.gc.listn(&[Object::Number(8165), Object::Number(961), Object::Number(788)]);
    let list4322 = vm.gc.listn(&[Object::Number(8166), Object::Number(965), Object::Number(834)]);
    let list4323 = vm.gc.listn(&[Object::Number(8167), Object::Number(971), Object::Number(834)]);
    let list4324 = vm.gc.listn(&[Object::Number(8168), Object::Number(933), Object::Number(774)]);
    let list4325 = vm.gc.listn(&[Object::Number(8169), Object::Number(933), Object::Number(772)]);
    let list4326 = vm.gc.listn(&[Object::Number(8170), Object::Number(933), Object::Number(768)]);
    let list4327 = vm.gc.listn(&[Object::Number(8171), Object::Number(910)]);
    let list4328 = vm.gc.listn(&[Object::Number(8172), Object::Number(929), Object::Number(788)]);
    let list4329 = vm.gc.listn(&[Object::Number(8173), Object::Number(168), Object::Number(768)]);
    let list4330 = vm.gc.listn(&[Object::Number(8174), Object::Number(901)]);
    let list4331 = vm.gc.listn(&[Object::Number(8175), Object::Number(96)]);
    let list4332 = vm.gc.listn(&[Object::Number(8178), Object::Number(8060), Object::Number(837)]);
    let list4333 = vm.gc.listn(&[Object::Number(8179), Object::Number(969), Object::Number(837)]);
    let list4334 = vm.gc.listn(&[Object::Number(8180), Object::Number(974), Object::Number(837)]);
    let list4335 = vm.gc.listn(&[Object::Number(8182), Object::Number(969), Object::Number(834)]);
    let list4336 = vm.gc.listn(&[Object::Number(8183), Object::Number(8182), Object::Number(837)]);
    let list4337 = vm.gc.listn(&[Object::Number(8184), Object::Number(927), Object::Number(768)]);
    let list4338 = vm.gc.listn(&[Object::Number(8185), Object::Number(908)]);
    let list4339 = vm.gc.listn(&[Object::Number(8186), Object::Number(937), Object::Number(768)]);
    let list4340 = vm.gc.listn(&[Object::Number(8187), Object::Number(911)]);
    let list4341 = vm.gc.listn(&[Object::Number(8188), Object::Number(937), Object::Number(837)]);
    let list4342 = vm.gc.listn(&[Object::Number(8189), Object::Number(180)]);
    let list4343 = vm.gc.listn(&[Object::Number(8192), Object::Number(8194)]);
    let list4344 = vm.gc.listn(&[Object::Number(8193), Object::Number(8195)]);
    let list4345 = vm.gc.listn(&[Object::Number(8486), Object::Number(937)]);
    let list4346 = vm.gc.listn(&[Object::Number(8490), Object::Number(75)]);
    let list4347 = vm.gc.listn(&[Object::Number(8491), Object::Number(197)]);
    let list4348 = vm.gc.listn(&[Object::Number(8602), Object::Number(8592), Object::Number(824)]);
    let list4349 = vm.gc.listn(&[Object::Number(8603), Object::Number(8594), Object::Number(824)]);
    let list4350 = vm.gc.listn(&[Object::Number(8622), Object::Number(8596), Object::Number(824)]);
    let list4351 = vm.gc.listn(&[Object::Number(8653), Object::Number(8656), Object::Number(824)]);
    let list4352 = vm.gc.listn(&[Object::Number(8654), Object::Number(8660), Object::Number(824)]);
    let list4353 = vm.gc.listn(&[Object::Number(8655), Object::Number(8658), Object::Number(824)]);
    let list4354 = vm.gc.listn(&[Object::Number(8708), Object::Number(8707), Object::Number(824)]);
    let list4355 = vm.gc.listn(&[Object::Number(8713), Object::Number(8712), Object::Number(824)]);
    let list4356 = vm.gc.listn(&[Object::Number(8716), Object::Number(8715), Object::Number(824)]);
    let list4357 = vm.gc.listn(&[Object::Number(8740), Object::Number(8739), Object::Number(824)]);
    let list4358 = vm.gc.listn(&[Object::Number(8742), Object::Number(8741), Object::Number(824)]);
    let list4359 = vm.gc.listn(&[Object::Number(8769), Object::Number(8764), Object::Number(824)]);
    let list4360 = vm.gc.listn(&[Object::Number(8772), Object::Number(8771), Object::Number(824)]);
    let list4361 = vm.gc.listn(&[Object::Number(8775), Object::Number(8773), Object::Number(824)]);
    let list4362 = vm.gc.listn(&[Object::Number(8777), Object::Number(8776), Object::Number(824)]);
    let list4363 = vm.gc.listn(&[Object::Number(8800), Object::Number(61), Object::Number(824)]);
    let list4364 = vm.gc.listn(&[Object::Number(8802), Object::Number(8801), Object::Number(824)]);
    let list4365 = vm.gc.listn(&[Object::Number(8813), Object::Number(8781), Object::Number(824)]);
    let list4366 = vm.gc.listn(&[Object::Number(8814), Object::Number(60), Object::Number(824)]);
    let list4367 = vm.gc.listn(&[Object::Number(8815), Object::Number(62), Object::Number(824)]);
    let list4368 = vm.gc.listn(&[Object::Number(8816), Object::Number(8804), Object::Number(824)]);
    let list4369 = vm.gc.listn(&[Object::Number(8817), Object::Number(8805), Object::Number(824)]);
    let list4370 = vm.gc.listn(&[Object::Number(8820), Object::Number(8818), Object::Number(824)]);
    let list4371 = vm.gc.listn(&[Object::Number(8821), Object::Number(8819), Object::Number(824)]);
    let list4372 = vm.gc.listn(&[Object::Number(8824), Object::Number(8822), Object::Number(824)]);
    let list4373 = vm.gc.listn(&[Object::Number(8825), Object::Number(8823), Object::Number(824)]);
    let list4374 = vm.gc.listn(&[Object::Number(8832), Object::Number(8826), Object::Number(824)]);
    let list4375 = vm.gc.listn(&[Object::Number(8833), Object::Number(8827), Object::Number(824)]);
    let list4376 = vm.gc.listn(&[Object::Number(8836), Object::Number(8834), Object::Number(824)]);
    let list4377 = vm.gc.listn(&[Object::Number(8837), Object::Number(8835), Object::Number(824)]);
    let list4378 = vm.gc.listn(&[Object::Number(8840), Object::Number(8838), Object::Number(824)]);
    let list4379 = vm.gc.listn(&[Object::Number(8841), Object::Number(8839), Object::Number(824)]);
    let list4380 = vm.gc.listn(&[Object::Number(8876), Object::Number(8866), Object::Number(824)]);
    let list4381 = vm.gc.listn(&[Object::Number(8877), Object::Number(8872), Object::Number(824)]);
    let list4382 = vm.gc.listn(&[Object::Number(8878), Object::Number(8873), Object::Number(824)]);
    let list4383 = vm.gc.listn(&[Object::Number(8879), Object::Number(8875), Object::Number(824)]);
    let list4384 = vm.gc.listn(&[Object::Number(8928), Object::Number(8828), Object::Number(824)]);
    let list4385 = vm.gc.listn(&[Object::Number(8929), Object::Number(8829), Object::Number(824)]);
    let list4386 = vm.gc.listn(&[Object::Number(8930), Object::Number(8849), Object::Number(824)]);
    let list4387 = vm.gc.listn(&[Object::Number(8931), Object::Number(8850), Object::Number(824)]);
    let list4388 = vm.gc.listn(&[Object::Number(8938), Object::Number(8882), Object::Number(824)]);
    let list4389 = vm.gc.listn(&[Object::Number(8939), Object::Number(8883), Object::Number(824)]);
    let list4390 = vm.gc.listn(&[Object::Number(8940), Object::Number(8884), Object::Number(824)]);
    let list4391 = vm.gc.listn(&[Object::Number(8941), Object::Number(8885), Object::Number(824)]);
    let list4392 = vm.gc.listn(&[Object::Number(9001), Object::Number(12296)]);
    let list4393 = vm.gc.listn(&[Object::Number(9002), Object::Number(12297)]);
    let list4394 = vm.gc.listn(&[Object::Number(10972), Object::Number(10973), Object::Number(824)]);
    let list4395 = vm.gc.listn(&[Object::Number(12364), Object::Number(12363), Object::Number(12441)]);
    let list4396 = vm.gc.listn(&[Object::Number(12366), Object::Number(12365), Object::Number(12441)]);
    let list4397 = vm.gc.listn(&[Object::Number(12368), Object::Number(12367), Object::Number(12441)]);
    let list4398 = vm.gc.listn(&[Object::Number(12370), Object::Number(12369), Object::Number(12441)]);
    let list4399 = vm.gc.listn(&[Object::Number(12372), Object::Number(12371), Object::Number(12441)]);
    let list4400 = vm.gc.listn(&[Object::Number(12374), Object::Number(12373), Object::Number(12441)]);
    let list4401 = vm.gc.listn(&[Object::Number(12376), Object::Number(12375), Object::Number(12441)]);
    let list4402 = vm.gc.listn(&[Object::Number(12378), Object::Number(12377), Object::Number(12441)]);
    let list4403 = vm.gc.listn(&[Object::Number(12380), Object::Number(12379), Object::Number(12441)]);
    let list4404 = vm.gc.listn(&[Object::Number(12382), Object::Number(12381), Object::Number(12441)]);
    let list4405 = vm.gc.listn(&[Object::Number(12384), Object::Number(12383), Object::Number(12441)]);
    let list4406 = vm.gc.listn(&[Object::Number(12386), Object::Number(12385), Object::Number(12441)]);
    let list4407 = vm.gc.listn(&[Object::Number(12389), Object::Number(12388), Object::Number(12441)]);
    let list4408 = vm.gc.listn(&[Object::Number(12391), Object::Number(12390), Object::Number(12441)]);
    let list4409 = vm.gc.listn(&[Object::Number(12393), Object::Number(12392), Object::Number(12441)]);
    let list4410 = vm.gc.listn(&[Object::Number(12400), Object::Number(12399), Object::Number(12441)]);
    let list4411 = vm.gc.listn(&[Object::Number(12401), Object::Number(12399), Object::Number(12442)]);
    let list4412 = vm.gc.listn(&[Object::Number(12403), Object::Number(12402), Object::Number(12441)]);
    let list4413 = vm.gc.listn(&[Object::Number(12404), Object::Number(12402), Object::Number(12442)]);
    let list4414 = vm.gc.listn(&[Object::Number(12406), Object::Number(12405), Object::Number(12441)]);
    let list4415 = vm.gc.listn(&[Object::Number(12407), Object::Number(12405), Object::Number(12442)]);
    let list4416 = vm.gc.listn(&[Object::Number(12409), Object::Number(12408), Object::Number(12441)]);
    let list4417 = vm.gc.listn(&[Object::Number(12410), Object::Number(12408), Object::Number(12442)]);
    let list4418 = vm.gc.listn(&[Object::Number(12412), Object::Number(12411), Object::Number(12441)]);
    let list4419 = vm.gc.listn(&[Object::Number(12413), Object::Number(12411), Object::Number(12442)]);
    let list4420 = vm.gc.listn(&[Object::Number(12436), Object::Number(12358), Object::Number(12441)]);
    let list4421 = vm.gc.listn(&[Object::Number(12446), Object::Number(12445), Object::Number(12441)]);
    let list4422 = vm.gc.listn(&[Object::Number(12460), Object::Number(12459), Object::Number(12441)]);
    let list4423 = vm.gc.listn(&[Object::Number(12462), Object::Number(12461), Object::Number(12441)]);
    let list4424 = vm.gc.listn(&[Object::Number(12464), Object::Number(12463), Object::Number(12441)]);
    let list4425 = vm.gc.listn(&[Object::Number(12466), Object::Number(12465), Object::Number(12441)]);
    let list4426 = vm.gc.listn(&[Object::Number(12468), Object::Number(12467), Object::Number(12441)]);
    let list4427 = vm.gc.listn(&[Object::Number(12470), Object::Number(12469), Object::Number(12441)]);
    let list4428 = vm.gc.listn(&[Object::Number(12472), Object::Number(12471), Object::Number(12441)]);
    let list4429 = vm.gc.listn(&[Object::Number(12474), Object::Number(12473), Object::Number(12441)]);
    let list4430 = vm.gc.listn(&[Object::Number(12476), Object::Number(12475), Object::Number(12441)]);
    let list4431 = vm.gc.listn(&[Object::Number(12478), Object::Number(12477), Object::Number(12441)]);
    let list4432 = vm.gc.listn(&[Object::Number(12480), Object::Number(12479), Object::Number(12441)]);
    let list4433 = vm.gc.listn(&[Object::Number(12482), Object::Number(12481), Object::Number(12441)]);
    let list4434 = vm.gc.listn(&[Object::Number(12485), Object::Number(12484), Object::Number(12441)]);
    let list4435 = vm.gc.listn(&[Object::Number(12487), Object::Number(12486), Object::Number(12441)]);
    let list4436 = vm.gc.listn(&[Object::Number(12489), Object::Number(12488), Object::Number(12441)]);
    let list4437 = vm.gc.listn(&[Object::Number(12496), Object::Number(12495), Object::Number(12441)]);
    let list4438 = vm.gc.listn(&[Object::Number(12497), Object::Number(12495), Object::Number(12442)]);
    let list4439 = vm.gc.listn(&[Object::Number(12499), Object::Number(12498), Object::Number(12441)]);
    let list4440 = vm.gc.listn(&[Object::Number(12500), Object::Number(12498), Object::Number(12442)]);
    let list4441 = vm.gc.listn(&[Object::Number(12502), Object::Number(12501), Object::Number(12441)]);
    let list4442 = vm.gc.listn(&[Object::Number(12503), Object::Number(12501), Object::Number(12442)]);
    let list4443 = vm.gc.listn(&[Object::Number(12505), Object::Number(12504), Object::Number(12441)]);
    let list4444 = vm.gc.listn(&[Object::Number(12506), Object::Number(12504), Object::Number(12442)]);
    let list4445 = vm.gc.listn(&[Object::Number(12508), Object::Number(12507), Object::Number(12441)]);
    let list4446 = vm.gc.listn(&[Object::Number(12509), Object::Number(12507), Object::Number(12442)]);
    let list4447 = vm.gc.listn(&[Object::Number(12532), Object::Number(12454), Object::Number(12441)]);
    let list4448 = vm.gc.listn(&[Object::Number(12535), Object::Number(12527), Object::Number(12441)]);
    let list4449 = vm.gc.listn(&[Object::Number(12536), Object::Number(12528), Object::Number(12441)]);
    let list4450 = vm.gc.listn(&[Object::Number(12537), Object::Number(12529), Object::Number(12441)]);
    let list4451 = vm.gc.listn(&[Object::Number(12538), Object::Number(12530), Object::Number(12441)]);
    let list4452 = vm.gc.listn(&[Object::Number(12542), Object::Number(12541), Object::Number(12441)]);
    let list4453 = vm.gc.listn(&[Object::Number(63744), Object::Number(35912)]);
    let list4454 = vm.gc.listn(&[Object::Number(63745), Object::Number(26356)]);
    let list4455 = vm.gc.listn(&[Object::Number(63746), Object::Number(36554)]);
    let list4456 = vm.gc.listn(&[Object::Number(63747), Object::Number(36040)]);
    let list4457 = vm.gc.listn(&[Object::Number(63748), Object::Number(28369)]);
    let list4458 = vm.gc.listn(&[Object::Number(63749), Object::Number(20018)]);
    let list4459 = vm.gc.listn(&[Object::Number(63750), Object::Number(21477)]);
    let list4460 = vm.gc.listn(&[Object::Number(63751), Object::Number(40860)]);
    let list4461 = vm.gc.listn(&[Object::Number(63752), Object::Number(40860)]);
    let list4462 = vm.gc.listn(&[Object::Number(63753), Object::Number(22865)]);
    let list4463 = vm.gc.listn(&[Object::Number(63754), Object::Number(37329)]);
    let list4464 = vm.gc.listn(&[Object::Number(63755), Object::Number(21895)]);
    let list4465 = vm.gc.listn(&[Object::Number(63756), Object::Number(22856)]);
    let list4466 = vm.gc.listn(&[Object::Number(63757), Object::Number(25078)]);
    let list4467 = vm.gc.listn(&[Object::Number(63758), Object::Number(30313)]);
    let list4468 = vm.gc.listn(&[Object::Number(63759), Object::Number(32645)]);
    let list4469 = vm.gc.listn(&[Object::Number(63760), Object::Number(34367)]);
    let list4470 = vm.gc.listn(&[Object::Number(63761), Object::Number(34746)]);
    let list4471 = vm.gc.listn(&[Object::Number(63762), Object::Number(35064)]);
    let list4472 = vm.gc.listn(&[Object::Number(63763), Object::Number(37007)]);
    let list4473 = vm.gc.listn(&[Object::Number(63764), Object::Number(27138)]);
    let list4474 = vm.gc.listn(&[Object::Number(63765), Object::Number(27931)]);
    let list4475 = vm.gc.listn(&[Object::Number(63766), Object::Number(28889)]);
    let list4476 = vm.gc.listn(&[Object::Number(63767), Object::Number(29662)]);
    let list4477 = vm.gc.listn(&[Object::Number(63768), Object::Number(33853)]);
    let list4478 = vm.gc.listn(&[Object::Number(63769), Object::Number(37226)]);
    let list4479 = vm.gc.listn(&[Object::Number(63770), Object::Number(39409)]);
    let list4480 = vm.gc.listn(&[Object::Number(63771), Object::Number(20098)]);
    let list4481 = vm.gc.listn(&[Object::Number(63772), Object::Number(21365)]);
    let list4482 = vm.gc.listn(&[Object::Number(63773), Object::Number(27396)]);
    let list4483 = vm.gc.listn(&[Object::Number(63774), Object::Number(29211)]);
    let list4484 = vm.gc.listn(&[Object::Number(63775), Object::Number(34349)]);
    let list4485 = vm.gc.listn(&[Object::Number(63776), Object::Number(40478)]);
    let list4486 = vm.gc.listn(&[Object::Number(63777), Object::Number(23888)]);
    let list4487 = vm.gc.listn(&[Object::Number(63778), Object::Number(28651)]);
    let list4488 = vm.gc.listn(&[Object::Number(63779), Object::Number(34253)]);
    let list4489 = vm.gc.listn(&[Object::Number(63780), Object::Number(35172)]);
    let list4490 = vm.gc.listn(&[Object::Number(63781), Object::Number(25289)]);
    let list4491 = vm.gc.listn(&[Object::Number(63782), Object::Number(33240)]);
    let list4492 = vm.gc.listn(&[Object::Number(63783), Object::Number(34847)]);
    let list4493 = vm.gc.listn(&[Object::Number(63784), Object::Number(24266)]);
    let list4494 = vm.gc.listn(&[Object::Number(63785), Object::Number(26391)]);
    let list4495 = vm.gc.listn(&[Object::Number(63786), Object::Number(28010)]);
    let list4496 = vm.gc.listn(&[Object::Number(63787), Object::Number(29436)]);
    let list4497 = vm.gc.listn(&[Object::Number(63788), Object::Number(37070)]);
    let list4498 = vm.gc.listn(&[Object::Number(63789), Object::Number(20358)]);
    let list4499 = vm.gc.listn(&[Object::Number(63790), Object::Number(20919)]);
    let list4500 = vm.gc.listn(&[Object::Number(63791), Object::Number(21214)]);
    let list4501 = vm.gc.listn(&[Object::Number(63792), Object::Number(25796)]);
    let list4502 = vm.gc.listn(&[Object::Number(63793), Object::Number(27347)]);
    let list4503 = vm.gc.listn(&[Object::Number(63794), Object::Number(29200)]);
    let list4504 = vm.gc.listn(&[Object::Number(63795), Object::Number(30439)]);
    let list4505 = vm.gc.listn(&[Object::Number(63796), Object::Number(32769)]);
    let list4506 = vm.gc.listn(&[Object::Number(63797), Object::Number(34310)]);
    let list4507 = vm.gc.listn(&[Object::Number(63798), Object::Number(34396)]);
    let list4508 = vm.gc.listn(&[Object::Number(63799), Object::Number(36335)]);
    let list4509 = vm.gc.listn(&[Object::Number(63800), Object::Number(38706)]);
    let list4510 = vm.gc.listn(&[Object::Number(63801), Object::Number(39791)]);
    let list4511 = vm.gc.listn(&[Object::Number(63802), Object::Number(40442)]);
    let list4512 = vm.gc.listn(&[Object::Number(63803), Object::Number(30860)]);
    let list4513 = vm.gc.listn(&[Object::Number(63804), Object::Number(31103)]);
    let list4514 = vm.gc.listn(&[Object::Number(63805), Object::Number(32160)]);
    let list4515 = vm.gc.listn(&[Object::Number(63806), Object::Number(33737)]);
    let list4516 = vm.gc.listn(&[Object::Number(63807), Object::Number(37636)]);
    let list4517 = vm.gc.listn(&[Object::Number(63808), Object::Number(40575)]);
    let list4518 = vm.gc.listn(&[Object::Number(63809), Object::Number(35542)]);
    let list4519 = vm.gc.listn(&[Object::Number(63810), Object::Number(22751)]);
    let list4520 = vm.gc.listn(&[Object::Number(63811), Object::Number(24324)]);
    let list4521 = vm.gc.listn(&[Object::Number(63812), Object::Number(31840)]);
    let list4522 = vm.gc.listn(&[Object::Number(63813), Object::Number(32894)]);
    let list4523 = vm.gc.listn(&[Object::Number(63814), Object::Number(29282)]);
    let list4524 = vm.gc.listn(&[Object::Number(63815), Object::Number(30922)]);
    let list4525 = vm.gc.listn(&[Object::Number(63816), Object::Number(36034)]);
    let list4526 = vm.gc.listn(&[Object::Number(63817), Object::Number(38647)]);
    let list4527 = vm.gc.listn(&[Object::Number(63818), Object::Number(22744)]);
    let list4528 = vm.gc.listn(&[Object::Number(63819), Object::Number(23650)]);
    let list4529 = vm.gc.listn(&[Object::Number(63820), Object::Number(27155)]);
    let list4530 = vm.gc.listn(&[Object::Number(63821), Object::Number(28122)]);
    let list4531 = vm.gc.listn(&[Object::Number(63822), Object::Number(28431)]);
    let list4532 = vm.gc.listn(&[Object::Number(63823), Object::Number(32047)]);
    let list4533 = vm.gc.listn(&[Object::Number(63824), Object::Number(32311)]);
    let list4534 = vm.gc.listn(&[Object::Number(63825), Object::Number(38475)]);
    let list4535 = vm.gc.listn(&[Object::Number(63826), Object::Number(21202)]);
    let list4536 = vm.gc.listn(&[Object::Number(63827), Object::Number(32907)]);
    let list4537 = vm.gc.listn(&[Object::Number(63828), Object::Number(20956)]);
    let list4538 = vm.gc.listn(&[Object::Number(63829), Object::Number(20940)]);
    let list4539 = vm.gc.listn(&[Object::Number(63830), Object::Number(31260)]);
    let list4540 = vm.gc.listn(&[Object::Number(63831), Object::Number(32190)]);
    let list4541 = vm.gc.listn(&[Object::Number(63832), Object::Number(33777)]);
    let list4542 = vm.gc.listn(&[Object::Number(63833), Object::Number(38517)]);
    let list4543 = vm.gc.listn(&[Object::Number(63834), Object::Number(35712)]);
    let list4544 = vm.gc.listn(&[Object::Number(63835), Object::Number(25295)]);
    let list4545 = vm.gc.listn(&[Object::Number(63836), Object::Number(27138)]);
    let list4546 = vm.gc.listn(&[Object::Number(63837), Object::Number(35582)]);
    let list4547 = vm.gc.listn(&[Object::Number(63838), Object::Number(20025)]);
    let list4548 = vm.gc.listn(&[Object::Number(63839), Object::Number(23527)]);
    let list4549 = vm.gc.listn(&[Object::Number(63840), Object::Number(24594)]);
    let list4550 = vm.gc.listn(&[Object::Number(63841), Object::Number(29575)]);
    let list4551 = vm.gc.listn(&[Object::Number(63842), Object::Number(30064)]);
    let list4552 = vm.gc.listn(&[Object::Number(63843), Object::Number(21271)]);
    let list4553 = vm.gc.listn(&[Object::Number(63844), Object::Number(30971)]);
    let list4554 = vm.gc.listn(&[Object::Number(63845), Object::Number(20415)]);
    let list4555 = vm.gc.listn(&[Object::Number(63846), Object::Number(24489)]);
    let list4556 = vm.gc.listn(&[Object::Number(63847), Object::Number(19981)]);
    let list4557 = vm.gc.listn(&[Object::Number(63848), Object::Number(27852)]);
    let list4558 = vm.gc.listn(&[Object::Number(63849), Object::Number(25976)]);
    let list4559 = vm.gc.listn(&[Object::Number(63850), Object::Number(32034)]);
    let list4560 = vm.gc.listn(&[Object::Number(63851), Object::Number(21443)]);
    let list4561 = vm.gc.listn(&[Object::Number(63852), Object::Number(22622)]);
    let list4562 = vm.gc.listn(&[Object::Number(63853), Object::Number(30465)]);
    let list4563 = vm.gc.listn(&[Object::Number(63854), Object::Number(33865)]);
    let list4564 = vm.gc.listn(&[Object::Number(63855), Object::Number(35498)]);
    let list4565 = vm.gc.listn(&[Object::Number(63856), Object::Number(27578)]);
    let list4566 = vm.gc.listn(&[Object::Number(63857), Object::Number(36784)]);
    let list4567 = vm.gc.listn(&[Object::Number(63858), Object::Number(27784)]);
    let list4568 = vm.gc.listn(&[Object::Number(63859), Object::Number(25342)]);
    let list4569 = vm.gc.listn(&[Object::Number(63860), Object::Number(33509)]);
    let list4570 = vm.gc.listn(&[Object::Number(63861), Object::Number(25504)]);
    let list4571 = vm.gc.listn(&[Object::Number(63862), Object::Number(30053)]);
    let list4572 = vm.gc.listn(&[Object::Number(63863), Object::Number(20142)]);
    let list4573 = vm.gc.listn(&[Object::Number(63864), Object::Number(20841)]);
    let list4574 = vm.gc.listn(&[Object::Number(63865), Object::Number(20937)]);
    let list4575 = vm.gc.listn(&[Object::Number(63866), Object::Number(26753)]);
    let list4576 = vm.gc.listn(&[Object::Number(63867), Object::Number(31975)]);
    let list4577 = vm.gc.listn(&[Object::Number(63868), Object::Number(33391)]);
    let list4578 = vm.gc.listn(&[Object::Number(63869), Object::Number(35538)]);
    let list4579 = vm.gc.listn(&[Object::Number(63870), Object::Number(37327)]);
    let list4580 = vm.gc.listn(&[Object::Number(63871), Object::Number(21237)]);
    let list4581 = vm.gc.listn(&[Object::Number(63872), Object::Number(21570)]);
    let list4582 = vm.gc.listn(&[Object::Number(63873), Object::Number(22899)]);
    let list4583 = vm.gc.listn(&[Object::Number(63874), Object::Number(24300)]);
    let list4584 = vm.gc.listn(&[Object::Number(63875), Object::Number(26053)]);
    let list4585 = vm.gc.listn(&[Object::Number(63876), Object::Number(28670)]);
    let list4586 = vm.gc.listn(&[Object::Number(63877), Object::Number(31018)]);
    let list4587 = vm.gc.listn(&[Object::Number(63878), Object::Number(38317)]);
    let list4588 = vm.gc.listn(&[Object::Number(63879), Object::Number(39530)]);
    let list4589 = vm.gc.listn(&[Object::Number(63880), Object::Number(40599)]);
    let list4590 = vm.gc.listn(&[Object::Number(63881), Object::Number(40654)]);
    let list4591 = vm.gc.listn(&[Object::Number(63882), Object::Number(21147)]);
    let list4592 = vm.gc.listn(&[Object::Number(63883), Object::Number(26310)]);
    let list4593 = vm.gc.listn(&[Object::Number(63884), Object::Number(27511)]);
    let list4594 = vm.gc.listn(&[Object::Number(63885), Object::Number(36706)]);
    let list4595 = vm.gc.listn(&[Object::Number(63886), Object::Number(24180)]);
    let list4596 = vm.gc.listn(&[Object::Number(63887), Object::Number(24976)]);
    let list4597 = vm.gc.listn(&[Object::Number(63888), Object::Number(25088)]);
    let list4598 = vm.gc.listn(&[Object::Number(63889), Object::Number(25754)]);
    let list4599 = vm.gc.listn(&[Object::Number(63890), Object::Number(28451)]);
    let list4600 = vm.gc.listn(&[Object::Number(63891), Object::Number(29001)]);
    let list4601 = vm.gc.listn(&[Object::Number(63892), Object::Number(29833)]);
    let list4602 = vm.gc.listn(&[Object::Number(63893), Object::Number(31178)]);
    let list4603 = vm.gc.listn(&[Object::Number(63894), Object::Number(32244)]);
    let list4604 = vm.gc.listn(&[Object::Number(63895), Object::Number(32879)]);
    let list4605 = vm.gc.listn(&[Object::Number(63896), Object::Number(36646)]);
    let list4606 = vm.gc.listn(&[Object::Number(63897), Object::Number(34030)]);
    let list4607 = vm.gc.listn(&[Object::Number(63898), Object::Number(36899)]);
    let list4608 = vm.gc.listn(&[Object::Number(63899), Object::Number(37706)]);
    let list4609 = vm.gc.listn(&[Object::Number(63900), Object::Number(21015)]);
    let list4610 = vm.gc.listn(&[Object::Number(63901), Object::Number(21155)]);
    let list4611 = vm.gc.listn(&[Object::Number(63902), Object::Number(21693)]);
    let list4612 = vm.gc.listn(&[Object::Number(63903), Object::Number(28872)]);
    let list4613 = vm.gc.listn(&[Object::Number(63904), Object::Number(35010)]);
    let list4614 = vm.gc.listn(&[Object::Number(63905), Object::Number(35498)]);
    let list4615 = vm.gc.listn(&[Object::Number(63906), Object::Number(24265)]);
    let list4616 = vm.gc.listn(&[Object::Number(63907), Object::Number(24565)]);
    let list4617 = vm.gc.listn(&[Object::Number(63908), Object::Number(25467)]);
    let list4618 = vm.gc.listn(&[Object::Number(63909), Object::Number(27566)]);
    let list4619 = vm.gc.listn(&[Object::Number(63910), Object::Number(31806)]);
    let list4620 = vm.gc.listn(&[Object::Number(63911), Object::Number(29557)]);
    let list4621 = vm.gc.listn(&[Object::Number(63912), Object::Number(20196)]);
    let list4622 = vm.gc.listn(&[Object::Number(63913), Object::Number(22265)]);
    let list4623 = vm.gc.listn(&[Object::Number(63914), Object::Number(23527)]);
    let list4624 = vm.gc.listn(&[Object::Number(63915), Object::Number(23994)]);
    let list4625 = vm.gc.listn(&[Object::Number(63916), Object::Number(24604)]);
    let list4626 = vm.gc.listn(&[Object::Number(63917), Object::Number(29618)]);
    let list4627 = vm.gc.listn(&[Object::Number(63918), Object::Number(29801)]);
    let list4628 = vm.gc.listn(&[Object::Number(63919), Object::Number(32666)]);
    let list4629 = vm.gc.listn(&[Object::Number(63920), Object::Number(32838)]);
    let list4630 = vm.gc.listn(&[Object::Number(63921), Object::Number(37428)]);
    let list4631 = vm.gc.listn(&[Object::Number(63922), Object::Number(38646)]);
    let list4632 = vm.gc.listn(&[Object::Number(63923), Object::Number(38728)]);
    let list4633 = vm.gc.listn(&[Object::Number(63924), Object::Number(38936)]);
    let list4634 = vm.gc.listn(&[Object::Number(63925), Object::Number(20363)]);
    let list4635 = vm.gc.listn(&[Object::Number(63926), Object::Number(31150)]);
    let list4636 = vm.gc.listn(&[Object::Number(63927), Object::Number(37300)]);
    let list4637 = vm.gc.listn(&[Object::Number(63928), Object::Number(38584)]);
    let list4638 = vm.gc.listn(&[Object::Number(63929), Object::Number(24801)]);
    let list4639 = vm.gc.listn(&[Object::Number(63930), Object::Number(20102)]);
    let list4640 = vm.gc.listn(&[Object::Number(63931), Object::Number(20698)]);
    let list4641 = vm.gc.listn(&[Object::Number(63932), Object::Number(23534)]);
    let list4642 = vm.gc.listn(&[Object::Number(63933), Object::Number(23615)]);
    let list4643 = vm.gc.listn(&[Object::Number(63934), Object::Number(26009)]);
    let list4644 = vm.gc.listn(&[Object::Number(63935), Object::Number(27138)]);
    let list4645 = vm.gc.listn(&[Object::Number(63936), Object::Number(29134)]);
    let list4646 = vm.gc.listn(&[Object::Number(63937), Object::Number(30274)]);
    let list4647 = vm.gc.listn(&[Object::Number(63938), Object::Number(34044)]);
    let list4648 = vm.gc.listn(&[Object::Number(63939), Object::Number(36988)]);
    let list4649 = vm.gc.listn(&[Object::Number(63940), Object::Number(40845)]);
    let list4650 = vm.gc.listn(&[Object::Number(63941), Object::Number(26248)]);
    let list4651 = vm.gc.listn(&[Object::Number(63942), Object::Number(38446)]);
    let list4652 = vm.gc.listn(&[Object::Number(63943), Object::Number(21129)]);
    let list4653 = vm.gc.listn(&[Object::Number(63944), Object::Number(26491)]);
    let list4654 = vm.gc.listn(&[Object::Number(63945), Object::Number(26611)]);
    let list4655 = vm.gc.listn(&[Object::Number(63946), Object::Number(27969)]);
    let list4656 = vm.gc.listn(&[Object::Number(63947), Object::Number(28316)]);
    let list4657 = vm.gc.listn(&[Object::Number(63948), Object::Number(29705)]);
    let list4658 = vm.gc.listn(&[Object::Number(63949), Object::Number(30041)]);
    let list4659 = vm.gc.listn(&[Object::Number(63950), Object::Number(30827)]);
    let list4660 = vm.gc.listn(&[Object::Number(63951), Object::Number(32016)]);
    let list4661 = vm.gc.listn(&[Object::Number(63952), Object::Number(39006)]);
    let list4662 = vm.gc.listn(&[Object::Number(63953), Object::Number(20845)]);
    let list4663 = vm.gc.listn(&[Object::Number(63954), Object::Number(25134)]);
    let list4664 = vm.gc.listn(&[Object::Number(63955), Object::Number(38520)]);
    let list4665 = vm.gc.listn(&[Object::Number(63956), Object::Number(20523)]);
    let list4666 = vm.gc.listn(&[Object::Number(63957), Object::Number(23833)]);
    let list4667 = vm.gc.listn(&[Object::Number(63958), Object::Number(28138)]);
    let list4668 = vm.gc.listn(&[Object::Number(63959), Object::Number(36650)]);
    let list4669 = vm.gc.listn(&[Object::Number(63960), Object::Number(24459)]);
    let list4670 = vm.gc.listn(&[Object::Number(63961), Object::Number(24900)]);
    let list4671 = vm.gc.listn(&[Object::Number(63962), Object::Number(26647)]);
    let list4672 = vm.gc.listn(&[Object::Number(63963), Object::Number(29575)]);
    let list4673 = vm.gc.listn(&[Object::Number(63964), Object::Number(38534)]);
    let list4674 = vm.gc.listn(&[Object::Number(63965), Object::Number(21033)]);
    let list4675 = vm.gc.listn(&[Object::Number(63966), Object::Number(21519)]);
    let list4676 = vm.gc.listn(&[Object::Number(63967), Object::Number(23653)]);
    let list4677 = vm.gc.listn(&[Object::Number(63968), Object::Number(26131)]);
    let list4678 = vm.gc.listn(&[Object::Number(63969), Object::Number(26446)]);
    let list4679 = vm.gc.listn(&[Object::Number(63970), Object::Number(26792)]);
    let list4680 = vm.gc.listn(&[Object::Number(63971), Object::Number(27877)]);
    let list4681 = vm.gc.listn(&[Object::Number(63972), Object::Number(29702)]);
    let list4682 = vm.gc.listn(&[Object::Number(63973), Object::Number(30178)]);
    let list4683 = vm.gc.listn(&[Object::Number(63974), Object::Number(32633)]);
    let list4684 = vm.gc.listn(&[Object::Number(63975), Object::Number(35023)]);
    let list4685 = vm.gc.listn(&[Object::Number(63976), Object::Number(35041)]);
    let list4686 = vm.gc.listn(&[Object::Number(63977), Object::Number(37324)]);
    let list4687 = vm.gc.listn(&[Object::Number(63978), Object::Number(38626)]);
    let list4688 = vm.gc.listn(&[Object::Number(63979), Object::Number(21311)]);
    let list4689 = vm.gc.listn(&[Object::Number(63980), Object::Number(28346)]);
    let list4690 = vm.gc.listn(&[Object::Number(63981), Object::Number(21533)]);
    let list4691 = vm.gc.listn(&[Object::Number(63982), Object::Number(29136)]);
    let list4692 = vm.gc.listn(&[Object::Number(63983), Object::Number(29848)]);
    let list4693 = vm.gc.listn(&[Object::Number(63984), Object::Number(34298)]);
    let list4694 = vm.gc.listn(&[Object::Number(63985), Object::Number(38563)]);
    let list4695 = vm.gc.listn(&[Object::Number(63986), Object::Number(40023)]);
    let list4696 = vm.gc.listn(&[Object::Number(63987), Object::Number(40607)]);
    let list4697 = vm.gc.listn(&[Object::Number(63988), Object::Number(26519)]);
    let list4698 = vm.gc.listn(&[Object::Number(63989), Object::Number(28107)]);
    let list4699 = vm.gc.listn(&[Object::Number(63990), Object::Number(33256)]);
    let list4700 = vm.gc.listn(&[Object::Number(63991), Object::Number(31435)]);
    let list4701 = vm.gc.listn(&[Object::Number(63992), Object::Number(31520)]);
    let list4702 = vm.gc.listn(&[Object::Number(63993), Object::Number(31890)]);
    let list4703 = vm.gc.listn(&[Object::Number(63994), Object::Number(29376)]);
    let list4704 = vm.gc.listn(&[Object::Number(63995), Object::Number(28825)]);
    let list4705 = vm.gc.listn(&[Object::Number(63996), Object::Number(35672)]);
    let list4706 = vm.gc.listn(&[Object::Number(63997), Object::Number(20160)]);
    let list4707 = vm.gc.listn(&[Object::Number(63998), Object::Number(33590)]);
    let list4708 = vm.gc.listn(&[Object::Number(63999), Object::Number(21050)]);
    let list4709 = vm.gc.listn(&[Object::Number(64000), Object::Number(20999)]);
    let list4710 = vm.gc.listn(&[Object::Number(64001), Object::Number(24230)]);
    let list4711 = vm.gc.listn(&[Object::Number(64002), Object::Number(25299)]);
    let list4712 = vm.gc.listn(&[Object::Number(64003), Object::Number(31958)]);
    let list4713 = vm.gc.listn(&[Object::Number(64004), Object::Number(23429)]);
    let list4714 = vm.gc.listn(&[Object::Number(64005), Object::Number(27934)]);
    let list4715 = vm.gc.listn(&[Object::Number(64006), Object::Number(26292)]);
    let list4716 = vm.gc.listn(&[Object::Number(64007), Object::Number(36667)]);
    let list4717 = vm.gc.listn(&[Object::Number(64008), Object::Number(34892)]);
    let list4718 = vm.gc.listn(&[Object::Number(64009), Object::Number(38477)]);
    let list4719 = vm.gc.listn(&[Object::Number(64010), Object::Number(35211)]);
    let list4720 = vm.gc.listn(&[Object::Number(64011), Object::Number(24275)]);
    let list4721 = vm.gc.listn(&[Object::Number(64012), Object::Number(20800)]);
    let list4722 = vm.gc.listn(&[Object::Number(64013), Object::Number(21952)]);
    let list4723 = vm.gc.listn(&[Object::Number(64016), Object::Number(22618)]);
    let list4724 = vm.gc.listn(&[Object::Number(64018), Object::Number(26228)]);
    let list4725 = vm.gc.listn(&[Object::Number(64021), Object::Number(20958)]);
    let list4726 = vm.gc.listn(&[Object::Number(64022), Object::Number(29482)]);
    let list4727 = vm.gc.listn(&[Object::Number(64023), Object::Number(30410)]);
    let list4728 = vm.gc.listn(&[Object::Number(64024), Object::Number(31036)]);
    let list4729 = vm.gc.listn(&[Object::Number(64025), Object::Number(31070)]);
    let list4730 = vm.gc.listn(&[Object::Number(64026), Object::Number(31077)]);
    let list4731 = vm.gc.listn(&[Object::Number(64027), Object::Number(31119)]);
    let list4732 = vm.gc.listn(&[Object::Number(64028), Object::Number(38742)]);
    let list4733 = vm.gc.listn(&[Object::Number(64029), Object::Number(31934)]);
    let list4734 = vm.gc.listn(&[Object::Number(64030), Object::Number(32701)]);
    let list4735 = vm.gc.listn(&[Object::Number(64032), Object::Number(34322)]);
    let list4736 = vm.gc.listn(&[Object::Number(64034), Object::Number(35576)]);
    let list4737 = vm.gc.listn(&[Object::Number(64037), Object::Number(36920)]);
    let list4738 = vm.gc.listn(&[Object::Number(64038), Object::Number(37117)]);
    let list4739 = vm.gc.listn(&[Object::Number(64042), Object::Number(39151)]);
    let list4740 = vm.gc.listn(&[Object::Number(64043), Object::Number(39164)]);
    let list4741 = vm.gc.listn(&[Object::Number(64044), Object::Number(39208)]);
    let list4742 = vm.gc.listn(&[Object::Number(64045), Object::Number(40372)]);
    let list4743 = vm.gc.listn(&[Object::Number(64048), Object::Number(20398)]);
    let list4744 = vm.gc.listn(&[Object::Number(64049), Object::Number(20711)]);
    let list4745 = vm.gc.listn(&[Object::Number(64050), Object::Number(20813)]);
    let list4746 = vm.gc.listn(&[Object::Number(64051), Object::Number(21193)]);
    let list4747 = vm.gc.listn(&[Object::Number(64052), Object::Number(21220)]);
    let list4748 = vm.gc.listn(&[Object::Number(64053), Object::Number(21329)]);
    let list4749 = vm.gc.listn(&[Object::Number(64054), Object::Number(21917)]);
    let list4750 = vm.gc.listn(&[Object::Number(64055), Object::Number(22022)]);
    let list4751 = vm.gc.listn(&[Object::Number(64056), Object::Number(22120)]);
    let list4752 = vm.gc.listn(&[Object::Number(64057), Object::Number(22592)]);
    let list4753 = vm.gc.listn(&[Object::Number(64058), Object::Number(22696)]);
    let list4754 = vm.gc.listn(&[Object::Number(64059), Object::Number(23652)]);
    let list4755 = vm.gc.listn(&[Object::Number(64060), Object::Number(23662)]);
    let list4756 = vm.gc.listn(&[Object::Number(64061), Object::Number(24724)]);
    let list4757 = vm.gc.listn(&[Object::Number(64062), Object::Number(24936)]);
    let list4758 = vm.gc.listn(&[Object::Number(64063), Object::Number(24974)]);
    let list4759 = vm.gc.listn(&[Object::Number(64064), Object::Number(25074)]);
    let list4760 = vm.gc.listn(&[Object::Number(64065), Object::Number(25935)]);
    let list4761 = vm.gc.listn(&[Object::Number(64066), Object::Number(26082)]);
    let list4762 = vm.gc.listn(&[Object::Number(64067), Object::Number(26257)]);
    let list4763 = vm.gc.listn(&[Object::Number(64068), Object::Number(26757)]);
    let list4764 = vm.gc.listn(&[Object::Number(64069), Object::Number(28023)]);
    let list4765 = vm.gc.listn(&[Object::Number(64070), Object::Number(28186)]);
    let list4766 = vm.gc.listn(&[Object::Number(64071), Object::Number(28450)]);
    let list4767 = vm.gc.listn(&[Object::Number(64072), Object::Number(29038)]);
    let list4768 = vm.gc.listn(&[Object::Number(64073), Object::Number(29227)]);
    let list4769 = vm.gc.listn(&[Object::Number(64074), Object::Number(29730)]);
    let list4770 = vm.gc.listn(&[Object::Number(64075), Object::Number(30865)]);
    let list4771 = vm.gc.listn(&[Object::Number(64076), Object::Number(31038)]);
    let list4772 = vm.gc.listn(&[Object::Number(64077), Object::Number(31049)]);
    let list4773 = vm.gc.listn(&[Object::Number(64078), Object::Number(31048)]);
    let list4774 = vm.gc.listn(&[Object::Number(64079), Object::Number(31056)]);
    let list4775 = vm.gc.listn(&[Object::Number(64080), Object::Number(31062)]);
    let list4776 = vm.gc.listn(&[Object::Number(64081), Object::Number(31069)]);
    let list4777 = vm.gc.listn(&[Object::Number(64082), Object::Number(31117)]);
    let list4778 = vm.gc.listn(&[Object::Number(64083), Object::Number(31118)]);
    let list4779 = vm.gc.listn(&[Object::Number(64084), Object::Number(31296)]);
    let list4780 = vm.gc.listn(&[Object::Number(64085), Object::Number(31361)]);
    let list4781 = vm.gc.listn(&[Object::Number(64086), Object::Number(31680)]);
    let list4782 = vm.gc.listn(&[Object::Number(64087), Object::Number(32244)]);
    let list4783 = vm.gc.listn(&[Object::Number(64088), Object::Number(32265)]);
    let list4784 = vm.gc.listn(&[Object::Number(64089), Object::Number(32321)]);
    let list4785 = vm.gc.listn(&[Object::Number(64090), Object::Number(32626)]);
    let list4786 = vm.gc.listn(&[Object::Number(64091), Object::Number(32773)]);
    let list4787 = vm.gc.listn(&[Object::Number(64092), Object::Number(33261)]);
    let list4788 = vm.gc.listn(&[Object::Number(64093), Object::Number(33401)]);
    let list4789 = vm.gc.listn(&[Object::Number(64094), Object::Number(33401)]);
    let list4790 = vm.gc.listn(&[Object::Number(64095), Object::Number(33879)]);
    let list4791 = vm.gc.listn(&[Object::Number(64096), Object::Number(35088)]);
    let list4792 = vm.gc.listn(&[Object::Number(64097), Object::Number(35222)]);
    let list4793 = vm.gc.listn(&[Object::Number(64098), Object::Number(35585)]);
    let list4794 = vm.gc.listn(&[Object::Number(64099), Object::Number(35641)]);
    let list4795 = vm.gc.listn(&[Object::Number(64100), Object::Number(36051)]);
    let list4796 = vm.gc.listn(&[Object::Number(64101), Object::Number(36104)]);
    let list4797 = vm.gc.listn(&[Object::Number(64102), Object::Number(36790)]);
    let list4798 = vm.gc.listn(&[Object::Number(64103), Object::Number(36920)]);
    let list4799 = vm.gc.listn(&[Object::Number(64104), Object::Number(38627)]);
    let list4800 = vm.gc.listn(&[Object::Number(64105), Object::Number(38911)]);
    let list4801 = vm.gc.listn(&[Object::Number(64106), Object::Number(38971)]);
    let list4802 = vm.gc.listn(&[Object::Number(64112), Object::Number(20006)]);
    let list4803 = vm.gc.listn(&[Object::Number(64113), Object::Number(20917)]);
    let list4804 = vm.gc.listn(&[Object::Number(64114), Object::Number(20840)]);
    let list4805 = vm.gc.listn(&[Object::Number(64115), Object::Number(20352)]);
    let list4806 = vm.gc.listn(&[Object::Number(64116), Object::Number(20805)]);
    let list4807 = vm.gc.listn(&[Object::Number(64117), Object::Number(20864)]);
    let list4808 = vm.gc.listn(&[Object::Number(64118), Object::Number(21191)]);
    let list4809 = vm.gc.listn(&[Object::Number(64119), Object::Number(21242)]);
    let list4810 = vm.gc.listn(&[Object::Number(64120), Object::Number(21917)]);
    let list4811 = vm.gc.listn(&[Object::Number(64121), Object::Number(21845)]);
    let list4812 = vm.gc.listn(&[Object::Number(64122), Object::Number(21913)]);
    let list4813 = vm.gc.listn(&[Object::Number(64123), Object::Number(21986)]);
    let list4814 = vm.gc.listn(&[Object::Number(64124), Object::Number(22618)]);
    let list4815 = vm.gc.listn(&[Object::Number(64125), Object::Number(22707)]);
    let list4816 = vm.gc.listn(&[Object::Number(64126), Object::Number(22852)]);
    let list4817 = vm.gc.listn(&[Object::Number(64127), Object::Number(22868)]);
    let list4818 = vm.gc.listn(&[Object::Number(64128), Object::Number(23138)]);
    let list4819 = vm.gc.listn(&[Object::Number(64129), Object::Number(23336)]);
    let list4820 = vm.gc.listn(&[Object::Number(64130), Object::Number(24274)]);
    let list4821 = vm.gc.listn(&[Object::Number(64131), Object::Number(24281)]);
    let list4822 = vm.gc.listn(&[Object::Number(64132), Object::Number(24425)]);
    let list4823 = vm.gc.listn(&[Object::Number(64133), Object::Number(24493)]);
    let list4824 = vm.gc.listn(&[Object::Number(64134), Object::Number(24792)]);
    let list4825 = vm.gc.listn(&[Object::Number(64135), Object::Number(24910)]);
    let list4826 = vm.gc.listn(&[Object::Number(64136), Object::Number(24840)]);
    let list4827 = vm.gc.listn(&[Object::Number(64137), Object::Number(24974)]);
    let list4828 = vm.gc.listn(&[Object::Number(64138), Object::Number(24928)]);
    let list4829 = vm.gc.listn(&[Object::Number(64139), Object::Number(25074)]);
    let list4830 = vm.gc.listn(&[Object::Number(64140), Object::Number(25140)]);
    let list4831 = vm.gc.listn(&[Object::Number(64141), Object::Number(25540)]);
    let list4832 = vm.gc.listn(&[Object::Number(64142), Object::Number(25628)]);
    let list4833 = vm.gc.listn(&[Object::Number(64143), Object::Number(25682)]);
    let list4834 = vm.gc.listn(&[Object::Number(64144), Object::Number(25942)]);
    let list4835 = vm.gc.listn(&[Object::Number(64145), Object::Number(26228)]);
    let list4836 = vm.gc.listn(&[Object::Number(64146), Object::Number(26391)]);
    let list4837 = vm.gc.listn(&[Object::Number(64147), Object::Number(26395)]);
    let list4838 = vm.gc.listn(&[Object::Number(64148), Object::Number(26454)]);
    let list4839 = vm.gc.listn(&[Object::Number(64149), Object::Number(27513)]);
    let list4840 = vm.gc.listn(&[Object::Number(64150), Object::Number(27578)]);
    let list4841 = vm.gc.listn(&[Object::Number(64151), Object::Number(27969)]);
    let list4842 = vm.gc.listn(&[Object::Number(64152), Object::Number(28379)]);
    let list4843 = vm.gc.listn(&[Object::Number(64153), Object::Number(28363)]);
    let list4844 = vm.gc.listn(&[Object::Number(64154), Object::Number(28450)]);
    let list4845 = vm.gc.listn(&[Object::Number(64155), Object::Number(28702)]);
    let list4846 = vm.gc.listn(&[Object::Number(64156), Object::Number(29038)]);
    let list4847 = vm.gc.listn(&[Object::Number(64157), Object::Number(30631)]);
    let list4848 = vm.gc.listn(&[Object::Number(64158), Object::Number(29237)]);
    let list4849 = vm.gc.listn(&[Object::Number(64159), Object::Number(29359)]);
    let list4850 = vm.gc.listn(&[Object::Number(64160), Object::Number(29482)]);
    let list4851 = vm.gc.listn(&[Object::Number(64161), Object::Number(29809)]);
    let list4852 = vm.gc.listn(&[Object::Number(64162), Object::Number(29958)]);
    let list4853 = vm.gc.listn(&[Object::Number(64163), Object::Number(30011)]);
    let list4854 = vm.gc.listn(&[Object::Number(64164), Object::Number(30237)]);
    let list4855 = vm.gc.listn(&[Object::Number(64165), Object::Number(30239)]);
    let list4856 = vm.gc.listn(&[Object::Number(64166), Object::Number(30410)]);
    let list4857 = vm.gc.listn(&[Object::Number(64167), Object::Number(30427)]);
    let list4858 = vm.gc.listn(&[Object::Number(64168), Object::Number(30452)]);
    let list4859 = vm.gc.listn(&[Object::Number(64169), Object::Number(30538)]);
    let list4860 = vm.gc.listn(&[Object::Number(64170), Object::Number(30528)]);
    let list4861 = vm.gc.listn(&[Object::Number(64171), Object::Number(30924)]);
    let list4862 = vm.gc.listn(&[Object::Number(64172), Object::Number(31409)]);
    let list4863 = vm.gc.listn(&[Object::Number(64173), Object::Number(31680)]);
    let list4864 = vm.gc.listn(&[Object::Number(64174), Object::Number(31867)]);
    let list4865 = vm.gc.listn(&[Object::Number(64175), Object::Number(32091)]);
    let list4866 = vm.gc.listn(&[Object::Number(64176), Object::Number(32244)]);
    let list4867 = vm.gc.listn(&[Object::Number(64177), Object::Number(32574)]);
    let list4868 = vm.gc.listn(&[Object::Number(64178), Object::Number(32773)]);
    let list4869 = vm.gc.listn(&[Object::Number(64179), Object::Number(33618)]);
    let list4870 = vm.gc.listn(&[Object::Number(64180), Object::Number(33775)]);
    let list4871 = vm.gc.listn(&[Object::Number(64181), Object::Number(34681)]);
    let list4872 = vm.gc.listn(&[Object::Number(64182), Object::Number(35137)]);
    let list4873 = vm.gc.listn(&[Object::Number(64183), Object::Number(35206)]);
    let list4874 = vm.gc.listn(&[Object::Number(64184), Object::Number(35222)]);
    let list4875 = vm.gc.listn(&[Object::Number(64185), Object::Number(35519)]);
    let list4876 = vm.gc.listn(&[Object::Number(64186), Object::Number(35576)]);
    let list4877 = vm.gc.listn(&[Object::Number(64187), Object::Number(35531)]);
    let list4878 = vm.gc.listn(&[Object::Number(64188), Object::Number(35585)]);
    let list4879 = vm.gc.listn(&[Object::Number(64189), Object::Number(35582)]);
    let list4880 = vm.gc.listn(&[Object::Number(64190), Object::Number(35565)]);
    let list4881 = vm.gc.listn(&[Object::Number(64191), Object::Number(35641)]);
    let list4882 = vm.gc.listn(&[Object::Number(64192), Object::Number(35722)]);
    let list4883 = vm.gc.listn(&[Object::Number(64193), Object::Number(36104)]);
    let list4884 = vm.gc.listn(&[Object::Number(64194), Object::Number(36664)]);
    let list4885 = vm.gc.listn(&[Object::Number(64195), Object::Number(36978)]);
    let list4886 = vm.gc.listn(&[Object::Number(64196), Object::Number(37273)]);
    let list4887 = vm.gc.listn(&[Object::Number(64197), Object::Number(37494)]);
    let list4888 = vm.gc.listn(&[Object::Number(64198), Object::Number(38524)]);
    let list4889 = vm.gc.listn(&[Object::Number(64199), Object::Number(38627)]);
    let list4890 = vm.gc.listn(&[Object::Number(64200), Object::Number(38742)]);
    let list4891 = vm.gc.listn(&[Object::Number(64201), Object::Number(38875)]);
    let list4892 = vm.gc.listn(&[Object::Number(64202), Object::Number(38911)]);
    let list4893 = vm.gc.listn(&[Object::Number(64203), Object::Number(38923)]);
    let list4894 = vm.gc.listn(&[Object::Number(64204), Object::Number(38971)]);
    let list4895 = vm.gc.listn(&[Object::Number(64205), Object::Number(39698)]);
    let list4896 = vm.gc.listn(&[Object::Number(64206), Object::Number(40860)]);
    let list4897 = vm.gc.listn(&[Object::Number(64207), Object::Number(141386)]);
    let list4898 = vm.gc.listn(&[Object::Number(64208), Object::Number(141380)]);
    let list4899 = vm.gc.listn(&[Object::Number(64209), Object::Number(144341)]);
    let list4900 = vm.gc.listn(&[Object::Number(64210), Object::Number(15261)]);
    let list4901 = vm.gc.listn(&[Object::Number(64211), Object::Number(16408)]);
    let list4902 = vm.gc.listn(&[Object::Number(64212), Object::Number(16441)]);
    let list4903 = vm.gc.listn(&[Object::Number(64213), Object::Number(152137)]);
    let list4904 = vm.gc.listn(&[Object::Number(64214), Object::Number(154832)]);
    let list4905 = vm.gc.listn(&[Object::Number(64215), Object::Number(163539)]);
    let list4906 = vm.gc.listn(&[Object::Number(64216), Object::Number(40771)]);
    let list4907 = vm.gc.listn(&[Object::Number(64217), Object::Number(40846)]);
    let list4908 = vm.gc.listn(&[Object::Number(64285), Object::Number(1497), Object::Number(1460)]);
    let list4909 = vm.gc.listn(&[Object::Number(64287), Object::Number(1522), Object::Number(1463)]);
    let list4910 = vm.gc.listn(&[Object::Number(64298), Object::Number(1513), Object::Number(1473)]);
    let list4911 = vm.gc.listn(&[Object::Number(64299), Object::Number(1513), Object::Number(1474)]);
    let list4912 = vm.gc.listn(&[Object::Number(64300), Object::Number(64329), Object::Number(1473)]);
    let list4913 = vm.gc.listn(&[Object::Number(64301), Object::Number(64329), Object::Number(1474)]);
    let list4914 = vm.gc.listn(&[Object::Number(64302), Object::Number(1488), Object::Number(1463)]);
    let list4915 = vm.gc.listn(&[Object::Number(64303), Object::Number(1488), Object::Number(1464)]);
    let list4916 = vm.gc.listn(&[Object::Number(64304), Object::Number(1488), Object::Number(1468)]);
    let list4917 = vm.gc.listn(&[Object::Number(64305), Object::Number(1489), Object::Number(1468)]);
    let list4918 = vm.gc.listn(&[Object::Number(64306), Object::Number(1490), Object::Number(1468)]);
    let list4919 = vm.gc.listn(&[Object::Number(64307), Object::Number(1491), Object::Number(1468)]);
    let list4920 = vm.gc.listn(&[Object::Number(64308), Object::Number(1492), Object::Number(1468)]);
    let list4921 = vm.gc.listn(&[Object::Number(64309), Object::Number(1493), Object::Number(1468)]);
    let list4922 = vm.gc.listn(&[Object::Number(64310), Object::Number(1494), Object::Number(1468)]);
    let list4923 = vm.gc.listn(&[Object::Number(64312), Object::Number(1496), Object::Number(1468)]);
    let list4924 = vm.gc.listn(&[Object::Number(64313), Object::Number(1497), Object::Number(1468)]);
    let list4925 = vm.gc.listn(&[Object::Number(64314), Object::Number(1498), Object::Number(1468)]);
    let list4926 = vm.gc.listn(&[Object::Number(64315), Object::Number(1499), Object::Number(1468)]);
    let list4927 = vm.gc.listn(&[Object::Number(64316), Object::Number(1500), Object::Number(1468)]);
    let list4928 = vm.gc.listn(&[Object::Number(64318), Object::Number(1502), Object::Number(1468)]);
    let list4929 = vm.gc.listn(&[Object::Number(64320), Object::Number(1504), Object::Number(1468)]);
    let list4930 = vm.gc.listn(&[Object::Number(64321), Object::Number(1505), Object::Number(1468)]);
    let list4931 = vm.gc.listn(&[Object::Number(64323), Object::Number(1507), Object::Number(1468)]);
    let list4932 = vm.gc.listn(&[Object::Number(64324), Object::Number(1508), Object::Number(1468)]);
    let list4933 = vm.gc.listn(&[Object::Number(64326), Object::Number(1510), Object::Number(1468)]);
    let list4934 = vm.gc.listn(&[Object::Number(64327), Object::Number(1511), Object::Number(1468)]);
    let list4935 = vm.gc.listn(&[Object::Number(64328), Object::Number(1512), Object::Number(1468)]);
    let list4936 = vm.gc.listn(&[Object::Number(64329), Object::Number(1513), Object::Number(1468)]);
    let list4937 = vm.gc.listn(&[Object::Number(64330), Object::Number(1514), Object::Number(1468)]);
    let list4938 = vm.gc.listn(&[Object::Number(64331), Object::Number(1493), Object::Number(1465)]);
    let list4939 = vm.gc.listn(&[Object::Number(64332), Object::Number(1489), Object::Number(1471)]);
    let list4940 = vm.gc.listn(&[Object::Number(64333), Object::Number(1499), Object::Number(1471)]);
    let list4941 = vm.gc.listn(&[Object::Number(64334), Object::Number(1508), Object::Number(1471)]);
    let list4942 = vm.gc.listn(&[Object::Number(119134), Object::Number(119127), Object::Number(119141)]);
    let list4943 = vm.gc.listn(&[Object::Number(119135), Object::Number(119128), Object::Number(119141)]);
    let list4944 = vm.gc.listn(&[Object::Number(119136), Object::Number(119135), Object::Number(119150)]);
    let list4945 = vm.gc.listn(&[Object::Number(119137), Object::Number(119135), Object::Number(119151)]);
    let list4946 = vm.gc.listn(&[Object::Number(119138), Object::Number(119135), Object::Number(119152)]);
    let list4947 = vm.gc.listn(&[Object::Number(119139), Object::Number(119135), Object::Number(119153)]);
    let list4948 = vm.gc.listn(&[Object::Number(119140), Object::Number(119135), Object::Number(119154)]);
    let list4949 = vm.gc.listn(&[Object::Number(119227), Object::Number(119225), Object::Number(119141)]);
    let list4950 = vm.gc.listn(&[Object::Number(119228), Object::Number(119226), Object::Number(119141)]);
    let list4951 = vm.gc.listn(&[Object::Number(119229), Object::Number(119227), Object::Number(119150)]);
    let list4952 = vm.gc.listn(&[Object::Number(119230), Object::Number(119228), Object::Number(119150)]);
    let list4953 = vm.gc.listn(&[Object::Number(119231), Object::Number(119227), Object::Number(119151)]);
    let list4954 = vm.gc.listn(&[Object::Number(119232), Object::Number(119228), Object::Number(119151)]);
    let list4955 = vm.gc.listn(&[Object::Number(194560), Object::Number(20029)]);
    let list4956 = vm.gc.listn(&[Object::Number(194561), Object::Number(20024)]);
    let list4957 = vm.gc.listn(&[Object::Number(194562), Object::Number(20033)]);
    let list4958 = vm.gc.listn(&[Object::Number(194563), Object::Number(131362)]);
    let list4959 = vm.gc.listn(&[Object::Number(194564), Object::Number(20320)]);
    let list4960 = vm.gc.listn(&[Object::Number(194565), Object::Number(20398)]);
    let list4961 = vm.gc.listn(&[Object::Number(194566), Object::Number(20411)]);
    let list4962 = vm.gc.listn(&[Object::Number(194567), Object::Number(20482)]);
    let list4963 = vm.gc.listn(&[Object::Number(194568), Object::Number(20602)]);
    let list4964 = vm.gc.listn(&[Object::Number(194569), Object::Number(20633)]);
    let list4965 = vm.gc.listn(&[Object::Number(194570), Object::Number(20711)]);
    let list4966 = vm.gc.listn(&[Object::Number(194571), Object::Number(20687)]);
    let list4967 = vm.gc.listn(&[Object::Number(194572), Object::Number(13470)]);
    let list4968 = vm.gc.listn(&[Object::Number(194573), Object::Number(132666)]);
    let list4969 = vm.gc.listn(&[Object::Number(194574), Object::Number(20813)]);
    let list4970 = vm.gc.listn(&[Object::Number(194575), Object::Number(20820)]);
    let list4971 = vm.gc.listn(&[Object::Number(194576), Object::Number(20836)]);
    let list4972 = vm.gc.listn(&[Object::Number(194577), Object::Number(20855)]);
    let list4973 = vm.gc.listn(&[Object::Number(194578), Object::Number(132380)]);
    let list4974 = vm.gc.listn(&[Object::Number(194579), Object::Number(13497)]);
    let list4975 = vm.gc.listn(&[Object::Number(194580), Object::Number(20839)]);
    let list4976 = vm.gc.listn(&[Object::Number(194581), Object::Number(20877)]);
    let list4977 = vm.gc.listn(&[Object::Number(194582), Object::Number(132427)]);
    let list4978 = vm.gc.listn(&[Object::Number(194583), Object::Number(20887)]);
    let list4979 = vm.gc.listn(&[Object::Number(194584), Object::Number(20900)]);
    let list4980 = vm.gc.listn(&[Object::Number(194585), Object::Number(20172)]);
    let list4981 = vm.gc.listn(&[Object::Number(194586), Object::Number(20908)]);
    let list4982 = vm.gc.listn(&[Object::Number(194587), Object::Number(20917)]);
    let list4983 = vm.gc.listn(&[Object::Number(194588), Object::Number(168415)]);
    let list4984 = vm.gc.listn(&[Object::Number(194589), Object::Number(20981)]);
    let list4985 = vm.gc.listn(&[Object::Number(194590), Object::Number(20995)]);
    let list4986 = vm.gc.listn(&[Object::Number(194591), Object::Number(13535)]);
    let list4987 = vm.gc.listn(&[Object::Number(194592), Object::Number(21051)]);
    let list4988 = vm.gc.listn(&[Object::Number(194593), Object::Number(21062)]);
    let list4989 = vm.gc.listn(&[Object::Number(194594), Object::Number(21106)]);
    let list4990 = vm.gc.listn(&[Object::Number(194595), Object::Number(21111)]);
    let list4991 = vm.gc.listn(&[Object::Number(194596), Object::Number(13589)]);
    let list4992 = vm.gc.listn(&[Object::Number(194597), Object::Number(21191)]);
    let list4993 = vm.gc.listn(&[Object::Number(194598), Object::Number(21193)]);
    let list4994 = vm.gc.listn(&[Object::Number(194599), Object::Number(21220)]);
    let list4995 = vm.gc.listn(&[Object::Number(194600), Object::Number(21242)]);
    let list4996 = vm.gc.listn(&[Object::Number(194601), Object::Number(21253)]);
    let list4997 = vm.gc.listn(&[Object::Number(194602), Object::Number(21254)]);
    let list4998 = vm.gc.listn(&[Object::Number(194603), Object::Number(21271)]);
    let list4999 = vm.gc.listn(&[Object::Number(194604), Object::Number(21321)]);
    let list5000 = vm.gc.listn(&[Object::Number(194605), Object::Number(21329)]);
    let list5001 = vm.gc.listn(&[Object::Number(194606), Object::Number(21338)]);
    let list5002 = vm.gc.listn(&[Object::Number(194607), Object::Number(21363)]);
    let list5003 = vm.gc.listn(&[Object::Number(194608), Object::Number(21373)]);
    let list5004 = vm.gc.listn(&[Object::Number(194609), Object::Number(21375)]);
    let list5005 = vm.gc.listn(&[Object::Number(194610), Object::Number(21375)]);
    let list5006 = vm.gc.listn(&[Object::Number(194611), Object::Number(21375)]);
    let list5007 = vm.gc.listn(&[Object::Number(194612), Object::Number(133676)]);
    let list5008 = vm.gc.listn(&[Object::Number(194613), Object::Number(28784)]);
    let list5009 = vm.gc.listn(&[Object::Number(194614), Object::Number(21450)]);
    let list5010 = vm.gc.listn(&[Object::Number(194615), Object::Number(21471)]);
    let list5011 = vm.gc.listn(&[Object::Number(194616), Object::Number(133987)]);
    let list5012 = vm.gc.listn(&[Object::Number(194617), Object::Number(21483)]);
    let list5013 = vm.gc.listn(&[Object::Number(194618), Object::Number(21489)]);
    let list5014 = vm.gc.listn(&[Object::Number(194619), Object::Number(21510)]);
    let list5015 = vm.gc.listn(&[Object::Number(194620), Object::Number(21662)]);
    let list5016 = vm.gc.listn(&[Object::Number(194621), Object::Number(21560)]);
    let list5017 = vm.gc.listn(&[Object::Number(194622), Object::Number(21576)]);
    let list5018 = vm.gc.listn(&[Object::Number(194623), Object::Number(21608)]);
    let list5019 = vm.gc.listn(&[Object::Number(194624), Object::Number(21666)]);
    let list5020 = vm.gc.listn(&[Object::Number(194625), Object::Number(21750)]);
    let list5021 = vm.gc.listn(&[Object::Number(194626), Object::Number(21776)]);
    let list5022 = vm.gc.listn(&[Object::Number(194627), Object::Number(21843)]);
    let list5023 = vm.gc.listn(&[Object::Number(194628), Object::Number(21859)]);
    let list5024 = vm.gc.listn(&[Object::Number(194629), Object::Number(21892)]);
    let list5025 = vm.gc.listn(&[Object::Number(194630), Object::Number(21892)]);
    let list5026 = vm.gc.listn(&[Object::Number(194631), Object::Number(21913)]);
    let list5027 = vm.gc.listn(&[Object::Number(194632), Object::Number(21931)]);
    let list5028 = vm.gc.listn(&[Object::Number(194633), Object::Number(21939)]);
    let list5029 = vm.gc.listn(&[Object::Number(194634), Object::Number(21954)]);
    let list5030 = vm.gc.listn(&[Object::Number(194635), Object::Number(22294)]);
    let list5031 = vm.gc.listn(&[Object::Number(194636), Object::Number(22022)]);
    let list5032 = vm.gc.listn(&[Object::Number(194637), Object::Number(22295)]);
    let list5033 = vm.gc.listn(&[Object::Number(194638), Object::Number(22097)]);
    let list5034 = vm.gc.listn(&[Object::Number(194639), Object::Number(22132)]);
    let list5035 = vm.gc.listn(&[Object::Number(194640), Object::Number(20999)]);
    let list5036 = vm.gc.listn(&[Object::Number(194641), Object::Number(22766)]);
    let list5037 = vm.gc.listn(&[Object::Number(194642), Object::Number(22478)]);
    let list5038 = vm.gc.listn(&[Object::Number(194643), Object::Number(22516)]);
    let list5039 = vm.gc.listn(&[Object::Number(194644), Object::Number(22541)]);
    let list5040 = vm.gc.listn(&[Object::Number(194645), Object::Number(22411)]);
    let list5041 = vm.gc.listn(&[Object::Number(194646), Object::Number(22578)]);
    let list5042 = vm.gc.listn(&[Object::Number(194647), Object::Number(22577)]);
    let list5043 = vm.gc.listn(&[Object::Number(194648), Object::Number(22700)]);
    let list5044 = vm.gc.listn(&[Object::Number(194649), Object::Number(136420)]);
    let list5045 = vm.gc.listn(&[Object::Number(194650), Object::Number(22770)]);
    let list5046 = vm.gc.listn(&[Object::Number(194651), Object::Number(22775)]);
    let list5047 = vm.gc.listn(&[Object::Number(194652), Object::Number(22790)]);
    let list5048 = vm.gc.listn(&[Object::Number(194653), Object::Number(22810)]);
    let list5049 = vm.gc.listn(&[Object::Number(194654), Object::Number(22818)]);
    let list5050 = vm.gc.listn(&[Object::Number(194655), Object::Number(22882)]);
    let list5051 = vm.gc.listn(&[Object::Number(194656), Object::Number(136872)]);
    let list5052 = vm.gc.listn(&[Object::Number(194657), Object::Number(136938)]);
    let list5053 = vm.gc.listn(&[Object::Number(194658), Object::Number(23020)]);
    let list5054 = vm.gc.listn(&[Object::Number(194659), Object::Number(23067)]);
    let list5055 = vm.gc.listn(&[Object::Number(194660), Object::Number(23079)]);
    let list5056 = vm.gc.listn(&[Object::Number(194661), Object::Number(23000)]);
    let list5057 = vm.gc.listn(&[Object::Number(194662), Object::Number(23142)]);
    let list5058 = vm.gc.listn(&[Object::Number(194663), Object::Number(14062)]);
    let list5059 = vm.gc.listn(&[Object::Number(194664), Object::Number(14076)]);
    let list5060 = vm.gc.listn(&[Object::Number(194665), Object::Number(23304)]);
    let list5061 = vm.gc.listn(&[Object::Number(194666), Object::Number(23358)]);
    let list5062 = vm.gc.listn(&[Object::Number(194667), Object::Number(23358)]);
    let list5063 = vm.gc.listn(&[Object::Number(194668), Object::Number(137672)]);
    let list5064 = vm.gc.listn(&[Object::Number(194669), Object::Number(23491)]);
    let list5065 = vm.gc.listn(&[Object::Number(194670), Object::Number(23512)]);
    let list5066 = vm.gc.listn(&[Object::Number(194671), Object::Number(23527)]);
    let list5067 = vm.gc.listn(&[Object::Number(194672), Object::Number(23539)]);
    let list5068 = vm.gc.listn(&[Object::Number(194673), Object::Number(138008)]);
    let list5069 = vm.gc.listn(&[Object::Number(194674), Object::Number(23551)]);
    let list5070 = vm.gc.listn(&[Object::Number(194675), Object::Number(23558)]);
    let list5071 = vm.gc.listn(&[Object::Number(194676), Object::Number(24403)]);
    let list5072 = vm.gc.listn(&[Object::Number(194677), Object::Number(23586)]);
    let list5073 = vm.gc.listn(&[Object::Number(194678), Object::Number(14209)]);
    let list5074 = vm.gc.listn(&[Object::Number(194679), Object::Number(23648)]);
    let list5075 = vm.gc.listn(&[Object::Number(194680), Object::Number(23662)]);
    let list5076 = vm.gc.listn(&[Object::Number(194681), Object::Number(23744)]);
    let list5077 = vm.gc.listn(&[Object::Number(194682), Object::Number(23693)]);
    let list5078 = vm.gc.listn(&[Object::Number(194683), Object::Number(138724)]);
    let list5079 = vm.gc.listn(&[Object::Number(194684), Object::Number(23875)]);
    let list5080 = vm.gc.listn(&[Object::Number(194685), Object::Number(138726)]);
    let list5081 = vm.gc.listn(&[Object::Number(194686), Object::Number(23918)]);
    let list5082 = vm.gc.listn(&[Object::Number(194687), Object::Number(23915)]);
    let list5083 = vm.gc.listn(&[Object::Number(194688), Object::Number(23932)]);
    let list5084 = vm.gc.listn(&[Object::Number(194689), Object::Number(24033)]);
    let list5085 = vm.gc.listn(&[Object::Number(194690), Object::Number(24034)]);
    let list5086 = vm.gc.listn(&[Object::Number(194691), Object::Number(14383)]);
    let list5087 = vm.gc.listn(&[Object::Number(194692), Object::Number(24061)]);
    let list5088 = vm.gc.listn(&[Object::Number(194693), Object::Number(24104)]);
    let list5089 = vm.gc.listn(&[Object::Number(194694), Object::Number(24125)]);
    let list5090 = vm.gc.listn(&[Object::Number(194695), Object::Number(24169)]);
    let list5091 = vm.gc.listn(&[Object::Number(194696), Object::Number(14434)]);
    let list5092 = vm.gc.listn(&[Object::Number(194697), Object::Number(139651)]);
    let list5093 = vm.gc.listn(&[Object::Number(194698), Object::Number(14460)]);
    let list5094 = vm.gc.listn(&[Object::Number(194699), Object::Number(24240)]);
    let list5095 = vm.gc.listn(&[Object::Number(194700), Object::Number(24243)]);
    let list5096 = vm.gc.listn(&[Object::Number(194701), Object::Number(24246)]);
    let list5097 = vm.gc.listn(&[Object::Number(194702), Object::Number(24266)]);
    let list5098 = vm.gc.listn(&[Object::Number(194703), Object::Number(172946)]);
    let list5099 = vm.gc.listn(&[Object::Number(194704), Object::Number(24318)]);
    let list5100 = vm.gc.listn(&[Object::Number(194705), Object::Number(140081)]);
    let list5101 = vm.gc.listn(&[Object::Number(194706), Object::Number(140081)]);
    let list5102 = vm.gc.listn(&[Object::Number(194707), Object::Number(33281)]);
    let list5103 = vm.gc.listn(&[Object::Number(194708), Object::Number(24354)]);
    let list5104 = vm.gc.listn(&[Object::Number(194709), Object::Number(24354)]);
    let list5105 = vm.gc.listn(&[Object::Number(194710), Object::Number(14535)]);
    let list5106 = vm.gc.listn(&[Object::Number(194711), Object::Number(144056)]);
    let list5107 = vm.gc.listn(&[Object::Number(194712), Object::Number(156122)]);
    let list5108 = vm.gc.listn(&[Object::Number(194713), Object::Number(24418)]);
    let list5109 = vm.gc.listn(&[Object::Number(194714), Object::Number(24427)]);
    let list5110 = vm.gc.listn(&[Object::Number(194715), Object::Number(14563)]);
    let list5111 = vm.gc.listn(&[Object::Number(194716), Object::Number(24474)]);
    let list5112 = vm.gc.listn(&[Object::Number(194717), Object::Number(24525)]);
    let list5113 = vm.gc.listn(&[Object::Number(194718), Object::Number(24535)]);
    let list5114 = vm.gc.listn(&[Object::Number(194719), Object::Number(24569)]);
    let list5115 = vm.gc.listn(&[Object::Number(194720), Object::Number(24705)]);
    let list5116 = vm.gc.listn(&[Object::Number(194721), Object::Number(14650)]);
    let list5117 = vm.gc.listn(&[Object::Number(194722), Object::Number(14620)]);
    let list5118 = vm.gc.listn(&[Object::Number(194723), Object::Number(24724)]);
    let list5119 = vm.gc.listn(&[Object::Number(194724), Object::Number(141012)]);
    let list5120 = vm.gc.listn(&[Object::Number(194725), Object::Number(24775)]);
    let list5121 = vm.gc.listn(&[Object::Number(194726), Object::Number(24904)]);
    let list5122 = vm.gc.listn(&[Object::Number(194727), Object::Number(24908)]);
    let list5123 = vm.gc.listn(&[Object::Number(194728), Object::Number(24910)]);
    let list5124 = vm.gc.listn(&[Object::Number(194729), Object::Number(24908)]);
    let list5125 = vm.gc.listn(&[Object::Number(194730), Object::Number(24954)]);
    let list5126 = vm.gc.listn(&[Object::Number(194731), Object::Number(24974)]);
    let list5127 = vm.gc.listn(&[Object::Number(194732), Object::Number(25010)]);
    let list5128 = vm.gc.listn(&[Object::Number(194733), Object::Number(24996)]);
    let list5129 = vm.gc.listn(&[Object::Number(194734), Object::Number(25007)]);
    let list5130 = vm.gc.listn(&[Object::Number(194735), Object::Number(25054)]);
    let list5131 = vm.gc.listn(&[Object::Number(194736), Object::Number(25074)]);
    let list5132 = vm.gc.listn(&[Object::Number(194737), Object::Number(25078)]);
    let list5133 = vm.gc.listn(&[Object::Number(194738), Object::Number(25104)]);
    let list5134 = vm.gc.listn(&[Object::Number(194739), Object::Number(25115)]);
    let list5135 = vm.gc.listn(&[Object::Number(194740), Object::Number(25181)]);
    let list5136 = vm.gc.listn(&[Object::Number(194741), Object::Number(25265)]);
    let list5137 = vm.gc.listn(&[Object::Number(194742), Object::Number(25300)]);
    let list5138 = vm.gc.listn(&[Object::Number(194743), Object::Number(25424)]);
    let list5139 = vm.gc.listn(&[Object::Number(194744), Object::Number(142092)]);
    let list5140 = vm.gc.listn(&[Object::Number(194745), Object::Number(25405)]);
    let list5141 = vm.gc.listn(&[Object::Number(194746), Object::Number(25340)]);
    let list5142 = vm.gc.listn(&[Object::Number(194747), Object::Number(25448)]);
    let list5143 = vm.gc.listn(&[Object::Number(194748), Object::Number(25475)]);
    let list5144 = vm.gc.listn(&[Object::Number(194749), Object::Number(25572)]);
    let list5145 = vm.gc.listn(&[Object::Number(194750), Object::Number(142321)]);
    let list5146 = vm.gc.listn(&[Object::Number(194751), Object::Number(25634)]);
    let list5147 = vm.gc.listn(&[Object::Number(194752), Object::Number(25541)]);
    let list5148 = vm.gc.listn(&[Object::Number(194753), Object::Number(25513)]);
    let list5149 = vm.gc.listn(&[Object::Number(194754), Object::Number(14894)]);
    let list5150 = vm.gc.listn(&[Object::Number(194755), Object::Number(25705)]);
    let list5151 = vm.gc.listn(&[Object::Number(194756), Object::Number(25726)]);
    let list5152 = vm.gc.listn(&[Object::Number(194757), Object::Number(25757)]);
    let list5153 = vm.gc.listn(&[Object::Number(194758), Object::Number(25719)]);
    let list5154 = vm.gc.listn(&[Object::Number(194759), Object::Number(14956)]);
    let list5155 = vm.gc.listn(&[Object::Number(194760), Object::Number(25935)]);
    let list5156 = vm.gc.listn(&[Object::Number(194761), Object::Number(25964)]);
    let list5157 = vm.gc.listn(&[Object::Number(194762), Object::Number(143370)]);
    let list5158 = vm.gc.listn(&[Object::Number(194763), Object::Number(26083)]);
    let list5159 = vm.gc.listn(&[Object::Number(194764), Object::Number(26360)]);
    let list5160 = vm.gc.listn(&[Object::Number(194765), Object::Number(26185)]);
    let list5161 = vm.gc.listn(&[Object::Number(194766), Object::Number(15129)]);
    let list5162 = vm.gc.listn(&[Object::Number(194767), Object::Number(26257)]);
    let list5163 = vm.gc.listn(&[Object::Number(194768), Object::Number(15112)]);
    let list5164 = vm.gc.listn(&[Object::Number(194769), Object::Number(15076)]);
    let list5165 = vm.gc.listn(&[Object::Number(194770), Object::Number(20882)]);
    let list5166 = vm.gc.listn(&[Object::Number(194771), Object::Number(20885)]);
    let list5167 = vm.gc.listn(&[Object::Number(194772), Object::Number(26368)]);
    let list5168 = vm.gc.listn(&[Object::Number(194773), Object::Number(26268)]);
    let list5169 = vm.gc.listn(&[Object::Number(194774), Object::Number(32941)]);
    let list5170 = vm.gc.listn(&[Object::Number(194775), Object::Number(17369)]);
    let list5171 = vm.gc.listn(&[Object::Number(194776), Object::Number(26391)]);
    let list5172 = vm.gc.listn(&[Object::Number(194777), Object::Number(26395)]);
    let list5173 = vm.gc.listn(&[Object::Number(194778), Object::Number(26401)]);
    let list5174 = vm.gc.listn(&[Object::Number(194779), Object::Number(26462)]);
    let list5175 = vm.gc.listn(&[Object::Number(194780), Object::Number(26451)]);
    let list5176 = vm.gc.listn(&[Object::Number(194781), Object::Number(144323)]);
    let list5177 = vm.gc.listn(&[Object::Number(194782), Object::Number(15177)]);
    let list5178 = vm.gc.listn(&[Object::Number(194783), Object::Number(26618)]);
    let list5179 = vm.gc.listn(&[Object::Number(194784), Object::Number(26501)]);
    let list5180 = vm.gc.listn(&[Object::Number(194785), Object::Number(26706)]);
    let list5181 = vm.gc.listn(&[Object::Number(194786), Object::Number(26757)]);
    let list5182 = vm.gc.listn(&[Object::Number(194787), Object::Number(144493)]);
    let list5183 = vm.gc.listn(&[Object::Number(194788), Object::Number(26766)]);
    let list5184 = vm.gc.listn(&[Object::Number(194789), Object::Number(26655)]);
    let list5185 = vm.gc.listn(&[Object::Number(194790), Object::Number(26900)]);
    let list5186 = vm.gc.listn(&[Object::Number(194791), Object::Number(15261)]);
    let list5187 = vm.gc.listn(&[Object::Number(194792), Object::Number(26946)]);
    let list5188 = vm.gc.listn(&[Object::Number(194793), Object::Number(27043)]);
    let list5189 = vm.gc.listn(&[Object::Number(194794), Object::Number(27114)]);
    let list5190 = vm.gc.listn(&[Object::Number(194795), Object::Number(27304)]);
    let list5191 = vm.gc.listn(&[Object::Number(194796), Object::Number(145059)]);
    let list5192 = vm.gc.listn(&[Object::Number(194797), Object::Number(27355)]);
    let list5193 = vm.gc.listn(&[Object::Number(194798), Object::Number(15384)]);
    let list5194 = vm.gc.listn(&[Object::Number(194799), Object::Number(27425)]);
    let list5195 = vm.gc.listn(&[Object::Number(194800), Object::Number(145575)]);
    let list5196 = vm.gc.listn(&[Object::Number(194801), Object::Number(27476)]);
    let list5197 = vm.gc.listn(&[Object::Number(194802), Object::Number(15438)]);
    let list5198 = vm.gc.listn(&[Object::Number(194803), Object::Number(27506)]);
    let list5199 = vm.gc.listn(&[Object::Number(194804), Object::Number(27551)]);
    let list5200 = vm.gc.listn(&[Object::Number(194805), Object::Number(27578)]);
    let list5201 = vm.gc.listn(&[Object::Number(194806), Object::Number(27579)]);
    let list5202 = vm.gc.listn(&[Object::Number(194807), Object::Number(146061)]);
    let list5203 = vm.gc.listn(&[Object::Number(194808), Object::Number(138507)]);
    let list5204 = vm.gc.listn(&[Object::Number(194809), Object::Number(146170)]);
    let list5205 = vm.gc.listn(&[Object::Number(194810), Object::Number(27726)]);
    let list5206 = vm.gc.listn(&[Object::Number(194811), Object::Number(146620)]);
    let list5207 = vm.gc.listn(&[Object::Number(194812), Object::Number(27839)]);
    let list5208 = vm.gc.listn(&[Object::Number(194813), Object::Number(27853)]);
    let list5209 = vm.gc.listn(&[Object::Number(194814), Object::Number(27751)]);
    let list5210 = vm.gc.listn(&[Object::Number(194815), Object::Number(27926)]);
    let list5211 = vm.gc.listn(&[Object::Number(194816), Object::Number(27966)]);
    let list5212 = vm.gc.listn(&[Object::Number(194817), Object::Number(28023)]);
    let list5213 = vm.gc.listn(&[Object::Number(194818), Object::Number(27969)]);
    let list5214 = vm.gc.listn(&[Object::Number(194819), Object::Number(28009)]);
    let list5215 = vm.gc.listn(&[Object::Number(194820), Object::Number(28024)]);
    let list5216 = vm.gc.listn(&[Object::Number(194821), Object::Number(28037)]);
    let list5217 = vm.gc.listn(&[Object::Number(194822), Object::Number(146718)]);
    let list5218 = vm.gc.listn(&[Object::Number(194823), Object::Number(27956)]);
    let list5219 = vm.gc.listn(&[Object::Number(194824), Object::Number(28207)]);
    let list5220 = vm.gc.listn(&[Object::Number(194825), Object::Number(28270)]);
    let list5221 = vm.gc.listn(&[Object::Number(194826), Object::Number(15667)]);
    let list5222 = vm.gc.listn(&[Object::Number(194827), Object::Number(28363)]);
    let list5223 = vm.gc.listn(&[Object::Number(194828), Object::Number(28359)]);
    let list5224 = vm.gc.listn(&[Object::Number(194829), Object::Number(147153)]);
    let list5225 = vm.gc.listn(&[Object::Number(194830), Object::Number(28153)]);
    let list5226 = vm.gc.listn(&[Object::Number(194831), Object::Number(28526)]);
    let list5227 = vm.gc.listn(&[Object::Number(194832), Object::Number(147294)]);
    let list5228 = vm.gc.listn(&[Object::Number(194833), Object::Number(147342)]);
    let list5229 = vm.gc.listn(&[Object::Number(194834), Object::Number(28614)]);
    let list5230 = vm.gc.listn(&[Object::Number(194835), Object::Number(28729)]);
    let list5231 = vm.gc.listn(&[Object::Number(194836), Object::Number(28702)]);
    let list5232 = vm.gc.listn(&[Object::Number(194837), Object::Number(28699)]);
    let list5233 = vm.gc.listn(&[Object::Number(194838), Object::Number(15766)]);
    let list5234 = vm.gc.listn(&[Object::Number(194839), Object::Number(28746)]);
    let list5235 = vm.gc.listn(&[Object::Number(194840), Object::Number(28797)]);
    let list5236 = vm.gc.listn(&[Object::Number(194841), Object::Number(28791)]);
    let list5237 = vm.gc.listn(&[Object::Number(194842), Object::Number(28845)]);
    let list5238 = vm.gc.listn(&[Object::Number(194843), Object::Number(132389)]);
    let list5239 = vm.gc.listn(&[Object::Number(194844), Object::Number(28997)]);
    let list5240 = vm.gc.listn(&[Object::Number(194845), Object::Number(148067)]);
    let list5241 = vm.gc.listn(&[Object::Number(194846), Object::Number(29084)]);
    let list5242 = vm.gc.listn(&[Object::Number(194847), Object::Number(148395)]);
    let list5243 = vm.gc.listn(&[Object::Number(194848), Object::Number(29224)]);
    let list5244 = vm.gc.listn(&[Object::Number(194849), Object::Number(29237)]);
    let list5245 = vm.gc.listn(&[Object::Number(194850), Object::Number(29264)]);
    let list5246 = vm.gc.listn(&[Object::Number(194851), Object::Number(149000)]);
    let list5247 = vm.gc.listn(&[Object::Number(194852), Object::Number(29312)]);
    let list5248 = vm.gc.listn(&[Object::Number(194853), Object::Number(29333)]);
    let list5249 = vm.gc.listn(&[Object::Number(194854), Object::Number(149301)]);
    let list5250 = vm.gc.listn(&[Object::Number(194855), Object::Number(149524)]);
    let list5251 = vm.gc.listn(&[Object::Number(194856), Object::Number(29562)]);
    let list5252 = vm.gc.listn(&[Object::Number(194857), Object::Number(29579)]);
    let list5253 = vm.gc.listn(&[Object::Number(194858), Object::Number(16044)]);
    let list5254 = vm.gc.listn(&[Object::Number(194859), Object::Number(29605)]);
    let list5255 = vm.gc.listn(&[Object::Number(194860), Object::Number(16056)]);
    let list5256 = vm.gc.listn(&[Object::Number(194861), Object::Number(16056)]);
    let list5257 = vm.gc.listn(&[Object::Number(194862), Object::Number(29767)]);
    let list5258 = vm.gc.listn(&[Object::Number(194863), Object::Number(29788)]);
    let list5259 = vm.gc.listn(&[Object::Number(194864), Object::Number(29809)]);
    let list5260 = vm.gc.listn(&[Object::Number(194865), Object::Number(29829)]);
    let list5261 = vm.gc.listn(&[Object::Number(194866), Object::Number(29898)]);
    let list5262 = vm.gc.listn(&[Object::Number(194867), Object::Number(16155)]);
    let list5263 = vm.gc.listn(&[Object::Number(194868), Object::Number(29988)]);
    let list5264 = vm.gc.listn(&[Object::Number(194869), Object::Number(150582)]);
    let list5265 = vm.gc.listn(&[Object::Number(194870), Object::Number(30014)]);
    let list5266 = vm.gc.listn(&[Object::Number(194871), Object::Number(150674)]);
    let list5267 = vm.gc.listn(&[Object::Number(194872), Object::Number(30064)]);
    let list5268 = vm.gc.listn(&[Object::Number(194873), Object::Number(139679)]);
    let list5269 = vm.gc.listn(&[Object::Number(194874), Object::Number(30224)]);
    let list5270 = vm.gc.listn(&[Object::Number(194875), Object::Number(151457)]);
    let list5271 = vm.gc.listn(&[Object::Number(194876), Object::Number(151480)]);
    let list5272 = vm.gc.listn(&[Object::Number(194877), Object::Number(151620)]);
    let list5273 = vm.gc.listn(&[Object::Number(194878), Object::Number(16380)]);
    let list5274 = vm.gc.listn(&[Object::Number(194879), Object::Number(16392)]);
    let list5275 = vm.gc.listn(&[Object::Number(194880), Object::Number(30452)]);
    let list5276 = vm.gc.listn(&[Object::Number(194881), Object::Number(151795)]);
    let list5277 = vm.gc.listn(&[Object::Number(194882), Object::Number(151794)]);
    let list5278 = vm.gc.listn(&[Object::Number(194883), Object::Number(151833)]);
    let list5279 = vm.gc.listn(&[Object::Number(194884), Object::Number(151859)]);
    let list5280 = vm.gc.listn(&[Object::Number(194885), Object::Number(30494)]);
    let list5281 = vm.gc.listn(&[Object::Number(194886), Object::Number(30495)]);
    let list5282 = vm.gc.listn(&[Object::Number(194887), Object::Number(30495)]);
    let list5283 = vm.gc.listn(&[Object::Number(194888), Object::Number(30538)]);
    let list5284 = vm.gc.listn(&[Object::Number(194889), Object::Number(16441)]);
    let list5285 = vm.gc.listn(&[Object::Number(194890), Object::Number(30603)]);
    let list5286 = vm.gc.listn(&[Object::Number(194891), Object::Number(16454)]);
    let list5287 = vm.gc.listn(&[Object::Number(194892), Object::Number(16534)]);
    let list5288 = vm.gc.listn(&[Object::Number(194893), Object::Number(152605)]);
    let list5289 = vm.gc.listn(&[Object::Number(194894), Object::Number(30798)]);
    let list5290 = vm.gc.listn(&[Object::Number(194895), Object::Number(30860)]);
    let list5291 = vm.gc.listn(&[Object::Number(194896), Object::Number(30924)]);
    let list5292 = vm.gc.listn(&[Object::Number(194897), Object::Number(16611)]);
    let list5293 = vm.gc.listn(&[Object::Number(194898), Object::Number(153126)]);
    let list5294 = vm.gc.listn(&[Object::Number(194899), Object::Number(31062)]);
    let list5295 = vm.gc.listn(&[Object::Number(194900), Object::Number(153242)]);
    let list5296 = vm.gc.listn(&[Object::Number(194901), Object::Number(153285)]);
    let list5297 = vm.gc.listn(&[Object::Number(194902), Object::Number(31119)]);
    let list5298 = vm.gc.listn(&[Object::Number(194903), Object::Number(31211)]);
    let list5299 = vm.gc.listn(&[Object::Number(194904), Object::Number(16687)]);
    let list5300 = vm.gc.listn(&[Object::Number(194905), Object::Number(31296)]);
    let list5301 = vm.gc.listn(&[Object::Number(194906), Object::Number(31306)]);
    let list5302 = vm.gc.listn(&[Object::Number(194907), Object::Number(31311)]);
    let list5303 = vm.gc.listn(&[Object::Number(194908), Object::Number(153980)]);
    let list5304 = vm.gc.listn(&[Object::Number(194909), Object::Number(154279)]);
    let list5305 = vm.gc.listn(&[Object::Number(194910), Object::Number(154279)]);
    let list5306 = vm.gc.listn(&[Object::Number(194911), Object::Number(31470)]);
    let list5307 = vm.gc.listn(&[Object::Number(194912), Object::Number(16898)]);
    let list5308 = vm.gc.listn(&[Object::Number(194913), Object::Number(154539)]);
    let list5309 = vm.gc.listn(&[Object::Number(194914), Object::Number(31686)]);
    let list5310 = vm.gc.listn(&[Object::Number(194915), Object::Number(31689)]);
    let list5311 = vm.gc.listn(&[Object::Number(194916), Object::Number(16935)]);
    let list5312 = vm.gc.listn(&[Object::Number(194917), Object::Number(154752)]);
    let list5313 = vm.gc.listn(&[Object::Number(194918), Object::Number(31954)]);
    let list5314 = vm.gc.listn(&[Object::Number(194919), Object::Number(17056)]);
    let list5315 = vm.gc.listn(&[Object::Number(194920), Object::Number(31976)]);
    let list5316 = vm.gc.listn(&[Object::Number(194921), Object::Number(31971)]);
    let list5317 = vm.gc.listn(&[Object::Number(194922), Object::Number(32000)]);
    let list5318 = vm.gc.listn(&[Object::Number(194923), Object::Number(155526)]);
    let list5319 = vm.gc.listn(&[Object::Number(194924), Object::Number(32099)]);
    let list5320 = vm.gc.listn(&[Object::Number(194925), Object::Number(17153)]);
    let list5321 = vm.gc.listn(&[Object::Number(194926), Object::Number(32199)]);
    let list5322 = vm.gc.listn(&[Object::Number(194927), Object::Number(32258)]);
    let list5323 = vm.gc.listn(&[Object::Number(194928), Object::Number(32325)]);
    let list5324 = vm.gc.listn(&[Object::Number(194929), Object::Number(17204)]);
    let list5325 = vm.gc.listn(&[Object::Number(194930), Object::Number(156200)]);
    let list5326 = vm.gc.listn(&[Object::Number(194931), Object::Number(156231)]);
    let list5327 = vm.gc.listn(&[Object::Number(194932), Object::Number(17241)]);
    let list5328 = vm.gc.listn(&[Object::Number(194933), Object::Number(156377)]);
    let list5329 = vm.gc.listn(&[Object::Number(194934), Object::Number(32634)]);
    let list5330 = vm.gc.listn(&[Object::Number(194935), Object::Number(156478)]);
    let list5331 = vm.gc.listn(&[Object::Number(194936), Object::Number(32661)]);
    let list5332 = vm.gc.listn(&[Object::Number(194937), Object::Number(32762)]);
    let list5333 = vm.gc.listn(&[Object::Number(194938), Object::Number(32773)]);
    let list5334 = vm.gc.listn(&[Object::Number(194939), Object::Number(156890)]);
    let list5335 = vm.gc.listn(&[Object::Number(194940), Object::Number(156963)]);
    let list5336 = vm.gc.listn(&[Object::Number(194941), Object::Number(32864)]);
    let list5337 = vm.gc.listn(&[Object::Number(194942), Object::Number(157096)]);
    let list5338 = vm.gc.listn(&[Object::Number(194943), Object::Number(32880)]);
    let list5339 = vm.gc.listn(&[Object::Number(194944), Object::Number(144223)]);
    let list5340 = vm.gc.listn(&[Object::Number(194945), Object::Number(17365)]);
    let list5341 = vm.gc.listn(&[Object::Number(194946), Object::Number(32946)]);
    let list5342 = vm.gc.listn(&[Object::Number(194947), Object::Number(33027)]);
    let list5343 = vm.gc.listn(&[Object::Number(194948), Object::Number(17419)]);
    let list5344 = vm.gc.listn(&[Object::Number(194949), Object::Number(33086)]);
    let list5345 = vm.gc.listn(&[Object::Number(194950), Object::Number(23221)]);
    let list5346 = vm.gc.listn(&[Object::Number(194951), Object::Number(157607)]);
    let list5347 = vm.gc.listn(&[Object::Number(194952), Object::Number(157621)]);
    let list5348 = vm.gc.listn(&[Object::Number(194953), Object::Number(144275)]);
    let list5349 = vm.gc.listn(&[Object::Number(194954), Object::Number(144284)]);
    let list5350 = vm.gc.listn(&[Object::Number(194955), Object::Number(33281)]);
    let list5351 = vm.gc.listn(&[Object::Number(194956), Object::Number(33284)]);
    let list5352 = vm.gc.listn(&[Object::Number(194957), Object::Number(36766)]);
    let list5353 = vm.gc.listn(&[Object::Number(194958), Object::Number(17515)]);
    let list5354 = vm.gc.listn(&[Object::Number(194959), Object::Number(33425)]);
    let list5355 = vm.gc.listn(&[Object::Number(194960), Object::Number(33419)]);
    let list5356 = vm.gc.listn(&[Object::Number(194961), Object::Number(33437)]);
    let list5357 = vm.gc.listn(&[Object::Number(194962), Object::Number(21171)]);
    let list5358 = vm.gc.listn(&[Object::Number(194963), Object::Number(33457)]);
    let list5359 = vm.gc.listn(&[Object::Number(194964), Object::Number(33459)]);
    let list5360 = vm.gc.listn(&[Object::Number(194965), Object::Number(33469)]);
    let list5361 = vm.gc.listn(&[Object::Number(194966), Object::Number(33510)]);
    let list5362 = vm.gc.listn(&[Object::Number(194967), Object::Number(158524)]);
    let list5363 = vm.gc.listn(&[Object::Number(194968), Object::Number(33509)]);
    let list5364 = vm.gc.listn(&[Object::Number(194969), Object::Number(33565)]);
    let list5365 = vm.gc.listn(&[Object::Number(194970), Object::Number(33635)]);
    let list5366 = vm.gc.listn(&[Object::Number(194971), Object::Number(33709)]);
    let list5367 = vm.gc.listn(&[Object::Number(194972), Object::Number(33571)]);
    let list5368 = vm.gc.listn(&[Object::Number(194973), Object::Number(33725)]);
    let list5369 = vm.gc.listn(&[Object::Number(194974), Object::Number(33767)]);
    let list5370 = vm.gc.listn(&[Object::Number(194975), Object::Number(33879)]);
    let list5371 = vm.gc.listn(&[Object::Number(194976), Object::Number(33619)]);
    let list5372 = vm.gc.listn(&[Object::Number(194977), Object::Number(33738)]);
    let list5373 = vm.gc.listn(&[Object::Number(194978), Object::Number(33740)]);
    let list5374 = vm.gc.listn(&[Object::Number(194979), Object::Number(33756)]);
    let list5375 = vm.gc.listn(&[Object::Number(194980), Object::Number(158774)]);
    let list5376 = vm.gc.listn(&[Object::Number(194981), Object::Number(159083)]);
    let list5377 = vm.gc.listn(&[Object::Number(194982), Object::Number(158933)]);
    let list5378 = vm.gc.listn(&[Object::Number(194983), Object::Number(17707)]);
    let list5379 = vm.gc.listn(&[Object::Number(194984), Object::Number(34033)]);
    let list5380 = vm.gc.listn(&[Object::Number(194985), Object::Number(34035)]);
    let list5381 = vm.gc.listn(&[Object::Number(194986), Object::Number(34070)]);
    let list5382 = vm.gc.listn(&[Object::Number(194987), Object::Number(160714)]);
    let list5383 = vm.gc.listn(&[Object::Number(194988), Object::Number(34148)]);
    let list5384 = vm.gc.listn(&[Object::Number(194989), Object::Number(159532)]);
    let list5385 = vm.gc.listn(&[Object::Number(194990), Object::Number(17757)]);
    let list5386 = vm.gc.listn(&[Object::Number(194991), Object::Number(17761)]);
    let list5387 = vm.gc.listn(&[Object::Number(194992), Object::Number(159665)]);
    let list5388 = vm.gc.listn(&[Object::Number(194993), Object::Number(159954)]);
    let list5389 = vm.gc.listn(&[Object::Number(194994), Object::Number(17771)]);
    let list5390 = vm.gc.listn(&[Object::Number(194995), Object::Number(34384)]);
    let list5391 = vm.gc.listn(&[Object::Number(194996), Object::Number(34396)]);
    let list5392 = vm.gc.listn(&[Object::Number(194997), Object::Number(34407)]);
    let list5393 = vm.gc.listn(&[Object::Number(194998), Object::Number(34409)]);
    let list5394 = vm.gc.listn(&[Object::Number(194999), Object::Number(34473)]);
    let list5395 = vm.gc.listn(&[Object::Number(195000), Object::Number(34440)]);
    let list5396 = vm.gc.listn(&[Object::Number(195001), Object::Number(34574)]);
    let list5397 = vm.gc.listn(&[Object::Number(195002), Object::Number(34530)]);
    let list5398 = vm.gc.listn(&[Object::Number(195003), Object::Number(34681)]);
    let list5399 = vm.gc.listn(&[Object::Number(195004), Object::Number(34600)]);
    let list5400 = vm.gc.listn(&[Object::Number(195005), Object::Number(34667)]);
    let list5401 = vm.gc.listn(&[Object::Number(195006), Object::Number(34694)]);
    let list5402 = vm.gc.listn(&[Object::Number(195007), Object::Number(17879)]);
    let list5403 = vm.gc.listn(&[Object::Number(195008), Object::Number(34785)]);
    let list5404 = vm.gc.listn(&[Object::Number(195009), Object::Number(34817)]);
    let list5405 = vm.gc.listn(&[Object::Number(195010), Object::Number(17913)]);
    let list5406 = vm.gc.listn(&[Object::Number(195011), Object::Number(34912)]);
    let list5407 = vm.gc.listn(&[Object::Number(195012), Object::Number(34915)]);
    let list5408 = vm.gc.listn(&[Object::Number(195013), Object::Number(161383)]);
    let list5409 = vm.gc.listn(&[Object::Number(195014), Object::Number(35031)]);
    let list5410 = vm.gc.listn(&[Object::Number(195015), Object::Number(35038)]);
    let list5411 = vm.gc.listn(&[Object::Number(195016), Object::Number(17973)]);
    let list5412 = vm.gc.listn(&[Object::Number(195017), Object::Number(35066)]);
    let list5413 = vm.gc.listn(&[Object::Number(195018), Object::Number(13499)]);
    let list5414 = vm.gc.listn(&[Object::Number(195019), Object::Number(161966)]);
    let list5415 = vm.gc.listn(&[Object::Number(195020), Object::Number(162150)]);
    let list5416 = vm.gc.listn(&[Object::Number(195021), Object::Number(18110)]);
    let list5417 = vm.gc.listn(&[Object::Number(195022), Object::Number(18119)]);
    let list5418 = vm.gc.listn(&[Object::Number(195023), Object::Number(35488)]);
    let list5419 = vm.gc.listn(&[Object::Number(195024), Object::Number(35565)]);
    let list5420 = vm.gc.listn(&[Object::Number(195025), Object::Number(35722)]);
    let list5421 = vm.gc.listn(&[Object::Number(195026), Object::Number(35925)]);
    let list5422 = vm.gc.listn(&[Object::Number(195027), Object::Number(162984)]);
    let list5423 = vm.gc.listn(&[Object::Number(195028), Object::Number(36011)]);
    let list5424 = vm.gc.listn(&[Object::Number(195029), Object::Number(36033)]);
    let list5425 = vm.gc.listn(&[Object::Number(195030), Object::Number(36123)]);
    let list5426 = vm.gc.listn(&[Object::Number(195031), Object::Number(36215)]);
    let list5427 = vm.gc.listn(&[Object::Number(195032), Object::Number(163631)]);
    let list5428 = vm.gc.listn(&[Object::Number(195033), Object::Number(133124)]);
    let list5429 = vm.gc.listn(&[Object::Number(195034), Object::Number(36299)]);
    let list5430 = vm.gc.listn(&[Object::Number(195035), Object::Number(36284)]);
    let list5431 = vm.gc.listn(&[Object::Number(195036), Object::Number(36336)]);
    let list5432 = vm.gc.listn(&[Object::Number(195037), Object::Number(133342)]);
    let list5433 = vm.gc.listn(&[Object::Number(195038), Object::Number(36564)]);
    let list5434 = vm.gc.listn(&[Object::Number(195039), Object::Number(36664)]);
    let list5435 = vm.gc.listn(&[Object::Number(195040), Object::Number(165330)]);
    let list5436 = vm.gc.listn(&[Object::Number(195041), Object::Number(165357)]);
    let list5437 = vm.gc.listn(&[Object::Number(195042), Object::Number(37012)]);
    let list5438 = vm.gc.listn(&[Object::Number(195043), Object::Number(37105)]);
    let list5439 = vm.gc.listn(&[Object::Number(195044), Object::Number(37137)]);
    let list5440 = vm.gc.listn(&[Object::Number(195045), Object::Number(165678)]);
    let list5441 = vm.gc.listn(&[Object::Number(195046), Object::Number(37147)]);
    let list5442 = vm.gc.listn(&[Object::Number(195047), Object::Number(37432)]);
    let list5443 = vm.gc.listn(&[Object::Number(195048), Object::Number(37591)]);
    let list5444 = vm.gc.listn(&[Object::Number(195049), Object::Number(37592)]);
    let list5445 = vm.gc.listn(&[Object::Number(195050), Object::Number(37500)]);
    let list5446 = vm.gc.listn(&[Object::Number(195051), Object::Number(37881)]);
    let list5447 = vm.gc.listn(&[Object::Number(195052), Object::Number(37909)]);
    let list5448 = vm.gc.listn(&[Object::Number(195053), Object::Number(166906)]);
    let list5449 = vm.gc.listn(&[Object::Number(195054), Object::Number(38283)]);
    let list5450 = vm.gc.listn(&[Object::Number(195055), Object::Number(18837)]);
    let list5451 = vm.gc.listn(&[Object::Number(195056), Object::Number(38327)]);
    let list5452 = vm.gc.listn(&[Object::Number(195057), Object::Number(167287)]);
    let list5453 = vm.gc.listn(&[Object::Number(195058), Object::Number(18918)]);
    let list5454 = vm.gc.listn(&[Object::Number(195059), Object::Number(38595)]);
    let list5455 = vm.gc.listn(&[Object::Number(195060), Object::Number(23986)]);
    let list5456 = vm.gc.listn(&[Object::Number(195061), Object::Number(38691)]);
    let list5457 = vm.gc.listn(&[Object::Number(195062), Object::Number(168261)]);
    let list5458 = vm.gc.listn(&[Object::Number(195063), Object::Number(168474)]);
    let list5459 = vm.gc.listn(&[Object::Number(195064), Object::Number(19054)]);
    let list5460 = vm.gc.listn(&[Object::Number(195065), Object::Number(19062)]);
    let list5461 = vm.gc.listn(&[Object::Number(195066), Object::Number(38880)]);
    let list5462 = vm.gc.listn(&[Object::Number(195067), Object::Number(168970)]);
    let list5463 = vm.gc.listn(&[Object::Number(195068), Object::Number(19122)]);
    let list5464 = vm.gc.listn(&[Object::Number(195069), Object::Number(169110)]);
    let list5465 = vm.gc.listn(&[Object::Number(195070), Object::Number(38923)]);
    let list5466 = vm.gc.listn(&[Object::Number(195071), Object::Number(38923)]);
    let list5467 = vm.gc.listn(&[Object::Number(195072), Object::Number(38953)]);
    let list5468 = vm.gc.listn(&[Object::Number(195073), Object::Number(169398)]);
    let list5469 = vm.gc.listn(&[Object::Number(195074), Object::Number(39138)]);
    let list5470 = vm.gc.listn(&[Object::Number(195075), Object::Number(19251)]);
    let list5471 = vm.gc.listn(&[Object::Number(195076), Object::Number(39209)]);
    let list5472 = vm.gc.listn(&[Object::Number(195077), Object::Number(39335)]);
    let list5473 = vm.gc.listn(&[Object::Number(195078), Object::Number(39362)]);
    let list5474 = vm.gc.listn(&[Object::Number(195079), Object::Number(39422)]);
    let list5475 = vm.gc.listn(&[Object::Number(195080), Object::Number(19406)]);
    let list5476 = vm.gc.listn(&[Object::Number(195081), Object::Number(170800)]);
    let list5477 = vm.gc.listn(&[Object::Number(195082), Object::Number(39698)]);
    let list5478 = vm.gc.listn(&[Object::Number(195083), Object::Number(40000)]);
    let list5479 = vm.gc.listn(&[Object::Number(195084), Object::Number(40189)]);
    let list5480 = vm.gc.listn(&[Object::Number(195085), Object::Number(19662)]);
    let list5481 = vm.gc.listn(&[Object::Number(195086), Object::Number(19693)]);
    let list5482 = vm.gc.listn(&[Object::Number(195087), Object::Number(40295)]);
    let list5483 = vm.gc.listn(&[Object::Number(195088), Object::Number(172238)]);
    let list5484 = vm.gc.listn(&[Object::Number(195089), Object::Number(19704)]);
    let list5485 = vm.gc.listn(&[Object::Number(195090), Object::Number(172293)]);
    let list5486 = vm.gc.listn(&[Object::Number(195091), Object::Number(172558)]);
    let list5487 = vm.gc.listn(&[Object::Number(195092), Object::Number(172689)]);
    let list5488 = vm.gc.listn(&[Object::Number(195093), Object::Number(40635)]);
    let list5489 = vm.gc.listn(&[Object::Number(195094), Object::Number(19798)]);
    let list5490 = vm.gc.listn(&[Object::Number(195095), Object::Number(40697)]);
    let list5491 = vm.gc.listn(&[Object::Number(195096), Object::Number(40702)]);
    let list5492 = vm.gc.listn(&[Object::Number(195097), Object::Number(40709)]);
    let list5493 = vm.gc.listn(&[Object::Number(195098), Object::Number(40719)]);
    let list5494 = vm.gc.listn(&[Object::Number(195099), Object::Number(40726)]);
    let list5495 = vm.gc.listn(&[Object::Number(195100), Object::Number(40763)]);
    let list5496 = vm.gc.listn(&[Object::Number(195101), Object::Number(173568)]);
    let list5497 = vm.gc.listn(&[list3454, list3455, list3456, list3457, list3458, list3459, list3460, list3461, list3462, list3463, list3464, list3465, list3466, list3467, list3468, list3469, list3470, list3471, list3472, list3473, list3474, list3475, list3476, list3477, list3478, list3479, list3480, list3481, list3482, list3483, list3484, list3485, list3486, list3487, list3488, list3489, list3490, list3491, list3492, list3493, list3494, list3495, list3496, list3497, list3498, list3499, list3500, list3501, list3502, list3503, list3504, list3505, list3506, list3507, list3508, list3509, list3510, list3511, list3512, list3513, list3514, list3515, list3516, list3517, list3518, list3519, list3520, list3521, list3522, list3523, list3524, list3525, list3526, list3527, list3528, list3529, list3530, list3531, list3532, list3533, list3534, list3535, list3536, list3537, list3538, list3539, list3540, list3541, list3542, list3543, list3544, list3545, list3546, list3547, list3548, list3549, list3550, list3551, list3552, list3553, list3554, list3555, list3556, list3557, list3558, list3559, list3560, list3561, list3562, list3563, list3564, list3565, list3566, list3567, list3568, list3569, list3570, list3571, list3572, list3573, list3574, list3575, list3576, list3577, list3578, list3579, list3580, list3581, list3582, list3583, list3584, list3585, list3586, list3587, list3588, list3589, list3590, list3591, list3592, list3593, list3594, list3595, list3596, list3597, list3598, list3599, list3600, list3601, list3602, list3603, list3604, list3605, list3606, list3607, list3608, list3609, list3610, list3611, list3612, list3613, list3614, list3615, list3616, list3617, list3618, list3619, list3620, list3621, list3622, list3623, list3624, list3625, list3626, list3627, list3628, list3629, list3630, list3631, list3632, list3633, list3634, list3635, list3636, list3637, list3638, list3639, list3640, list3641, list3642, list3643, list3644, list3645, list3646, list3647, list3648, list3649, list3650, list3651, list3652, list3653, list3654, list3655, list3656, list3657, list3658, list3659, list3660, list3661, list3662, list3663, list3664, list3665, list3666, list3667, list3668, list3669, list3670, list3671, list3672, list3673, list3674, list3675, list3676, list3677, list3678, list3679, list3680, list3681, list3682, list3683, list3684, list3685, list3686, list3687, list3688, list3689, list3690, list3691, list3692, list3693, list3694, list3695, list3696, list3697, list3698, list3699, list3700, list3701, list3702, list3703, list3704, list3705, list3706, list3707, list3708, list3709, list3710, list3711, list3712, list3713, list3714, list3715, list3716, list3717, list3718, list3719, list3720, list3721, list3722, list3723, list3724, list3725, list3726, list3727, list3728, list3729, list3730, list3731, list3732, list3733, list3734, list3735, list3736, list3737, list3738, list3739, list3740, list3741, list3742, list3743, list3744, list3745, list3746, list3747, list3748, list3749, list3750, list3751, list3752, list3753, list3754, list3755, list3756, list3757, list3758, list3759, list3760, list3761, list3762, list3763, list3764, list3765, list3766, list3767, list3768, list3769, list3770, list3771, list3772, list3773, list3774, list3775, list3776, list3777, list3778, list3779, list3780, list3781, list3782, list3783, list3784, list3785, list3786, list3787, list3788, list3789, list3790, list3791, list3792, list3793, list3794, list3795, list3796, list3797, list3798, list3799, list3800, list3801, list3802, list3803, list3804, list3805, list3806, list3807, list3808, list3809, list3810, list3811, list3812, list3813, list3814, list3815, list3816, list3817, list3818, list3819, list3820, list3821, list3822, list3823, list3824, list3825, list3826, list3827, list3828, list3829, list3830, list3831, list3832, list3833, list3834, list3835, list3836, list3837, list3838, list3839, list3840, list3841, list3842, list3843, list3844, list3845, list3846, list3847, list3848, list3849, list3850, list3851, list3852, list3853, list3854, list3855, list3856, list3857, list3858, list3859, list3860, list3861, list3862, list3863, list3864, list3865, list3866, list3867, list3868, list3869, list3870, list3871, list3872, list3873, list3874, list3875, list3876, list3877, list3878, list3879, list3880, list3881, list3882, list3883, list3884, list3885, list3886, list3887, list3888, list3889, list3890, list3891, list3892, list3893, list3894, list3895, list3896, list3897, list3898, list3899, list3900, list3901, list3902, list3903, list3904, list3905, list3906, list3907, list3908, list3909, list3910, list3911, list3912, list3913, list3914, list3915, list3916, list3917, list3918, list3919, list3920, list3921, list3922, list3923, list3924, list3925, list3926, list3927, list3928, list3929, list3930, list3931, list3932, list3933, list3934, list3935, list3936, list3937, list3938, list3939, list3940, list3941, list3942, list3943, list3944, list3945, list3946, list3947, list3948, list3949, list3950, list3951, list3952, list3953, list3954, list3955, list3956, list3957, list3958, list3959, list3960, list3961, list3962, list3963, list3964, list3965, list3966, list3967, list3968, list3969, list3970, list3971, list3972, list3973, list3974, list3975, list3976, list3977, list3978, list3979, list3980, list3981, list3982, list3983, list3984, list3985, list3986, list3987, list3988, list3989, list3990, list3991, list3992, list3993, list3994, list3995, list3996, list3997, list3998, list3999, list4000, list4001, list4002, list4003, list4004, list4005, list4006, list4007, list4008, list4009, list4010, list4011, list4012, list4013, list4014, list4015, list4016, list4017, list4018, list4019, list4020, list4021, list4022, list4023, list4024, list4025, list4026, list4027, list4028, list4029, list4030, list4031, list4032, list4033, list4034, list4035, list4036, list4037, list4038, list4039, list4040, list4041, list4042, list4043, list4044, list4045, list4046, list4047, list4048, list4049, list4050, list4051, list4052, list4053, list4054, list4055, list4056, list4057, list4058, list4059, list4060, list4061, list4062, list4063, list4064, list4065, list4066, list4067, list4068, list4069, list4070, list4071, list4072, list4073, list4074, list4075, list4076, list4077, list4078, list4079, list4080, list4081, list4082, list4083, list4084, list4085, list4086, list4087, list4088, list4089, list4090, list4091, list4092, list4093, list4094, list4095, list4096, list4097, list4098, list4099, list4100, list4101, list4102, list4103, list4104, list4105, list4106, list4107, list4108, list4109, list4110, list4111, list4112, list4113, list4114, list4115, list4116, list4117, list4118, list4119, list4120, list4121, list4122, list4123, list4124, list4125, list4126, list4127, list4128, list4129, list4130, list4131, list4132, list4133, list4134, list4135, list4136, list4137, list4138, list4139, list4140, list4141, list4142, list4143, list4144, list4145, list4146, list4147, list4148, list4149, list4150, list4151, list4152, list4153, list4154, list4155, list4156, list4157, list4158, list4159, list4160, list4161, list4162, list4163, list4164, list4165, list4166, list4167, list4168, list4169, list4170, list4171, list4172, list4173, list4174, list4175, list4176, list4177, list4178, list4179, list4180, list4181, list4182, list4183, list4184, list4185, list4186, list4187, list4188, list4189, list4190, list4191, list4192, list4193, list4194, list4195, list4196, list4197, list4198, list4199, list4200, list4201, list4202, list4203, list4204, list4205, list4206, list4207, list4208, list4209, list4210, list4211, list4212, list4213, list4214, list4215, list4216, list4217, list4218, list4219, list4220, list4221, list4222, list4223, list4224, list4225, list4226, list4227, list4228, list4229, list4230, list4231, list4232, list4233, list4234, list4235, list4236, list4237, list4238, list4239, list4240, list4241, list4242, list4243, list4244, list4245, list4246, list4247, list4248, list4249, list4250, list4251, list4252, list4253, list4254, list4255, list4256, list4257, list4258, list4259, list4260, list4261, list4262, list4263, list4264, list4265, list4266, list4267, list4268, list4269, list4270, list4271, list4272, list4273, list4274, list4275, list4276, list4277, list4278, list4279, list4280, list4281, list4282, list4283, list4284, list4285, list4286, list4287, list4288, list4289, list4290, list4291, list4292, list4293, list4294, list4295, list4296, list4297, list4298, list4299, list4300, list4301, list4302, list4303, list4304, list4305, list4306, list4307, list4308, list4309, list4310, list4311, list4312, list4313, list4314, list4315, list4316, list4317, list4318, list4319, list4320, list4321, list4322, list4323, list4324, list4325, list4326, list4327, list4328, list4329, list4330, list4331, list4332, list4333, list4334, list4335, list4336, list4337, list4338, list4339, list4340, list4341, list4342, list4343, list4344, list4345, list4346, list4347, list4348, list4349, list4350, list4351, list4352, list4353, list4354, list4355, list4356, list4357, list4358, list4359, list4360, list4361, list4362, list4363, list4364, list4365, list4366, list4367, list4368, list4369, list4370, list4371, list4372, list4373, list4374, list4375, list4376, list4377, list4378, list4379, list4380, list4381, list4382, list4383, list4384, list4385, list4386, list4387, list4388, list4389, list4390, list4391, list4392, list4393, list4394, list4395, list4396, list4397, list4398, list4399, list4400, list4401, list4402, list4403, list4404, list4405, list4406, list4407, list4408, list4409, list4410, list4411, list4412, list4413, list4414, list4415, list4416, list4417, list4418, list4419, list4420, list4421, list4422, list4423, list4424, list4425, list4426, list4427, list4428, list4429, list4430, list4431, list4432, list4433, list4434, list4435, list4436, list4437, list4438, list4439, list4440, list4441, list4442, list4443, list4444, list4445, list4446, list4447, list4448, list4449, list4450, list4451, list4452, list4453, list4454, list4455, list4456, list4457, list4458, list4459, list4460, list4461, list4462, list4463, list4464, list4465, list4466, list4467, list4468, list4469, list4470, list4471, list4472, list4473, list4474, list4475, list4476, list4477, list4478, list4479, list4480, list4481, list4482, list4483, list4484, list4485, list4486, list4487, list4488, list4489, list4490, list4491, list4492, list4493, list4494, list4495, list4496, list4497, list4498, list4499, list4500, list4501, list4502, list4503, list4504, list4505, list4506, list4507, list4508, list4509, list4510, list4511, list4512, list4513, list4514, list4515, list4516, list4517, list4518, list4519, list4520, list4521, list4522, list4523, list4524, list4525, list4526, list4527, list4528, list4529, list4530, list4531, list4532, list4533, list4534, list4535, list4536, list4537, list4538, list4539, list4540, list4541, list4542, list4543, list4544, list4545, list4546, list4547, list4548, list4549, list4550, list4551, list4552, list4553, list4554, list4555, list4556, list4557, list4558, list4559, list4560, list4561, list4562, list4563, list4564, list4565, list4566, list4567, list4568, list4569, list4570, list4571, list4572, list4573, list4574, list4575, list4576, list4577, list4578, list4579, list4580, list4581, list4582, list4583, list4584, list4585, list4586, list4587, list4588, list4589, list4590, list4591, list4592, list4593, list4594, list4595, list4596, list4597, list4598, list4599, list4600, list4601, list4602, list4603, list4604, list4605, list4606, list4607, list4608, list4609, list4610, list4611, list4612, list4613, list4614, list4615, list4616, list4617, list4618, list4619, list4620, list4621, list4622, list4623, list4624, list4625, list4626, list4627, list4628, list4629, list4630, list4631, list4632, list4633, list4634, list4635, list4636, list4637, list4638, list4639, list4640, list4641, list4642, list4643, list4644, list4645, list4646, list4647, list4648, list4649, list4650, list4651, list4652, list4653, list4654, list4655, list4656, list4657, list4658, list4659, list4660, list4661, list4662, list4663, list4664, list4665, list4666, list4667, list4668, list4669, list4670, list4671, list4672, list4673, list4674, list4675, list4676, list4677, list4678, list4679, list4680, list4681, list4682, list4683, list4684, list4685, list4686, list4687, list4688, list4689, list4690, list4691, list4692, list4693, list4694, list4695, list4696, list4697, list4698, list4699, list4700, list4701, list4702, list4703, list4704, list4705, list4706, list4707, list4708, list4709, list4710, list4711, list4712, list4713, list4714, list4715, list4716, list4717, list4718, list4719, list4720, list4721, list4722, list4723, list4724, list4725, list4726, list4727, list4728, list4729, list4730, list4731, list4732, list4733, list4734, list4735, list4736, list4737, list4738, list4739, list4740, list4741, list4742, list4743, list4744, list4745, list4746, list4747, list4748, list4749, list4750, list4751, list4752, list4753, list4754, list4755, list4756, list4757, list4758, list4759, list4760, list4761, list4762, list4763, list4764, list4765, list4766, list4767, list4768, list4769, list4770, list4771, list4772, list4773, list4774, list4775, list4776, list4777, list4778, list4779, list4780, list4781, list4782, list4783, list4784, list4785, list4786, list4787, list4788, list4789, list4790, list4791, list4792, list4793, list4794, list4795, list4796, list4797, list4798, list4799, list4800, list4801, list4802, list4803, list4804, list4805, list4806, list4807, list4808, list4809, list4810, list4811, list4812, list4813, list4814, list4815, list4816, list4817, list4818, list4819, list4820, list4821, list4822, list4823, list4824, list4825, list4826, list4827, list4828, list4829, list4830, list4831, list4832, list4833, list4834, list4835, list4836, list4837, list4838, list4839, list4840, list4841, list4842, list4843, list4844, list4845, list4846, list4847, list4848, list4849, list4850, list4851, list4852, list4853, list4854, list4855, list4856, list4857, list4858, list4859, list4860, list4861, list4862, list4863, list4864, list4865, list4866, list4867, list4868, list4869, list4870, list4871, list4872, list4873, list4874, list4875, list4876, list4877, list4878, list4879, list4880, list4881, list4882, list4883, list4884, list4885, list4886, list4887, list4888, list4889, list4890, list4891, list4892, list4893, list4894, list4895, list4896, list4897, list4898, list4899, list4900, list4901, list4902, list4903, list4904, list4905, list4906, list4907, list4908, list4909, list4910, list4911, list4912, list4913, list4914, list4915, list4916, list4917, list4918, list4919, list4920, list4921, list4922, list4923, list4924, list4925, list4926, list4927, list4928, list4929, list4930, list4931, list4932, list4933, list4934, list4935, list4936, list4937, list4938, list4939, list4940, list4941, list4942, list4943, list4944, list4945, list4946, list4947, list4948, list4949, list4950, list4951, list4952, list4953, list4954, list4955, list4956, list4957, list4958, list4959, list4960, list4961, list4962, list4963, list4964, list4965, list4966, list4967, list4968, list4969, list4970, list4971, list4972, list4973, list4974, list4975, list4976, list4977, list4978, list4979, list4980, list4981, list4982, list4983, list4984, list4985, list4986, list4987, list4988, list4989, list4990, list4991, list4992, list4993, list4994, list4995, list4996, list4997, list4998, list4999, list5000, list5001, list5002, list5003, list5004, list5005, list5006, list5007, list5008, list5009, list5010, list5011, list5012, list5013, list5014, list5015, list5016, list5017, list5018, list5019, list5020, list5021, list5022, list5023, list5024, list5025, list5026, list5027, list5028, list5029, list5030, list5031, list5032, list5033, list5034, list5035, list5036, list5037, list5038, list5039, list5040, list5041, list5042, list5043, list5044, list5045, list5046, list5047, list5048, list5049, list5050, list5051, list5052, list5053, list5054, list5055, list5056, list5057, list5058, list5059, list5060, list5061, list5062, list5063, list5064, list5065, list5066, list5067, list5068, list5069, list5070, list5071, list5072, list5073, list5074, list5075, list5076, list5077, list5078, list5079, list5080, list5081, list5082, list5083, list5084, list5085, list5086, list5087, list5088, list5089, list5090, list5091, list5092, list5093, list5094, list5095, list5096, list5097, list5098, list5099, list5100, list5101, list5102, list5103, list5104, list5105, list5106, list5107, list5108, list5109, list5110, list5111, list5112, list5113, list5114, list5115, list5116, list5117, list5118, list5119, list5120, list5121, list5122, list5123, list5124, list5125, list5126, list5127, list5128, list5129, list5130, list5131, list5132, list5133, list5134, list5135, list5136, list5137, list5138, list5139, list5140, list5141, list5142, list5143, list5144, list5145, list5146, list5147, list5148, list5149, list5150, list5151, list5152, list5153, list5154, list5155, list5156, list5157, list5158, list5159, list5160, list5161, list5162, list5163, list5164, list5165, list5166, list5167, list5168, list5169, list5170, list5171, list5172, list5173, list5174, list5175, list5176, list5177, list5178, list5179, list5180, list5181, list5182, list5183, list5184, list5185, list5186, list5187, list5188, list5189, list5190, list5191, list5192, list5193, list5194, list5195, list5196, list5197, list5198, list5199, list5200, list5201, list5202, list5203, list5204, list5205, list5206, list5207, list5208, list5209, list5210, list5211, list5212, list5213, list5214, list5215, list5216, list5217, list5218, list5219, list5220, list5221, list5222, list5223, list5224, list5225, list5226, list5227, list5228, list5229, list5230, list5231, list5232, list5233, list5234, list5235, list5236, list5237, list5238, list5239, list5240, list5241, list5242, list5243, list5244, list5245, list5246, list5247, list5248, list5249, list5250, list5251, list5252, list5253, list5254, list5255, list5256, list5257, list5258, list5259, list5260, list5261, list5262, list5263, list5264, list5265, list5266, list5267, list5268, list5269, list5270, list5271, list5272, list5273, list5274, list5275, list5276, list5277, list5278, list5279, list5280, list5281, list5282, list5283, list5284, list5285, list5286, list5287, list5288, list5289, list5290, list5291, list5292, list5293, list5294, list5295, list5296, list5297, list5298, list5299, list5300, list5301, list5302, list5303, list5304, list5305, list5306, list5307, list5308, list5309, list5310, list5311, list5312, list5313, list5314, list5315, list5316, list5317, list5318, list5319, list5320, list5321, list5322, list5323, list5324, list5325, list5326, list5327, list5328, list5329, list5330, list5331, list5332, list5333, list5334, list5335, list5336, list5337, list5338, list5339, list5340, list5341, list5342, list5343, list5344, list5345, list5346, list5347, list5348, list5349, list5350, list5351, list5352, list5353, list5354, list5355, list5356, list5357, list5358, list5359, list5360, list5361, list5362, list5363, list5364, list5365, list5366, list5367, list5368, list5369, list5370, list5371, list5372, list5373, list5374, list5375, list5376, list5377, list5378, list5379, list5380, list5381, list5382, list5383, list5384, list5385, list5386, list5387, list5388, list5389, list5390, list5391, list5392, list5393, list5394, list5395, list5396, list5397, list5398, list5399, list5400, list5401, list5402, list5403, list5404, list5405, list5406, list5407, list5408, list5409, list5410, list5411, list5412, list5413, list5414, list5415, list5416, list5417, list5418, list5419, list5420, list5421, list5422, list5423, list5424, list5425, list5426, list5427, list5428, list5429, list5430, list5431, list5432, list5433, list5434, list5435, list5436, list5437, list5438, list5439, list5440, list5441, list5442, list5443, list5444, list5445, list5446, list5447, list5448, list5449, list5450, list5451, list5452, list5453, list5454, list5455, list5456, list5457, list5458, list5459, list5460, list5461, list5462, list5463, list5464, list5465, list5466, list5467, list5468, list5469, list5470, list5471, list5472, list5473, list5474, list5475, list5476, list5477, list5478, list5479, list5480, list5481, list5482, list5483, list5484, list5485, list5486, list5487, list5488, list5489, list5490, list5491, list5492, list5493, list5494, list5495, list5496]);
    let list5498 = vm.gc.listn(&[Object::Number(65), Object::Number(97)]);
    let list5499 = vm.gc.listn(&[Object::Number(66), Object::Number(98)]);
    let list5500 = vm.gc.listn(&[Object::Number(67), Object::Number(99)]);
    let list5501 = vm.gc.listn(&[Object::Number(68), Object::Number(100)]);
    let list5502 = vm.gc.listn(&[Object::Number(69), Object::Number(101)]);
    let list5503 = vm.gc.listn(&[Object::Number(70), Object::Number(102)]);
    let list5504 = vm.gc.listn(&[Object::Number(71), Object::Number(103)]);
    let list5505 = vm.gc.listn(&[Object::Number(72), Object::Number(104)]);
    let list5506 = vm.gc.listn(&[Object::Number(73), Object::Number(105)]);
    let list5507 = vm.gc.listn(&[Object::Number(74), Object::Number(106)]);
    let list5508 = vm.gc.listn(&[Object::Number(75), Object::Number(107)]);
    let list5509 = vm.gc.listn(&[Object::Number(76), Object::Number(108)]);
    let list5510 = vm.gc.listn(&[Object::Number(77), Object::Number(109)]);
    let list5511 = vm.gc.listn(&[Object::Number(78), Object::Number(110)]);
    let list5512 = vm.gc.listn(&[Object::Number(79), Object::Number(111)]);
    let list5513 = vm.gc.listn(&[Object::Number(80), Object::Number(112)]);
    let list5514 = vm.gc.listn(&[Object::Number(81), Object::Number(113)]);
    let list5515 = vm.gc.listn(&[Object::Number(82), Object::Number(114)]);
    let list5516 = vm.gc.listn(&[Object::Number(83), Object::Number(115)]);
    let list5517 = vm.gc.listn(&[Object::Number(84), Object::Number(116)]);
    let list5518 = vm.gc.listn(&[Object::Number(85), Object::Number(117)]);
    let list5519 = vm.gc.listn(&[Object::Number(86), Object::Number(118)]);
    let list5520 = vm.gc.listn(&[Object::Number(87), Object::Number(119)]);
    let list5521 = vm.gc.listn(&[Object::Number(88), Object::Number(120)]);
    let list5522 = vm.gc.listn(&[Object::Number(89), Object::Number(121)]);
    let list5523 = vm.gc.listn(&[Object::Number(90), Object::Number(122)]);
    let list5524 = vm.gc.listn(&[Object::Number(181), Object::Number(956)]);
    let list5525 = vm.gc.listn(&[Object::Number(192), Object::Number(224)]);
    let list5526 = vm.gc.listn(&[Object::Number(193), Object::Number(225)]);
    let list5527 = vm.gc.listn(&[Object::Number(194), Object::Number(226)]);
    let list5528 = vm.gc.listn(&[Object::Number(195), Object::Number(227)]);
    let list5529 = vm.gc.listn(&[Object::Number(196), Object::Number(228)]);
    let list5530 = vm.gc.listn(&[Object::Number(197), Object::Number(229)]);
    let list5531 = vm.gc.listn(&[Object::Number(198), Object::Number(230)]);
    let list5532 = vm.gc.listn(&[Object::Number(199), Object::Number(231)]);
    let list5533 = vm.gc.listn(&[Object::Number(200), Object::Number(232)]);
    let list5534 = vm.gc.listn(&[Object::Number(201), Object::Number(233)]);
    let list5535 = vm.gc.listn(&[Object::Number(202), Object::Number(234)]);
    let list5536 = vm.gc.listn(&[Object::Number(203), Object::Number(235)]);
    let list5537 = vm.gc.listn(&[Object::Number(204), Object::Number(236)]);
    let list5538 = vm.gc.listn(&[Object::Number(205), Object::Number(237)]);
    let list5539 = vm.gc.listn(&[Object::Number(206), Object::Number(238)]);
    let list5540 = vm.gc.listn(&[Object::Number(207), Object::Number(239)]);
    let list5541 = vm.gc.listn(&[Object::Number(208), Object::Number(240)]);
    let list5542 = vm.gc.listn(&[Object::Number(209), Object::Number(241)]);
    let list5543 = vm.gc.listn(&[Object::Number(210), Object::Number(242)]);
    let list5544 = vm.gc.listn(&[Object::Number(211), Object::Number(243)]);
    let list5545 = vm.gc.listn(&[Object::Number(212), Object::Number(244)]);
    let list5546 = vm.gc.listn(&[Object::Number(213), Object::Number(245)]);
    let list5547 = vm.gc.listn(&[Object::Number(214), Object::Number(246)]);
    let list5548 = vm.gc.listn(&[Object::Number(216), Object::Number(248)]);
    let list5549 = vm.gc.listn(&[Object::Number(217), Object::Number(249)]);
    let list5550 = vm.gc.listn(&[Object::Number(218), Object::Number(250)]);
    let list5551 = vm.gc.listn(&[Object::Number(219), Object::Number(251)]);
    let list5552 = vm.gc.listn(&[Object::Number(220), Object::Number(252)]);
    let list5553 = vm.gc.listn(&[Object::Number(221), Object::Number(253)]);
    let list5554 = vm.gc.listn(&[Object::Number(222), Object::Number(254)]);
    let list5555 = vm.gc.listn(&[Object::Number(223), Object::Number(115), Object::Number(115)]);
    let list5556 = vm.gc.listn(&[Object::Number(256), Object::Number(257)]);
    let list5557 = vm.gc.listn(&[Object::Number(258), Object::Number(259)]);
    let list5558 = vm.gc.listn(&[Object::Number(260), Object::Number(261)]);
    let list5559 = vm.gc.listn(&[Object::Number(262), Object::Number(263)]);
    let list5560 = vm.gc.listn(&[Object::Number(264), Object::Number(265)]);
    let list5561 = vm.gc.listn(&[Object::Number(266), Object::Number(267)]);
    let list5562 = vm.gc.listn(&[Object::Number(268), Object::Number(269)]);
    let list5563 = vm.gc.listn(&[Object::Number(270), Object::Number(271)]);
    let list5564 = vm.gc.listn(&[Object::Number(272), Object::Number(273)]);
    let list5565 = vm.gc.listn(&[Object::Number(274), Object::Number(275)]);
    let list5566 = vm.gc.listn(&[Object::Number(276), Object::Number(277)]);
    let list5567 = vm.gc.listn(&[Object::Number(278), Object::Number(279)]);
    let list5568 = vm.gc.listn(&[Object::Number(280), Object::Number(281)]);
    let list5569 = vm.gc.listn(&[Object::Number(282), Object::Number(283)]);
    let list5570 = vm.gc.listn(&[Object::Number(284), Object::Number(285)]);
    let list5571 = vm.gc.listn(&[Object::Number(286), Object::Number(287)]);
    let list5572 = vm.gc.listn(&[Object::Number(288), Object::Number(289)]);
    let list5573 = vm.gc.listn(&[Object::Number(290), Object::Number(291)]);
    let list5574 = vm.gc.listn(&[Object::Number(292), Object::Number(293)]);
    let list5575 = vm.gc.listn(&[Object::Number(294), Object::Number(295)]);
    let list5576 = vm.gc.listn(&[Object::Number(296), Object::Number(297)]);
    let list5577 = vm.gc.listn(&[Object::Number(298), Object::Number(299)]);
    let list5578 = vm.gc.listn(&[Object::Number(300), Object::Number(301)]);
    let list5579 = vm.gc.listn(&[Object::Number(302), Object::Number(303)]);
    let list5580 = vm.gc.listn(&[Object::Number(304), Object::Number(105), Object::Number(775)]);
    let list5581 = vm.gc.listn(&[Object::Number(306), Object::Number(307)]);
    let list5582 = vm.gc.listn(&[Object::Number(308), Object::Number(309)]);
    let list5583 = vm.gc.listn(&[Object::Number(310), Object::Number(311)]);
    let list5584 = vm.gc.listn(&[Object::Number(313), Object::Number(314)]);
    let list5585 = vm.gc.listn(&[Object::Number(315), Object::Number(316)]);
    let list5586 = vm.gc.listn(&[Object::Number(317), Object::Number(318)]);
    let list5587 = vm.gc.listn(&[Object::Number(319), Object::Number(320)]);
    let list5588 = vm.gc.listn(&[Object::Number(321), Object::Number(322)]);
    let list5589 = vm.gc.listn(&[Object::Number(323), Object::Number(324)]);
    let list5590 = vm.gc.listn(&[Object::Number(325), Object::Number(326)]);
    let list5591 = vm.gc.listn(&[Object::Number(327), Object::Number(328)]);
    let list5592 = vm.gc.listn(&[Object::Number(329), Object::Number(700), Object::Number(110)]);
    let list5593 = vm.gc.listn(&[Object::Number(330), Object::Number(331)]);
    let list5594 = vm.gc.listn(&[Object::Number(332), Object::Number(333)]);
    let list5595 = vm.gc.listn(&[Object::Number(334), Object::Number(335)]);
    let list5596 = vm.gc.listn(&[Object::Number(336), Object::Number(337)]);
    let list5597 = vm.gc.listn(&[Object::Number(338), Object::Number(339)]);
    let list5598 = vm.gc.listn(&[Object::Number(340), Object::Number(341)]);
    let list5599 = vm.gc.listn(&[Object::Number(342), Object::Number(343)]);
    let list5600 = vm.gc.listn(&[Object::Number(344), Object::Number(345)]);
    let list5601 = vm.gc.listn(&[Object::Number(346), Object::Number(347)]);
    let list5602 = vm.gc.listn(&[Object::Number(348), Object::Number(349)]);
    let list5603 = vm.gc.listn(&[Object::Number(350), Object::Number(351)]);
    let list5604 = vm.gc.listn(&[Object::Number(352), Object::Number(353)]);
    let list5605 = vm.gc.listn(&[Object::Number(354), Object::Number(355)]);
    let list5606 = vm.gc.listn(&[Object::Number(356), Object::Number(357)]);
    let list5607 = vm.gc.listn(&[Object::Number(358), Object::Number(359)]);
    let list5608 = vm.gc.listn(&[Object::Number(360), Object::Number(361)]);
    let list5609 = vm.gc.listn(&[Object::Number(362), Object::Number(363)]);
    let list5610 = vm.gc.listn(&[Object::Number(364), Object::Number(365)]);
    let list5611 = vm.gc.listn(&[Object::Number(366), Object::Number(367)]);
    let list5612 = vm.gc.listn(&[Object::Number(368), Object::Number(369)]);
    let list5613 = vm.gc.listn(&[Object::Number(370), Object::Number(371)]);
    let list5614 = vm.gc.listn(&[Object::Number(372), Object::Number(373)]);
    let list5615 = vm.gc.listn(&[Object::Number(374), Object::Number(375)]);
    let list5616 = vm.gc.listn(&[Object::Number(376), Object::Number(255)]);
    let list5617 = vm.gc.listn(&[Object::Number(377), Object::Number(378)]);
    let list5618 = vm.gc.listn(&[Object::Number(379), Object::Number(380)]);
    let list5619 = vm.gc.listn(&[Object::Number(381), Object::Number(382)]);
    let list5620 = vm.gc.listn(&[Object::Number(383), Object::Number(115)]);
    let list5621 = vm.gc.listn(&[Object::Number(385), Object::Number(595)]);
    let list5622 = vm.gc.listn(&[Object::Number(386), Object::Number(387)]);
    let list5623 = vm.gc.listn(&[Object::Number(388), Object::Number(389)]);
    let list5624 = vm.gc.listn(&[Object::Number(390), Object::Number(596)]);
    let list5625 = vm.gc.listn(&[Object::Number(391), Object::Number(392)]);
    let list5626 = vm.gc.listn(&[Object::Number(393), Object::Number(598)]);
    let list5627 = vm.gc.listn(&[Object::Number(394), Object::Number(599)]);
    let list5628 = vm.gc.listn(&[Object::Number(395), Object::Number(396)]);
    let list5629 = vm.gc.listn(&[Object::Number(398), Object::Number(477)]);
    let list5630 = vm.gc.listn(&[Object::Number(399), Object::Number(601)]);
    let list5631 = vm.gc.listn(&[Object::Number(400), Object::Number(603)]);
    let list5632 = vm.gc.listn(&[Object::Number(401), Object::Number(402)]);
    let list5633 = vm.gc.listn(&[Object::Number(403), Object::Number(608)]);
    let list5634 = vm.gc.listn(&[Object::Number(404), Object::Number(611)]);
    let list5635 = vm.gc.listn(&[Object::Number(406), Object::Number(617)]);
    let list5636 = vm.gc.listn(&[Object::Number(407), Object::Number(616)]);
    let list5637 = vm.gc.listn(&[Object::Number(408), Object::Number(409)]);
    let list5638 = vm.gc.listn(&[Object::Number(412), Object::Number(623)]);
    let list5639 = vm.gc.listn(&[Object::Number(413), Object::Number(626)]);
    let list5640 = vm.gc.listn(&[Object::Number(415), Object::Number(629)]);
    let list5641 = vm.gc.listn(&[Object::Number(416), Object::Number(417)]);
    let list5642 = vm.gc.listn(&[Object::Number(418), Object::Number(419)]);
    let list5643 = vm.gc.listn(&[Object::Number(420), Object::Number(421)]);
    let list5644 = vm.gc.listn(&[Object::Number(422), Object::Number(640)]);
    let list5645 = vm.gc.listn(&[Object::Number(423), Object::Number(424)]);
    let list5646 = vm.gc.listn(&[Object::Number(425), Object::Number(643)]);
    let list5647 = vm.gc.listn(&[Object::Number(428), Object::Number(429)]);
    let list5648 = vm.gc.listn(&[Object::Number(430), Object::Number(648)]);
    let list5649 = vm.gc.listn(&[Object::Number(431), Object::Number(432)]);
    let list5650 = vm.gc.listn(&[Object::Number(433), Object::Number(650)]);
    let list5651 = vm.gc.listn(&[Object::Number(434), Object::Number(651)]);
    let list5652 = vm.gc.listn(&[Object::Number(435), Object::Number(436)]);
    let list5653 = vm.gc.listn(&[Object::Number(437), Object::Number(438)]);
    let list5654 = vm.gc.listn(&[Object::Number(439), Object::Number(658)]);
    let list5655 = vm.gc.listn(&[Object::Number(440), Object::Number(441)]);
    let list5656 = vm.gc.listn(&[Object::Number(444), Object::Number(445)]);
    let list5657 = vm.gc.listn(&[Object::Number(452), Object::Number(454)]);
    let list5658 = vm.gc.listn(&[Object::Number(453), Object::Number(454)]);
    let list5659 = vm.gc.listn(&[Object::Number(455), Object::Number(457)]);
    let list5660 = vm.gc.listn(&[Object::Number(456), Object::Number(457)]);
    let list5661 = vm.gc.listn(&[Object::Number(458), Object::Number(460)]);
    let list5662 = vm.gc.listn(&[Object::Number(459), Object::Number(460)]);
    let list5663 = vm.gc.listn(&[Object::Number(461), Object::Number(462)]);
    let list5664 = vm.gc.listn(&[Object::Number(463), Object::Number(464)]);
    let list5665 = vm.gc.listn(&[Object::Number(465), Object::Number(466)]);
    let list5666 = vm.gc.listn(&[Object::Number(467), Object::Number(468)]);
    let list5667 = vm.gc.listn(&[Object::Number(469), Object::Number(470)]);
    let list5668 = vm.gc.listn(&[Object::Number(471), Object::Number(472)]);
    let list5669 = vm.gc.listn(&[Object::Number(473), Object::Number(474)]);
    let list5670 = vm.gc.listn(&[Object::Number(475), Object::Number(476)]);
    let list5671 = vm.gc.listn(&[Object::Number(478), Object::Number(479)]);
    let list5672 = vm.gc.listn(&[Object::Number(480), Object::Number(481)]);
    let list5673 = vm.gc.listn(&[Object::Number(482), Object::Number(483)]);
    let list5674 = vm.gc.listn(&[Object::Number(484), Object::Number(485)]);
    let list5675 = vm.gc.listn(&[Object::Number(486), Object::Number(487)]);
    let list5676 = vm.gc.listn(&[Object::Number(488), Object::Number(489)]);
    let list5677 = vm.gc.listn(&[Object::Number(490), Object::Number(491)]);
    let list5678 = vm.gc.listn(&[Object::Number(492), Object::Number(493)]);
    let list5679 = vm.gc.listn(&[Object::Number(494), Object::Number(495)]);
    let list5680 = vm.gc.listn(&[Object::Number(496), Object::Number(106), Object::Number(780)]);
    let list5681 = vm.gc.listn(&[Object::Number(497), Object::Number(499)]);
    let list5682 = vm.gc.listn(&[Object::Number(498), Object::Number(499)]);
    let list5683 = vm.gc.listn(&[Object::Number(500), Object::Number(501)]);
    let list5684 = vm.gc.listn(&[Object::Number(502), Object::Number(405)]);
    let list5685 = vm.gc.listn(&[Object::Number(503), Object::Number(447)]);
    let list5686 = vm.gc.listn(&[Object::Number(504), Object::Number(505)]);
    let list5687 = vm.gc.listn(&[Object::Number(506), Object::Number(507)]);
    let list5688 = vm.gc.listn(&[Object::Number(508), Object::Number(509)]);
    let list5689 = vm.gc.listn(&[Object::Number(510), Object::Number(511)]);
    let list5690 = vm.gc.listn(&[Object::Number(512), Object::Number(513)]);
    let list5691 = vm.gc.listn(&[Object::Number(514), Object::Number(515)]);
    let list5692 = vm.gc.listn(&[Object::Number(516), Object::Number(517)]);
    let list5693 = vm.gc.listn(&[Object::Number(518), Object::Number(519)]);
    let list5694 = vm.gc.listn(&[Object::Number(520), Object::Number(521)]);
    let list5695 = vm.gc.listn(&[Object::Number(522), Object::Number(523)]);
    let list5696 = vm.gc.listn(&[Object::Number(524), Object::Number(525)]);
    let list5697 = vm.gc.listn(&[Object::Number(526), Object::Number(527)]);
    let list5698 = vm.gc.listn(&[Object::Number(528), Object::Number(529)]);
    let list5699 = vm.gc.listn(&[Object::Number(530), Object::Number(531)]);
    let list5700 = vm.gc.listn(&[Object::Number(532), Object::Number(533)]);
    let list5701 = vm.gc.listn(&[Object::Number(534), Object::Number(535)]);
    let list5702 = vm.gc.listn(&[Object::Number(536), Object::Number(537)]);
    let list5703 = vm.gc.listn(&[Object::Number(538), Object::Number(539)]);
    let list5704 = vm.gc.listn(&[Object::Number(540), Object::Number(541)]);
    let list5705 = vm.gc.listn(&[Object::Number(542), Object::Number(543)]);
    let list5706 = vm.gc.listn(&[Object::Number(544), Object::Number(414)]);
    let list5707 = vm.gc.listn(&[Object::Number(546), Object::Number(547)]);
    let list5708 = vm.gc.listn(&[Object::Number(548), Object::Number(549)]);
    let list5709 = vm.gc.listn(&[Object::Number(550), Object::Number(551)]);
    let list5710 = vm.gc.listn(&[Object::Number(552), Object::Number(553)]);
    let list5711 = vm.gc.listn(&[Object::Number(554), Object::Number(555)]);
    let list5712 = vm.gc.listn(&[Object::Number(556), Object::Number(557)]);
    let list5713 = vm.gc.listn(&[Object::Number(558), Object::Number(559)]);
    let list5714 = vm.gc.listn(&[Object::Number(560), Object::Number(561)]);
    let list5715 = vm.gc.listn(&[Object::Number(562), Object::Number(563)]);
    let list5716 = vm.gc.listn(&[Object::Number(570), Object::Number(11365)]);
    let list5717 = vm.gc.listn(&[Object::Number(571), Object::Number(572)]);
    let list5718 = vm.gc.listn(&[Object::Number(573), Object::Number(410)]);
    let list5719 = vm.gc.listn(&[Object::Number(574), Object::Number(11366)]);
    let list5720 = vm.gc.listn(&[Object::Number(577), Object::Number(578)]);
    let list5721 = vm.gc.listn(&[Object::Number(579), Object::Number(384)]);
    let list5722 = vm.gc.listn(&[Object::Number(580), Object::Number(649)]);
    let list5723 = vm.gc.listn(&[Object::Number(581), Object::Number(652)]);
    let list5724 = vm.gc.listn(&[Object::Number(582), Object::Number(583)]);
    let list5725 = vm.gc.listn(&[Object::Number(584), Object::Number(585)]);
    let list5726 = vm.gc.listn(&[Object::Number(586), Object::Number(587)]);
    let list5727 = vm.gc.listn(&[Object::Number(588), Object::Number(589)]);
    let list5728 = vm.gc.listn(&[Object::Number(590), Object::Number(591)]);
    let list5729 = vm.gc.listn(&[Object::Number(837), Object::Number(953)]);
    let list5730 = vm.gc.listn(&[Object::Number(880), Object::Number(881)]);
    let list5731 = vm.gc.listn(&[Object::Number(882), Object::Number(883)]);
    let list5732 = vm.gc.listn(&[Object::Number(886), Object::Number(887)]);
    let list5733 = vm.gc.listn(&[Object::Number(902), Object::Number(940)]);
    let list5734 = vm.gc.listn(&[Object::Number(904), Object::Number(941)]);
    let list5735 = vm.gc.listn(&[Object::Number(905), Object::Number(942)]);
    let list5736 = vm.gc.listn(&[Object::Number(906), Object::Number(943)]);
    let list5737 = vm.gc.listn(&[Object::Number(908), Object::Number(972)]);
    let list5738 = vm.gc.listn(&[Object::Number(910), Object::Number(973)]);
    let list5739 = vm.gc.listn(&[Object::Number(911), Object::Number(974)]);
    let list5740 = vm.gc.listn(&[Object::Number(912), Object::Number(953), Object::Number(776), Object::Number(769)]);
    let list5741 = vm.gc.listn(&[Object::Number(913), Object::Number(945)]);
    let list5742 = vm.gc.listn(&[Object::Number(914), Object::Number(946)]);
    let list5743 = vm.gc.listn(&[Object::Number(915), Object::Number(947)]);
    let list5744 = vm.gc.listn(&[Object::Number(916), Object::Number(948)]);
    let list5745 = vm.gc.listn(&[Object::Number(917), Object::Number(949)]);
    let list5746 = vm.gc.listn(&[Object::Number(918), Object::Number(950)]);
    let list5747 = vm.gc.listn(&[Object::Number(919), Object::Number(951)]);
    let list5748 = vm.gc.listn(&[Object::Number(920), Object::Number(952)]);
    let list5749 = vm.gc.listn(&[Object::Number(921), Object::Number(953)]);
    let list5750 = vm.gc.listn(&[Object::Number(922), Object::Number(954)]);
    let list5751 = vm.gc.listn(&[Object::Number(923), Object::Number(955)]);
    let list5752 = vm.gc.listn(&[Object::Number(924), Object::Number(956)]);
    let list5753 = vm.gc.listn(&[Object::Number(925), Object::Number(957)]);
    let list5754 = vm.gc.listn(&[Object::Number(926), Object::Number(958)]);
    let list5755 = vm.gc.listn(&[Object::Number(927), Object::Number(959)]);
    let list5756 = vm.gc.listn(&[Object::Number(928), Object::Number(960)]);
    let list5757 = vm.gc.listn(&[Object::Number(929), Object::Number(961)]);
    let list5758 = vm.gc.listn(&[Object::Number(931), Object::Number(963)]);
    let list5759 = vm.gc.listn(&[Object::Number(932), Object::Number(964)]);
    let list5760 = vm.gc.listn(&[Object::Number(933), Object::Number(965)]);
    let list5761 = vm.gc.listn(&[Object::Number(934), Object::Number(966)]);
    let list5762 = vm.gc.listn(&[Object::Number(935), Object::Number(967)]);
    let list5763 = vm.gc.listn(&[Object::Number(936), Object::Number(968)]);
    let list5764 = vm.gc.listn(&[Object::Number(937), Object::Number(969)]);
    let list5765 = vm.gc.listn(&[Object::Number(938), Object::Number(970)]);
    let list5766 = vm.gc.listn(&[Object::Number(939), Object::Number(971)]);
    let list5767 = vm.gc.listn(&[Object::Number(944), Object::Number(965), Object::Number(776), Object::Number(769)]);
    let list5768 = vm.gc.listn(&[Object::Number(962), Object::Number(963)]);
    let list5769 = vm.gc.listn(&[Object::Number(975), Object::Number(983)]);
    let list5770 = vm.gc.listn(&[Object::Number(976), Object::Number(946)]);
    let list5771 = vm.gc.listn(&[Object::Number(977), Object::Number(952)]);
    let list5772 = vm.gc.listn(&[Object::Number(981), Object::Number(966)]);
    let list5773 = vm.gc.listn(&[Object::Number(982), Object::Number(960)]);
    let list5774 = vm.gc.listn(&[Object::Number(984), Object::Number(985)]);
    let list5775 = vm.gc.listn(&[Object::Number(986), Object::Number(987)]);
    let list5776 = vm.gc.listn(&[Object::Number(988), Object::Number(989)]);
    let list5777 = vm.gc.listn(&[Object::Number(990), Object::Number(991)]);
    let list5778 = vm.gc.listn(&[Object::Number(992), Object::Number(993)]);
    let list5779 = vm.gc.listn(&[Object::Number(994), Object::Number(995)]);
    let list5780 = vm.gc.listn(&[Object::Number(996), Object::Number(997)]);
    let list5781 = vm.gc.listn(&[Object::Number(998), Object::Number(999)]);
    let list5782 = vm.gc.listn(&[Object::Number(1000), Object::Number(1001)]);
    let list5783 = vm.gc.listn(&[Object::Number(1002), Object::Number(1003)]);
    let list5784 = vm.gc.listn(&[Object::Number(1004), Object::Number(1005)]);
    let list5785 = vm.gc.listn(&[Object::Number(1006), Object::Number(1007)]);
    let list5786 = vm.gc.listn(&[Object::Number(1008), Object::Number(954)]);
    let list5787 = vm.gc.listn(&[Object::Number(1009), Object::Number(961)]);
    let list5788 = vm.gc.listn(&[Object::Number(1012), Object::Number(952)]);
    let list5789 = vm.gc.listn(&[Object::Number(1013), Object::Number(949)]);
    let list5790 = vm.gc.listn(&[Object::Number(1015), Object::Number(1016)]);
    let list5791 = vm.gc.listn(&[Object::Number(1017), Object::Number(1010)]);
    let list5792 = vm.gc.listn(&[Object::Number(1018), Object::Number(1019)]);
    let list5793 = vm.gc.listn(&[Object::Number(1021), Object::Number(891)]);
    let list5794 = vm.gc.listn(&[Object::Number(1022), Object::Number(892)]);
    let list5795 = vm.gc.listn(&[Object::Number(1023), Object::Number(893)]);
    let list5796 = vm.gc.listn(&[Object::Number(1024), Object::Number(1104)]);
    let list5797 = vm.gc.listn(&[Object::Number(1025), Object::Number(1105)]);
    let list5798 = vm.gc.listn(&[Object::Number(1026), Object::Number(1106)]);
    let list5799 = vm.gc.listn(&[Object::Number(1027), Object::Number(1107)]);
    let list5800 = vm.gc.listn(&[Object::Number(1028), Object::Number(1108)]);
    let list5801 = vm.gc.listn(&[Object::Number(1029), Object::Number(1109)]);
    let list5802 = vm.gc.listn(&[Object::Number(1030), Object::Number(1110)]);
    let list5803 = vm.gc.listn(&[Object::Number(1031), Object::Number(1111)]);
    let list5804 = vm.gc.listn(&[Object::Number(1032), Object::Number(1112)]);
    let list5805 = vm.gc.listn(&[Object::Number(1033), Object::Number(1113)]);
    let list5806 = vm.gc.listn(&[Object::Number(1034), Object::Number(1114)]);
    let list5807 = vm.gc.listn(&[Object::Number(1035), Object::Number(1115)]);
    let list5808 = vm.gc.listn(&[Object::Number(1036), Object::Number(1116)]);
    let list5809 = vm.gc.listn(&[Object::Number(1037), Object::Number(1117)]);
    let list5810 = vm.gc.listn(&[Object::Number(1038), Object::Number(1118)]);
    let list5811 = vm.gc.listn(&[Object::Number(1039), Object::Number(1119)]);
    let list5812 = vm.gc.listn(&[Object::Number(1040), Object::Number(1072)]);
    let list5813 = vm.gc.listn(&[Object::Number(1041), Object::Number(1073)]);
    let list5814 = vm.gc.listn(&[Object::Number(1042), Object::Number(1074)]);
    let list5815 = vm.gc.listn(&[Object::Number(1043), Object::Number(1075)]);
    let list5816 = vm.gc.listn(&[Object::Number(1044), Object::Number(1076)]);
    let list5817 = vm.gc.listn(&[Object::Number(1045), Object::Number(1077)]);
    let list5818 = vm.gc.listn(&[Object::Number(1046), Object::Number(1078)]);
    let list5819 = vm.gc.listn(&[Object::Number(1047), Object::Number(1079)]);
    let list5820 = vm.gc.listn(&[Object::Number(1048), Object::Number(1080)]);
    let list5821 = vm.gc.listn(&[Object::Number(1049), Object::Number(1081)]);
    let list5822 = vm.gc.listn(&[Object::Number(1050), Object::Number(1082)]);
    let list5823 = vm.gc.listn(&[Object::Number(1051), Object::Number(1083)]);
    let list5824 = vm.gc.listn(&[Object::Number(1052), Object::Number(1084)]);
    let list5825 = vm.gc.listn(&[Object::Number(1053), Object::Number(1085)]);
    let list5826 = vm.gc.listn(&[Object::Number(1054), Object::Number(1086)]);
    let list5827 = vm.gc.listn(&[Object::Number(1055), Object::Number(1087)]);
    let list5828 = vm.gc.listn(&[Object::Number(1056), Object::Number(1088)]);
    let list5829 = vm.gc.listn(&[Object::Number(1057), Object::Number(1089)]);
    let list5830 = vm.gc.listn(&[Object::Number(1058), Object::Number(1090)]);
    let list5831 = vm.gc.listn(&[Object::Number(1059), Object::Number(1091)]);
    let list5832 = vm.gc.listn(&[Object::Number(1060), Object::Number(1092)]);
    let list5833 = vm.gc.listn(&[Object::Number(1061), Object::Number(1093)]);
    let list5834 = vm.gc.listn(&[Object::Number(1062), Object::Number(1094)]);
    let list5835 = vm.gc.listn(&[Object::Number(1063), Object::Number(1095)]);
    let list5836 = vm.gc.listn(&[Object::Number(1064), Object::Number(1096)]);
    let list5837 = vm.gc.listn(&[Object::Number(1065), Object::Number(1097)]);
    let list5838 = vm.gc.listn(&[Object::Number(1066), Object::Number(1098)]);
    let list5839 = vm.gc.listn(&[Object::Number(1067), Object::Number(1099)]);
    let list5840 = vm.gc.listn(&[Object::Number(1068), Object::Number(1100)]);
    let list5841 = vm.gc.listn(&[Object::Number(1069), Object::Number(1101)]);
    let list5842 = vm.gc.listn(&[Object::Number(1070), Object::Number(1102)]);
    let list5843 = vm.gc.listn(&[Object::Number(1071), Object::Number(1103)]);
    let list5844 = vm.gc.listn(&[Object::Number(1120), Object::Number(1121)]);
    let list5845 = vm.gc.listn(&[Object::Number(1122), Object::Number(1123)]);
    let list5846 = vm.gc.listn(&[Object::Number(1124), Object::Number(1125)]);
    let list5847 = vm.gc.listn(&[Object::Number(1126), Object::Number(1127)]);
    let list5848 = vm.gc.listn(&[Object::Number(1128), Object::Number(1129)]);
    let list5849 = vm.gc.listn(&[Object::Number(1130), Object::Number(1131)]);
    let list5850 = vm.gc.listn(&[Object::Number(1132), Object::Number(1133)]);
    let list5851 = vm.gc.listn(&[Object::Number(1134), Object::Number(1135)]);
    let list5852 = vm.gc.listn(&[Object::Number(1136), Object::Number(1137)]);
    let list5853 = vm.gc.listn(&[Object::Number(1138), Object::Number(1139)]);
    let list5854 = vm.gc.listn(&[Object::Number(1140), Object::Number(1141)]);
    let list5855 = vm.gc.listn(&[Object::Number(1142), Object::Number(1143)]);
    let list5856 = vm.gc.listn(&[Object::Number(1144), Object::Number(1145)]);
    let list5857 = vm.gc.listn(&[Object::Number(1146), Object::Number(1147)]);
    let list5858 = vm.gc.listn(&[Object::Number(1148), Object::Number(1149)]);
    let list5859 = vm.gc.listn(&[Object::Number(1150), Object::Number(1151)]);
    let list5860 = vm.gc.listn(&[Object::Number(1152), Object::Number(1153)]);
    let list5861 = vm.gc.listn(&[Object::Number(1162), Object::Number(1163)]);
    let list5862 = vm.gc.listn(&[Object::Number(1164), Object::Number(1165)]);
    let list5863 = vm.gc.listn(&[Object::Number(1166), Object::Number(1167)]);
    let list5864 = vm.gc.listn(&[Object::Number(1168), Object::Number(1169)]);
    let list5865 = vm.gc.listn(&[Object::Number(1170), Object::Number(1171)]);
    let list5866 = vm.gc.listn(&[Object::Number(1172), Object::Number(1173)]);
    let list5867 = vm.gc.listn(&[Object::Number(1174), Object::Number(1175)]);
    let list5868 = vm.gc.listn(&[Object::Number(1176), Object::Number(1177)]);
    let list5869 = vm.gc.listn(&[Object::Number(1178), Object::Number(1179)]);
    let list5870 = vm.gc.listn(&[Object::Number(1180), Object::Number(1181)]);
    let list5871 = vm.gc.listn(&[Object::Number(1182), Object::Number(1183)]);
    let list5872 = vm.gc.listn(&[Object::Number(1184), Object::Number(1185)]);
    let list5873 = vm.gc.listn(&[Object::Number(1186), Object::Number(1187)]);
    let list5874 = vm.gc.listn(&[Object::Number(1188), Object::Number(1189)]);
    let list5875 = vm.gc.listn(&[Object::Number(1190), Object::Number(1191)]);
    let list5876 = vm.gc.listn(&[Object::Number(1192), Object::Number(1193)]);
    let list5877 = vm.gc.listn(&[Object::Number(1194), Object::Number(1195)]);
    let list5878 = vm.gc.listn(&[Object::Number(1196), Object::Number(1197)]);
    let list5879 = vm.gc.listn(&[Object::Number(1198), Object::Number(1199)]);
    let list5880 = vm.gc.listn(&[Object::Number(1200), Object::Number(1201)]);
    let list5881 = vm.gc.listn(&[Object::Number(1202), Object::Number(1203)]);
    let list5882 = vm.gc.listn(&[Object::Number(1204), Object::Number(1205)]);
    let list5883 = vm.gc.listn(&[Object::Number(1206), Object::Number(1207)]);
    let list5884 = vm.gc.listn(&[Object::Number(1208), Object::Number(1209)]);
    let list5885 = vm.gc.listn(&[Object::Number(1210), Object::Number(1211)]);
    let list5886 = vm.gc.listn(&[Object::Number(1212), Object::Number(1213)]);
    let list5887 = vm.gc.listn(&[Object::Number(1214), Object::Number(1215)]);
    let list5888 = vm.gc.listn(&[Object::Number(1216), Object::Number(1231)]);
    let list5889 = vm.gc.listn(&[Object::Number(1217), Object::Number(1218)]);
    let list5890 = vm.gc.listn(&[Object::Number(1219), Object::Number(1220)]);
    let list5891 = vm.gc.listn(&[Object::Number(1221), Object::Number(1222)]);
    let list5892 = vm.gc.listn(&[Object::Number(1223), Object::Number(1224)]);
    let list5893 = vm.gc.listn(&[Object::Number(1225), Object::Number(1226)]);
    let list5894 = vm.gc.listn(&[Object::Number(1227), Object::Number(1228)]);
    let list5895 = vm.gc.listn(&[Object::Number(1229), Object::Number(1230)]);
    let list5896 = vm.gc.listn(&[Object::Number(1232), Object::Number(1233)]);
    let list5897 = vm.gc.listn(&[Object::Number(1234), Object::Number(1235)]);
    let list5898 = vm.gc.listn(&[Object::Number(1236), Object::Number(1237)]);
    let list5899 = vm.gc.listn(&[Object::Number(1238), Object::Number(1239)]);
    let list5900 = vm.gc.listn(&[Object::Number(1240), Object::Number(1241)]);
    let list5901 = vm.gc.listn(&[Object::Number(1242), Object::Number(1243)]);
    let list5902 = vm.gc.listn(&[Object::Number(1244), Object::Number(1245)]);
    let list5903 = vm.gc.listn(&[Object::Number(1246), Object::Number(1247)]);
    let list5904 = vm.gc.listn(&[Object::Number(1248), Object::Number(1249)]);
    let list5905 = vm.gc.listn(&[Object::Number(1250), Object::Number(1251)]);
    let list5906 = vm.gc.listn(&[Object::Number(1252), Object::Number(1253)]);
    let list5907 = vm.gc.listn(&[Object::Number(1254), Object::Number(1255)]);
    let list5908 = vm.gc.listn(&[Object::Number(1256), Object::Number(1257)]);
    let list5909 = vm.gc.listn(&[Object::Number(1258), Object::Number(1259)]);
    let list5910 = vm.gc.listn(&[Object::Number(1260), Object::Number(1261)]);
    let list5911 = vm.gc.listn(&[Object::Number(1262), Object::Number(1263)]);
    let list5912 = vm.gc.listn(&[Object::Number(1264), Object::Number(1265)]);
    let list5913 = vm.gc.listn(&[Object::Number(1266), Object::Number(1267)]);
    let list5914 = vm.gc.listn(&[Object::Number(1268), Object::Number(1269)]);
    let list5915 = vm.gc.listn(&[Object::Number(1270), Object::Number(1271)]);
    let list5916 = vm.gc.listn(&[Object::Number(1272), Object::Number(1273)]);
    let list5917 = vm.gc.listn(&[Object::Number(1274), Object::Number(1275)]);
    let list5918 = vm.gc.listn(&[Object::Number(1276), Object::Number(1277)]);
    let list5919 = vm.gc.listn(&[Object::Number(1278), Object::Number(1279)]);
    let list5920 = vm.gc.listn(&[Object::Number(1280), Object::Number(1281)]);
    let list5921 = vm.gc.listn(&[Object::Number(1282), Object::Number(1283)]);
    let list5922 = vm.gc.listn(&[Object::Number(1284), Object::Number(1285)]);
    let list5923 = vm.gc.listn(&[Object::Number(1286), Object::Number(1287)]);
    let list5924 = vm.gc.listn(&[Object::Number(1288), Object::Number(1289)]);
    let list5925 = vm.gc.listn(&[Object::Number(1290), Object::Number(1291)]);
    let list5926 = vm.gc.listn(&[Object::Number(1292), Object::Number(1293)]);
    let list5927 = vm.gc.listn(&[Object::Number(1294), Object::Number(1295)]);
    let list5928 = vm.gc.listn(&[Object::Number(1296), Object::Number(1297)]);
    let list5929 = vm.gc.listn(&[Object::Number(1298), Object::Number(1299)]);
    let list5930 = vm.gc.listn(&[Object::Number(1300), Object::Number(1301)]);
    let list5931 = vm.gc.listn(&[Object::Number(1302), Object::Number(1303)]);
    let list5932 = vm.gc.listn(&[Object::Number(1304), Object::Number(1305)]);
    let list5933 = vm.gc.listn(&[Object::Number(1306), Object::Number(1307)]);
    let list5934 = vm.gc.listn(&[Object::Number(1308), Object::Number(1309)]);
    let list5935 = vm.gc.listn(&[Object::Number(1310), Object::Number(1311)]);
    let list5936 = vm.gc.listn(&[Object::Number(1312), Object::Number(1313)]);
    let list5937 = vm.gc.listn(&[Object::Number(1314), Object::Number(1315)]);
    let list5938 = vm.gc.listn(&[Object::Number(1329), Object::Number(1377)]);
    let list5939 = vm.gc.listn(&[Object::Number(1330), Object::Number(1378)]);
    let list5940 = vm.gc.listn(&[Object::Number(1331), Object::Number(1379)]);
    let list5941 = vm.gc.listn(&[Object::Number(1332), Object::Number(1380)]);
    let list5942 = vm.gc.listn(&[Object::Number(1333), Object::Number(1381)]);
    let list5943 = vm.gc.listn(&[Object::Number(1334), Object::Number(1382)]);
    let list5944 = vm.gc.listn(&[Object::Number(1335), Object::Number(1383)]);
    let list5945 = vm.gc.listn(&[Object::Number(1336), Object::Number(1384)]);
    let list5946 = vm.gc.listn(&[Object::Number(1337), Object::Number(1385)]);
    let list5947 = vm.gc.listn(&[Object::Number(1338), Object::Number(1386)]);
    let list5948 = vm.gc.listn(&[Object::Number(1339), Object::Number(1387)]);
    let list5949 = vm.gc.listn(&[Object::Number(1340), Object::Number(1388)]);
    let list5950 = vm.gc.listn(&[Object::Number(1341), Object::Number(1389)]);
    let list5951 = vm.gc.listn(&[Object::Number(1342), Object::Number(1390)]);
    let list5952 = vm.gc.listn(&[Object::Number(1343), Object::Number(1391)]);
    let list5953 = vm.gc.listn(&[Object::Number(1344), Object::Number(1392)]);
    let list5954 = vm.gc.listn(&[Object::Number(1345), Object::Number(1393)]);
    let list5955 = vm.gc.listn(&[Object::Number(1346), Object::Number(1394)]);
    let list5956 = vm.gc.listn(&[Object::Number(1347), Object::Number(1395)]);
    let list5957 = vm.gc.listn(&[Object::Number(1348), Object::Number(1396)]);
    let list5958 = vm.gc.listn(&[Object::Number(1349), Object::Number(1397)]);
    let list5959 = vm.gc.listn(&[Object::Number(1350), Object::Number(1398)]);
    let list5960 = vm.gc.listn(&[Object::Number(1351), Object::Number(1399)]);
    let list5961 = vm.gc.listn(&[Object::Number(1352), Object::Number(1400)]);
    let list5962 = vm.gc.listn(&[Object::Number(1353), Object::Number(1401)]);
    let list5963 = vm.gc.listn(&[Object::Number(1354), Object::Number(1402)]);
    let list5964 = vm.gc.listn(&[Object::Number(1355), Object::Number(1403)]);
    let list5965 = vm.gc.listn(&[Object::Number(1356), Object::Number(1404)]);
    let list5966 = vm.gc.listn(&[Object::Number(1357), Object::Number(1405)]);
    let list5967 = vm.gc.listn(&[Object::Number(1358), Object::Number(1406)]);
    let list5968 = vm.gc.listn(&[Object::Number(1359), Object::Number(1407)]);
    let list5969 = vm.gc.listn(&[Object::Number(1360), Object::Number(1408)]);
    let list5970 = vm.gc.listn(&[Object::Number(1361), Object::Number(1409)]);
    let list5971 = vm.gc.listn(&[Object::Number(1362), Object::Number(1410)]);
    let list5972 = vm.gc.listn(&[Object::Number(1363), Object::Number(1411)]);
    let list5973 = vm.gc.listn(&[Object::Number(1364), Object::Number(1412)]);
    let list5974 = vm.gc.listn(&[Object::Number(1365), Object::Number(1413)]);
    let list5975 = vm.gc.listn(&[Object::Number(1366), Object::Number(1414)]);
    let list5976 = vm.gc.listn(&[Object::Number(1415), Object::Number(1381), Object::Number(1410)]);
    let list5977 = vm.gc.listn(&[Object::Number(4256), Object::Number(11520)]);
    let list5978 = vm.gc.listn(&[Object::Number(4257), Object::Number(11521)]);
    let list5979 = vm.gc.listn(&[Object::Number(4258), Object::Number(11522)]);
    let list5980 = vm.gc.listn(&[Object::Number(4259), Object::Number(11523)]);
    let list5981 = vm.gc.listn(&[Object::Number(4260), Object::Number(11524)]);
    let list5982 = vm.gc.listn(&[Object::Number(4261), Object::Number(11525)]);
    let list5983 = vm.gc.listn(&[Object::Number(4262), Object::Number(11526)]);
    let list5984 = vm.gc.listn(&[Object::Number(4263), Object::Number(11527)]);
    let list5985 = vm.gc.listn(&[Object::Number(4264), Object::Number(11528)]);
    let list5986 = vm.gc.listn(&[Object::Number(4265), Object::Number(11529)]);
    let list5987 = vm.gc.listn(&[Object::Number(4266), Object::Number(11530)]);
    let list5988 = vm.gc.listn(&[Object::Number(4267), Object::Number(11531)]);
    let list5989 = vm.gc.listn(&[Object::Number(4268), Object::Number(11532)]);
    let list5990 = vm.gc.listn(&[Object::Number(4269), Object::Number(11533)]);
    let list5991 = vm.gc.listn(&[Object::Number(4270), Object::Number(11534)]);
    let list5992 = vm.gc.listn(&[Object::Number(4271), Object::Number(11535)]);
    let list5993 = vm.gc.listn(&[Object::Number(4272), Object::Number(11536)]);
    let list5994 = vm.gc.listn(&[Object::Number(4273), Object::Number(11537)]);
    let list5995 = vm.gc.listn(&[Object::Number(4274), Object::Number(11538)]);
    let list5996 = vm.gc.listn(&[Object::Number(4275), Object::Number(11539)]);
    let list5997 = vm.gc.listn(&[Object::Number(4276), Object::Number(11540)]);
    let list5998 = vm.gc.listn(&[Object::Number(4277), Object::Number(11541)]);
    let list5999 = vm.gc.listn(&[Object::Number(4278), Object::Number(11542)]);
    let list6000 = vm.gc.listn(&[Object::Number(4279), Object::Number(11543)]);
    let list6001 = vm.gc.listn(&[Object::Number(4280), Object::Number(11544)]);
    let list6002 = vm.gc.listn(&[Object::Number(4281), Object::Number(11545)]);
    let list6003 = vm.gc.listn(&[Object::Number(4282), Object::Number(11546)]);
    let list6004 = vm.gc.listn(&[Object::Number(4283), Object::Number(11547)]);
    let list6005 = vm.gc.listn(&[Object::Number(4284), Object::Number(11548)]);
    let list6006 = vm.gc.listn(&[Object::Number(4285), Object::Number(11549)]);
    let list6007 = vm.gc.listn(&[Object::Number(4286), Object::Number(11550)]);
    let list6008 = vm.gc.listn(&[Object::Number(4287), Object::Number(11551)]);
    let list6009 = vm.gc.listn(&[Object::Number(4288), Object::Number(11552)]);
    let list6010 = vm.gc.listn(&[Object::Number(4289), Object::Number(11553)]);
    let list6011 = vm.gc.listn(&[Object::Number(4290), Object::Number(11554)]);
    let list6012 = vm.gc.listn(&[Object::Number(4291), Object::Number(11555)]);
    let list6013 = vm.gc.listn(&[Object::Number(4292), Object::Number(11556)]);
    let list6014 = vm.gc.listn(&[Object::Number(4293), Object::Number(11557)]);
    let list6015 = vm.gc.listn(&[Object::Number(7680), Object::Number(7681)]);
    let list6016 = vm.gc.listn(&[Object::Number(7682), Object::Number(7683)]);
    let list6017 = vm.gc.listn(&[Object::Number(7684), Object::Number(7685)]);
    let list6018 = vm.gc.listn(&[Object::Number(7686), Object::Number(7687)]);
    let list6019 = vm.gc.listn(&[Object::Number(7688), Object::Number(7689)]);
    let list6020 = vm.gc.listn(&[Object::Number(7690), Object::Number(7691)]);
    let list6021 = vm.gc.listn(&[Object::Number(7692), Object::Number(7693)]);
    let list6022 = vm.gc.listn(&[Object::Number(7694), Object::Number(7695)]);
    let list6023 = vm.gc.listn(&[Object::Number(7696), Object::Number(7697)]);
    let list6024 = vm.gc.listn(&[Object::Number(7698), Object::Number(7699)]);
    let list6025 = vm.gc.listn(&[Object::Number(7700), Object::Number(7701)]);
    let list6026 = vm.gc.listn(&[Object::Number(7702), Object::Number(7703)]);
    let list6027 = vm.gc.listn(&[Object::Number(7704), Object::Number(7705)]);
    let list6028 = vm.gc.listn(&[Object::Number(7706), Object::Number(7707)]);
    let list6029 = vm.gc.listn(&[Object::Number(7708), Object::Number(7709)]);
    let list6030 = vm.gc.listn(&[Object::Number(7710), Object::Number(7711)]);
    let list6031 = vm.gc.listn(&[Object::Number(7712), Object::Number(7713)]);
    let list6032 = vm.gc.listn(&[Object::Number(7714), Object::Number(7715)]);
    let list6033 = vm.gc.listn(&[Object::Number(7716), Object::Number(7717)]);
    let list6034 = vm.gc.listn(&[Object::Number(7718), Object::Number(7719)]);
    let list6035 = vm.gc.listn(&[Object::Number(7720), Object::Number(7721)]);
    let list6036 = vm.gc.listn(&[Object::Number(7722), Object::Number(7723)]);
    let list6037 = vm.gc.listn(&[Object::Number(7724), Object::Number(7725)]);
    let list6038 = vm.gc.listn(&[Object::Number(7726), Object::Number(7727)]);
    let list6039 = vm.gc.listn(&[Object::Number(7728), Object::Number(7729)]);
    let list6040 = vm.gc.listn(&[Object::Number(7730), Object::Number(7731)]);
    let list6041 = vm.gc.listn(&[Object::Number(7732), Object::Number(7733)]);
    let list6042 = vm.gc.listn(&[Object::Number(7734), Object::Number(7735)]);
    let list6043 = vm.gc.listn(&[Object::Number(7736), Object::Number(7737)]);
    let list6044 = vm.gc.listn(&[Object::Number(7738), Object::Number(7739)]);
    let list6045 = vm.gc.listn(&[Object::Number(7740), Object::Number(7741)]);
    let list6046 = vm.gc.listn(&[Object::Number(7742), Object::Number(7743)]);
    let list6047 = vm.gc.listn(&[Object::Number(7744), Object::Number(7745)]);
    let list6048 = vm.gc.listn(&[Object::Number(7746), Object::Number(7747)]);
    let list6049 = vm.gc.listn(&[Object::Number(7748), Object::Number(7749)]);
    let list6050 = vm.gc.listn(&[Object::Number(7750), Object::Number(7751)]);
    let list6051 = vm.gc.listn(&[Object::Number(7752), Object::Number(7753)]);
    let list6052 = vm.gc.listn(&[Object::Number(7754), Object::Number(7755)]);
    let list6053 = vm.gc.listn(&[Object::Number(7756), Object::Number(7757)]);
    let list6054 = vm.gc.listn(&[Object::Number(7758), Object::Number(7759)]);
    let list6055 = vm.gc.listn(&[Object::Number(7760), Object::Number(7761)]);
    let list6056 = vm.gc.listn(&[Object::Number(7762), Object::Number(7763)]);
    let list6057 = vm.gc.listn(&[Object::Number(7764), Object::Number(7765)]);
    let list6058 = vm.gc.listn(&[Object::Number(7766), Object::Number(7767)]);
    let list6059 = vm.gc.listn(&[Object::Number(7768), Object::Number(7769)]);
    let list6060 = vm.gc.listn(&[Object::Number(7770), Object::Number(7771)]);
    let list6061 = vm.gc.listn(&[Object::Number(7772), Object::Number(7773)]);
    let list6062 = vm.gc.listn(&[Object::Number(7774), Object::Number(7775)]);
    let list6063 = vm.gc.listn(&[Object::Number(7776), Object::Number(7777)]);
    let list6064 = vm.gc.listn(&[Object::Number(7778), Object::Number(7779)]);
    let list6065 = vm.gc.listn(&[Object::Number(7780), Object::Number(7781)]);
    let list6066 = vm.gc.listn(&[Object::Number(7782), Object::Number(7783)]);
    let list6067 = vm.gc.listn(&[Object::Number(7784), Object::Number(7785)]);
    let list6068 = vm.gc.listn(&[Object::Number(7786), Object::Number(7787)]);
    let list6069 = vm.gc.listn(&[Object::Number(7788), Object::Number(7789)]);
    let list6070 = vm.gc.listn(&[Object::Number(7790), Object::Number(7791)]);
    let list6071 = vm.gc.listn(&[Object::Number(7792), Object::Number(7793)]);
    let list6072 = vm.gc.listn(&[Object::Number(7794), Object::Number(7795)]);
    let list6073 = vm.gc.listn(&[Object::Number(7796), Object::Number(7797)]);
    let list6074 = vm.gc.listn(&[Object::Number(7798), Object::Number(7799)]);
    let list6075 = vm.gc.listn(&[Object::Number(7800), Object::Number(7801)]);
    let list6076 = vm.gc.listn(&[Object::Number(7802), Object::Number(7803)]);
    let list6077 = vm.gc.listn(&[Object::Number(7804), Object::Number(7805)]);
    let list6078 = vm.gc.listn(&[Object::Number(7806), Object::Number(7807)]);
    let list6079 = vm.gc.listn(&[Object::Number(7808), Object::Number(7809)]);
    let list6080 = vm.gc.listn(&[Object::Number(7810), Object::Number(7811)]);
    let list6081 = vm.gc.listn(&[Object::Number(7812), Object::Number(7813)]);
    let list6082 = vm.gc.listn(&[Object::Number(7814), Object::Number(7815)]);
    let list6083 = vm.gc.listn(&[Object::Number(7816), Object::Number(7817)]);
    let list6084 = vm.gc.listn(&[Object::Number(7818), Object::Number(7819)]);
    let list6085 = vm.gc.listn(&[Object::Number(7820), Object::Number(7821)]);
    let list6086 = vm.gc.listn(&[Object::Number(7822), Object::Number(7823)]);
    let list6087 = vm.gc.listn(&[Object::Number(7824), Object::Number(7825)]);
    let list6088 = vm.gc.listn(&[Object::Number(7826), Object::Number(7827)]);
    let list6089 = vm.gc.listn(&[Object::Number(7828), Object::Number(7829)]);
    let list6090 = vm.gc.listn(&[Object::Number(7830), Object::Number(104), Object::Number(817)]);
    let list6091 = vm.gc.listn(&[Object::Number(7831), Object::Number(116), Object::Number(776)]);
    let list6092 = vm.gc.listn(&[Object::Number(7832), Object::Number(119), Object::Number(778)]);
    let list6093 = vm.gc.listn(&[Object::Number(7833), Object::Number(121), Object::Number(778)]);
    let list6094 = vm.gc.listn(&[Object::Number(7834), Object::Number(97), Object::Number(702)]);
    let list6095 = vm.gc.listn(&[Object::Number(7835), Object::Number(7777)]);
    let list6096 = vm.gc.listn(&[Object::Number(7838), Object::Number(115), Object::Number(115)]);
    let list6097 = vm.gc.listn(&[Object::Number(7840), Object::Number(7841)]);
    let list6098 = vm.gc.listn(&[Object::Number(7842), Object::Number(7843)]);
    let list6099 = vm.gc.listn(&[Object::Number(7844), Object::Number(7845)]);
    let list6100 = vm.gc.listn(&[Object::Number(7846), Object::Number(7847)]);
    let list6101 = vm.gc.listn(&[Object::Number(7848), Object::Number(7849)]);
    let list6102 = vm.gc.listn(&[Object::Number(7850), Object::Number(7851)]);
    let list6103 = vm.gc.listn(&[Object::Number(7852), Object::Number(7853)]);
    let list6104 = vm.gc.listn(&[Object::Number(7854), Object::Number(7855)]);
    let list6105 = vm.gc.listn(&[Object::Number(7856), Object::Number(7857)]);
    let list6106 = vm.gc.listn(&[Object::Number(7858), Object::Number(7859)]);
    let list6107 = vm.gc.listn(&[Object::Number(7860), Object::Number(7861)]);
    let list6108 = vm.gc.listn(&[Object::Number(7862), Object::Number(7863)]);
    let list6109 = vm.gc.listn(&[Object::Number(7864), Object::Number(7865)]);
    let list6110 = vm.gc.listn(&[Object::Number(7866), Object::Number(7867)]);
    let list6111 = vm.gc.listn(&[Object::Number(7868), Object::Number(7869)]);
    let list6112 = vm.gc.listn(&[Object::Number(7870), Object::Number(7871)]);
    let list6113 = vm.gc.listn(&[Object::Number(7872), Object::Number(7873)]);
    let list6114 = vm.gc.listn(&[Object::Number(7874), Object::Number(7875)]);
    let list6115 = vm.gc.listn(&[Object::Number(7876), Object::Number(7877)]);
    let list6116 = vm.gc.listn(&[Object::Number(7878), Object::Number(7879)]);
    let list6117 = vm.gc.listn(&[Object::Number(7880), Object::Number(7881)]);
    let list6118 = vm.gc.listn(&[Object::Number(7882), Object::Number(7883)]);
    let list6119 = vm.gc.listn(&[Object::Number(7884), Object::Number(7885)]);
    let list6120 = vm.gc.listn(&[Object::Number(7886), Object::Number(7887)]);
    let list6121 = vm.gc.listn(&[Object::Number(7888), Object::Number(7889)]);
    let list6122 = vm.gc.listn(&[Object::Number(7890), Object::Number(7891)]);
    let list6123 = vm.gc.listn(&[Object::Number(7892), Object::Number(7893)]);
    let list6124 = vm.gc.listn(&[Object::Number(7894), Object::Number(7895)]);
    let list6125 = vm.gc.listn(&[Object::Number(7896), Object::Number(7897)]);
    let list6126 = vm.gc.listn(&[Object::Number(7898), Object::Number(7899)]);
    let list6127 = vm.gc.listn(&[Object::Number(7900), Object::Number(7901)]);
    let list6128 = vm.gc.listn(&[Object::Number(7902), Object::Number(7903)]);
    let list6129 = vm.gc.listn(&[Object::Number(7904), Object::Number(7905)]);
    let list6130 = vm.gc.listn(&[Object::Number(7906), Object::Number(7907)]);
    let list6131 = vm.gc.listn(&[Object::Number(7908), Object::Number(7909)]);
    let list6132 = vm.gc.listn(&[Object::Number(7910), Object::Number(7911)]);
    let list6133 = vm.gc.listn(&[Object::Number(7912), Object::Number(7913)]);
    let list6134 = vm.gc.listn(&[Object::Number(7914), Object::Number(7915)]);
    let list6135 = vm.gc.listn(&[Object::Number(7916), Object::Number(7917)]);
    let list6136 = vm.gc.listn(&[Object::Number(7918), Object::Number(7919)]);
    let list6137 = vm.gc.listn(&[Object::Number(7920), Object::Number(7921)]);
    let list6138 = vm.gc.listn(&[Object::Number(7922), Object::Number(7923)]);
    let list6139 = vm.gc.listn(&[Object::Number(7924), Object::Number(7925)]);
    let list6140 = vm.gc.listn(&[Object::Number(7926), Object::Number(7927)]);
    let list6141 = vm.gc.listn(&[Object::Number(7928), Object::Number(7929)]);
    let list6142 = vm.gc.listn(&[Object::Number(7930), Object::Number(7931)]);
    let list6143 = vm.gc.listn(&[Object::Number(7932), Object::Number(7933)]);
    let list6144 = vm.gc.listn(&[Object::Number(7934), Object::Number(7935)]);
    let list6145 = vm.gc.listn(&[Object::Number(7944), Object::Number(7936)]);
    let list6146 = vm.gc.listn(&[Object::Number(7945), Object::Number(7937)]);
    let list6147 = vm.gc.listn(&[Object::Number(7946), Object::Number(7938)]);
    let list6148 = vm.gc.listn(&[Object::Number(7947), Object::Number(7939)]);
    let list6149 = vm.gc.listn(&[Object::Number(7948), Object::Number(7940)]);
    let list6150 = vm.gc.listn(&[Object::Number(7949), Object::Number(7941)]);
    let list6151 = vm.gc.listn(&[Object::Number(7950), Object::Number(7942)]);
    let list6152 = vm.gc.listn(&[Object::Number(7951), Object::Number(7943)]);
    let list6153 = vm.gc.listn(&[Object::Number(7960), Object::Number(7952)]);
    let list6154 = vm.gc.listn(&[Object::Number(7961), Object::Number(7953)]);
    let list6155 = vm.gc.listn(&[Object::Number(7962), Object::Number(7954)]);
    let list6156 = vm.gc.listn(&[Object::Number(7963), Object::Number(7955)]);
    let list6157 = vm.gc.listn(&[Object::Number(7964), Object::Number(7956)]);
    let list6158 = vm.gc.listn(&[Object::Number(7965), Object::Number(7957)]);
    let list6159 = vm.gc.listn(&[Object::Number(7976), Object::Number(7968)]);
    let list6160 = vm.gc.listn(&[Object::Number(7977), Object::Number(7969)]);
    let list6161 = vm.gc.listn(&[Object::Number(7978), Object::Number(7970)]);
    let list6162 = vm.gc.listn(&[Object::Number(7979), Object::Number(7971)]);
    let list6163 = vm.gc.listn(&[Object::Number(7980), Object::Number(7972)]);
    let list6164 = vm.gc.listn(&[Object::Number(7981), Object::Number(7973)]);
    let list6165 = vm.gc.listn(&[Object::Number(7982), Object::Number(7974)]);
    let list6166 = vm.gc.listn(&[Object::Number(7983), Object::Number(7975)]);
    let list6167 = vm.gc.listn(&[Object::Number(7992), Object::Number(7984)]);
    let list6168 = vm.gc.listn(&[Object::Number(7993), Object::Number(7985)]);
    let list6169 = vm.gc.listn(&[Object::Number(7994), Object::Number(7986)]);
    let list6170 = vm.gc.listn(&[Object::Number(7995), Object::Number(7987)]);
    let list6171 = vm.gc.listn(&[Object::Number(7996), Object::Number(7988)]);
    let list6172 = vm.gc.listn(&[Object::Number(7997), Object::Number(7989)]);
    let list6173 = vm.gc.listn(&[Object::Number(7998), Object::Number(7990)]);
    let list6174 = vm.gc.listn(&[Object::Number(7999), Object::Number(7991)]);
    let list6175 = vm.gc.listn(&[Object::Number(8008), Object::Number(8000)]);
    let list6176 = vm.gc.listn(&[Object::Number(8009), Object::Number(8001)]);
    let list6177 = vm.gc.listn(&[Object::Number(8010), Object::Number(8002)]);
    let list6178 = vm.gc.listn(&[Object::Number(8011), Object::Number(8003)]);
    let list6179 = vm.gc.listn(&[Object::Number(8012), Object::Number(8004)]);
    let list6180 = vm.gc.listn(&[Object::Number(8013), Object::Number(8005)]);
    let list6181 = vm.gc.listn(&[Object::Number(8016), Object::Number(965), Object::Number(787)]);
    let list6182 = vm.gc.listn(&[Object::Number(8018), Object::Number(965), Object::Number(787), Object::Number(768)]);
    let list6183 = vm.gc.listn(&[Object::Number(8020), Object::Number(965), Object::Number(787), Object::Number(769)]);
    let list6184 = vm.gc.listn(&[Object::Number(8022), Object::Number(965), Object::Number(787), Object::Number(834)]);
    let list6185 = vm.gc.listn(&[Object::Number(8025), Object::Number(8017)]);
    let list6186 = vm.gc.listn(&[Object::Number(8027), Object::Number(8019)]);
    let list6187 = vm.gc.listn(&[Object::Number(8029), Object::Number(8021)]);
    let list6188 = vm.gc.listn(&[Object::Number(8031), Object::Number(8023)]);
    let list6189 = vm.gc.listn(&[Object::Number(8040), Object::Number(8032)]);
    let list6190 = vm.gc.listn(&[Object::Number(8041), Object::Number(8033)]);
    let list6191 = vm.gc.listn(&[Object::Number(8042), Object::Number(8034)]);
    let list6192 = vm.gc.listn(&[Object::Number(8043), Object::Number(8035)]);
    let list6193 = vm.gc.listn(&[Object::Number(8044), Object::Number(8036)]);
    let list6194 = vm.gc.listn(&[Object::Number(8045), Object::Number(8037)]);
    let list6195 = vm.gc.listn(&[Object::Number(8046), Object::Number(8038)]);
    let list6196 = vm.gc.listn(&[Object::Number(8047), Object::Number(8039)]);
    let list6197 = vm.gc.listn(&[Object::Number(8064), Object::Number(7936), Object::Number(953)]);
    let list6198 = vm.gc.listn(&[Object::Number(8065), Object::Number(7937), Object::Number(953)]);
    let list6199 = vm.gc.listn(&[Object::Number(8066), Object::Number(7938), Object::Number(953)]);
    let list6200 = vm.gc.listn(&[Object::Number(8067), Object::Number(7939), Object::Number(953)]);
    let list6201 = vm.gc.listn(&[Object::Number(8068), Object::Number(7940), Object::Number(953)]);
    let list6202 = vm.gc.listn(&[Object::Number(8069), Object::Number(7941), Object::Number(953)]);
    let list6203 = vm.gc.listn(&[Object::Number(8070), Object::Number(7942), Object::Number(953)]);
    let list6204 = vm.gc.listn(&[Object::Number(8071), Object::Number(7943), Object::Number(953)]);
    let list6205 = vm.gc.listn(&[Object::Number(8072), Object::Number(7936), Object::Number(953)]);
    let list6206 = vm.gc.listn(&[Object::Number(8073), Object::Number(7937), Object::Number(953)]);
    let list6207 = vm.gc.listn(&[Object::Number(8074), Object::Number(7938), Object::Number(953)]);
    let list6208 = vm.gc.listn(&[Object::Number(8075), Object::Number(7939), Object::Number(953)]);
    let list6209 = vm.gc.listn(&[Object::Number(8076), Object::Number(7940), Object::Number(953)]);
    let list6210 = vm.gc.listn(&[Object::Number(8077), Object::Number(7941), Object::Number(953)]);
    let list6211 = vm.gc.listn(&[Object::Number(8078), Object::Number(7942), Object::Number(953)]);
    let list6212 = vm.gc.listn(&[Object::Number(8079), Object::Number(7943), Object::Number(953)]);
    let list6213 = vm.gc.listn(&[Object::Number(8080), Object::Number(7968), Object::Number(953)]);
    let list6214 = vm.gc.listn(&[Object::Number(8081), Object::Number(7969), Object::Number(953)]);
    let list6215 = vm.gc.listn(&[Object::Number(8082), Object::Number(7970), Object::Number(953)]);
    let list6216 = vm.gc.listn(&[Object::Number(8083), Object::Number(7971), Object::Number(953)]);
    let list6217 = vm.gc.listn(&[Object::Number(8084), Object::Number(7972), Object::Number(953)]);
    let list6218 = vm.gc.listn(&[Object::Number(8085), Object::Number(7973), Object::Number(953)]);
    let list6219 = vm.gc.listn(&[Object::Number(8086), Object::Number(7974), Object::Number(953)]);
    let list6220 = vm.gc.listn(&[Object::Number(8087), Object::Number(7975), Object::Number(953)]);
    let list6221 = vm.gc.listn(&[Object::Number(8088), Object::Number(7968), Object::Number(953)]);
    let list6222 = vm.gc.listn(&[Object::Number(8089), Object::Number(7969), Object::Number(953)]);
    let list6223 = vm.gc.listn(&[Object::Number(8090), Object::Number(7970), Object::Number(953)]);
    let list6224 = vm.gc.listn(&[Object::Number(8091), Object::Number(7971), Object::Number(953)]);
    let list6225 = vm.gc.listn(&[Object::Number(8092), Object::Number(7972), Object::Number(953)]);
    let list6226 = vm.gc.listn(&[Object::Number(8093), Object::Number(7973), Object::Number(953)]);
    let list6227 = vm.gc.listn(&[Object::Number(8094), Object::Number(7974), Object::Number(953)]);
    let list6228 = vm.gc.listn(&[Object::Number(8095), Object::Number(7975), Object::Number(953)]);
    let list6229 = vm.gc.listn(&[Object::Number(8096), Object::Number(8032), Object::Number(953)]);
    let list6230 = vm.gc.listn(&[Object::Number(8097), Object::Number(8033), Object::Number(953)]);
    let list6231 = vm.gc.listn(&[Object::Number(8098), Object::Number(8034), Object::Number(953)]);
    let list6232 = vm.gc.listn(&[Object::Number(8099), Object::Number(8035), Object::Number(953)]);
    let list6233 = vm.gc.listn(&[Object::Number(8100), Object::Number(8036), Object::Number(953)]);
    let list6234 = vm.gc.listn(&[Object::Number(8101), Object::Number(8037), Object::Number(953)]);
    let list6235 = vm.gc.listn(&[Object::Number(8102), Object::Number(8038), Object::Number(953)]);
    let list6236 = vm.gc.listn(&[Object::Number(8103), Object::Number(8039), Object::Number(953)]);
    let list6237 = vm.gc.listn(&[Object::Number(8104), Object::Number(8032), Object::Number(953)]);
    let list6238 = vm.gc.listn(&[Object::Number(8105), Object::Number(8033), Object::Number(953)]);
    let list6239 = vm.gc.listn(&[Object::Number(8106), Object::Number(8034), Object::Number(953)]);
    let list6240 = vm.gc.listn(&[Object::Number(8107), Object::Number(8035), Object::Number(953)]);
    let list6241 = vm.gc.listn(&[Object::Number(8108), Object::Number(8036), Object::Number(953)]);
    let list6242 = vm.gc.listn(&[Object::Number(8109), Object::Number(8037), Object::Number(953)]);
    let list6243 = vm.gc.listn(&[Object::Number(8110), Object::Number(8038), Object::Number(953)]);
    let list6244 = vm.gc.listn(&[Object::Number(8111), Object::Number(8039), Object::Number(953)]);
    let list6245 = vm.gc.listn(&[Object::Number(8114), Object::Number(8048), Object::Number(953)]);
    let list6246 = vm.gc.listn(&[Object::Number(8115), Object::Number(945), Object::Number(953)]);
    let list6247 = vm.gc.listn(&[Object::Number(8116), Object::Number(940), Object::Number(953)]);
    let list6248 = vm.gc.listn(&[Object::Number(8118), Object::Number(945), Object::Number(834)]);
    let list6249 = vm.gc.listn(&[Object::Number(8119), Object::Number(945), Object::Number(834), Object::Number(953)]);
    let list6250 = vm.gc.listn(&[Object::Number(8120), Object::Number(8112)]);
    let list6251 = vm.gc.listn(&[Object::Number(8121), Object::Number(8113)]);
    let list6252 = vm.gc.listn(&[Object::Number(8122), Object::Number(8048)]);
    let list6253 = vm.gc.listn(&[Object::Number(8123), Object::Number(8049)]);
    let list6254 = vm.gc.listn(&[Object::Number(8124), Object::Number(945), Object::Number(953)]);
    let list6255 = vm.gc.listn(&[Object::Number(8126), Object::Number(953)]);
    let list6256 = vm.gc.listn(&[Object::Number(8130), Object::Number(8052), Object::Number(953)]);
    let list6257 = vm.gc.listn(&[Object::Number(8131), Object::Number(951), Object::Number(953)]);
    let list6258 = vm.gc.listn(&[Object::Number(8132), Object::Number(942), Object::Number(953)]);
    let list6259 = vm.gc.listn(&[Object::Number(8134), Object::Number(951), Object::Number(834)]);
    let list6260 = vm.gc.listn(&[Object::Number(8135), Object::Number(951), Object::Number(834), Object::Number(953)]);
    let list6261 = vm.gc.listn(&[Object::Number(8136), Object::Number(8050)]);
    let list6262 = vm.gc.listn(&[Object::Number(8137), Object::Number(8051)]);
    let list6263 = vm.gc.listn(&[Object::Number(8138), Object::Number(8052)]);
    let list6264 = vm.gc.listn(&[Object::Number(8139), Object::Number(8053)]);
    let list6265 = vm.gc.listn(&[Object::Number(8140), Object::Number(951), Object::Number(953)]);
    let list6266 = vm.gc.listn(&[Object::Number(8146), Object::Number(953), Object::Number(776), Object::Number(768)]);
    let list6267 = vm.gc.listn(&[Object::Number(8147), Object::Number(953), Object::Number(776), Object::Number(769)]);
    let list6268 = vm.gc.listn(&[Object::Number(8150), Object::Number(953), Object::Number(834)]);
    let list6269 = vm.gc.listn(&[Object::Number(8151), Object::Number(953), Object::Number(776), Object::Number(834)]);
    let list6270 = vm.gc.listn(&[Object::Number(8152), Object::Number(8144)]);
    let list6271 = vm.gc.listn(&[Object::Number(8153), Object::Number(8145)]);
    let list6272 = vm.gc.listn(&[Object::Number(8154), Object::Number(8054)]);
    let list6273 = vm.gc.listn(&[Object::Number(8155), Object::Number(8055)]);
    let list6274 = vm.gc.listn(&[Object::Number(8162), Object::Number(965), Object::Number(776), Object::Number(768)]);
    let list6275 = vm.gc.listn(&[Object::Number(8163), Object::Number(965), Object::Number(776), Object::Number(769)]);
    let list6276 = vm.gc.listn(&[Object::Number(8164), Object::Number(961), Object::Number(787)]);
    let list6277 = vm.gc.listn(&[Object::Number(8166), Object::Number(965), Object::Number(834)]);
    let list6278 = vm.gc.listn(&[Object::Number(8167), Object::Number(965), Object::Number(776), Object::Number(834)]);
    let list6279 = vm.gc.listn(&[Object::Number(8168), Object::Number(8160)]);
    let list6280 = vm.gc.listn(&[Object::Number(8169), Object::Number(8161)]);
    let list6281 = vm.gc.listn(&[Object::Number(8170), Object::Number(8058)]);
    let list6282 = vm.gc.listn(&[Object::Number(8171), Object::Number(8059)]);
    let list6283 = vm.gc.listn(&[Object::Number(8172), Object::Number(8165)]);
    let list6284 = vm.gc.listn(&[Object::Number(8178), Object::Number(8060), Object::Number(953)]);
    let list6285 = vm.gc.listn(&[Object::Number(8179), Object::Number(969), Object::Number(953)]);
    let list6286 = vm.gc.listn(&[Object::Number(8180), Object::Number(974), Object::Number(953)]);
    let list6287 = vm.gc.listn(&[Object::Number(8182), Object::Number(969), Object::Number(834)]);
    let list6288 = vm.gc.listn(&[Object::Number(8183), Object::Number(969), Object::Number(834), Object::Number(953)]);
    let list6289 = vm.gc.listn(&[Object::Number(8184), Object::Number(8056)]);
    let list6290 = vm.gc.listn(&[Object::Number(8185), Object::Number(8057)]);
    let list6291 = vm.gc.listn(&[Object::Number(8186), Object::Number(8060)]);
    let list6292 = vm.gc.listn(&[Object::Number(8187), Object::Number(8061)]);
    let list6293 = vm.gc.listn(&[Object::Number(8188), Object::Number(969), Object::Number(953)]);
    let list6294 = vm.gc.listn(&[Object::Number(8486), Object::Number(969)]);
    let list6295 = vm.gc.listn(&[Object::Number(8490), Object::Number(107)]);
    let list6296 = vm.gc.listn(&[Object::Number(8491), Object::Number(229)]);
    let list6297 = vm.gc.listn(&[Object::Number(8498), Object::Number(8526)]);
    let list6298 = vm.gc.listn(&[Object::Number(8544), Object::Number(8560)]);
    let list6299 = vm.gc.listn(&[Object::Number(8545), Object::Number(8561)]);
    let list6300 = vm.gc.listn(&[Object::Number(8546), Object::Number(8562)]);
    let list6301 = vm.gc.listn(&[Object::Number(8547), Object::Number(8563)]);
    let list6302 = vm.gc.listn(&[Object::Number(8548), Object::Number(8564)]);
    let list6303 = vm.gc.listn(&[Object::Number(8549), Object::Number(8565)]);
    let list6304 = vm.gc.listn(&[Object::Number(8550), Object::Number(8566)]);
    let list6305 = vm.gc.listn(&[Object::Number(8551), Object::Number(8567)]);
    let list6306 = vm.gc.listn(&[Object::Number(8552), Object::Number(8568)]);
    let list6307 = vm.gc.listn(&[Object::Number(8553), Object::Number(8569)]);
    let list6308 = vm.gc.listn(&[Object::Number(8554), Object::Number(8570)]);
    let list6309 = vm.gc.listn(&[Object::Number(8555), Object::Number(8571)]);
    let list6310 = vm.gc.listn(&[Object::Number(8556), Object::Number(8572)]);
    let list6311 = vm.gc.listn(&[Object::Number(8557), Object::Number(8573)]);
    let list6312 = vm.gc.listn(&[Object::Number(8558), Object::Number(8574)]);
    let list6313 = vm.gc.listn(&[Object::Number(8559), Object::Number(8575)]);
    let list6314 = vm.gc.listn(&[Object::Number(8579), Object::Number(8580)]);
    let list6315 = vm.gc.listn(&[Object::Number(9398), Object::Number(9424)]);
    let list6316 = vm.gc.listn(&[Object::Number(9399), Object::Number(9425)]);
    let list6317 = vm.gc.listn(&[Object::Number(9400), Object::Number(9426)]);
    let list6318 = vm.gc.listn(&[Object::Number(9401), Object::Number(9427)]);
    let list6319 = vm.gc.listn(&[Object::Number(9402), Object::Number(9428)]);
    let list6320 = vm.gc.listn(&[Object::Number(9403), Object::Number(9429)]);
    let list6321 = vm.gc.listn(&[Object::Number(9404), Object::Number(9430)]);
    let list6322 = vm.gc.listn(&[Object::Number(9405), Object::Number(9431)]);
    let list6323 = vm.gc.listn(&[Object::Number(9406), Object::Number(9432)]);
    let list6324 = vm.gc.listn(&[Object::Number(9407), Object::Number(9433)]);
    let list6325 = vm.gc.listn(&[Object::Number(9408), Object::Number(9434)]);
    let list6326 = vm.gc.listn(&[Object::Number(9409), Object::Number(9435)]);
    let list6327 = vm.gc.listn(&[Object::Number(9410), Object::Number(9436)]);
    let list6328 = vm.gc.listn(&[Object::Number(9411), Object::Number(9437)]);
    let list6329 = vm.gc.listn(&[Object::Number(9412), Object::Number(9438)]);
    let list6330 = vm.gc.listn(&[Object::Number(9413), Object::Number(9439)]);
    let list6331 = vm.gc.listn(&[Object::Number(9414), Object::Number(9440)]);
    let list6332 = vm.gc.listn(&[Object::Number(9415), Object::Number(9441)]);
    let list6333 = vm.gc.listn(&[Object::Number(9416), Object::Number(9442)]);
    let list6334 = vm.gc.listn(&[Object::Number(9417), Object::Number(9443)]);
    let list6335 = vm.gc.listn(&[Object::Number(9418), Object::Number(9444)]);
    let list6336 = vm.gc.listn(&[Object::Number(9419), Object::Number(9445)]);
    let list6337 = vm.gc.listn(&[Object::Number(9420), Object::Number(9446)]);
    let list6338 = vm.gc.listn(&[Object::Number(9421), Object::Number(9447)]);
    let list6339 = vm.gc.listn(&[Object::Number(9422), Object::Number(9448)]);
    let list6340 = vm.gc.listn(&[Object::Number(9423), Object::Number(9449)]);
    let list6341 = vm.gc.listn(&[Object::Number(11264), Object::Number(11312)]);
    let list6342 = vm.gc.listn(&[Object::Number(11265), Object::Number(11313)]);
    let list6343 = vm.gc.listn(&[Object::Number(11266), Object::Number(11314)]);
    let list6344 = vm.gc.listn(&[Object::Number(11267), Object::Number(11315)]);
    let list6345 = vm.gc.listn(&[Object::Number(11268), Object::Number(11316)]);
    let list6346 = vm.gc.listn(&[Object::Number(11269), Object::Number(11317)]);
    let list6347 = vm.gc.listn(&[Object::Number(11270), Object::Number(11318)]);
    let list6348 = vm.gc.listn(&[Object::Number(11271), Object::Number(11319)]);
    let list6349 = vm.gc.listn(&[Object::Number(11272), Object::Number(11320)]);
    let list6350 = vm.gc.listn(&[Object::Number(11273), Object::Number(11321)]);
    let list6351 = vm.gc.listn(&[Object::Number(11274), Object::Number(11322)]);
    let list6352 = vm.gc.listn(&[Object::Number(11275), Object::Number(11323)]);
    let list6353 = vm.gc.listn(&[Object::Number(11276), Object::Number(11324)]);
    let list6354 = vm.gc.listn(&[Object::Number(11277), Object::Number(11325)]);
    let list6355 = vm.gc.listn(&[Object::Number(11278), Object::Number(11326)]);
    let list6356 = vm.gc.listn(&[Object::Number(11279), Object::Number(11327)]);
    let list6357 = vm.gc.listn(&[Object::Number(11280), Object::Number(11328)]);
    let list6358 = vm.gc.listn(&[Object::Number(11281), Object::Number(11329)]);
    let list6359 = vm.gc.listn(&[Object::Number(11282), Object::Number(11330)]);
    let list6360 = vm.gc.listn(&[Object::Number(11283), Object::Number(11331)]);
    let list6361 = vm.gc.listn(&[Object::Number(11284), Object::Number(11332)]);
    let list6362 = vm.gc.listn(&[Object::Number(11285), Object::Number(11333)]);
    let list6363 = vm.gc.listn(&[Object::Number(11286), Object::Number(11334)]);
    let list6364 = vm.gc.listn(&[Object::Number(11287), Object::Number(11335)]);
    let list6365 = vm.gc.listn(&[Object::Number(11288), Object::Number(11336)]);
    let list6366 = vm.gc.listn(&[Object::Number(11289), Object::Number(11337)]);
    let list6367 = vm.gc.listn(&[Object::Number(11290), Object::Number(11338)]);
    let list6368 = vm.gc.listn(&[Object::Number(11291), Object::Number(11339)]);
    let list6369 = vm.gc.listn(&[Object::Number(11292), Object::Number(11340)]);
    let list6370 = vm.gc.listn(&[Object::Number(11293), Object::Number(11341)]);
    let list6371 = vm.gc.listn(&[Object::Number(11294), Object::Number(11342)]);
    let list6372 = vm.gc.listn(&[Object::Number(11295), Object::Number(11343)]);
    let list6373 = vm.gc.listn(&[Object::Number(11296), Object::Number(11344)]);
    let list6374 = vm.gc.listn(&[Object::Number(11297), Object::Number(11345)]);
    let list6375 = vm.gc.listn(&[Object::Number(11298), Object::Number(11346)]);
    let list6376 = vm.gc.listn(&[Object::Number(11299), Object::Number(11347)]);
    let list6377 = vm.gc.listn(&[Object::Number(11300), Object::Number(11348)]);
    let list6378 = vm.gc.listn(&[Object::Number(11301), Object::Number(11349)]);
    let list6379 = vm.gc.listn(&[Object::Number(11302), Object::Number(11350)]);
    let list6380 = vm.gc.listn(&[Object::Number(11303), Object::Number(11351)]);
    let list6381 = vm.gc.listn(&[Object::Number(11304), Object::Number(11352)]);
    let list6382 = vm.gc.listn(&[Object::Number(11305), Object::Number(11353)]);
    let list6383 = vm.gc.listn(&[Object::Number(11306), Object::Number(11354)]);
    let list6384 = vm.gc.listn(&[Object::Number(11307), Object::Number(11355)]);
    let list6385 = vm.gc.listn(&[Object::Number(11308), Object::Number(11356)]);
    let list6386 = vm.gc.listn(&[Object::Number(11309), Object::Number(11357)]);
    let list6387 = vm.gc.listn(&[Object::Number(11310), Object::Number(11358)]);
    let list6388 = vm.gc.listn(&[Object::Number(11360), Object::Number(11361)]);
    let list6389 = vm.gc.listn(&[Object::Number(11362), Object::Number(619)]);
    let list6390 = vm.gc.listn(&[Object::Number(11363), Object::Number(7549)]);
    let list6391 = vm.gc.listn(&[Object::Number(11364), Object::Number(637)]);
    let list6392 = vm.gc.listn(&[Object::Number(11367), Object::Number(11368)]);
    let list6393 = vm.gc.listn(&[Object::Number(11369), Object::Number(11370)]);
    let list6394 = vm.gc.listn(&[Object::Number(11371), Object::Number(11372)]);
    let list6395 = vm.gc.listn(&[Object::Number(11373), Object::Number(593)]);
    let list6396 = vm.gc.listn(&[Object::Number(11374), Object::Number(625)]);
    let list6397 = vm.gc.listn(&[Object::Number(11375), Object::Number(592)]);
    let list6398 = vm.gc.listn(&[Object::Number(11378), Object::Number(11379)]);
    let list6399 = vm.gc.listn(&[Object::Number(11381), Object::Number(11382)]);
    let list6400 = vm.gc.listn(&[Object::Number(11392), Object::Number(11393)]);
    let list6401 = vm.gc.listn(&[Object::Number(11394), Object::Number(11395)]);
    let list6402 = vm.gc.listn(&[Object::Number(11396), Object::Number(11397)]);
    let list6403 = vm.gc.listn(&[Object::Number(11398), Object::Number(11399)]);
    let list6404 = vm.gc.listn(&[Object::Number(11400), Object::Number(11401)]);
    let list6405 = vm.gc.listn(&[Object::Number(11402), Object::Number(11403)]);
    let list6406 = vm.gc.listn(&[Object::Number(11404), Object::Number(11405)]);
    let list6407 = vm.gc.listn(&[Object::Number(11406), Object::Number(11407)]);
    let list6408 = vm.gc.listn(&[Object::Number(11408), Object::Number(11409)]);
    let list6409 = vm.gc.listn(&[Object::Number(11410), Object::Number(11411)]);
    let list6410 = vm.gc.listn(&[Object::Number(11412), Object::Number(11413)]);
    let list6411 = vm.gc.listn(&[Object::Number(11414), Object::Number(11415)]);
    let list6412 = vm.gc.listn(&[Object::Number(11416), Object::Number(11417)]);
    let list6413 = vm.gc.listn(&[Object::Number(11418), Object::Number(11419)]);
    let list6414 = vm.gc.listn(&[Object::Number(11420), Object::Number(11421)]);
    let list6415 = vm.gc.listn(&[Object::Number(11422), Object::Number(11423)]);
    let list6416 = vm.gc.listn(&[Object::Number(11424), Object::Number(11425)]);
    let list6417 = vm.gc.listn(&[Object::Number(11426), Object::Number(11427)]);
    let list6418 = vm.gc.listn(&[Object::Number(11428), Object::Number(11429)]);
    let list6419 = vm.gc.listn(&[Object::Number(11430), Object::Number(11431)]);
    let list6420 = vm.gc.listn(&[Object::Number(11432), Object::Number(11433)]);
    let list6421 = vm.gc.listn(&[Object::Number(11434), Object::Number(11435)]);
    let list6422 = vm.gc.listn(&[Object::Number(11436), Object::Number(11437)]);
    let list6423 = vm.gc.listn(&[Object::Number(11438), Object::Number(11439)]);
    let list6424 = vm.gc.listn(&[Object::Number(11440), Object::Number(11441)]);
    let list6425 = vm.gc.listn(&[Object::Number(11442), Object::Number(11443)]);
    let list6426 = vm.gc.listn(&[Object::Number(11444), Object::Number(11445)]);
    let list6427 = vm.gc.listn(&[Object::Number(11446), Object::Number(11447)]);
    let list6428 = vm.gc.listn(&[Object::Number(11448), Object::Number(11449)]);
    let list6429 = vm.gc.listn(&[Object::Number(11450), Object::Number(11451)]);
    let list6430 = vm.gc.listn(&[Object::Number(11452), Object::Number(11453)]);
    let list6431 = vm.gc.listn(&[Object::Number(11454), Object::Number(11455)]);
    let list6432 = vm.gc.listn(&[Object::Number(11456), Object::Number(11457)]);
    let list6433 = vm.gc.listn(&[Object::Number(11458), Object::Number(11459)]);
    let list6434 = vm.gc.listn(&[Object::Number(11460), Object::Number(11461)]);
    let list6435 = vm.gc.listn(&[Object::Number(11462), Object::Number(11463)]);
    let list6436 = vm.gc.listn(&[Object::Number(11464), Object::Number(11465)]);
    let list6437 = vm.gc.listn(&[Object::Number(11466), Object::Number(11467)]);
    let list6438 = vm.gc.listn(&[Object::Number(11468), Object::Number(11469)]);
    let list6439 = vm.gc.listn(&[Object::Number(11470), Object::Number(11471)]);
    let list6440 = vm.gc.listn(&[Object::Number(11472), Object::Number(11473)]);
    let list6441 = vm.gc.listn(&[Object::Number(11474), Object::Number(11475)]);
    let list6442 = vm.gc.listn(&[Object::Number(11476), Object::Number(11477)]);
    let list6443 = vm.gc.listn(&[Object::Number(11478), Object::Number(11479)]);
    let list6444 = vm.gc.listn(&[Object::Number(11480), Object::Number(11481)]);
    let list6445 = vm.gc.listn(&[Object::Number(11482), Object::Number(11483)]);
    let list6446 = vm.gc.listn(&[Object::Number(11484), Object::Number(11485)]);
    let list6447 = vm.gc.listn(&[Object::Number(11486), Object::Number(11487)]);
    let list6448 = vm.gc.listn(&[Object::Number(11488), Object::Number(11489)]);
    let list6449 = vm.gc.listn(&[Object::Number(11490), Object::Number(11491)]);
    let list6450 = vm.gc.listn(&[Object::Number(42560), Object::Number(42561)]);
    let list6451 = vm.gc.listn(&[Object::Number(42562), Object::Number(42563)]);
    let list6452 = vm.gc.listn(&[Object::Number(42564), Object::Number(42565)]);
    let list6453 = vm.gc.listn(&[Object::Number(42566), Object::Number(42567)]);
    let list6454 = vm.gc.listn(&[Object::Number(42568), Object::Number(42569)]);
    let list6455 = vm.gc.listn(&[Object::Number(42570), Object::Number(42571)]);
    let list6456 = vm.gc.listn(&[Object::Number(42572), Object::Number(42573)]);
    let list6457 = vm.gc.listn(&[Object::Number(42574), Object::Number(42575)]);
    let list6458 = vm.gc.listn(&[Object::Number(42576), Object::Number(42577)]);
    let list6459 = vm.gc.listn(&[Object::Number(42578), Object::Number(42579)]);
    let list6460 = vm.gc.listn(&[Object::Number(42580), Object::Number(42581)]);
    let list6461 = vm.gc.listn(&[Object::Number(42582), Object::Number(42583)]);
    let list6462 = vm.gc.listn(&[Object::Number(42584), Object::Number(42585)]);
    let list6463 = vm.gc.listn(&[Object::Number(42586), Object::Number(42587)]);
    let list6464 = vm.gc.listn(&[Object::Number(42588), Object::Number(42589)]);
    let list6465 = vm.gc.listn(&[Object::Number(42590), Object::Number(42591)]);
    let list6466 = vm.gc.listn(&[Object::Number(42594), Object::Number(42595)]);
    let list6467 = vm.gc.listn(&[Object::Number(42596), Object::Number(42597)]);
    let list6468 = vm.gc.listn(&[Object::Number(42598), Object::Number(42599)]);
    let list6469 = vm.gc.listn(&[Object::Number(42600), Object::Number(42601)]);
    let list6470 = vm.gc.listn(&[Object::Number(42602), Object::Number(42603)]);
    let list6471 = vm.gc.listn(&[Object::Number(42604), Object::Number(42605)]);
    let list6472 = vm.gc.listn(&[Object::Number(42624), Object::Number(42625)]);
    let list6473 = vm.gc.listn(&[Object::Number(42626), Object::Number(42627)]);
    let list6474 = vm.gc.listn(&[Object::Number(42628), Object::Number(42629)]);
    let list6475 = vm.gc.listn(&[Object::Number(42630), Object::Number(42631)]);
    let list6476 = vm.gc.listn(&[Object::Number(42632), Object::Number(42633)]);
    let list6477 = vm.gc.listn(&[Object::Number(42634), Object::Number(42635)]);
    let list6478 = vm.gc.listn(&[Object::Number(42636), Object::Number(42637)]);
    let list6479 = vm.gc.listn(&[Object::Number(42638), Object::Number(42639)]);
    let list6480 = vm.gc.listn(&[Object::Number(42640), Object::Number(42641)]);
    let list6481 = vm.gc.listn(&[Object::Number(42642), Object::Number(42643)]);
    let list6482 = vm.gc.listn(&[Object::Number(42644), Object::Number(42645)]);
    let list6483 = vm.gc.listn(&[Object::Number(42646), Object::Number(42647)]);
    let list6484 = vm.gc.listn(&[Object::Number(42786), Object::Number(42787)]);
    let list6485 = vm.gc.listn(&[Object::Number(42788), Object::Number(42789)]);
    let list6486 = vm.gc.listn(&[Object::Number(42790), Object::Number(42791)]);
    let list6487 = vm.gc.listn(&[Object::Number(42792), Object::Number(42793)]);
    let list6488 = vm.gc.listn(&[Object::Number(42794), Object::Number(42795)]);
    let list6489 = vm.gc.listn(&[Object::Number(42796), Object::Number(42797)]);
    let list6490 = vm.gc.listn(&[Object::Number(42798), Object::Number(42799)]);
    let list6491 = vm.gc.listn(&[Object::Number(42802), Object::Number(42803)]);
    let list6492 = vm.gc.listn(&[Object::Number(42804), Object::Number(42805)]);
    let list6493 = vm.gc.listn(&[Object::Number(42806), Object::Number(42807)]);
    let list6494 = vm.gc.listn(&[Object::Number(42808), Object::Number(42809)]);
    let list6495 = vm.gc.listn(&[Object::Number(42810), Object::Number(42811)]);
    let list6496 = vm.gc.listn(&[Object::Number(42812), Object::Number(42813)]);
    let list6497 = vm.gc.listn(&[Object::Number(42814), Object::Number(42815)]);
    let list6498 = vm.gc.listn(&[Object::Number(42816), Object::Number(42817)]);
    let list6499 = vm.gc.listn(&[Object::Number(42818), Object::Number(42819)]);
    let list6500 = vm.gc.listn(&[Object::Number(42820), Object::Number(42821)]);
    let list6501 = vm.gc.listn(&[Object::Number(42822), Object::Number(42823)]);
    let list6502 = vm.gc.listn(&[Object::Number(42824), Object::Number(42825)]);
    let list6503 = vm.gc.listn(&[Object::Number(42826), Object::Number(42827)]);
    let list6504 = vm.gc.listn(&[Object::Number(42828), Object::Number(42829)]);
    let list6505 = vm.gc.listn(&[Object::Number(42830), Object::Number(42831)]);
    let list6506 = vm.gc.listn(&[Object::Number(42832), Object::Number(42833)]);
    let list6507 = vm.gc.listn(&[Object::Number(42834), Object::Number(42835)]);
    let list6508 = vm.gc.listn(&[Object::Number(42836), Object::Number(42837)]);
    let list6509 = vm.gc.listn(&[Object::Number(42838), Object::Number(42839)]);
    let list6510 = vm.gc.listn(&[Object::Number(42840), Object::Number(42841)]);
    let list6511 = vm.gc.listn(&[Object::Number(42842), Object::Number(42843)]);
    let list6512 = vm.gc.listn(&[Object::Number(42844), Object::Number(42845)]);
    let list6513 = vm.gc.listn(&[Object::Number(42846), Object::Number(42847)]);
    let list6514 = vm.gc.listn(&[Object::Number(42848), Object::Number(42849)]);
    let list6515 = vm.gc.listn(&[Object::Number(42850), Object::Number(42851)]);
    let list6516 = vm.gc.listn(&[Object::Number(42852), Object::Number(42853)]);
    let list6517 = vm.gc.listn(&[Object::Number(42854), Object::Number(42855)]);
    let list6518 = vm.gc.listn(&[Object::Number(42856), Object::Number(42857)]);
    let list6519 = vm.gc.listn(&[Object::Number(42858), Object::Number(42859)]);
    let list6520 = vm.gc.listn(&[Object::Number(42860), Object::Number(42861)]);
    let list6521 = vm.gc.listn(&[Object::Number(42862), Object::Number(42863)]);
    let list6522 = vm.gc.listn(&[Object::Number(42873), Object::Number(42874)]);
    let list6523 = vm.gc.listn(&[Object::Number(42875), Object::Number(42876)]);
    let list6524 = vm.gc.listn(&[Object::Number(42877), Object::Number(7545)]);
    let list6525 = vm.gc.listn(&[Object::Number(42878), Object::Number(42879)]);
    let list6526 = vm.gc.listn(&[Object::Number(42880), Object::Number(42881)]);
    let list6527 = vm.gc.listn(&[Object::Number(42882), Object::Number(42883)]);
    let list6528 = vm.gc.listn(&[Object::Number(42884), Object::Number(42885)]);
    let list6529 = vm.gc.listn(&[Object::Number(42886), Object::Number(42887)]);
    let list6530 = vm.gc.listn(&[Object::Number(42891), Object::Number(42892)]);
    let list6531 = vm.gc.listn(&[Object::Number(64256), Object::Number(102), Object::Number(102)]);
    let list6532 = vm.gc.listn(&[Object::Number(64257), Object::Number(102), Object::Number(105)]);
    let list6533 = vm.gc.listn(&[Object::Number(64258), Object::Number(102), Object::Number(108)]);
    let list6534 = vm.gc.listn(&[Object::Number(64259), Object::Number(102), Object::Number(102), Object::Number(105)]);
    let list6535 = vm.gc.listn(&[Object::Number(64260), Object::Number(102), Object::Number(102), Object::Number(108)]);
    let list6536 = vm.gc.listn(&[Object::Number(64261), Object::Number(115), Object::Number(116)]);
    let list6537 = vm.gc.listn(&[Object::Number(64262), Object::Number(115), Object::Number(116)]);
    let list6538 = vm.gc.listn(&[Object::Number(64275), Object::Number(1396), Object::Number(1398)]);
    let list6539 = vm.gc.listn(&[Object::Number(64276), Object::Number(1396), Object::Number(1381)]);
    let list6540 = vm.gc.listn(&[Object::Number(64277), Object::Number(1396), Object::Number(1387)]);
    let list6541 = vm.gc.listn(&[Object::Number(64278), Object::Number(1406), Object::Number(1398)]);
    let list6542 = vm.gc.listn(&[Object::Number(64279), Object::Number(1396), Object::Number(1389)]);
    let list6543 = vm.gc.listn(&[Object::Number(65313), Object::Number(65345)]);
    let list6544 = vm.gc.listn(&[Object::Number(65314), Object::Number(65346)]);
    let list6545 = vm.gc.listn(&[Object::Number(65315), Object::Number(65347)]);
    let list6546 = vm.gc.listn(&[Object::Number(65316), Object::Number(65348)]);
    let list6547 = vm.gc.listn(&[Object::Number(65317), Object::Number(65349)]);
    let list6548 = vm.gc.listn(&[Object::Number(65318), Object::Number(65350)]);
    let list6549 = vm.gc.listn(&[Object::Number(65319), Object::Number(65351)]);
    let list6550 = vm.gc.listn(&[Object::Number(65320), Object::Number(65352)]);
    let list6551 = vm.gc.listn(&[Object::Number(65321), Object::Number(65353)]);
    let list6552 = vm.gc.listn(&[Object::Number(65322), Object::Number(65354)]);
    let list6553 = vm.gc.listn(&[Object::Number(65323), Object::Number(65355)]);
    let list6554 = vm.gc.listn(&[Object::Number(65324), Object::Number(65356)]);
    let list6555 = vm.gc.listn(&[Object::Number(65325), Object::Number(65357)]);
    let list6556 = vm.gc.listn(&[Object::Number(65326), Object::Number(65358)]);
    let list6557 = vm.gc.listn(&[Object::Number(65327), Object::Number(65359)]);
    let list6558 = vm.gc.listn(&[Object::Number(65328), Object::Number(65360)]);
    let list6559 = vm.gc.listn(&[Object::Number(65329), Object::Number(65361)]);
    let list6560 = vm.gc.listn(&[Object::Number(65330), Object::Number(65362)]);
    let list6561 = vm.gc.listn(&[Object::Number(65331), Object::Number(65363)]);
    let list6562 = vm.gc.listn(&[Object::Number(65332), Object::Number(65364)]);
    let list6563 = vm.gc.listn(&[Object::Number(65333), Object::Number(65365)]);
    let list6564 = vm.gc.listn(&[Object::Number(65334), Object::Number(65366)]);
    let list6565 = vm.gc.listn(&[Object::Number(65335), Object::Number(65367)]);
    let list6566 = vm.gc.listn(&[Object::Number(65336), Object::Number(65368)]);
    let list6567 = vm.gc.listn(&[Object::Number(65337), Object::Number(65369)]);
    let list6568 = vm.gc.listn(&[Object::Number(65338), Object::Number(65370)]);
    let list6569 = vm.gc.listn(&[Object::Number(66560), Object::Number(66600)]);
    let list6570 = vm.gc.listn(&[Object::Number(66561), Object::Number(66601)]);
    let list6571 = vm.gc.listn(&[Object::Number(66562), Object::Number(66602)]);
    let list6572 = vm.gc.listn(&[Object::Number(66563), Object::Number(66603)]);
    let list6573 = vm.gc.listn(&[Object::Number(66564), Object::Number(66604)]);
    let list6574 = vm.gc.listn(&[Object::Number(66565), Object::Number(66605)]);
    let list6575 = vm.gc.listn(&[Object::Number(66566), Object::Number(66606)]);
    let list6576 = vm.gc.listn(&[Object::Number(66567), Object::Number(66607)]);
    let list6577 = vm.gc.listn(&[Object::Number(66568), Object::Number(66608)]);
    let list6578 = vm.gc.listn(&[Object::Number(66569), Object::Number(66609)]);
    let list6579 = vm.gc.listn(&[Object::Number(66570), Object::Number(66610)]);
    let list6580 = vm.gc.listn(&[Object::Number(66571), Object::Number(66611)]);
    let list6581 = vm.gc.listn(&[Object::Number(66572), Object::Number(66612)]);
    let list6582 = vm.gc.listn(&[Object::Number(66573), Object::Number(66613)]);
    let list6583 = vm.gc.listn(&[Object::Number(66574), Object::Number(66614)]);
    let list6584 = vm.gc.listn(&[Object::Number(66575), Object::Number(66615)]);
    let list6585 = vm.gc.listn(&[Object::Number(66576), Object::Number(66616)]);
    let list6586 = vm.gc.listn(&[Object::Number(66577), Object::Number(66617)]);
    let list6587 = vm.gc.listn(&[Object::Number(66578), Object::Number(66618)]);
    let list6588 = vm.gc.listn(&[Object::Number(66579), Object::Number(66619)]);
    let list6589 = vm.gc.listn(&[Object::Number(66580), Object::Number(66620)]);
    let list6590 = vm.gc.listn(&[Object::Number(66581), Object::Number(66621)]);
    let list6591 = vm.gc.listn(&[Object::Number(66582), Object::Number(66622)]);
    let list6592 = vm.gc.listn(&[Object::Number(66583), Object::Number(66623)]);
    let list6593 = vm.gc.listn(&[Object::Number(66584), Object::Number(66624)]);
    let list6594 = vm.gc.listn(&[Object::Number(66585), Object::Number(66625)]);
    let list6595 = vm.gc.listn(&[Object::Number(66586), Object::Number(66626)]);
    let list6596 = vm.gc.listn(&[Object::Number(66587), Object::Number(66627)]);
    let list6597 = vm.gc.listn(&[Object::Number(66588), Object::Number(66628)]);
    let list6598 = vm.gc.listn(&[Object::Number(66589), Object::Number(66629)]);
    let list6599 = vm.gc.listn(&[Object::Number(66590), Object::Number(66630)]);
    let list6600 = vm.gc.listn(&[Object::Number(66591), Object::Number(66631)]);
    let list6601 = vm.gc.listn(&[Object::Number(66592), Object::Number(66632)]);
    let list6602 = vm.gc.listn(&[Object::Number(66593), Object::Number(66633)]);
    let list6603 = vm.gc.listn(&[Object::Number(66594), Object::Number(66634)]);
    let list6604 = vm.gc.listn(&[Object::Number(66595), Object::Number(66635)]);
    let list6605 = vm.gc.listn(&[Object::Number(66596), Object::Number(66636)]);
    let list6606 = vm.gc.listn(&[Object::Number(66597), Object::Number(66637)]);
    let list6607 = vm.gc.listn(&[Object::Number(66598), Object::Number(66638)]);
    let list6608 = vm.gc.listn(&[Object::Number(66599), Object::Number(66639)]);
    let list6609 = vm.gc.listn(&[list5498, list5499, list5500, list5501, list5502, list5503, list5504, list5505, list5506, list5507, list5508, list5509, list5510, list5511, list5512, list5513, list5514, list5515, list5516, list5517, list5518, list5519, list5520, list5521, list5522, list5523, list5524, list5525, list5526, list5527, list5528, list5529, list5530, list5531, list5532, list5533, list5534, list5535, list5536, list5537, list5538, list5539, list5540, list5541, list5542, list5543, list5544, list5545, list5546, list5547, list5548, list5549, list5550, list5551, list5552, list5553, list5554, list5555, list5556, list5557, list5558, list5559, list5560, list5561, list5562, list5563, list5564, list5565, list5566, list5567, list5568, list5569, list5570, list5571, list5572, list5573, list5574, list5575, list5576, list5577, list5578, list5579, list5580, list5581, list5582, list5583, list5584, list5585, list5586, list5587, list5588, list5589, list5590, list5591, list5592, list5593, list5594, list5595, list5596, list5597, list5598, list5599, list5600, list5601, list5602, list5603, list5604, list5605, list5606, list5607, list5608, list5609, list5610, list5611, list5612, list5613, list5614, list5615, list5616, list5617, list5618, list5619, list5620, list5621, list5622, list5623, list5624, list5625, list5626, list5627, list5628, list5629, list5630, list5631, list5632, list5633, list5634, list5635, list5636, list5637, list5638, list5639, list5640, list5641, list5642, list5643, list5644, list5645, list5646, list5647, list5648, list5649, list5650, list5651, list5652, list5653, list5654, list5655, list5656, list5657, list5658, list5659, list5660, list5661, list5662, list5663, list5664, list5665, list5666, list5667, list5668, list5669, list5670, list5671, list5672, list5673, list5674, list5675, list5676, list5677, list5678, list5679, list5680, list5681, list5682, list5683, list5684, list5685, list5686, list5687, list5688, list5689, list5690, list5691, list5692, list5693, list5694, list5695, list5696, list5697, list5698, list5699, list5700, list5701, list5702, list5703, list5704, list5705, list5706, list5707, list5708, list5709, list5710, list5711, list5712, list5713, list5714, list5715, list5716, list5717, list5718, list5719, list5720, list5721, list5722, list5723, list5724, list5725, list5726, list5727, list5728, list5729, list5730, list5731, list5732, list5733, list5734, list5735, list5736, list5737, list5738, list5739, list5740, list5741, list5742, list5743, list5744, list5745, list5746, list5747, list5748, list5749, list5750, list5751, list5752, list5753, list5754, list5755, list5756, list5757, list5758, list5759, list5760, list5761, list5762, list5763, list5764, list5765, list5766, list5767, list5768, list5769, list5770, list5771, list5772, list5773, list5774, list5775, list5776, list5777, list5778, list5779, list5780, list5781, list5782, list5783, list5784, list5785, list5786, list5787, list5788, list5789, list5790, list5791, list5792, list5793, list5794, list5795, list5796, list5797, list5798, list5799, list5800, list5801, list5802, list5803, list5804, list5805, list5806, list5807, list5808, list5809, list5810, list5811, list5812, list5813, list5814, list5815, list5816, list5817, list5818, list5819, list5820, list5821, list5822, list5823, list5824, list5825, list5826, list5827, list5828, list5829, list5830, list5831, list5832, list5833, list5834, list5835, list5836, list5837, list5838, list5839, list5840, list5841, list5842, list5843, list5844, list5845, list5846, list5847, list5848, list5849, list5850, list5851, list5852, list5853, list5854, list5855, list5856, list5857, list5858, list5859, list5860, list5861, list5862, list5863, list5864, list5865, list5866, list5867, list5868, list5869, list5870, list5871, list5872, list5873, list5874, list5875, list5876, list5877, list5878, list5879, list5880, list5881, list5882, list5883, list5884, list5885, list5886, list5887, list5888, list5889, list5890, list5891, list5892, list5893, list5894, list5895, list5896, list5897, list5898, list5899, list5900, list5901, list5902, list5903, list5904, list5905, list5906, list5907, list5908, list5909, list5910, list5911, list5912, list5913, list5914, list5915, list5916, list5917, list5918, list5919, list5920, list5921, list5922, list5923, list5924, list5925, list5926, list5927, list5928, list5929, list5930, list5931, list5932, list5933, list5934, list5935, list5936, list5937, list5938, list5939, list5940, list5941, list5942, list5943, list5944, list5945, list5946, list5947, list5948, list5949, list5950, list5951, list5952, list5953, list5954, list5955, list5956, list5957, list5958, list5959, list5960, list5961, list5962, list5963, list5964, list5965, list5966, list5967, list5968, list5969, list5970, list5971, list5972, list5973, list5974, list5975, list5976, list5977, list5978, list5979, list5980, list5981, list5982, list5983, list5984, list5985, list5986, list5987, list5988, list5989, list5990, list5991, list5992, list5993, list5994, list5995, list5996, list5997, list5998, list5999, list6000, list6001, list6002, list6003, list6004, list6005, list6006, list6007, list6008, list6009, list6010, list6011, list6012, list6013, list6014, list6015, list6016, list6017, list6018, list6019, list6020, list6021, list6022, list6023, list6024, list6025, list6026, list6027, list6028, list6029, list6030, list6031, list6032, list6033, list6034, list6035, list6036, list6037, list6038, list6039, list6040, list6041, list6042, list6043, list6044, list6045, list6046, list6047, list6048, list6049, list6050, list6051, list6052, list6053, list6054, list6055, list6056, list6057, list6058, list6059, list6060, list6061, list6062, list6063, list6064, list6065, list6066, list6067, list6068, list6069, list6070, list6071, list6072, list6073, list6074, list6075, list6076, list6077, list6078, list6079, list6080, list6081, list6082, list6083, list6084, list6085, list6086, list6087, list6088, list6089, list6090, list6091, list6092, list6093, list6094, list6095, list6096, list6097, list6098, list6099, list6100, list6101, list6102, list6103, list6104, list6105, list6106, list6107, list6108, list6109, list6110, list6111, list6112, list6113, list6114, list6115, list6116, list6117, list6118, list6119, list6120, list6121, list6122, list6123, list6124, list6125, list6126, list6127, list6128, list6129, list6130, list6131, list6132, list6133, list6134, list6135, list6136, list6137, list6138, list6139, list6140, list6141, list6142, list6143, list6144, list6145, list6146, list6147, list6148, list6149, list6150, list6151, list6152, list6153, list6154, list6155, list6156, list6157, list6158, list6159, list6160, list6161, list6162, list6163, list6164, list6165, list6166, list6167, list6168, list6169, list6170, list6171, list6172, list6173, list6174, list6175, list6176, list6177, list6178, list6179, list6180, list6181, list6182, list6183, list6184, list6185, list6186, list6187, list6188, list6189, list6190, list6191, list6192, list6193, list6194, list6195, list6196, list6197, list6198, list6199, list6200, list6201, list6202, list6203, list6204, list6205, list6206, list6207, list6208, list6209, list6210, list6211, list6212, list6213, list6214, list6215, list6216, list6217, list6218, list6219, list6220, list6221, list6222, list6223, list6224, list6225, list6226, list6227, list6228, list6229, list6230, list6231, list6232, list6233, list6234, list6235, list6236, list6237, list6238, list6239, list6240, list6241, list6242, list6243, list6244, list6245, list6246, list6247, list6248, list6249, list6250, list6251, list6252, list6253, list6254, list6255, list6256, list6257, list6258, list6259, list6260, list6261, list6262, list6263, list6264, list6265, list6266, list6267, list6268, list6269, list6270, list6271, list6272, list6273, list6274, list6275, list6276, list6277, list6278, list6279, list6280, list6281, list6282, list6283, list6284, list6285, list6286, list6287, list6288, list6289, list6290, list6291, list6292, list6293, list6294, list6295, list6296, list6297, list6298, list6299, list6300, list6301, list6302, list6303, list6304, list6305, list6306, list6307, list6308, list6309, list6310, list6311, list6312, list6313, list6314, list6315, list6316, list6317, list6318, list6319, list6320, list6321, list6322, list6323, list6324, list6325, list6326, list6327, list6328, list6329, list6330, list6331, list6332, list6333, list6334, list6335, list6336, list6337, list6338, list6339, list6340, list6341, list6342, list6343, list6344, list6345, list6346, list6347, list6348, list6349, list6350, list6351, list6352, list6353, list6354, list6355, list6356, list6357, list6358, list6359, list6360, list6361, list6362, list6363, list6364, list6365, list6366, list6367, list6368, list6369, list6370, list6371, list6372, list6373, list6374, list6375, list6376, list6377, list6378, list6379, list6380, list6381, list6382, list6383, list6384, list6385, list6386, list6387, list6388, list6389, list6390, list6391, list6392, list6393, list6394, list6395, list6396, list6397, list6398, list6399, list6400, list6401, list6402, list6403, list6404, list6405, list6406, list6407, list6408, list6409, list6410, list6411, list6412, list6413, list6414, list6415, list6416, list6417, list6418, list6419, list6420, list6421, list6422, list6423, list6424, list6425, list6426, list6427, list6428, list6429, list6430, list6431, list6432, list6433, list6434, list6435, list6436, list6437, list6438, list6439, list6440, list6441, list6442, list6443, list6444, list6445, list6446, list6447, list6448, list6449, list6450, list6451, list6452, list6453, list6454, list6455, list6456, list6457, list6458, list6459, list6460, list6461, list6462, list6463, list6464, list6465, list6466, list6467, list6468, list6469, list6470, list6471, list6472, list6473, list6474, list6475, list6476, list6477, list6478, list6479, list6480, list6481, list6482, list6483, list6484, list6485, list6486, list6487, list6488, list6489, list6490, list6491, list6492, list6493, list6494, list6495, list6496, list6497, list6498, list6499, list6500, list6501, list6502, list6503, list6504, list6505, list6506, list6507, list6508, list6509, list6510, list6511, list6512, list6513, list6514, list6515, list6516, list6517, list6518, list6519, list6520, list6521, list6522, list6523, list6524, list6525, list6526, list6527, list6528, list6529, list6530, list6531, list6532, list6533, list6534, list6535, list6536, list6537, list6538, list6539, list6540, list6541, list6542, list6543, list6544, list6545, list6546, list6547, list6548, list6549, list6550, list6551, list6552, list6553, list6554, list6555, list6556, list6557, list6558, list6559, list6560, list6561, list6562, list6563, list6564, list6565, list6566, list6567, list6568, list6569, list6570, list6571, list6572, list6573, list6574, list6575, list6576, list6577, list6578, list6579, list6580, list6581, list6582, list6583, list6584, list6585, list6586, list6587, list6588, list6589, list6590, list6591, list6592, list6593, list6594, list6595, list6596, list6597, list6598, list6599, list6600, list6601, list6602, list6603, list6604, list6605, list6606, list6607, list6608]);
    let list6610 = vm.gc.listn(&[Object::Number(223), Object::Number(223)]);
    let list6611 = vm.gc.listn(&[Object::Number(304), Object::Number(105), Object::Number(775)]);
    let list6612 = vm.gc.listn(&[Object::Number(64256), Object::Number(64256)]);
    let list6613 = vm.gc.listn(&[Object::Number(64257), Object::Number(64257)]);
    let list6614 = vm.gc.listn(&[Object::Number(64258), Object::Number(64258)]);
    let list6615 = vm.gc.listn(&[Object::Number(64259), Object::Number(64259)]);
    let list6616 = vm.gc.listn(&[Object::Number(64260), Object::Number(64260)]);
    let list6617 = vm.gc.listn(&[Object::Number(64261), Object::Number(64261)]);
    let list6618 = vm.gc.listn(&[Object::Number(64262), Object::Number(64262)]);
    let list6619 = vm.gc.listn(&[Object::Number(1415), Object::Number(1415)]);
    let list6620 = vm.gc.listn(&[Object::Number(64275), Object::Number(64275)]);
    let list6621 = vm.gc.listn(&[Object::Number(64276), Object::Number(64276)]);
    let list6622 = vm.gc.listn(&[Object::Number(64277), Object::Number(64277)]);
    let list6623 = vm.gc.listn(&[Object::Number(64278), Object::Number(64278)]);
    let list6624 = vm.gc.listn(&[Object::Number(64279), Object::Number(64279)]);
    let list6625 = vm.gc.listn(&[Object::Number(329), Object::Number(329)]);
    let list6626 = vm.gc.listn(&[Object::Number(912), Object::Number(912)]);
    let list6627 = vm.gc.listn(&[Object::Number(944), Object::Number(944)]);
    let list6628 = vm.gc.listn(&[Object::Number(496), Object::Number(496)]);
    let list6629 = vm.gc.listn(&[Object::Number(7830), Object::Number(7830)]);
    let list6630 = vm.gc.listn(&[Object::Number(7831), Object::Number(7831)]);
    let list6631 = vm.gc.listn(&[Object::Number(7832), Object::Number(7832)]);
    let list6632 = vm.gc.listn(&[Object::Number(7833), Object::Number(7833)]);
    let list6633 = vm.gc.listn(&[Object::Number(7834), Object::Number(7834)]);
    let list6634 = vm.gc.listn(&[Object::Number(8016), Object::Number(8016)]);
    let list6635 = vm.gc.listn(&[Object::Number(8018), Object::Number(8018)]);
    let list6636 = vm.gc.listn(&[Object::Number(8020), Object::Number(8020)]);
    let list6637 = vm.gc.listn(&[Object::Number(8022), Object::Number(8022)]);
    let list6638 = vm.gc.listn(&[Object::Number(8118), Object::Number(8118)]);
    let list6639 = vm.gc.listn(&[Object::Number(8134), Object::Number(8134)]);
    let list6640 = vm.gc.listn(&[Object::Number(8146), Object::Number(8146)]);
    let list6641 = vm.gc.listn(&[Object::Number(8147), Object::Number(8147)]);
    let list6642 = vm.gc.listn(&[Object::Number(8150), Object::Number(8150)]);
    let list6643 = vm.gc.listn(&[Object::Number(8151), Object::Number(8151)]);
    let list6644 = vm.gc.listn(&[Object::Number(8162), Object::Number(8162)]);
    let list6645 = vm.gc.listn(&[Object::Number(8163), Object::Number(8163)]);
    let list6646 = vm.gc.listn(&[Object::Number(8164), Object::Number(8164)]);
    let list6647 = vm.gc.listn(&[Object::Number(8166), Object::Number(8166)]);
    let list6648 = vm.gc.listn(&[Object::Number(8167), Object::Number(8167)]);
    let list6649 = vm.gc.listn(&[Object::Number(8182), Object::Number(8182)]);
    let list6650 = vm.gc.listn(&[Object::Number(837), Object::Number(837)]);
    let list6651 = vm.gc.listn(&[Object::Number(8064), Object::Number(8064)]);
    let list6652 = vm.gc.listn(&[Object::Number(8065), Object::Number(8065)]);
    let list6653 = vm.gc.listn(&[Object::Number(8066), Object::Number(8066)]);
    let list6654 = vm.gc.listn(&[Object::Number(8067), Object::Number(8067)]);
    let list6655 = vm.gc.listn(&[Object::Number(8068), Object::Number(8068)]);
    let list6656 = vm.gc.listn(&[Object::Number(8069), Object::Number(8069)]);
    let list6657 = vm.gc.listn(&[Object::Number(8070), Object::Number(8070)]);
    let list6658 = vm.gc.listn(&[Object::Number(8071), Object::Number(8071)]);
    let list6659 = vm.gc.listn(&[Object::Number(8072), Object::Number(8064)]);
    let list6660 = vm.gc.listn(&[Object::Number(8073), Object::Number(8065)]);
    let list6661 = vm.gc.listn(&[Object::Number(8074), Object::Number(8066)]);
    let list6662 = vm.gc.listn(&[Object::Number(8075), Object::Number(8067)]);
    let list6663 = vm.gc.listn(&[Object::Number(8076), Object::Number(8068)]);
    let list6664 = vm.gc.listn(&[Object::Number(8077), Object::Number(8069)]);
    let list6665 = vm.gc.listn(&[Object::Number(8078), Object::Number(8070)]);
    let list6666 = vm.gc.listn(&[Object::Number(8079), Object::Number(8071)]);
    let list6667 = vm.gc.listn(&[Object::Number(8080), Object::Number(8080)]);
    let list6668 = vm.gc.listn(&[Object::Number(8081), Object::Number(8081)]);
    let list6669 = vm.gc.listn(&[Object::Number(8082), Object::Number(8082)]);
    let list6670 = vm.gc.listn(&[Object::Number(8083), Object::Number(8083)]);
    let list6671 = vm.gc.listn(&[Object::Number(8084), Object::Number(8084)]);
    let list6672 = vm.gc.listn(&[Object::Number(8085), Object::Number(8085)]);
    let list6673 = vm.gc.listn(&[Object::Number(8086), Object::Number(8086)]);
    let list6674 = vm.gc.listn(&[Object::Number(8087), Object::Number(8087)]);
    let list6675 = vm.gc.listn(&[Object::Number(8088), Object::Number(8080)]);
    let list6676 = vm.gc.listn(&[Object::Number(8089), Object::Number(8081)]);
    let list6677 = vm.gc.listn(&[Object::Number(8090), Object::Number(8082)]);
    let list6678 = vm.gc.listn(&[Object::Number(8091), Object::Number(8083)]);
    let list6679 = vm.gc.listn(&[Object::Number(8092), Object::Number(8084)]);
    let list6680 = vm.gc.listn(&[Object::Number(8093), Object::Number(8085)]);
    let list6681 = vm.gc.listn(&[Object::Number(8094), Object::Number(8086)]);
    let list6682 = vm.gc.listn(&[Object::Number(8095), Object::Number(8087)]);
    let list6683 = vm.gc.listn(&[Object::Number(8096), Object::Number(8096)]);
    let list6684 = vm.gc.listn(&[Object::Number(8097), Object::Number(8097)]);
    let list6685 = vm.gc.listn(&[Object::Number(8098), Object::Number(8098)]);
    let list6686 = vm.gc.listn(&[Object::Number(8099), Object::Number(8099)]);
    let list6687 = vm.gc.listn(&[Object::Number(8100), Object::Number(8100)]);
    let list6688 = vm.gc.listn(&[Object::Number(8101), Object::Number(8101)]);
    let list6689 = vm.gc.listn(&[Object::Number(8102), Object::Number(8102)]);
    let list6690 = vm.gc.listn(&[Object::Number(8103), Object::Number(8103)]);
    let list6691 = vm.gc.listn(&[Object::Number(8104), Object::Number(8096)]);
    let list6692 = vm.gc.listn(&[Object::Number(8105), Object::Number(8097)]);
    let list6693 = vm.gc.listn(&[Object::Number(8106), Object::Number(8098)]);
    let list6694 = vm.gc.listn(&[Object::Number(8107), Object::Number(8099)]);
    let list6695 = vm.gc.listn(&[Object::Number(8108), Object::Number(8100)]);
    let list6696 = vm.gc.listn(&[Object::Number(8109), Object::Number(8101)]);
    let list6697 = vm.gc.listn(&[Object::Number(8110), Object::Number(8102)]);
    let list6698 = vm.gc.listn(&[Object::Number(8111), Object::Number(8103)]);
    let list6699 = vm.gc.listn(&[Object::Number(8115), Object::Number(8115)]);
    let list6700 = vm.gc.listn(&[Object::Number(8124), Object::Number(8115)]);
    let list6701 = vm.gc.listn(&[Object::Number(8131), Object::Number(8131)]);
    let list6702 = vm.gc.listn(&[Object::Number(8140), Object::Number(8131)]);
    let list6703 = vm.gc.listn(&[Object::Number(8179), Object::Number(8179)]);
    let list6704 = vm.gc.listn(&[Object::Number(8188), Object::Number(8179)]);
    let list6705 = vm.gc.listn(&[Object::Number(8114), Object::Number(8114)]);
    let list6706 = vm.gc.listn(&[Object::Number(8116), Object::Number(8116)]);
    let list6707 = vm.gc.listn(&[Object::Number(8130), Object::Number(8130)]);
    let list6708 = vm.gc.listn(&[Object::Number(8132), Object::Number(8132)]);
    let list6709 = vm.gc.listn(&[Object::Number(8178), Object::Number(8178)]);
    let list6710 = vm.gc.listn(&[Object::Number(8180), Object::Number(8180)]);
    let list6711 = vm.gc.listn(&[Object::Number(8119), Object::Number(8119)]);
    let list6712 = vm.gc.listn(&[Object::Number(8135), Object::Number(8135)]);
    let list6713 = vm.gc.listn(&[Object::Number(8183), Object::Number(8183)]);
    let list6714 = vm.gc.listn(&[Object::Number(931), Object::Number(963)]);
    let list6715 = vm.gc.listn(&[Object::Number(963), Object::Number(963)]);
    let list6716 = vm.gc.listn(&[Object::Number(962), Object::Number(962)]);
    let list6717 = vm.gc.listn(&[list6610, list6611, list6612, list6613, list6614, list6615, list6616, list6617, list6618, list6619, list6620, list6621, list6622, list6623, list6624, list6625, list6626, list6627, list6628, list6629, list6630, list6631, list6632, list6633, list6634, list6635, list6636, list6637, list6638, list6639, list6640, list6641, list6642, list6643, list6644, list6645, list6646, list6647, list6648, list6649, list6650, list6651, list6652, list6653, list6654, list6655, list6656, list6657, list6658, list6659, list6660, list6661, list6662, list6663, list6664, list6665, list6666, list6667, list6668, list6669, list6670, list6671, list6672, list6673, list6674, list6675, list6676, list6677, list6678, list6679, list6680, list6681, list6682, list6683, list6684, list6685, list6686, list6687, list6688, list6689, list6690, list6691, list6692, list6693, list6694, list6695, list6696, list6697, list6698, list6699, list6700, list6701, list6702, list6703, list6704, list6705, list6706, list6707, list6708, list6709, list6710, list6711, list6712, list6713, list6714, list6715, list6716]);
    let list6718 = vm.gc.listn(&[Object::Number(223), Object::Number(83), Object::Number(115)]);
    let list6719 = vm.gc.listn(&[Object::Number(304), Object::Number(304)]);
    let list6720 = vm.gc.listn(&[Object::Number(64256), Object::Number(70), Object::Number(102)]);
    let list6721 = vm.gc.listn(&[Object::Number(64257), Object::Number(70), Object::Number(105)]);
    let list6722 = vm.gc.listn(&[Object::Number(64258), Object::Number(70), Object::Number(108)]);
    let list6723 = vm.gc.listn(&[Object::Number(64259), Object::Number(70), Object::Number(102), Object::Number(105)]);
    let list6724 = vm.gc.listn(&[Object::Number(64260), Object::Number(70), Object::Number(102), Object::Number(108)]);
    let list6725 = vm.gc.listn(&[Object::Number(64261), Object::Number(83), Object::Number(116)]);
    let list6726 = vm.gc.listn(&[Object::Number(64262), Object::Number(83), Object::Number(116)]);
    let list6727 = vm.gc.listn(&[Object::Number(1415), Object::Number(1333), Object::Number(1410)]);
    let list6728 = vm.gc.listn(&[Object::Number(64275), Object::Number(1348), Object::Number(1398)]);
    let list6729 = vm.gc.listn(&[Object::Number(64276), Object::Number(1348), Object::Number(1381)]);
    let list6730 = vm.gc.listn(&[Object::Number(64277), Object::Number(1348), Object::Number(1387)]);
    let list6731 = vm.gc.listn(&[Object::Number(64278), Object::Number(1358), Object::Number(1398)]);
    let list6732 = vm.gc.listn(&[Object::Number(64279), Object::Number(1348), Object::Number(1389)]);
    let list6733 = vm.gc.listn(&[Object::Number(329), Object::Number(700), Object::Number(78)]);
    let list6734 = vm.gc.listn(&[Object::Number(912), Object::Number(921), Object::Number(776), Object::Number(769)]);
    let list6735 = vm.gc.listn(&[Object::Number(944), Object::Number(933), Object::Number(776), Object::Number(769)]);
    let list6736 = vm.gc.listn(&[Object::Number(496), Object::Number(74), Object::Number(780)]);
    let list6737 = vm.gc.listn(&[Object::Number(7830), Object::Number(72), Object::Number(817)]);
    let list6738 = vm.gc.listn(&[Object::Number(7831), Object::Number(84), Object::Number(776)]);
    let list6739 = vm.gc.listn(&[Object::Number(7832), Object::Number(87), Object::Number(778)]);
    let list6740 = vm.gc.listn(&[Object::Number(7833), Object::Number(89), Object::Number(778)]);
    let list6741 = vm.gc.listn(&[Object::Number(7834), Object::Number(65), Object::Number(702)]);
    let list6742 = vm.gc.listn(&[Object::Number(8016), Object::Number(933), Object::Number(787)]);
    let list6743 = vm.gc.listn(&[Object::Number(8018), Object::Number(933), Object::Number(787), Object::Number(768)]);
    let list6744 = vm.gc.listn(&[Object::Number(8020), Object::Number(933), Object::Number(787), Object::Number(769)]);
    let list6745 = vm.gc.listn(&[Object::Number(8022), Object::Number(933), Object::Number(787), Object::Number(834)]);
    let list6746 = vm.gc.listn(&[Object::Number(8118), Object::Number(913), Object::Number(834)]);
    let list6747 = vm.gc.listn(&[Object::Number(8134), Object::Number(919), Object::Number(834)]);
    let list6748 = vm.gc.listn(&[Object::Number(8146), Object::Number(921), Object::Number(776), Object::Number(768)]);
    let list6749 = vm.gc.listn(&[Object::Number(8147), Object::Number(921), Object::Number(776), Object::Number(769)]);
    let list6750 = vm.gc.listn(&[Object::Number(8150), Object::Number(921), Object::Number(834)]);
    let list6751 = vm.gc.listn(&[Object::Number(8151), Object::Number(921), Object::Number(776), Object::Number(834)]);
    let list6752 = vm.gc.listn(&[Object::Number(8162), Object::Number(933), Object::Number(776), Object::Number(768)]);
    let list6753 = vm.gc.listn(&[Object::Number(8163), Object::Number(933), Object::Number(776), Object::Number(769)]);
    let list6754 = vm.gc.listn(&[Object::Number(8164), Object::Number(929), Object::Number(787)]);
    let list6755 = vm.gc.listn(&[Object::Number(8166), Object::Number(933), Object::Number(834)]);
    let list6756 = vm.gc.listn(&[Object::Number(8167), Object::Number(933), Object::Number(776), Object::Number(834)]);
    let list6757 = vm.gc.listn(&[Object::Number(8182), Object::Number(937), Object::Number(834)]);
    let list6758 = vm.gc.listn(&[Object::Number(837), Object::Number(837)]);
    let list6759 = vm.gc.listn(&[Object::Number(8064), Object::Number(8072)]);
    let list6760 = vm.gc.listn(&[Object::Number(8065), Object::Number(8073)]);
    let list6761 = vm.gc.listn(&[Object::Number(8066), Object::Number(8074)]);
    let list6762 = vm.gc.listn(&[Object::Number(8067), Object::Number(8075)]);
    let list6763 = vm.gc.listn(&[Object::Number(8068), Object::Number(8076)]);
    let list6764 = vm.gc.listn(&[Object::Number(8069), Object::Number(8077)]);
    let list6765 = vm.gc.listn(&[Object::Number(8070), Object::Number(8078)]);
    let list6766 = vm.gc.listn(&[Object::Number(8071), Object::Number(8079)]);
    let list6767 = vm.gc.listn(&[Object::Number(8072), Object::Number(8072)]);
    let list6768 = vm.gc.listn(&[Object::Number(8073), Object::Number(8073)]);
    let list6769 = vm.gc.listn(&[Object::Number(8074), Object::Number(8074)]);
    let list6770 = vm.gc.listn(&[Object::Number(8075), Object::Number(8075)]);
    let list6771 = vm.gc.listn(&[Object::Number(8076), Object::Number(8076)]);
    let list6772 = vm.gc.listn(&[Object::Number(8077), Object::Number(8077)]);
    let list6773 = vm.gc.listn(&[Object::Number(8078), Object::Number(8078)]);
    let list6774 = vm.gc.listn(&[Object::Number(8079), Object::Number(8079)]);
    let list6775 = vm.gc.listn(&[Object::Number(8080), Object::Number(8088)]);
    let list6776 = vm.gc.listn(&[Object::Number(8081), Object::Number(8089)]);
    let list6777 = vm.gc.listn(&[Object::Number(8082), Object::Number(8090)]);
    let list6778 = vm.gc.listn(&[Object::Number(8083), Object::Number(8091)]);
    let list6779 = vm.gc.listn(&[Object::Number(8084), Object::Number(8092)]);
    let list6780 = vm.gc.listn(&[Object::Number(8085), Object::Number(8093)]);
    let list6781 = vm.gc.listn(&[Object::Number(8086), Object::Number(8094)]);
    let list6782 = vm.gc.listn(&[Object::Number(8087), Object::Number(8095)]);
    let list6783 = vm.gc.listn(&[Object::Number(8088), Object::Number(8088)]);
    let list6784 = vm.gc.listn(&[Object::Number(8089), Object::Number(8089)]);
    let list6785 = vm.gc.listn(&[Object::Number(8090), Object::Number(8090)]);
    let list6786 = vm.gc.listn(&[Object::Number(8091), Object::Number(8091)]);
    let list6787 = vm.gc.listn(&[Object::Number(8092), Object::Number(8092)]);
    let list6788 = vm.gc.listn(&[Object::Number(8093), Object::Number(8093)]);
    let list6789 = vm.gc.listn(&[Object::Number(8094), Object::Number(8094)]);
    let list6790 = vm.gc.listn(&[Object::Number(8095), Object::Number(8095)]);
    let list6791 = vm.gc.listn(&[Object::Number(8096), Object::Number(8104)]);
    let list6792 = vm.gc.listn(&[Object::Number(8097), Object::Number(8105)]);
    let list6793 = vm.gc.listn(&[Object::Number(8098), Object::Number(8106)]);
    let list6794 = vm.gc.listn(&[Object::Number(8099), Object::Number(8107)]);
    let list6795 = vm.gc.listn(&[Object::Number(8100), Object::Number(8108)]);
    let list6796 = vm.gc.listn(&[Object::Number(8101), Object::Number(8109)]);
    let list6797 = vm.gc.listn(&[Object::Number(8102), Object::Number(8110)]);
    let list6798 = vm.gc.listn(&[Object::Number(8103), Object::Number(8111)]);
    let list6799 = vm.gc.listn(&[Object::Number(8104), Object::Number(8104)]);
    let list6800 = vm.gc.listn(&[Object::Number(8105), Object::Number(8105)]);
    let list6801 = vm.gc.listn(&[Object::Number(8106), Object::Number(8106)]);
    let list6802 = vm.gc.listn(&[Object::Number(8107), Object::Number(8107)]);
    let list6803 = vm.gc.listn(&[Object::Number(8108), Object::Number(8108)]);
    let list6804 = vm.gc.listn(&[Object::Number(8109), Object::Number(8109)]);
    let list6805 = vm.gc.listn(&[Object::Number(8110), Object::Number(8110)]);
    let list6806 = vm.gc.listn(&[Object::Number(8111), Object::Number(8111)]);
    let list6807 = vm.gc.listn(&[Object::Number(8115), Object::Number(8124)]);
    let list6808 = vm.gc.listn(&[Object::Number(8124), Object::Number(8124)]);
    let list6809 = vm.gc.listn(&[Object::Number(8131), Object::Number(8140)]);
    let list6810 = vm.gc.listn(&[Object::Number(8140), Object::Number(8140)]);
    let list6811 = vm.gc.listn(&[Object::Number(8179), Object::Number(8188)]);
    let list6812 = vm.gc.listn(&[Object::Number(8188), Object::Number(8188)]);
    let list6813 = vm.gc.listn(&[Object::Number(8114), Object::Number(8122), Object::Number(837)]);
    let list6814 = vm.gc.listn(&[Object::Number(8116), Object::Number(902), Object::Number(837)]);
    let list6815 = vm.gc.listn(&[Object::Number(8130), Object::Number(8138), Object::Number(837)]);
    let list6816 = vm.gc.listn(&[Object::Number(8132), Object::Number(905), Object::Number(837)]);
    let list6817 = vm.gc.listn(&[Object::Number(8178), Object::Number(8186), Object::Number(837)]);
    let list6818 = vm.gc.listn(&[Object::Number(8180), Object::Number(911), Object::Number(837)]);
    let list6819 = vm.gc.listn(&[Object::Number(8119), Object::Number(913), Object::Number(834), Object::Number(837)]);
    let list6820 = vm.gc.listn(&[Object::Number(8135), Object::Number(919), Object::Number(834), Object::Number(837)]);
    let list6821 = vm.gc.listn(&[Object::Number(8183), Object::Number(937), Object::Number(834), Object::Number(837)]);
    let list6822 = vm.gc.listn(&[Object::Number(931), Object::Number(931)]);
    let list6823 = vm.gc.listn(&[Object::Number(963), Object::Number(931)]);
    let list6824 = vm.gc.listn(&[Object::Number(962), Object::Number(931)]);
    let list6825 = vm.gc.listn(&[list6718, list6719, list6720, list6721, list6722, list6723, list6724, list6725, list6726, list6727, list6728, list6729, list6730, list6731, list6732, list6733, list6734, list6735, list6736, list6737, list6738, list6739, list6740, list6741, list6742, list6743, list6744, list6745, list6746, list6747, list6748, list6749, list6750, list6751, list6752, list6753, list6754, list6755, list6756, list6757, list6758, list6759, list6760, list6761, list6762, list6763, list6764, list6765, list6766, list6767, list6768, list6769, list6770, list6771, list6772, list6773, list6774, list6775, list6776, list6777, list6778, list6779, list6780, list6781, list6782, list6783, list6784, list6785, list6786, list6787, list6788, list6789, list6790, list6791, list6792, list6793, list6794, list6795, list6796, list6797, list6798, list6799, list6800, list6801, list6802, list6803, list6804, list6805, list6806, list6807, list6808, list6809, list6810, list6811, list6812, list6813, list6814, list6815, list6816, list6817, list6818, list6819, list6820, list6821, list6822, list6823, list6824]);
    let list6826 = vm.gc.listn(&[pair0, Object::Number(32), Object::Number(133), Object::Number(160), Object::Number(5760), Object::Number(6158), pair1, Object::Number(8232), Object::Number(8233), Object::Number(8239), Object::Number(8287), Object::Number(12288)]);
    let list6827 = vm.gc.listn(&[Object::Number(837), pair2, Object::Number(1471), pair3, pair4, Object::Number(1479), pair5, pair6, pair7, Object::Number(1648), pair8, pair9, pair10, Object::Number(1773), Object::Number(1809), pair11, pair12, pair13, Object::Number(2307), pair14, pair15, pair16, pair17, Object::Number(2433), pair18, pair19, pair20, pair21, pair22, Object::Number(2519), pair23, pair24, Object::Number(2563), pair25, pair26, pair27, pair28, Object::Number(2641), pair29, Object::Number(2677), pair30, Object::Number(2691), pair31, pair32, pair33, Object::Number(2761), pair34, pair35, Object::Number(2817), pair36, Object::Number(2878), Object::Number(2879), Object::Number(2880), pair37, pair38, pair39, Object::Number(2902), Object::Number(2903), pair40, Object::Number(2946), pair41, Object::Number(3008), pair42, pair43, pair44, Object::Number(3031), pair45, pair46, pair47, pair48, pair49, pair50, pair51, pair52, Object::Number(3262), Object::Number(3263), pair53, Object::Number(3270), pair54, pair55, Object::Number(3276), pair56, pair57, pair58, pair59, pair60, pair61, pair62, Object::Number(3415), pair63, pair64, pair65, pair66, Object::Number(3542), pair67, pair68, Object::Number(3633), pair69, Object::Number(3661), Object::Number(3761), pair70, pair71, Object::Number(3789), pair72, Object::Number(3967), pair73, pair74, pair75, pair76, pair77, Object::Number(4145), pair78, Object::Number(4152), pair79, pair80, pair81, pair82, pair83, Object::Number(4194), pair84, pair85, Object::Number(4226), pair86, pair87, Object::Number(4959), pair88, pair89, pair90, pair91, Object::Number(6070), pair92, pair93, Object::Number(6086), pair94, Object::Number(6313), pair95, pair96, pair97, pair98, pair99, Object::Number(6450), pair100, pair101, pair102, pair103, pair104, pair105, Object::Number(6916), Object::Number(6965), pair106, Object::Number(6971), Object::Number(6972), pair107, Object::Number(6978), Object::Number(6979), pair108, Object::Number(7042), Object::Number(7073), pair109, pair110, pair111, pair112, pair113, pair114, pair115, pair116, pair117, pair118, Object::Number(43047), pair119, pair120, pair121, pair122, Object::Number(43346), pair123, pair124, pair125, pair126, pair127, Object::Number(43587), Object::Number(43596), Object::Number(43597), Object::Number(64286), pair128, pair129, pair130]);
    let list6828 = vm.gc.listn(&[pair131, pair132]);
    let list6829 = vm.gc.listn(&[pair133, pair134, pair135, Object::Number(837), Object::Number(890), pair136, Object::Number(7544), pair137, pair138, pair139, pair140, Object::Number(11389), Object::Number(42864)]);
    let list6830 = vm.gc.listn(&[sym22, Object::Number(8232)]);
    let list6831 = vm.gc.listn(&[sym23, pair141, pair142, Object::Number(42), Object::Number(44), pair143, pair144, pair145, Object::Number(92), Object::Number(161), Object::Number(183), Object::Number(191), Object::Number(894), Object::Number(903), pair146, Object::Number(1417), Object::Number(1472), Object::Number(1475), Object::Number(1478), pair147, pair148, pair149, Object::Number(1563), pair150, pair151, Object::Number(1748), pair152, pair153, pair154, Object::Number(2416), Object::Number(3572), Object::Number(3663), pair155, pair156, Object::Number(3973), pair157, pair158, Object::Number(4347), pair159, pair160, pair161, pair162, pair163, pair164, pair165, pair166, pair167, pair168, pair169, pair170, pair171, pair172, pair173, pair174, pair175, pair176, pair177, pair178, Object::Number(8275), pair179, pair180, pair181, pair182, pair183, Object::Number(11787), pair184, pair185, Object::Number(11803), pair186, pair187, Object::Number(11824), pair188, Object::Number(12349), Object::Number(12539), pair189, Object::Number(42611), Object::Number(42622), pair190, pair191, pair192, Object::Number(43359), pair193, pair194, Object::Number(65049), Object::Number(65072), pair195, pair196, pair197, pair198, pair199, Object::Number(65128), pair200, pair201, pair202, Object::Number(65290), Object::Number(65292), pair203, pair204, pair205, Object::Number(65340), Object::Number(65377), pair206, pair207, Object::Number(66463), Object::Number(66512), Object::Number(67871), Object::Number(67903), pair208, pair209]);
    let list6832 = vm.gc.listn(&[sym24, Object::Number(95), pair210, Object::Number(8276), pair211, pair212, Object::Number(65343)]);
    let list6833 = vm.gc.listn(&[sym25, Object::Number(453), Object::Number(456), Object::Number(459), Object::Number(498), pair213, pair214, pair215, Object::Number(8124), Object::Number(8140), Object::Number(8188)]);
    let list6834 = vm.gc.listn(&[sym26, Object::Number(171), Object::Number(8216), pair216, Object::Number(8223), Object::Number(8249), Object::Number(11778), Object::Number(11780), Object::Number(11785), Object::Number(11788), Object::Number(11804), Object::Number(11808)]);
    let list6835 = vm.gc.listn(&[sym27, pair217, pair218]);
    let list6836 = vm.gc.listn(&[sym28, pair219, pair220, pair221, pair222, pair223, pair224, pair225, pair226, pair227, pair228, pair229, pair230, pair231, pair232, pair233, pair234, pair235, pair236, pair237, pair238, pair239, pair240, pair241, pair242, pair243, pair244, pair245, pair246, pair247, pair248, pair249, pair250, pair251]);
    let list6837 = vm.gc.listn(&[sym29, pair252, pair253, pair254, Object::Number(1471), pair255, pair256, Object::Number(1479), pair257, pair258, Object::Number(1648), pair259, pair260, pair261, pair262, Object::Number(1809), pair263, pair264, pair265, pair266, Object::Number(2364), pair267, Object::Number(2381), pair268, pair269, Object::Number(2433), Object::Number(2492), pair270, Object::Number(2509), pair271, pair272, Object::Number(2620), pair273, pair274, pair275, Object::Number(2641), pair276, Object::Number(2677), pair277, Object::Number(2748), pair278, pair279, Object::Number(2765), pair280, Object::Number(2817), Object::Number(2876), Object::Number(2879), pair281, Object::Number(2893), Object::Number(2902), pair282, Object::Number(2946), Object::Number(3008), Object::Number(3021), pair283, pair284, pair285, pair286, pair287, Object::Number(3260), Object::Number(3263), Object::Number(3270), pair288, pair289, pair290, Object::Number(3405), pair291, Object::Number(3530), pair292, Object::Number(3542), Object::Number(3633), pair293, pair294, Object::Number(3761), pair295, pair296, pair297, pair298, Object::Number(3893), Object::Number(3895), Object::Number(3897), pair299, pair300, pair301, pair302, pair303, Object::Number(4038), pair304, pair305, pair306, pair307, pair308, pair309, pair310, Object::Number(4226), pair311, Object::Number(4237), Object::Number(4959), pair312, pair313, pair314, pair315, pair316, Object::Number(6086), pair317, Object::Number(6109), pair318, Object::Number(6313), pair319, pair320, Object::Number(6450), pair321, pair322, pair323, Object::Number(6964), pair324, Object::Number(6972), Object::Number(6978), pair325, pair326, pair327, pair328, pair329, pair330, pair331, pair332, pair333, Object::Number(8417), pair334, pair335, pair336, pair337, Object::Number(42607), pair338, Object::Number(43010), Object::Number(43014), Object::Number(43019), pair339, Object::Number(43204), pair340, pair341, pair342, pair343, pair344, Object::Number(43587), Object::Number(43596), Object::Number(64286), pair345, pair346, Object::Number(66045), pair347, pair348, pair349, pair350, Object::Number(68159), pair351, pair352, pair353, pair354, pair355, pair356]);
    let list6838 = vm.gc.listn(&[sym30, pair357, Object::Number(1758), pair358, pair359, pair360]);
    let list6839 = vm.gc.listn(&[sym31, Object::Number(36), pair361, Object::Number(1547), pair362, Object::Number(2801), Object::Number(3065), Object::Number(3647), Object::Number(6107), pair363, Object::Number(65020), Object::Number(65129), Object::Number(65284), pair364, pair365]);
    let list6840 = vm.gc.listn(&[sym32, Object::Number(55296), pair366, pair367, Object::Number(57343)]);
    let list6841 = vm.gc.listn(&[sym33, Object::Number(173), pair368, Object::Number(1757), Object::Number(1807), pair369, pair370, pair371, pair372, pair373, Object::Number(65279), pair374, pair375, Object::Number(917505), pair376]);
    let list6842 = vm.gc.listn(&[sym34, pair377, Object::Number(169), Object::Number(174), Object::Number(176), Object::Number(182), Object::Number(1154), pair378, Object::Number(1769), pair379, Object::Number(2038), Object::Number(2554), Object::Number(2928), pair380, Object::Number(3066), Object::Number(3199), pair381, Object::Number(3449), pair382, pair383, pair384, Object::Number(3892), Object::Number(3894), Object::Number(3896), pair385, pair386, pair387, pair388, Object::Number(4960), pair389, Object::Number(6464), pair390, pair391, pair392, pair393, pair394, pair395, Object::Number(8468), pair396, pair397, Object::Number(8485), Object::Number(8487), Object::Number(8489), Object::Number(8494), pair398, Object::Number(8522), pair399, Object::Number(8527), pair400, pair401, pair402, pair403, pair404, pair405, pair406, Object::Number(8659), pair407, pair408, pair409, pair410, pair411, pair412, pair413, pair414, pair415, pair416, pair417, pair418, pair419, pair420, pair421, pair422, pair423, pair424, pair425, pair426, pair427, pair428, Object::Number(10061), pair429, Object::Number(10070), pair430, pair431, Object::Number(10132), pair432, pair433, pair434, pair435, pair436, pair437, pair438, pair439, pair440, pair441, pair442, Object::Number(12292), pair443, Object::Number(12320), pair444, pair445, pair446, pair447, pair448, pair449, pair450, Object::Number(12880), pair451, pair452, pair453, pair454, pair455, pair456, pair457, Object::Number(65021), Object::Number(65508), Object::Number(65512), pair458, pair459, Object::Number(65794), pair460, pair461, pair462, pair463, pair464, pair465, pair466, pair467, pair468, pair469, pair470, pair471, Object::Number(119365), pair472, pair473, pair474]);
    let list6843 = vm.gc.listn(&[sym35, Object::Number(32), Object::Number(160), Object::Number(5760), Object::Number(6158), pair475, Object::Number(8239), Object::Number(8287), Object::Number(12288)]);
    let list6844 = vm.gc.listn(&[sym36, Object::Number(43), pair476, Object::Number(124), Object::Number(126), Object::Number(172), Object::Number(177), Object::Number(215), Object::Number(247), Object::Number(1014), pair477, Object::Number(8260), Object::Number(8274), pair478, pair479, pair480, Object::Number(8523), pair481, pair482, Object::Number(8608), Object::Number(8611), Object::Number(8614), Object::Number(8622), pair483, Object::Number(8658), Object::Number(8660), pair484, pair485, pair486, Object::Number(9084), pair487, pair488, Object::Number(9655), Object::Number(9665), pair489, Object::Number(9839), pair490, pair491, Object::Number(10188), pair492, pair493, pair494, pair495, pair496, pair497, pair498, pair499, Object::Number(64297), Object::Number(65122), pair500, Object::Number(65291), pair501, Object::Number(65372), Object::Number(65374), Object::Number(65506), pair502, Object::Number(120513), Object::Number(120539), Object::Number(120571), Object::Number(120597), Object::Number(120629), Object::Number(120655), Object::Number(120687), Object::Number(120713), Object::Number(120745), Object::Number(120771)]);
    let list6845 = vm.gc.listn(&[sym37, Object::Number(2307), pair503, pair504, pair505, pair506, pair507, pair508, Object::Number(2519), Object::Number(2563), pair509, Object::Number(2691), pair510, Object::Number(2761), pair511, pair512, Object::Number(2878), Object::Number(2880), pair513, pair514, Object::Number(2903), pair515, pair516, pair517, pair518, Object::Number(3031), pair519, pair520, pair521, Object::Number(3262), pair522, pair523, pair524, pair525, pair526, pair527, pair528, pair529, Object::Number(3415), pair530, pair531, pair532, pair533, pair534, Object::Number(3967), pair535, Object::Number(4145), Object::Number(4152), pair536, pair537, pair538, pair539, pair540, pair541, Object::Number(4239), Object::Number(6070), pair542, pair543, pair544, pair545, pair546, pair547, pair548, pair549, pair550, Object::Number(6916), Object::Number(6965), Object::Number(6971), pair551, pair552, Object::Number(7042), Object::Number(7073), pair553, Object::Number(7082), pair554, pair555, pair556, Object::Number(43047), pair557, pair558, pair559, pair560, pair561, Object::Number(43597), pair562, pair563]);
    let list6846 = vm.gc.listn(&[sym38, Object::Number(94), Object::Number(96), Object::Number(168), Object::Number(175), Object::Number(180), Object::Number(184), pair564, pair565, pair566, Object::Number(749), pair567, Object::Number(885), pair568, Object::Number(8125), pair569, pair570, pair571, pair572, pair573, pair574, pair575, pair576, pair577, Object::Number(65342), Object::Number(65344), Object::Number(65507)]);
    let list6847 = vm.gc.listn(&[sym39, pair578, pair579, pair580, Object::Number(748), Object::Number(750), Object::Number(884), Object::Number(890), Object::Number(1369), Object::Number(1600), pair581, pair582, Object::Number(2042), Object::Number(2417), Object::Number(3654), Object::Number(3782), Object::Number(4348), Object::Number(6103), Object::Number(6211), pair583, pair584, Object::Number(7544), pair585, pair586, Object::Number(11389), Object::Number(11631), Object::Number(11823), Object::Number(12293), pair587, Object::Number(12347), pair588, pair589, Object::Number(40981), Object::Number(42508), Object::Number(42623), pair590, Object::Number(42864), Object::Number(42888), Object::Number(65392), pair591]);
    let list6848 = vm.gc.listn(&[sym40, Object::Number(41), Object::Number(93), Object::Number(125), Object::Number(3899), Object::Number(3901), Object::Number(5788), Object::Number(8262), Object::Number(8318), Object::Number(8334), Object::Number(9002), Object::Number(10089), Object::Number(10091), Object::Number(10093), Object::Number(10095), Object::Number(10097), Object::Number(10099), Object::Number(10101), Object::Number(10182), Object::Number(10215), Object::Number(10217), Object::Number(10219), Object::Number(10221), Object::Number(10223), Object::Number(10628), Object::Number(10630), Object::Number(10632), Object::Number(10634), Object::Number(10636), Object::Number(10638), Object::Number(10640), Object::Number(10642), Object::Number(10644), Object::Number(10646), Object::Number(10648), Object::Number(10713), Object::Number(10715), Object::Number(10749), Object::Number(11811), Object::Number(11813), Object::Number(11815), Object::Number(11817), Object::Number(12297), Object::Number(12299), Object::Number(12301), Object::Number(12303), Object::Number(12305), Object::Number(12309), Object::Number(12311), Object::Number(12313), Object::Number(12315), pair592, Object::Number(64831), Object::Number(65048), Object::Number(65078), Object::Number(65080), Object::Number(65082), Object::Number(65084), Object::Number(65086), Object::Number(65088), Object::Number(65090), Object::Number(65092), Object::Number(65096), Object::Number(65114), Object::Number(65116), Object::Number(65118), Object::Number(65289), Object::Number(65341), Object::Number(65373), Object::Number(65376), Object::Number(65379)]);
    let list6849 = vm.gc.listn(&[sym41, Object::Number(443), pair593, Object::Number(660), pair594, pair595, pair596, pair597, pair598, pair599, Object::Number(1749), pair600, pair601, Object::Number(1791), Object::Number(1808), pair602, pair603, Object::Number(1969), pair604, pair605, Object::Number(2365), Object::Number(2384), pair606, Object::Number(2418), pair607, pair608, pair609, pair610, pair611, Object::Number(2482), pair612, Object::Number(2493), Object::Number(2510), pair613, pair614, pair615, pair616, pair617, pair618, pair619, pair620, pair621, pair622, pair623, Object::Number(2654), pair624, pair625, pair626, pair627, pair628, pair629, pair630, Object::Number(2749), Object::Number(2768), pair631, pair632, pair633, pair634, pair635, pair636, pair637, Object::Number(2877), pair638, pair639, Object::Number(2929), Object::Number(2947), pair640, pair641, pair642, pair643, Object::Number(2972), pair644, pair645, pair646, pair647, Object::Number(3024), pair648, pair649, pair650, pair651, pair652, Object::Number(3133), pair653, pair654, pair655, pair656, pair657, pair658, pair659, Object::Number(3261), Object::Number(3294), pair660, pair661, pair662, pair663, pair664, Object::Number(3389), pair665, pair666, pair667, pair668, pair669, Object::Number(3517), pair670, pair671, pair672, pair673, pair674, Object::Number(3716), pair675, Object::Number(3722), Object::Number(3725), pair676, pair677, pair678, Object::Number(3749), Object::Number(3751), pair679, pair680, pair681, Object::Number(3773), pair682, pair683, Object::Number(3840), pair684, pair685, pair686, pair687, Object::Number(4159), pair688, pair689, Object::Number(4193), pair690, pair691, pair692, Object::Number(4238), pair693, pair694, pair695, pair696, pair697, pair698, pair699, Object::Number(4696), pair700, pair701, pair702, pair703, pair704, pair705, Object::Number(4800), pair706, pair707, pair708, pair709, pair710, pair711, pair712, pair713, pair714, pair715, pair716, pair717, pair718, pair719, pair720, pair721, pair722, pair723, Object::Number(6108), pair724, pair725, pair726, Object::Number(6314), pair727, pair728, pair729, pair730, pair731, pair732, pair733, pair734, pair735, pair736, pair737, pair738, pair739, pair740, pair741, pair742, pair743, pair744, pair745, pair746, pair747, pair748, pair749, pair750, Object::Number(12294), Object::Number(12348), pair751, Object::Number(12447), pair752, Object::Number(12543), pair753, pair754, pair755, pair756, Object::Number(13312), Object::Number(19893), Object::Number(19968), Object::Number(40899), pair757, pair758, pair759, pair760, pair761, Object::Number(42606), pair762, pair763, pair764, pair765, pair766, pair767, pair768, pair769, pair770, pair771, pair772, Object::Number(44032), Object::Number(55203), pair773, pair774, pair775, Object::Number(64285), pair776, pair777, pair778, Object::Number(64318), pair779, pair780, pair781, pair782, pair783, pair784, pair785, pair786, pair787, pair788, pair789, pair790, pair791, pair792, pair793, pair794, pair795, pair796, pair797, pair798, pair799, pair800, pair801, pair802, pair803, pair804, pair805, pair806, pair807, pair808, pair809, pair810, pair811, Object::Number(67592), pair812, pair813, Object::Number(67644), Object::Number(67647), pair814, pair815, Object::Number(68096), pair816, pair817, pair818, pair819, Object::Number(131072), Object::Number(173782), pair820]);
    let list6850 = vm.gc.listn(&[sym42, Object::Number(45), Object::Number(1418), Object::Number(1470), Object::Number(6150), pair821, Object::Number(11799), Object::Number(11802), Object::Number(12316), Object::Number(12336), Object::Number(12448), pair822, Object::Number(65112), Object::Number(65123), Object::Number(65293)]);
    let list6851 = vm.gc.listn(&[sym43, pair823, Object::Number(170), Object::Number(181), Object::Number(186), pair824, pair825, Object::Number(257), Object::Number(259), Object::Number(261), Object::Number(263), Object::Number(265), Object::Number(267), Object::Number(269), Object::Number(271), Object::Number(273), Object::Number(275), Object::Number(277), Object::Number(279), Object::Number(281), Object::Number(283), Object::Number(285), Object::Number(287), Object::Number(289), Object::Number(291), Object::Number(293), Object::Number(295), Object::Number(297), Object::Number(299), Object::Number(301), Object::Number(303), Object::Number(305), Object::Number(307), Object::Number(309), pair826, Object::Number(314), Object::Number(316), Object::Number(318), Object::Number(320), Object::Number(322), Object::Number(324), Object::Number(326), pair827, Object::Number(331), Object::Number(333), Object::Number(335), Object::Number(337), Object::Number(339), Object::Number(341), Object::Number(343), Object::Number(345), Object::Number(347), Object::Number(349), Object::Number(351), Object::Number(353), Object::Number(355), Object::Number(357), Object::Number(359), Object::Number(361), Object::Number(363), Object::Number(365), Object::Number(367), Object::Number(369), Object::Number(371), Object::Number(373), Object::Number(375), Object::Number(378), Object::Number(380), pair828, Object::Number(387), Object::Number(389), Object::Number(392), pair829, Object::Number(402), Object::Number(405), pair830, Object::Number(414), Object::Number(417), Object::Number(419), Object::Number(421), Object::Number(424), pair831, Object::Number(429), Object::Number(432), Object::Number(436), Object::Number(438), pair832, pair833, Object::Number(454), Object::Number(457), Object::Number(460), Object::Number(462), Object::Number(464), Object::Number(466), Object::Number(468), Object::Number(470), Object::Number(472), Object::Number(474), pair834, Object::Number(479), Object::Number(481), Object::Number(483), Object::Number(485), Object::Number(487), Object::Number(489), Object::Number(491), Object::Number(493), pair835, Object::Number(499), Object::Number(501), Object::Number(505), Object::Number(507), Object::Number(509), Object::Number(511), Object::Number(513), Object::Number(515), Object::Number(517), Object::Number(519), Object::Number(521), Object::Number(523), Object::Number(525), Object::Number(527), Object::Number(529), Object::Number(531), Object::Number(533), Object::Number(535), Object::Number(537), Object::Number(539), Object::Number(541), Object::Number(543), Object::Number(545), Object::Number(547), Object::Number(549), Object::Number(551), Object::Number(553), Object::Number(555), Object::Number(557), Object::Number(559), Object::Number(561), pair836, Object::Number(572), pair837, Object::Number(578), Object::Number(583), Object::Number(585), Object::Number(587), Object::Number(589), pair838, pair839, Object::Number(881), Object::Number(883), Object::Number(887), pair840, Object::Number(912), pair841, pair842, pair843, Object::Number(985), Object::Number(987), Object::Number(989), Object::Number(991), Object::Number(993), Object::Number(995), Object::Number(997), Object::Number(999), Object::Number(1001), Object::Number(1003), Object::Number(1005), pair844, Object::Number(1013), Object::Number(1016), pair845, pair846, Object::Number(1121), Object::Number(1123), Object::Number(1125), Object::Number(1127), Object::Number(1129), Object::Number(1131), Object::Number(1133), Object::Number(1135), Object::Number(1137), Object::Number(1139), Object::Number(1141), Object::Number(1143), Object::Number(1145), Object::Number(1147), Object::Number(1149), Object::Number(1151), Object::Number(1153), Object::Number(1163), Object::Number(1165), Object::Number(1167), Object::Number(1169), Object::Number(1171), Object::Number(1173), Object::Number(1175), Object::Number(1177), Object::Number(1179), Object::Number(1181), Object::Number(1183), Object::Number(1185), Object::Number(1187), Object::Number(1189), Object::Number(1191), Object::Number(1193), Object::Number(1195), Object::Number(1197), Object::Number(1199), Object::Number(1201), Object::Number(1203), Object::Number(1205), Object::Number(1207), Object::Number(1209), Object::Number(1211), Object::Number(1213), Object::Number(1215), Object::Number(1218), Object::Number(1220), Object::Number(1222), Object::Number(1224), Object::Number(1226), Object::Number(1228), pair847, Object::Number(1233), Object::Number(1235), Object::Number(1237), Object::Number(1239), Object::Number(1241), Object::Number(1243), Object::Number(1245), Object::Number(1247), Object::Number(1249), Object::Number(1251), Object::Number(1253), Object::Number(1255), Object::Number(1257), Object::Number(1259), Object::Number(1261), Object::Number(1263), Object::Number(1265), Object::Number(1267), Object::Number(1269), Object::Number(1271), Object::Number(1273), Object::Number(1275), Object::Number(1277), Object::Number(1279), Object::Number(1281), Object::Number(1283), Object::Number(1285), Object::Number(1287), Object::Number(1289), Object::Number(1291), Object::Number(1293), Object::Number(1295), Object::Number(1297), Object::Number(1299), Object::Number(1301), Object::Number(1303), Object::Number(1305), Object::Number(1307), Object::Number(1309), Object::Number(1311), Object::Number(1313), Object::Number(1315), pair848, pair849, pair850, pair851, Object::Number(7681), Object::Number(7683), Object::Number(7685), Object::Number(7687), Object::Number(7689), Object::Number(7691), Object::Number(7693), Object::Number(7695), Object::Number(7697), Object::Number(7699), Object::Number(7701), Object::Number(7703), Object::Number(7705), Object::Number(7707), Object::Number(7709), Object::Number(7711), Object::Number(7713), Object::Number(7715), Object::Number(7717), Object::Number(7719), Object::Number(7721), Object::Number(7723), Object::Number(7725), Object::Number(7727), Object::Number(7729), Object::Number(7731), Object::Number(7733), Object::Number(7735), Object::Number(7737), Object::Number(7739), Object::Number(7741), Object::Number(7743), Object::Number(7745), Object::Number(7747), Object::Number(7749), Object::Number(7751), Object::Number(7753), Object::Number(7755), Object::Number(7757), Object::Number(7759), Object::Number(7761), Object::Number(7763), Object::Number(7765), Object::Number(7767), Object::Number(7769), Object::Number(7771), Object::Number(7773), Object::Number(7775), Object::Number(7777), Object::Number(7779), Object::Number(7781), Object::Number(7783), Object::Number(7785), Object::Number(7787), Object::Number(7789), Object::Number(7791), Object::Number(7793), Object::Number(7795), Object::Number(7797), Object::Number(7799), Object::Number(7801), Object::Number(7803), Object::Number(7805), Object::Number(7807), Object::Number(7809), Object::Number(7811), Object::Number(7813), Object::Number(7815), Object::Number(7817), Object::Number(7819), Object::Number(7821), Object::Number(7823), Object::Number(7825), Object::Number(7827), pair852, Object::Number(7839), Object::Number(7841), Object::Number(7843), Object::Number(7845), Object::Number(7847), Object::Number(7849), Object::Number(7851), Object::Number(7853), Object::Number(7855), Object::Number(7857), Object::Number(7859), Object::Number(7861), Object::Number(7863), Object::Number(7865), Object::Number(7867), Object::Number(7869), Object::Number(7871), Object::Number(7873), Object::Number(7875), Object::Number(7877), Object::Number(7879), Object::Number(7881), Object::Number(7883), Object::Number(7885), Object::Number(7887), Object::Number(7889), Object::Number(7891), Object::Number(7893), Object::Number(7895), Object::Number(7897), Object::Number(7899), Object::Number(7901), Object::Number(7903), Object::Number(7905), Object::Number(7907), Object::Number(7909), Object::Number(7911), Object::Number(7913), Object::Number(7915), Object::Number(7917), Object::Number(7919), Object::Number(7921), Object::Number(7923), Object::Number(7925), Object::Number(7927), Object::Number(7929), Object::Number(7931), Object::Number(7933), pair853, pair854, pair855, pair856, pair857, pair858, pair859, pair860, pair861, pair862, pair863, pair864, pair865, Object::Number(8126), pair866, pair867, pair868, pair869, pair870, pair871, pair872, Object::Number(8305), Object::Number(8319), Object::Number(8458), pair873, Object::Number(8467), Object::Number(8495), Object::Number(8500), Object::Number(8505), pair874, pair875, Object::Number(8526), Object::Number(8580), pair876, Object::Number(11361), pair877, Object::Number(11368), Object::Number(11370), Object::Number(11372), Object::Number(11377), pair878, pair879, Object::Number(11393), Object::Number(11395), Object::Number(11397), Object::Number(11399), Object::Number(11401), Object::Number(11403), Object::Number(11405), Object::Number(11407), Object::Number(11409), Object::Number(11411), Object::Number(11413), Object::Number(11415), Object::Number(11417), Object::Number(11419), Object::Number(11421), Object::Number(11423), Object::Number(11425), Object::Number(11427), Object::Number(11429), Object::Number(11431), Object::Number(11433), Object::Number(11435), Object::Number(11437), Object::Number(11439), Object::Number(11441), Object::Number(11443), Object::Number(11445), Object::Number(11447), Object::Number(11449), Object::Number(11451), Object::Number(11453), Object::Number(11455), Object::Number(11457), Object::Number(11459), Object::Number(11461), Object::Number(11463), Object::Number(11465), Object::Number(11467), Object::Number(11469), Object::Number(11471), Object::Number(11473), Object::Number(11475), Object::Number(11477), Object::Number(11479), Object::Number(11481), Object::Number(11483), Object::Number(11485), Object::Number(11487), Object::Number(11489), pair880, pair881, Object::Number(42561), Object::Number(42563), Object::Number(42565), Object::Number(42567), Object::Number(42569), Object::Number(42571), Object::Number(42573), Object::Number(42575), Object::Number(42577), Object::Number(42579), Object::Number(42581), Object::Number(42583), Object::Number(42585), Object::Number(42587), Object::Number(42589), Object::Number(42591), Object::Number(42595), Object::Number(42597), Object::Number(42599), Object::Number(42601), Object::Number(42603), Object::Number(42605), Object::Number(42625), Object::Number(42627), Object::Number(42629), Object::Number(42631), Object::Number(42633), Object::Number(42635), Object::Number(42637), Object::Number(42639), Object::Number(42641), Object::Number(42643), Object::Number(42645), Object::Number(42647), Object::Number(42787), Object::Number(42789), Object::Number(42791), Object::Number(42793), Object::Number(42795), Object::Number(42797), pair882, Object::Number(42803), Object::Number(42805), Object::Number(42807), Object::Number(42809), Object::Number(42811), Object::Number(42813), Object::Number(42815), Object::Number(42817), Object::Number(42819), Object::Number(42821), Object::Number(42823), Object::Number(42825), Object::Number(42827), Object::Number(42829), Object::Number(42831), Object::Number(42833), Object::Number(42835), Object::Number(42837), Object::Number(42839), Object::Number(42841), Object::Number(42843), Object::Number(42845), Object::Number(42847), Object::Number(42849), Object::Number(42851), Object::Number(42853), Object::Number(42855), Object::Number(42857), Object::Number(42859), Object::Number(42861), Object::Number(42863), pair883, Object::Number(42874), Object::Number(42876), Object::Number(42879), Object::Number(42881), Object::Number(42883), Object::Number(42885), Object::Number(42887), Object::Number(42892), pair884, pair885, pair886, pair887, pair888, pair889, pair890, pair891, pair892, Object::Number(119995), pair893, pair894, pair895, pair896, pair897, pair898, pair899, pair900, pair901, pair902, pair903, pair904, pair905, pair906, pair907, pair908, pair909, pair910, pair911, pair912, pair913, Object::Number(120779)]);
    let list6852 = vm.gc.listn(&[sym44, pair914, Object::Number(185), pair915, pair916, pair917, pair918, pair919, pair920, pair921, pair922, Object::Number(8304), pair923, pair924, pair925, pair926, pair927, pair928, Object::Number(11517), pair929, pair930, pair931, pair932, pair933, pair934, pair935, Object::Number(65930), pair936, pair937, pair938, pair939]);
    let list6853 = vm.gc.listn(&[sym45, Object::Number(57344), Object::Number(63743), Object::Number(983040), Object::Number(1048573), Object::Number(1048576), Object::Number(1114109)]);
    let list6854 = vm.gc.listn(&[sym46, Object::Number(187), Object::Number(8217), Object::Number(8221), Object::Number(8250), Object::Number(11779), Object::Number(11781), Object::Number(11786), Object::Number(11789), Object::Number(11805), Object::Number(11809)]);
    let list6855 = vm.gc.listn(&[sym47, pair940, pair941, pair942, Object::Number(256), Object::Number(258), Object::Number(260), Object::Number(262), Object::Number(264), Object::Number(266), Object::Number(268), Object::Number(270), Object::Number(272), Object::Number(274), Object::Number(276), Object::Number(278), Object::Number(280), Object::Number(282), Object::Number(284), Object::Number(286), Object::Number(288), Object::Number(290), Object::Number(292), Object::Number(294), Object::Number(296), Object::Number(298), Object::Number(300), Object::Number(302), Object::Number(304), Object::Number(306), Object::Number(308), Object::Number(310), Object::Number(313), Object::Number(315), Object::Number(317), Object::Number(319), Object::Number(321), Object::Number(323), Object::Number(325), Object::Number(327), Object::Number(330), Object::Number(332), Object::Number(334), Object::Number(336), Object::Number(338), Object::Number(340), Object::Number(342), Object::Number(344), Object::Number(346), Object::Number(348), Object::Number(350), Object::Number(352), Object::Number(354), Object::Number(356), Object::Number(358), Object::Number(360), Object::Number(362), Object::Number(364), Object::Number(366), Object::Number(368), Object::Number(370), Object::Number(372), Object::Number(374), pair943, Object::Number(379), Object::Number(381), pair944, Object::Number(388), pair945, pair946, pair947, pair948, pair949, pair950, pair951, Object::Number(418), Object::Number(420), pair952, Object::Number(425), Object::Number(428), pair953, pair954, Object::Number(437), pair955, Object::Number(444), Object::Number(452), Object::Number(455), Object::Number(458), Object::Number(461), Object::Number(463), Object::Number(465), Object::Number(467), Object::Number(469), Object::Number(471), Object::Number(473), Object::Number(475), Object::Number(478), Object::Number(480), Object::Number(482), Object::Number(484), Object::Number(486), Object::Number(488), Object::Number(490), Object::Number(492), Object::Number(494), Object::Number(497), Object::Number(500), pair956, Object::Number(506), Object::Number(508), Object::Number(510), Object::Number(512), Object::Number(514), Object::Number(516), Object::Number(518), Object::Number(520), Object::Number(522), Object::Number(524), Object::Number(526), Object::Number(528), Object::Number(530), Object::Number(532), Object::Number(534), Object::Number(536), Object::Number(538), Object::Number(540), Object::Number(542), Object::Number(544), Object::Number(546), Object::Number(548), Object::Number(550), Object::Number(552), Object::Number(554), Object::Number(556), Object::Number(558), Object::Number(560), Object::Number(562), pair957, pair958, Object::Number(577), pair959, Object::Number(584), Object::Number(586), Object::Number(588), Object::Number(590), Object::Number(880), Object::Number(882), Object::Number(886), Object::Number(902), pair960, Object::Number(908), pair961, pair962, pair963, Object::Number(975), pair964, Object::Number(984), Object::Number(986), Object::Number(988), Object::Number(990), Object::Number(992), Object::Number(994), Object::Number(996), Object::Number(998), Object::Number(1000), Object::Number(1002), Object::Number(1004), Object::Number(1006), Object::Number(1012), Object::Number(1015), pair965, pair966, Object::Number(1120), Object::Number(1122), Object::Number(1124), Object::Number(1126), Object::Number(1128), Object::Number(1130), Object::Number(1132), Object::Number(1134), Object::Number(1136), Object::Number(1138), Object::Number(1140), Object::Number(1142), Object::Number(1144), Object::Number(1146), Object::Number(1148), Object::Number(1150), Object::Number(1152), Object::Number(1162), Object::Number(1164), Object::Number(1166), Object::Number(1168), Object::Number(1170), Object::Number(1172), Object::Number(1174), Object::Number(1176), Object::Number(1178), Object::Number(1180), Object::Number(1182), Object::Number(1184), Object::Number(1186), Object::Number(1188), Object::Number(1190), Object::Number(1192), Object::Number(1194), Object::Number(1196), Object::Number(1198), Object::Number(1200), Object::Number(1202), Object::Number(1204), Object::Number(1206), Object::Number(1208), Object::Number(1210), Object::Number(1212), Object::Number(1214), pair967, Object::Number(1219), Object::Number(1221), Object::Number(1223), Object::Number(1225), Object::Number(1227), Object::Number(1229), Object::Number(1232), Object::Number(1234), Object::Number(1236), Object::Number(1238), Object::Number(1240), Object::Number(1242), Object::Number(1244), Object::Number(1246), Object::Number(1248), Object::Number(1250), Object::Number(1252), Object::Number(1254), Object::Number(1256), Object::Number(1258), Object::Number(1260), Object::Number(1262), Object::Number(1264), Object::Number(1266), Object::Number(1268), Object::Number(1270), Object::Number(1272), Object::Number(1274), Object::Number(1276), Object::Number(1278), Object::Number(1280), Object::Number(1282), Object::Number(1284), Object::Number(1286), Object::Number(1288), Object::Number(1290), Object::Number(1292), Object::Number(1294), Object::Number(1296), Object::Number(1298), Object::Number(1300), Object::Number(1302), Object::Number(1304), Object::Number(1306), Object::Number(1308), Object::Number(1310), Object::Number(1312), Object::Number(1314), pair968, pair969, Object::Number(7680), Object::Number(7682), Object::Number(7684), Object::Number(7686), Object::Number(7688), Object::Number(7690), Object::Number(7692), Object::Number(7694), Object::Number(7696), Object::Number(7698), Object::Number(7700), Object::Number(7702), Object::Number(7704), Object::Number(7706), Object::Number(7708), Object::Number(7710), Object::Number(7712), Object::Number(7714), Object::Number(7716), Object::Number(7718), Object::Number(7720), Object::Number(7722), Object::Number(7724), Object::Number(7726), Object::Number(7728), Object::Number(7730), Object::Number(7732), Object::Number(7734), Object::Number(7736), Object::Number(7738), Object::Number(7740), Object::Number(7742), Object::Number(7744), Object::Number(7746), Object::Number(7748), Object::Number(7750), Object::Number(7752), Object::Number(7754), Object::Number(7756), Object::Number(7758), Object::Number(7760), Object::Number(7762), Object::Number(7764), Object::Number(7766), Object::Number(7768), Object::Number(7770), Object::Number(7772), Object::Number(7774), Object::Number(7776), Object::Number(7778), Object::Number(7780), Object::Number(7782), Object::Number(7784), Object::Number(7786), Object::Number(7788), Object::Number(7790), Object::Number(7792), Object::Number(7794), Object::Number(7796), Object::Number(7798), Object::Number(7800), Object::Number(7802), Object::Number(7804), Object::Number(7806), Object::Number(7808), Object::Number(7810), Object::Number(7812), Object::Number(7814), Object::Number(7816), Object::Number(7818), Object::Number(7820), Object::Number(7822), Object::Number(7824), Object::Number(7826), Object::Number(7828), Object::Number(7838), Object::Number(7840), Object::Number(7842), Object::Number(7844), Object::Number(7846), Object::Number(7848), Object::Number(7850), Object::Number(7852), Object::Number(7854), Object::Number(7856), Object::Number(7858), Object::Number(7860), Object::Number(7862), Object::Number(7864), Object::Number(7866), Object::Number(7868), Object::Number(7870), Object::Number(7872), Object::Number(7874), Object::Number(7876), Object::Number(7878), Object::Number(7880), Object::Number(7882), Object::Number(7884), Object::Number(7886), Object::Number(7888), Object::Number(7890), Object::Number(7892), Object::Number(7894), Object::Number(7896), Object::Number(7898), Object::Number(7900), Object::Number(7902), Object::Number(7904), Object::Number(7906), Object::Number(7908), Object::Number(7910), Object::Number(7912), Object::Number(7914), Object::Number(7916), Object::Number(7918), Object::Number(7920), Object::Number(7922), Object::Number(7924), Object::Number(7926), Object::Number(7928), Object::Number(7930), Object::Number(7932), Object::Number(7934), pair970, pair971, pair972, pair973, pair974, Object::Number(8025), Object::Number(8027), Object::Number(8029), Object::Number(8031), pair975, pair976, pair977, pair978, pair979, pair980, Object::Number(8450), Object::Number(8455), pair981, pair982, Object::Number(8469), pair983, Object::Number(8484), Object::Number(8486), Object::Number(8488), pair984, pair985, pair986, Object::Number(8517), Object::Number(8579), pair987, Object::Number(11360), pair988, Object::Number(11367), Object::Number(11369), Object::Number(11371), pair989, Object::Number(11378), Object::Number(11381), Object::Number(11392), Object::Number(11394), Object::Number(11396), Object::Number(11398), Object::Number(11400), Object::Number(11402), Object::Number(11404), Object::Number(11406), Object::Number(11408), Object::Number(11410), Object::Number(11412), Object::Number(11414), Object::Number(11416), Object::Number(11418), Object::Number(11420), Object::Number(11422), Object::Number(11424), Object::Number(11426), Object::Number(11428), Object::Number(11430), Object::Number(11432), Object::Number(11434), Object::Number(11436), Object::Number(11438), Object::Number(11440), Object::Number(11442), Object::Number(11444), Object::Number(11446), Object::Number(11448), Object::Number(11450), Object::Number(11452), Object::Number(11454), Object::Number(11456), Object::Number(11458), Object::Number(11460), Object::Number(11462), Object::Number(11464), Object::Number(11466), Object::Number(11468), Object::Number(11470), Object::Number(11472), Object::Number(11474), Object::Number(11476), Object::Number(11478), Object::Number(11480), Object::Number(11482), Object::Number(11484), Object::Number(11486), Object::Number(11488), Object::Number(11490), Object::Number(42560), Object::Number(42562), Object::Number(42564), Object::Number(42566), Object::Number(42568), Object::Number(42570), Object::Number(42572), Object::Number(42574), Object::Number(42576), Object::Number(42578), Object::Number(42580), Object::Number(42582), Object::Number(42584), Object::Number(42586), Object::Number(42588), Object::Number(42590), Object::Number(42594), Object::Number(42596), Object::Number(42598), Object::Number(42600), Object::Number(42602), Object::Number(42604), Object::Number(42624), Object::Number(42626), Object::Number(42628), Object::Number(42630), Object::Number(42632), Object::Number(42634), Object::Number(42636), Object::Number(42638), Object::Number(42640), Object::Number(42642), Object::Number(42644), Object::Number(42646), Object::Number(42786), Object::Number(42788), Object::Number(42790), Object::Number(42792), Object::Number(42794), Object::Number(42796), Object::Number(42798), Object::Number(42802), Object::Number(42804), Object::Number(42806), Object::Number(42808), Object::Number(42810), Object::Number(42812), Object::Number(42814), Object::Number(42816), Object::Number(42818), Object::Number(42820), Object::Number(42822), Object::Number(42824), Object::Number(42826), Object::Number(42828), Object::Number(42830), Object::Number(42832), Object::Number(42834), Object::Number(42836), Object::Number(42838), Object::Number(42840), Object::Number(42842), Object::Number(42844), Object::Number(42846), Object::Number(42848), Object::Number(42850), Object::Number(42852), Object::Number(42854), Object::Number(42856), Object::Number(42858), Object::Number(42860), Object::Number(42862), Object::Number(42873), Object::Number(42875), pair990, Object::Number(42880), Object::Number(42882), Object::Number(42884), Object::Number(42886), Object::Number(42891), pair991, pair992, pair993, pair994, pair995, Object::Number(119964), pair996, Object::Number(119970), pair997, pair998, pair999, pair1000, pair1001, pair1002, pair1003, pair1004, pair1005, pair1006, pair1007, Object::Number(120134), pair1008, pair1009, pair1010, pair1011, pair1012, pair1013, pair1014, pair1015, pair1016, pair1017, pair1018, pair1019, Object::Number(120778)]);
    let list6856 = vm.gc.listn(&[sym48, Object::Number(8233)]);
    let list6857 = vm.gc.listn(&[sym49, pair1020, pair1021, pair1022, Object::Number(12295), pair1023, pair1024, pair1025, Object::Number(66369), Object::Number(66378), pair1026, pair1027]);
    let list6858 = vm.gc.listn(&[sym50, Object::Number(40), Object::Number(91), Object::Number(123), Object::Number(3898), Object::Number(3900), Object::Number(5787), Object::Number(8218), Object::Number(8222), Object::Number(8261), Object::Number(8317), Object::Number(8333), Object::Number(9001), Object::Number(10088), Object::Number(10090), Object::Number(10092), Object::Number(10094), Object::Number(10096), Object::Number(10098), Object::Number(10100), Object::Number(10181), Object::Number(10214), Object::Number(10216), Object::Number(10218), Object::Number(10220), Object::Number(10222), Object::Number(10627), Object::Number(10629), Object::Number(10631), Object::Number(10633), Object::Number(10635), Object::Number(10637), Object::Number(10639), Object::Number(10641), Object::Number(10643), Object::Number(10645), Object::Number(10647), Object::Number(10712), Object::Number(10714), Object::Number(10748), Object::Number(11810), Object::Number(11812), Object::Number(11814), Object::Number(11816), Object::Number(12296), Object::Number(12298), Object::Number(12300), Object::Number(12302), Object::Number(12304), Object::Number(12308), Object::Number(12310), Object::Number(12312), Object::Number(12314), Object::Number(12317), Object::Number(64830), Object::Number(65047), Object::Number(65077), Object::Number(65079), Object::Number(65081), Object::Number(65083), Object::Number(65085), Object::Number(65087), Object::Number(65089), Object::Number(65091), Object::Number(65095), Object::Number(65113), Object::Number(65115), Object::Number(65117), Object::Number(65288), Object::Number(65339), Object::Number(65371), Object::Number(65375), Object::Number(65378)]);
    let list6859 = vm.gc.listn(&[list6830, list6831, list6832, list6833, list6834, list6835, list6836, list6837, list6838, list6839, list6840, list6841, list6842, list6843, list6844, list6845, list6846, list6847, list6848, list6849, list6850, list6851, list6852, list6853, list6854, list6855, list6856, list6857, list6858]);
    let list6860 = vm.gc.listn(&[pair1028, pair1029, pair1030, pair1031, pair1032, pair1033, pair1034, pair1035, pair1036, pair1037, pair1038, pair1039, pair1040, pair1041, pair1042, pair1043, pair1044, pair1045, pair1046, pair1047, pair1048, pair1049, pair1050, pair1051, pair1052, pair1053, pair1054, pair1055, pair1056, pair1057, pair1058, pair1059, pair1060, pair1061, pair1062, pair1063, pair1064, pair1065, pair1066, pair1067, pair1068, pair1069, pair1070, pair1071, pair1072, pair1073, pair1074, pair1075, pair1076, pair1077, pair1078, pair1079, pair1080, pair1081, pair1082, pair1083, pair1084, pair1085, pair1086, pair1087, pair1088, pair1089, pair1090, pair1091, pair1092, pair1093, pair1094, pair1095, pair1096, pair1097, pair1098, pair1099, pair1100, pair1101, pair1102, pair1103, pair1104, pair1105, pair1106, pair1107, pair1108, pair1109, pair1110, pair1111, pair1112, pair1113, pair1114, pair1115, pair1116, pair1117, pair1118, pair1119, pair1120, pair1121, pair1122, pair1123, pair1124, pair1125, pair1126, pair1127, pair1128, pair1129, pair1130, pair1131, pair1132, pair1133, pair1134, pair1135, pair1136, pair1137, pair1138, pair1139, pair1140, pair1141, pair1142, pair1143, pair1144, pair1145, pair1146, pair1147, pair1148, pair1149, pair1150, pair1151, pair1152, pair1153, pair1154, pair1155, pair1156, pair1157, pair1158, pair1159, pair1160, pair1161, pair1162, pair1163, pair1164, pair1165, pair1166, pair1167, pair1168, pair1169, pair1170, pair1171, pair1172, pair1173, pair1174, pair1175, pair1176, pair1177, pair1178, pair1179, pair1180, pair1181, pair1182, pair1183, pair1184, pair1185, pair1186, pair1187, pair1188, pair1189, pair1190, pair1191, pair1192, pair1193, pair1194, pair1195, pair1196, pair1197, pair1198, pair1199, pair1200, pair1201, pair1202, pair1203, pair1204, pair1205, pair1206, pair1207, pair1208, pair1209, pair1210, pair1211, pair1212, pair1213, pair1214, pair1215, pair1216, pair1217, pair1218, pair1219, pair1220, pair1221, pair1222, pair1223, pair1224, pair1225, pair1226, pair1227, pair1228, pair1229, pair1230, pair1231, pair1232, pair1233, pair1234, pair1235, pair1236, pair1237, pair1238, pair1239, pair1240, pair1241, pair1242, pair1243, pair1244, pair1245, pair1246, pair1247, pair1248, pair1249, pair1250, pair1251, pair1252, pair1253, pair1254, pair1255, pair1256, pair1257, pair1258, pair1259, pair1260, pair1261, pair1262, pair1263, pair1264, pair1265, pair1266, pair1267, pair1268, pair1269, pair1270, pair1271, pair1272, pair1273, pair1274, pair1275, pair1276, pair1277, pair1278, pair1279, pair1280, pair1281, pair1282, pair1283, pair1284, pair1285, pair1286, pair1287, pair1288, pair1289, pair1290, pair1291, pair1292, pair1293, pair1294, pair1295, pair1296, pair1297, pair1298, pair1299, pair1300, pair1301, pair1302, pair1303, pair1304, pair1305, pair1306, pair1307, pair1308, pair1309, pair1310, pair1311, pair1312, pair1313, pair1314, pair1315, pair1316, pair1317, pair1318, pair1319, pair1320, pair1321, pair1322, pair1323, pair1324, pair1325, pair1326, pair1327, pair1328, pair1329, pair1330, pair1331, pair1332, pair1333, pair1334, pair1335, pair1336, pair1337, pair1338, pair1339, pair1340, pair1341, pair1342, pair1343, pair1344, pair1345, pair1346, pair1347, pair1348, pair1349, pair1350, pair1351, pair1352, pair1353, pair1354, pair1355, pair1356, pair1357, pair1358, pair1359, pair1360, pair1361, pair1362, pair1363, pair1364, pair1365, pair1366, pair1367, pair1368, pair1369, pair1370, pair1371, pair1372, pair1373, pair1374, pair1375, pair1376, pair1377, pair1378, pair1379, pair1380, pair1381, pair1382, pair1383, pair1384, pair1385, pair1386, pair1387, pair1388, pair1389, pair1390, pair1391, pair1392, pair1393, pair1394, pair1395, pair1396, pair1397, pair1398, pair1399, pair1400, pair1401, pair1402, pair1403, pair1404, pair1405, pair1406, pair1407, pair1408, pair1409, pair1410, pair1411, pair1412, pair1413, pair1414, pair1415, pair1416, pair1417, pair1418, pair1419, pair1420, pair1421, pair1422, pair1423, pair1424, pair1425, pair1426, pair1427, pair1428, pair1429, pair1430, pair1431, pair1432, pair1433, pair1434, pair1435, pair1436, pair1437, pair1438, pair1439, pair1440, pair1441, pair1442, pair1443, pair1444, pair1445, pair1446, pair1447, pair1448, pair1449, pair1450, pair1451, pair1452, pair1453, pair1454, pair1455, pair1456, pair1457, pair1458, pair1459, pair1460, pair1461, pair1462, pair1463, pair1464, pair1465, pair1466, pair1467, pair1468, pair1469, pair1470, pair1471, pair1472, pair1473, pair1474, pair1475, pair1476, pair1477, pair1478, pair1479, pair1480, pair1481, pair1482, pair1483, pair1484, pair1485, pair1486, pair1487, pair1488, pair1489, pair1490, pair1491, pair1492, pair1493, pair1494, pair1495, pair1496, pair1497, pair1498, pair1499, pair1500, pair1501, pair1502, pair1503, pair1504, pair1505, pair1506, pair1507, pair1508, pair1509, pair1510, pair1511, pair1512, pair1513, pair1514, pair1515, pair1516, pair1517, pair1518, pair1519, pair1520, pair1521, pair1522, pair1523, pair1524, pair1525, pair1526, pair1527, pair1528, pair1529, pair1530, pair1531, pair1532, pair1533, pair1534, pair1535, pair1536, pair1537, pair1538, pair1539, pair1540, pair1541, pair1542, pair1543, pair1544, pair1545, pair1546, pair1547, pair1548, pair1549, pair1550, pair1551, pair1552, pair1553, pair1554, pair1555, pair1556, pair1557, pair1558, pair1559, pair1560, pair1561, pair1562, pair1563, pair1564, pair1565, pair1566, pair1567, pair1568, pair1569, pair1570, pair1571, pair1572, pair1573, pair1574, pair1575, pair1576, pair1577, pair1578, pair1579, pair1580, pair1581, pair1582, pair1583, pair1584, pair1585, pair1586, pair1587, pair1588, pair1589, pair1590, pair1591, pair1592, pair1593, pair1594, pair1595, pair1596, pair1597, pair1598, pair1599, pair1600, pair1601, pair1602, pair1603, pair1604, pair1605, pair1606, pair1607, pair1608, pair1609, pair1610, pair1611, pair1612, pair1613, pair1614, pair1615, pair1616, pair1617, pair1618, pair1619, pair1620, pair1621, pair1622, pair1623, pair1624, pair1625, pair1626, pair1627, pair1628, pair1629, pair1630, pair1631, pair1632, pair1633, pair1634, pair1635, pair1636, pair1637, pair1638, pair1639, pair1640, pair1641, pair1642, pair1643, pair1644, pair1645, pair1646, pair1647, pair1648, pair1649, pair1650, pair1651, pair1652, pair1653, pair1654, pair1655, pair1656, pair1657, pair1658, pair1659, pair1660, pair1661, pair1662, pair1663, pair1664, pair1665, pair1666, pair1667, pair1668, pair1669, pair1670, pair1671, pair1672, pair1673, pair1674, pair1675, pair1676, pair1677, pair1678, pair1679, pair1680, pair1681, pair1682, pair1683, pair1684, pair1685, pair1686, pair1687, pair1688, pair1689, pair1690, pair1691, pair1692, pair1693, pair1694, pair1695, pair1696, pair1697, pair1698, pair1699, pair1700, pair1701, pair1702, pair1703, pair1704, pair1705, pair1706, pair1707, pair1708, pair1709, pair1710, pair1711, pair1712, pair1713, pair1714, pair1715, pair1716, pair1717, pair1718, pair1719, pair1720, pair1721, pair1722, pair1723, pair1724, pair1725, pair1726, pair1727, pair1728, pair1729, pair1730, pair1731, pair1732, pair1733, pair1734, pair1735, pair1736, pair1737, pair1738, pair1739, pair1740, pair1741, pair1742, pair1743, pair1744, pair1745, pair1746, pair1747, pair1748, pair1749, pair1750, pair1751, pair1752, pair1753, pair1754, pair1755, pair1756, pair1757, pair1758, pair1759, pair1760, pair1761, pair1762, pair1763, pair1764, pair1765, pair1766, pair1767, pair1768, pair1769, pair1770, pair1771, pair1772, pair1773, pair1774, pair1775, pair1776, pair1777, pair1778, pair1779, pair1780, pair1781, pair1782, pair1783, pair1784, pair1785, pair1786, pair1787, pair1788, pair1789, pair1790, pair1791, pair1792, pair1793, pair1794, pair1795, pair1796, pair1797, pair1798, pair1799, pair1800, pair1801, pair1802, pair1803, pair1804, pair1805, pair1806, pair1807, pair1808, pair1809, pair1810, pair1811, pair1812, pair1813, pair1814, pair1815, pair1816, pair1817, pair1818, pair1819, pair1820, pair1821, pair1822, pair1823, pair1824, pair1825, pair1826, pair1827, pair1828, pair1829, pair1830, pair1831, pair1832, pair1833, pair1834, pair1835, pair1836, pair1837, pair1838, pair1839, pair1840, pair1841, pair1842, pair1843, pair1844, pair1845, pair1846, pair1847, pair1848, pair1849, pair1850, pair1851, pair1852, pair1853, pair1854, pair1855, pair1856, pair1857, pair1858, pair1859, pair1860, pair1861, pair1862, pair1863, pair1864, pair1865, pair1866, pair1867, pair1868, pair1869, pair1870, pair1871, pair1872, pair1873, pair1874, pair1875, pair1876, pair1877, pair1878, pair1879, pair1880, pair1881, pair1882, pair1883, pair1884, pair1885, pair1886, pair1887, pair1888, pair1889, pair1890, pair1891, pair1892, pair1893, pair1894, pair1895, pair1896, pair1897, pair1898, pair1899, pair1900, pair1901, pair1902, pair1903, pair1904, pair1905, pair1906, pair1907, pair1908, pair1909, pair1910, pair1911, pair1912, pair1913, pair1914, pair1915, pair1916, pair1917, pair1918, pair1919, pair1920, pair1921, pair1922, pair1923, pair1924, pair1925, pair1926, pair1927, pair1928, pair1929, pair1930, pair1931, pair1932, pair1933, pair1934, pair1935, pair1936, pair1937, pair1938, pair1939, pair1940, pair1941, pair1942, pair1943, pair1944, pair1945, pair1946, pair1947, pair1948, pair1949, pair1950, pair1951, pair1952, pair1953, pair1954, pair1955, pair1956, pair1957, pair1958, pair1959, pair1960, pair1961, pair1962, pair1963, pair1964, pair1965, pair1966, pair1967, pair1968, pair1969, pair1970, pair1971, pair1972, pair1973, pair1974, pair1975, pair1976, pair1977, pair1978, pair1979, pair1980, pair1981, pair1982, pair1983, pair1984, pair1985, pair1986, pair1987, pair1988, pair1989, pair1990, pair1991, pair1992, pair1993, pair1994, pair1995, pair1996, pair1997, pair1998, pair1999, pair2000, pair2001, pair2002, pair2003, pair2004, pair2005, pair2006, pair2007, pair2008, pair2009, pair2010, pair2011, pair2012, pair2013, pair2014, pair2015, pair2016, pair2017, pair2018, pair2019, pair2020, pair2021, pair2022, pair2023, pair2024, pair2025, pair2026, pair2027, pair2028, pair2029, pair2030, pair2031, pair2032, pair2033, pair2034, pair2035, pair2036, pair2037, pair2038, pair2039, pair2040, pair2041, pair2042, pair2043, pair2044, pair2045, pair2046, pair2047, pair2048, pair2049, pair2050, pair2051, pair2052, pair2053, pair2054, pair2055, pair2056, pair2057, pair2058, pair2059, pair2060, pair2061, pair2062]);
    let list6861 = vm.gc.listn(&[pair2063, pair2064, pair2065, pair2066, pair2067, pair2068, pair2069, pair2070, pair2071, pair2072, pair2073, pair2074, pair2075, pair2076, pair2077, pair2078, pair2079, pair2080, pair2081, pair2082, pair2083, pair2084, pair2085, pair2086, pair2087, pair2088, pair2089, pair2090, pair2091, pair2092, pair2093, pair2094, pair2095, pair2096, pair2097, pair2098, pair2099, pair2100, pair2101, pair2102, pair2103, pair2104, pair2105, pair2106, pair2107, pair2108, pair2109, pair2110, pair2111, pair2112, pair2113, pair2114, pair2115, pair2116, pair2117, pair2118, pair2119, pair2120, pair2121, pair2122, pair2123, pair2124, pair2125, pair2126, pair2127, pair2128, pair2129, pair2130, pair2131, pair2132, pair2133, pair2134, pair2135, pair2136, pair2137, pair2138, pair2139, pair2140, pair2141, pair2142, pair2143, pair2144, pair2145, pair2146, pair2147, pair2148, pair2149, pair2150, pair2151, pair2152, pair2153, pair2154, pair2155, pair2156, pair2157, pair2158, pair2159, pair2160, pair2161, pair2162, pair2163, pair2164, pair2165, pair2166, pair2167, pair2168, pair2169, pair2170, pair2171, pair2172, pair2173, pair2174, pair2175, pair2176, pair2177, pair2178, pair2179, pair2180, pair2181, pair2182, pair2183, pair2184, pair2185, pair2186, pair2187, pair2188, pair2189, pair2190, pair2191, pair2192, pair2193, pair2194, pair2195, pair2196, pair2197, pair2198, pair2199, pair2200, pair2201, pair2202, pair2203, pair2204, pair2205, pair2206, pair2207, pair2208, pair2209, pair2210, pair2211, pair2212, pair2213, pair2214, pair2215, pair2216, pair2217, pair2218, pair2219, pair2220, pair2221, pair2222, pair2223, pair2224, pair2225, pair2226, pair2227, pair2228, pair2229, pair2230, pair2231, pair2232, pair2233, pair2234, pair2235, pair2236, pair2237, pair2238, pair2239, pair2240, pair2241, pair2242, pair2243, pair2244, pair2245, pair2246, pair2247, pair2248, pair2249, pair2250, pair2251, pair2252, pair2253, pair2254, pair2255, pair2256, pair2257, pair2258, pair2259, pair2260, pair2261, pair2262, pair2263, pair2264, pair2265, pair2266, pair2267, pair2268, pair2269, pair2270, pair2271, pair2272, pair2273, pair2274, pair2275, pair2276, pair2277, pair2278, pair2279, pair2280, pair2281, pair2282, pair2283, pair2284, pair2285, pair2286, pair2287, pair2288, pair2289, pair2290, pair2291, pair2292, pair2293, pair2294, pair2295, pair2296, pair2297, pair2298, pair2299, pair2300, pair2301, pair2302, pair2303, pair2304, pair2305, pair2306, pair2307, pair2308, pair2309, pair2310, pair2311, pair2312, pair2313, pair2314, pair2315, pair2316, pair2317, pair2318, pair2319, pair2320, pair2321, pair2322, pair2323, pair2324, pair2325, pair2326, pair2327, pair2328, pair2329, pair2330, pair2331, pair2332, pair2333, pair2334, pair2335, pair2336, pair2337, pair2338, pair2339, pair2340, pair2341, pair2342, pair2343, pair2344, pair2345, pair2346, pair2347, pair2348, pair2349, pair2350, pair2351, pair2352, pair2353, pair2354, pair2355, pair2356, pair2357, pair2358, pair2359, pair2360, pair2361, pair2362, pair2363, pair2364, pair2365, pair2366, pair2367, pair2368, pair2369, pair2370, pair2371, pair2372, pair2373, pair2374, pair2375, pair2376, pair2377, pair2378, pair2379, pair2380, pair2381, pair2382, pair2383, pair2384, pair2385, pair2386, pair2387, pair2388, pair2389, pair2390, pair2391, pair2392, pair2393, pair2394, pair2395, pair2396, pair2397, pair2398, pair2399, pair2400, pair2401, pair2402, pair2403, pair2404, pair2405, pair2406, pair2407, pair2408, pair2409, pair2410, pair2411, pair2412, pair2413, pair2414, pair2415, pair2416, pair2417, pair2418, pair2419, pair2420, pair2421, pair2422, pair2423, pair2424, pair2425, pair2426, pair2427, pair2428, pair2429, pair2430, pair2431, pair2432, pair2433, pair2434, pair2435, pair2436, pair2437, pair2438, pair2439, pair2440, pair2441, pair2442, pair2443, pair2444, pair2445, pair2446, pair2447, pair2448, pair2449, pair2450, pair2451, pair2452, pair2453, pair2454, pair2455, pair2456, pair2457, pair2458, pair2459, pair2460, pair2461, pair2462, pair2463, pair2464, pair2465, pair2466, pair2467, pair2468, pair2469, pair2470, pair2471, pair2472, pair2473, pair2474, pair2475, pair2476, pair2477, pair2478, pair2479, pair2480, pair2481, pair2482, pair2483, pair2484, pair2485, pair2486, pair2487, pair2488, pair2489, pair2490, pair2491, pair2492, pair2493, pair2494, pair2495, pair2496, pair2497, pair2498, pair2499, pair2500, pair2501, pair2502, pair2503, pair2504, pair2505, pair2506, pair2507, pair2508, pair2509, pair2510, pair2511, pair2512, pair2513, pair2514, pair2515, pair2516, pair2517, pair2518, pair2519, pair2520, pair2521, pair2522, pair2523, pair2524, pair2525, pair2526, pair2527, pair2528, pair2529, pair2530, pair2531, pair2532, pair2533, pair2534, pair2535, pair2536, pair2537, pair2538, pair2539, pair2540, pair2541, pair2542, pair2543, pair2544, pair2545, pair2546, pair2547, pair2548, pair2549, pair2550, pair2551, pair2552, pair2553, pair2554, pair2555, pair2556, pair2557, pair2558, pair2559, pair2560, pair2561, pair2562, pair2563, pair2564, pair2565, pair2566, pair2567, pair2568, pair2569, pair2570, pair2571, pair2572, pair2573, pair2574, pair2575, pair2576, pair2577, pair2578, pair2579, pair2580, pair2581, pair2582, pair2583, pair2584, pair2585, pair2586, pair2587, pair2588, pair2589, pair2590, pair2591, pair2592, pair2593, pair2594, pair2595, pair2596, pair2597, pair2598, pair2599, pair2600, pair2601, pair2602, pair2603, pair2604, pair2605, pair2606, pair2607, pair2608, pair2609, pair2610, pair2611, pair2612, pair2613, pair2614, pair2615, pair2616, pair2617, pair2618, pair2619, pair2620, pair2621, pair2622, pair2623, pair2624, pair2625, pair2626, pair2627, pair2628, pair2629, pair2630, pair2631, pair2632, pair2633, pair2634, pair2635, pair2636, pair2637, pair2638, pair2639, pair2640, pair2641, pair2642, pair2643, pair2644, pair2645, pair2646, pair2647, pair2648, pair2649, pair2650, pair2651, pair2652, pair2653, pair2654, pair2655, pair2656, pair2657, pair2658, pair2659, pair2660, pair2661, pair2662, pair2663, pair2664, pair2665, pair2666, pair2667, pair2668, pair2669, pair2670, pair2671, pair2672, pair2673, pair2674, pair2675, pair2676, pair2677, pair2678, pair2679, pair2680, pair2681, pair2682, pair2683, pair2684, pair2685, pair2686, pair2687, pair2688, pair2689, pair2690, pair2691, pair2692, pair2693, pair2694, pair2695, pair2696, pair2697, pair2698, pair2699, pair2700, pair2701, pair2702, pair2703, pair2704, pair2705, pair2706, pair2707, pair2708, pair2709, pair2710, pair2711, pair2712, pair2713, pair2714, pair2715, pair2716, pair2717, pair2718, pair2719, pair2720, pair2721, pair2722, pair2723, pair2724, pair2725, pair2726, pair2727, pair2728, pair2729, pair2730, pair2731, pair2732, pair2733, pair2734, pair2735, pair2736, pair2737, pair2738, pair2739, pair2740, pair2741, pair2742, pair2743, pair2744, pair2745, pair2746, pair2747, pair2748, pair2749, pair2750, pair2751, pair2752, pair2753, pair2754, pair2755, pair2756, pair2757, pair2758, pair2759, pair2760, pair2761, pair2762, pair2763, pair2764, pair2765, pair2766, pair2767, pair2768, pair2769, pair2770, pair2771, pair2772, pair2773, pair2774, pair2775, pair2776, pair2777, pair2778, pair2779, pair2780, pair2781, pair2782, pair2783, pair2784, pair2785, pair2786, pair2787, pair2788, pair2789, pair2790, pair2791, pair2792, pair2793, pair2794, pair2795, pair2796, pair2797, pair2798, pair2799, pair2800, pair2801, pair2802, pair2803, pair2804, pair2805, pair2806, pair2807, pair2808, pair2809, pair2810, pair2811, pair2812, pair2813, pair2814, pair2815, pair2816, pair2817, pair2818, pair2819, pair2820, pair2821, pair2822, pair2823, pair2824, pair2825, pair2826, pair2827, pair2828, pair2829, pair2830, pair2831, pair2832, pair2833, pair2834, pair2835, pair2836, pair2837, pair2838, pair2839, pair2840, pair2841, pair2842, pair2843, pair2844, pair2845, pair2846, pair2847, pair2848, pair2849, pair2850, pair2851, pair2852, pair2853, pair2854, pair2855, pair2856, pair2857, pair2858, pair2859, pair2860, pair2861, pair2862, pair2863, pair2864, pair2865, pair2866, pair2867, pair2868, pair2869, pair2870, pair2871, pair2872, pair2873, pair2874, pair2875, pair2876, pair2877, pair2878, pair2879, pair2880, pair2881, pair2882, pair2883, pair2884, pair2885, pair2886, pair2887, pair2888, pair2889, pair2890, pair2891, pair2892, pair2893, pair2894, pair2895, pair2896, pair2897, pair2898, pair2899, pair2900, pair2901, pair2902, pair2903, pair2904, pair2905, pair2906, pair2907, pair2908, pair2909, pair2910, pair2911, pair2912, pair2913, pair2914, pair2915, pair2916, pair2917, pair2918, pair2919, pair2920, pair2921, pair2922, pair2923, pair2924, pair2925, pair2926, pair2927, pair2928, pair2929, pair2930, pair2931, pair2932, pair2933, pair2934, pair2935, pair2936, pair2937, pair2938, pair2939, pair2940, pair2941, pair2942, pair2943, pair2944, pair2945, pair2946, pair2947, pair2948, pair2949, pair2950, pair2951, pair2952, pair2953, pair2954, pair2955, pair2956, pair2957, pair2958, pair2959, pair2960, pair2961, pair2962, pair2963, pair2964, pair2965, pair2966, pair2967, pair2968, pair2969, pair2970, pair2971, pair2972, pair2973, pair2974, pair2975, pair2976, pair2977, pair2978, pair2979, pair2980, pair2981, pair2982, pair2983, pair2984, pair2985, pair2986, pair2987, pair2988, pair2989, pair2990, pair2991, pair2992, pair2993, pair2994, pair2995, pair2996, pair2997, pair2998, pair2999, pair3000, pair3001, pair3002, pair3003, pair3004, pair3005, pair3006, pair3007, pair3008, pair3009, pair3010, pair3011, pair3012, pair3013, pair3014, pair3015, pair3016, pair3017, pair3018, pair3019, pair3020, pair3021, pair3022, pair3023, pair3024, pair3025, pair3026, pair3027, pair3028, pair3029, pair3030, pair3031, pair3032, pair3033, pair3034, pair3035, pair3036, pair3037, pair3038, pair3039, pair3040, pair3041, pair3042, pair3043, pair3044, pair3045, pair3046, pair3047, pair3048, pair3049, pair3050, pair3051, pair3052, pair3053, pair3054, pair3055, pair3056, pair3057, pair3058, pair3059, pair3060, pair3061, pair3062, pair3063, pair3064, pair3065, pair3066, pair3067, pair3068, pair3069, pair3070, pair3071, pair3072, pair3073, pair3074, pair3075, pair3076, pair3077, pair3078, pair3079, pair3080, pair3081, pair3082, pair3083, pair3084, pair3085]);
    let list6862 = vm.gc.listn(&[pair3086, pair3087, pair3088, pair3089, pair3090, pair3091, pair3092, pair3093, pair3094, pair3095, pair3096, pair3097, pair3098, pair3099, pair3100, pair3101, pair3102, pair3103, pair3104, pair3105, pair3106, pair3107, pair3108, pair3109, pair3110, pair3111, pair3112, pair3113, pair3114, pair3115, pair3116, pair3117, pair3118, pair3119, pair3120, pair3121, pair3122, pair3123, pair3124, pair3125, pair3126, pair3127, pair3128, pair3129, pair3130, pair3131, pair3132, pair3133, pair3134, pair3135, pair3136, pair3137, pair3138, pair3139, pair3140, pair3141, pair3142, pair3143, pair3144, pair3145, pair3146, pair3147, pair3148, pair3149, pair3150, pair3151, pair3152, pair3153, pair3154, pair3155, pair3156, pair3157, pair3158, pair3159, pair3160, pair3161, pair3162, pair3163, pair3164, pair3165, pair3166, pair3167, pair3168, pair3169, pair3170, pair3171, pair3172, pair3173, pair3174, pair3175, pair3176, pair3177, pair3178, pair3179, pair3180, pair3181, pair3182, pair3183, pair3184, pair3185, pair3186, pair3187, pair3188, pair3189, pair3190, pair3191, pair3192, pair3193, pair3194, pair3195, pair3196, pair3197, pair3198, pair3199, pair3200, pair3201, pair3202, pair3203, pair3204, pair3205, pair3206, pair3207, pair3208, pair3209, pair3210, pair3211, pair3212, pair3213, pair3214, pair3215, pair3216, pair3217, pair3218, pair3219, pair3220, pair3221, pair3222, pair3223, pair3224, pair3225, pair3226, pair3227, pair3228, pair3229, pair3230, pair3231, pair3232, pair3233, pair3234, pair3235, pair3236, pair3237, pair3238, pair3239, pair3240, pair3241, pair3242, pair3243, pair3244, pair3245, pair3246, pair3247, pair3248, pair3249, pair3250, pair3251, pair3252, pair3253, pair3254, pair3255, pair3256, pair3257, pair3258, pair3259, pair3260, pair3261, pair3262, pair3263, pair3264, pair3265, pair3266, pair3267, pair3268, pair3269, pair3270, pair3271, pair3272, pair3273, pair3274, pair3275, pair3276, pair3277, pair3278, pair3279, pair3280, pair3281, pair3282, pair3283, pair3284, pair3285, pair3286, pair3287, pair3288, pair3289, pair3290, pair3291, pair3292, pair3293, pair3294, pair3295, pair3296, pair3297, pair3298, pair3299, pair3300, pair3301, pair3302, pair3303, pair3304, pair3305, pair3306, pair3307, pair3308, pair3309, pair3310, pair3311, pair3312, pair3313, pair3314, pair3315, pair3316, pair3317, pair3318, pair3319, pair3320, pair3321, pair3322, pair3323, pair3324, pair3325, pair3326, pair3327, pair3328, pair3329, pair3330, pair3331, pair3332, pair3333, pair3334, pair3335, pair3336, pair3337, pair3338, pair3339, pair3340, pair3341, pair3342, pair3343, pair3344, pair3345, pair3346, pair3347, pair3348, pair3349, pair3350, pair3351, pair3352, pair3353, pair3354, pair3355, pair3356, pair3357, pair3358, pair3359, pair3360, pair3361, pair3362, pair3363, pair3364, pair3365, pair3366, pair3367, pair3368, pair3369, pair3370, pair3371, pair3372, pair3373, pair3374, pair3375, pair3376, pair3377, pair3378, pair3379, pair3380, pair3381, pair3382, pair3383, pair3384, pair3385, pair3386, pair3387, pair3388, pair3389, pair3390, pair3391, pair3392, pair3393, pair3394, pair3395, pair3396, pair3397, pair3398, pair3399, pair3400, pair3401, pair3402, pair3403, pair3404, pair3405, pair3406, pair3407, pair3408, pair3409, pair3410, pair3411, pair3412, pair3413, pair3414, pair3415, pair3416, pair3417, pair3418, pair3419, pair3420, pair3421, pair3422, pair3423, pair3424, pair3425, pair3426, pair3427, pair3428, pair3429, pair3430, pair3431, pair3432, pair3433, pair3434, pair3435, pair3436, pair3437, pair3438, pair3439, pair3440, pair3441, pair3442, pair3443, pair3444, pair3445, pair3446, pair3447, pair3448, pair3449, pair3450, pair3451, pair3452, pair3453, pair3454, pair3455, pair3456, pair3457, pair3458, pair3459, pair3460, pair3461, pair3462, pair3463, pair3464, pair3465, pair3466, pair3467, pair3468, pair3469, pair3470, pair3471, pair3472, pair3473, pair3474, pair3475, pair3476, pair3477, pair3478, pair3479, pair3480, pair3481, pair3482, pair3483, pair3484, pair3485, pair3486, pair3487, pair3488, pair3489, pair3490, pair3491, pair3492, pair3493, pair3494, pair3495, pair3496, pair3497, pair3498, pair3499, pair3500, pair3501, pair3502, pair3503, pair3504, pair3505, pair3506, pair3507, pair3508, pair3509, pair3510, pair3511, pair3512, pair3513, pair3514, pair3515, pair3516, pair3517, pair3518, pair3519, pair3520, pair3521, pair3522, pair3523, pair3524, pair3525, pair3526, pair3527, pair3528, pair3529, pair3530, pair3531, pair3532, pair3533, pair3534, pair3535, pair3536, pair3537, pair3538, pair3539, pair3540, pair3541, pair3542, pair3543, pair3544, pair3545, pair3546, pair3547, pair3548, pair3549, pair3550, pair3551, pair3552, pair3553, pair3554, pair3555, pair3556, pair3557, pair3558, pair3559, pair3560, pair3561, pair3562, pair3563, pair3564, pair3565, pair3566, pair3567, pair3568, pair3569, pair3570, pair3571, pair3572, pair3573, pair3574, pair3575, pair3576, pair3577, pair3578, pair3579, pair3580, pair3581, pair3582, pair3583, pair3584, pair3585, pair3586, pair3587, pair3588, pair3589, pair3590, pair3591, pair3592, pair3593, pair3594, pair3595, pair3596, pair3597, pair3598, pair3599, pair3600, pair3601, pair3602, pair3603, pair3604, pair3605, pair3606, pair3607, pair3608, pair3609, pair3610, pair3611, pair3612, pair3613, pair3614, pair3615, pair3616, pair3617, pair3618, pair3619, pair3620, pair3621, pair3622, pair3623, pair3624, pair3625, pair3626, pair3627, pair3628, pair3629, pair3630, pair3631, pair3632, pair3633, pair3634, pair3635, pair3636, pair3637, pair3638, pair3639, pair3640, pair3641, pair3642, pair3643, pair3644, pair3645, pair3646, pair3647, pair3648, pair3649, pair3650, pair3651, pair3652, pair3653, pair3654, pair3655, pair3656, pair3657, pair3658, pair3659, pair3660, pair3661, pair3662, pair3663, pair3664, pair3665, pair3666, pair3667, pair3668, pair3669, pair3670, pair3671, pair3672, pair3673, pair3674, pair3675, pair3676, pair3677, pair3678, pair3679, pair3680, pair3681, pair3682, pair3683, pair3684, pair3685, pair3686, pair3687, pair3688, pair3689, pair3690, pair3691, pair3692, pair3693, pair3694, pair3695, pair3696, pair3697, pair3698, pair3699, pair3700, pair3701, pair3702, pair3703, pair3704, pair3705, pair3706, pair3707, pair3708, pair3709, pair3710, pair3711, pair3712, pair3713, pair3714, pair3715, pair3716, pair3717, pair3718, pair3719, pair3720, pair3721, pair3722, pair3723, pair3724, pair3725, pair3726, pair3727, pair3728, pair3729, pair3730, pair3731, pair3732, pair3733, pair3734, pair3735, pair3736, pair3737, pair3738, pair3739, pair3740, pair3741, pair3742, pair3743, pair3744, pair3745, pair3746, pair3747, pair3748, pair3749, pair3750, pair3751, pair3752, pair3753, pair3754, pair3755, pair3756, pair3757, pair3758, pair3759, pair3760, pair3761, pair3762, pair3763, pair3764, pair3765, pair3766, pair3767, pair3768, pair3769, pair3770, pair3771, pair3772, pair3773, pair3774, pair3775, pair3776, pair3777, pair3778, pair3779, pair3780, pair3781, pair3782, pair3783, pair3784, pair3785, pair3786, pair3787, pair3788, pair3789, pair3790, pair3791, pair3792, pair3793, pair3794, pair3795, pair3796, pair3797, pair3798, pair3799, pair3800, pair3801, pair3802, pair3803, pair3804, pair3805, pair3806, pair3807, pair3808, pair3809, pair3810, pair3811, pair3812, pair3813, pair3814, pair3815, pair3816, pair3817, pair3818, pair3819, pair3820, pair3821, pair3822, pair3823, pair3824, pair3825, pair3826, pair3827, pair3828, pair3829, pair3830, pair3831, pair3832, pair3833, pair3834, pair3835, pair3836, pair3837, pair3838, pair3839, pair3840, pair3841, pair3842, pair3843, pair3844, pair3845, pair3846, pair3847, pair3848, pair3849, pair3850, pair3851, pair3852, pair3853, pair3854, pair3855, pair3856, pair3857, pair3858, pair3859, pair3860, pair3861, pair3862, pair3863, pair3864, pair3865, pair3866, pair3867, pair3868, pair3869, pair3870, pair3871, pair3872, pair3873, pair3874, pair3875, pair3876, pair3877, pair3878, pair3879, pair3880, pair3881, pair3882, pair3883, pair3884, pair3885, pair3886, pair3887, pair3888, pair3889, pair3890, pair3891, pair3892, pair3893, pair3894, pair3895, pair3896, pair3897, pair3898, pair3899, pair3900, pair3901, pair3902, pair3903, pair3904, pair3905, pair3906, pair3907, pair3908, pair3909, pair3910, pair3911, pair3912, pair3913, pair3914, pair3915, pair3916, pair3917, pair3918, pair3919, pair3920, pair3921, pair3922, pair3923, pair3924, pair3925, pair3926, pair3927, pair3928, pair3929, pair3930, pair3931, pair3932, pair3933, pair3934, pair3935, pair3936, pair3937, pair3938, pair3939, pair3940, pair3941, pair3942, pair3943, pair3944, pair3945, pair3946, pair3947, pair3948, pair3949, pair3950, pair3951, pair3952, pair3953, pair3954, pair3955, pair3956, pair3957, pair3958, pair3959, pair3960, pair3961, pair3962, pair3963, pair3964, pair3965, pair3966, pair3967, pair3968, pair3969, pair3970, pair3971, pair3972, pair3973, pair3974, pair3975, pair3976, pair3977, pair3978, pair3979, pair3980, pair3981, pair3982, pair3983, pair3984, pair3985, pair3986, pair3987, pair3988, pair3989, pair3990, pair3991, pair3992, pair3993, pair3994, pair3995, pair3996, pair3997, pair3998, pair3999, pair4000, pair4001, pair4002, pair4003, pair4004, pair4005, pair4006, pair4007, pair4008, pair4009, pair4010, pair4011, pair4012, pair4013, pair4014, pair4015, pair4016, pair4017, pair4018, pair4019, pair4020, pair4021, pair4022, pair4023, pair4024, pair4025, pair4026, pair4027, pair4028, pair4029, pair4030, pair4031, pair4032, pair4033, pair4034, pair4035, pair4036, pair4037, pair4038, pair4039, pair4040, pair4041, pair4042, pair4043, pair4044, pair4045, pair4046, pair4047, pair4048, pair4049, pair4050, pair4051, pair4052, pair4053, pair4054, pair4055, pair4056, pair4057, pair4058, pair4059, pair4060, pair4061, pair4062, pair4063, pair4064, pair4065, pair4066, pair4067, pair4068, pair4069, pair4070, pair4071, pair4072, pair4073, pair4074, pair4075, pair4076, pair4077, pair4078, pair4079, pair4080, pair4081, pair4082, pair4083, pair4084, pair4085, pair4086, pair4087, pair4088, pair4089, pair4090, pair4091, pair4092, pair4093, pair4094, pair4095, pair4096, pair4097, pair4098, pair4099, pair4100, pair4101, pair4102, pair4103, pair4104, pair4105, pair4106, pair4107, pair4108, pair4109, pair4110, pair4111, pair4112, pair4113, pair4114, pair4115, pair4116]);
    let list6863 = vm.gc.listn(&[sym47, sym43, sym25, sym39, sym41, sym49]);
    let list6864 = vm.gc.listn(&[sym29, sym37, sym34]);
    let list6865 = vm.gc.listn(&[sym49, sym34]);
    let list6866 = vm.gc.listn(&[sym39, sym29, sym49, sym34]);
    let list6867 = vm.gc.listn(&[sym43, sym47, sym25]);
    let list6868 = vm.gc.listn(&[sym43, sym47, sym25]);
    let list6869 = vm.gc.listn(&[sym23, sym46]);
    let list6870 = vm.gc.listn(&[Object::Char('\''), Object::Char(':'), Object::Char('·'), Object::Char('״'), Object::Char('’'), Object::Char('‧')]);
    let list6871 = vm.gc.listn(&[sym52, sym53, sym54, sym55, sym56, sym57, sym58, sym59, sym60, sym61, sym62, sym63, sym64, sym65, sym66, sym67, sym68, sym69, sym70, sym71, sym72, sym73, sym74, sym75, sym76, sym77, sym78, sym79, sym80, sym81, sym82, sym83, sym84, sym85, sym86, sym87, sym88, sym89, sym90, sym91, sym92, sym93, sym94, sym95, sym96, sym97, sym98, sym99, sym100, sym101, sym102, sym103, sym104, sym105, sym106, sym107, sym108, sym109, sym110, sym111, sym112, sym113, sym114, sym115, sym116, sym117, sym118, sym119, sym120, sym121, sym122, sym123, sym124, sym125, sym126, sym127, sym128, sym129, sym130, sym131, sym132, sym133, sym134, sym135, sym136, sym137, sym138, sym139, sym140, sym141, sym142, sym143, sym144, sym145, sym146, sym147, sym148, sym149, sym150, sym151, sym152, sym153, sym154, sym155, sym156, sym157, sym158, sym159, sym160, sym161, sym162, sym163, sym164, sym165, sym166, sym167, sym168, sym169, sym170, sym171, sym172, sym173, sym174, sym175, sym176, sym177, sym178, sym179, sym180, sym181, sym182, sym183, sym184, sym185, sym186, sym187, sym188, sym189, sym190, sym191, sym192, sym193, sym194, sym195, sym196, sym197, sym198, sym199, sym200, sym201, sym202, sym203, sym204, sym205, sym206, sym207, sym208, sym209, sym210, sym211, sym212, sym213, sym214, sym215, sym216, sym217, sym218, sym219, sym220, sym221, sym222, sym223, sym224, sym225, sym226, sym227, sym228, sym229, sym230, sym231, sym232, sym233, sym234, sym235, sym236, sym237, sym238, sym239, sym240, sym241, sym242, sym243, sym244, sym245, sym246, sym247, sym248, sym249, sym250, sym251, sym252, sym253, sym254, sym255, sym256, sym257, sym258, sym259, sym154, sym260, sym261, sym262, sym263, sym264, sym265, sym266, sym267, sym268, sym269, sym270, sym271, sym272, sym273, sym274, sym275, sym276, sym277, sym278, sym279, sym280, sym281, sym282, sym283, sym284, sym285, sym285, sym190, sym286, sym287, sym288, sym289, sym290, sym174, sym291, sym292, sym293, sym294, sym295, sym296, sym297, sym298, sym299, sym300, sym301, sym302, sym303, sym304, sym305, sym306, sym307, sym308, sym309, sym310, sym311, sym312, sym313, sym314, sym315, sym316, sym317, sym318, sym319, sym320, sym321, sym322, sym323, sym324, sym325, sym326, sym327, sym328, sym329, sym330, sym331, sym332, sym333, sym276, sym334, sym335, sym336, sym337, sym338, sym339, sym340, sym341, sym342, sym343, sym344, sym345, sym346, sym347, sym348, sym349, sym350, sym351, sym352, sym353, sym354, sym355, sym356, sym357, sym358, sym359, sym360, sym361, sym362, sym363, sym364, sym365, sym366, sym367, sym368, sym369, sym370, sym371, sym372, sym373, sym374, sym375, sym376, sym377, sym378, sym379, sym380, sym381, sym382, sym383, sym384, sym385, sym386, sym387, sym388, sym389, sym390, sym391, sym392, sym393, sym394, sym395, sym396, sym397, sym398, sym399, sym400, sym401, sym402, sym403, sym404, sym405, sym334, sym406, sym407, sym408, sym409, sym410, sym411, sym412, sym413, sym414, sym415, sym416, sym417, sym418, sym419, sym420, sym421, sym422, sym423, sym424, sym425, sym426, sym427, sym428, sym429, sym430, sym431, sym432, sym433, sym434, sym435, sym436, sym437, sym438, sym439, sym440, sym441, sym442, sym443, sym444, sym445, sym446, sym447, sym448, sym449, sym450, sym451, sym452, sym453, sym454, sym455, sym456, sym457, sym458, sym459, sym460, sym461, sym462, sym463, sym464, sym465, sym466, sym467, sym468, sym469, sym470, sym471, sym472, sym473, sym474, sym475, sym476, sym477, sym478, sym479, sym480, sym481, sym482, sym483, sym484, sym485, sym486, sym487, sym488, sym489, sym490, sym491, sym492, sym282, sym493, sym494, sym495, sym496, sym497, sym498, sym499, sym500, sym501, sym502, sym503, sym504, sym505, sym506, sym507, sym508, sym509, sym510, sym511, sym512, sym513, sym514, sym515, sym516, sym517, sym518, sym519, sym520, sym521, sym522, sym523, sym524, sym525, sym526, sym527, sym528, sym529, sym530, sym531, sym532, sym533, sym534, sym535, sym536, sym537, sym538, sym539, sym540, sym541, sym542, sym543, sym544, sym545, sym546, sym547, sym548, sym549, sym550, sym551, sym552, sym553, sym554, sym555, sym556, sym557, sym558, sym559, sym560, sym561, sym562, sym563, sym564, sym565, sym566, sym567, sym568, sym569, sym570, sym571, sym572, sym573, sym574, sym575, sym576, sym577, sym578, sym579, sym580, sym581, sym582, sym583, sym584, sym585, sym586, sym587, sym588, sym589, sym590, sym591, sym592, sym593, sym594, sym595, sym596, sym597, sym598, sym599, sym600, sym601, sym602, sym603, sym604, sym605, sym606, sym607, sym608, sym609, sym610, sym611, sym612, sym613, sym614, sym615, sym616, sym617, sym618, sym619, sym620, sym621, sym622, sym623, sym624, sym625, sym626, sym627, sym628, sym629, sym630, sym631, sym632, sym633, sym634, sym635, sym636, sym637, sym638, sym639, sym640, sym641, sym642, sym643, sym644, sym645, sym646, sym647, sym648, sym649, sym650, sym651, sym652, sym653, sym654, sym655, sym656, sym657, sym658, sym659, sym660, sym661, sym662, sym663, sym664, sym665, sym666, sym667]);
    let list6872 = vm.gc.listn(&[sym673, sym687]);
    let list6873 = vm.gc.listn(&[sym673, sym688]);
    let list6874 = vm.gc.listn(&[sym673, sym691]);
    let list6875 = vm.gc.listn(&[sym673, sym692]);
    let list6876 = vm.gc.listn(&[sym674, sym707]);
    let list6877 = vm.gc.listn(&[sym674, sym720]);
    let list6878 = vm.gc.listn(&[sym674, sym723]);
    let list6879 = vm.gc.listn(&[sym674, sym732]);
    let list6880 = vm.gc.listn(&[sym674, sym733]);
    let list6881 = vm.gc.listn(&[sym674, sym744]);
    let list6882 = vm.gc.listn(&[sym674, sym747]);
    let list6883 = vm.gc.listn(&[sym674, sym758]);
    let list6884 = vm.gc.listn(&[sym674, sym762]);
    let list6885 = vm.gc.listn(&[sym779]);
    let list6886 = vm.gc.listn(&[pair4117, pair4118, pair4119, pair4120, pair4121, pair4122, pair4123, pair4124, pair4125, pair4126]);
    let list6887 = vm.gc.listn(&[sym853, sym15, sym854]);
    let list6888 = vm.gc.listn(&[sym269]);
    let list6889 = vm.gc.listn(&[sym896]);
    let vec0 = vm.gc.new_vector(&vec![list6872, list6873]);
    let vec1 = vm.gc.new_vector(&vec![list6874, list6875]);
    let vec2 = vm.gc.new_vector(&vec![]);
    let vec3 = vm.gc.new_vector(&vec![list6876]);
    let vec4 = vm.gc.new_vector(&vec![]);
    let vec5 = vm.gc.new_vector(&vec![]);
    let vec6 = vm.gc.new_vector(&vec![]);
    let vec7 = vm.gc.new_vector(&vec![]);
    let vec8 = vm.gc.new_vector(&vec![]);
    let vec9 = vm.gc.new_vector(&vec![list6877]);
    let vec10 = vm.gc.new_vector(&vec![list6878]);
    let vec11 = vm.gc.new_vector(&vec![]);
    let vec12 = vm.gc.new_vector(&vec![]);
    let vec13 = vm.gc.new_vector(&vec![]);
    let vec14 = vm.gc.new_vector(&vec![list6879, list6880]);
    let vec15 = vm.gc.new_vector(&vec![]);
    let vec16 = vm.gc.new_vector(&vec![]);
    let vec17 = vm.gc.new_vector(&vec![]);
    let vec18 = vm.gc.new_vector(&vec![]);
    let vec19 = vm.gc.new_vector(&vec![list6881]);
    let vec20 = vm.gc.new_vector(&vec![list6882]);
    let vec21 = vm.gc.new_vector(&vec![]);
    let vec22 = vm.gc.new_vector(&vec![]);
    let vec23 = vm.gc.new_vector(&vec![]);
    let vec24 = vm.gc.new_vector(&vec![]);
    let vec25 = vm.gc.new_vector(&vec![list6883]);
    let vec26 = vm.gc.new_vector(&vec![]);
    let vec27 = vm.gc.new_vector(&vec![list6884]);
    let vec28 = vm.gc.new_vector(&vec![]);
    let vec29 = vm.gc.new_vector(&vec![]);
    let str0 = vm.gc.new_string("expected ~a, but got ~a");
    let str1 = vm.gc.new_string("expected ~a, but got ~a, as argument ~a");
    let str2 = vm.gc.new_string("proper list");
    let str3 = vm.gc.new_string("expected same length proper lists");
    let str4 = vm.gc.new_string("proper list");
    let str5 = vm.gc.new_string("expected same length proper lists");
    let str6 = vm.gc.new_string("expected same length proper lists");
    let str7 = vm.gc.new_string("traversal reached to non-pair element ~s");
    let str8 = vm.gc.new_string("expected chain of pairs, but got ~r, as argument 2");
    let str9 = vm.gc.new_string("traversal reached to non-pair element ~s");
    let str10 = vm.gc.new_string("expected same length chains of pairs");
    let str11 = vm.gc.new_string("expected same length proper lists");
    let str12 = vm.gc.new_string("traversal reached to non-pair element ~s");
    let str13 = vm.gc.new_string("expected same length chains of pairs");
    let str14 = vm.gc.new_string("traversal reached to non-pair element ~s");
    let str15 = vm.gc.new_string("expected chain of pairs, but got ~r, as argument 2");
    let str16 = vm.gc.new_string("expected proper list, but got ~r, as argument 3");
    let str17 = vm.gc.new_string("expected same length proper lists");
    let str18 = vm.gc.new_string("expected proper list, but got ~r, as argument 3");
    let str19 = vm.gc.new_string("expected same length proper lists");
    let str20 = vm.gc.new_string("\n");
    let str21 = vm.gc.new_string("\n");
    let str22 = vm.gc.new_string("~a");
    let str23 = vm.gc.new_string("~a");
    let str24 = vm.gc.new_string("~a");
    let str25 = vm.gc.new_string("~a");
    let str26 = vm.gc.new_string("time%        msec      calls   name                              location\n");
    let str27 = vm.gc.new_string("~a");
    let str28 = vm.gc.new_string("...)");
    let str29 = vm.gc.new_string(" ~a   ~a ~a   ~a    ~a\n");
    let str30 = vm.gc.new_string(" ");
    let str31 = vm.gc.new_string(" ");
    let str32 = vm.gc.new_string(" ");
    let str33 = vm.gc.new_string(" ");
    let str34 = vm.gc.new_string("~a:~d");
    let str35 = vm.gc.new_string("");
    let str36 = vm.gc.new_string("  **   ~d         **   total\n");
    let str37 = vm.gc.new_string(" ");
    let str38 = vm.gc.new_string("      create-non-continuable-violation is not set\n");
    let str39 = vm.gc.new_string("     error in raise: returned from non-continuable exception\n");
    let str40 = vm.gc.new_string("    error in raise: unhandled exception has occurred\n\n~a\n");
    let str41 = vm.gc.new_string("   ~d. ~a");
    let str42 = vm.gc.new_string(": ");
    let str43 = vm.gc.new_string(":\n");
    let str44 = vm.gc.new_string("       ");
    let str45 = vm.gc.new_string(": ");
    let str46 = vm.gc.new_string("unhandled exception has occurred");
    let str47 = vm.gc.new_string("");
    let str48 = vm.gc.new_string("x~d$~d");
    let str49 = vm.gc.new_string("/.mosh");
    let str50 = vm.gc.new_string("HOME");
    let str51 = vm.gc.new_string("LOCALAPPDATA");
    let str52 = vm.gc.new_string("APPDATA");
    let str53 = vm.gc.new_string("mona");
    let str54 = vm.gc.new_string("/USER/TEMP");
    let str55 = vm.gc.new_string("/USER/TEMP");
    let str56 = vm.gc.new_string("mona");
    let str57 = vm.gc.new_string("/MEM");
    let str58 = vm.gc.new_string("/tmp");
    let str59 = vm.gc.new_string("/");
    let str60 = vm.gc.new_string("not supported");
    let str61 = vm.gc.new_string("record-type-descriptor");
    let str62 = vm.gc.new_string("record-type-descriptor");
    let str63 = vm.gc.new_string("record-type-descriptor");
    let str64 = vm.gc.new_string("record-type-descriptor");
    let str65 = vm.gc.new_string("record-type-descriptor");
    let str66 = vm.gc.new_string("record-type-descriptor");
    let str67 = vm.gc.new_string("record-type-descriptor");
    let str68 = vm.gc.new_string("record-type-descriptor");
    let str69 = vm.gc.new_string("symbol");
    let str70 = vm.gc.new_string("vector");
    let str71 = vm.gc.new_string("record-type descriptor or #f");
    let str72 = vm.gc.new_string("attempt to extend a sealed record-type");
    let str73 = vm.gc.new_string("malformed field specifiers");
    let str74 = vm.gc.new_string("-rtd");
    let str75 = vm.gc.new_string("mismatched subsequent call for nongenerative record-type");
    let str76 = vm.gc.new_string("-rtd");
    let str77 = vm.gc.new_string("-rtd");
    let str78 = vm.gc.new_string("record-type-descriptor");
    let str79 = vm.gc.new_string("record-constructor-descriptor or #f");
    let str80 = vm.gc.new_string("procedure or #f");
    let str81 = vm.gc.new_string("mismatch between rtd and parent constructor descriptor");
    let str82 = vm.gc.new_string("mismatch between rtd and parent constructor descriptor");
    let str83 = vm.gc.new_string("expected #f for protocol since no parent constructor descriptor is provided");
    let str84 = vm.gc.new_string("expected procedure for protocol since parent constructor descriptor have custom one");
    let str85 = vm.gc.new_string("-rcd");
    let str86 = vm.gc.new_string("non-opaque record");
    let str87 = vm.gc.new_string("record constructor");
    let str88 = vm.gc.new_string("wrong number of arguments");
    let str89 = vm.gc.new_string("record constructor");
    let str90 = vm.gc.new_string("wrong number of arguments");
    let str91 = vm.gc.new_string("record accessor");
    let str92 = vm.gc.new_string("record of type ~a");
    let str93 = vm.gc.new_string("record mutator");
    let str94 = vm.gc.new_string("record of type ~a");
    let str95 = vm.gc.new_string("record-constructor-descriptor");
    let str96 = vm.gc.new_string("record-type-descriptor");
    let str97 = vm.gc.new_string("record-type-descriptor");
    let str98 = vm.gc.new_string("field index out of range");
    let str99 = vm.gc.new_string("record-type-descriptor");
    let str100 = vm.gc.new_string("field index out of range");
    let str101 = vm.gc.new_string("specified field is immutable");
    let str102 = vm.gc.new_string("record-type");
    let str103 = vm.gc.new_string("record-type");
    let str104 = vm.gc.new_string("argument 1 must be a list of symbols");
    let str105 = vm.gc.new_string("the symbol list must all belong to the universe.");
    let str106 = vm.gc.new_string("enum-set1 and enum-set2 must be enumeration sets that have the same enumeration type.");
    let str107 = vm.gc.new_string("enum-set1 and enum-set2 must be enumeration sets that have the same enumeration type.");
    let str108 = vm.gc.new_string("enum-set1 and enum-set2 must be enumeration sets that have the same enumeration type.");
    let str109 = vm.gc.new_string("expected condition, but got ~a");
    let str110 = vm.gc.new_string("expected condition, but got ~a");
    let str111 = vm.gc.new_string("expected record-type-descriptor of a subtype of &condition, but got ~a");
    let str112 = vm.gc.new_string("expected record-type-descriptor of a subtype of &condition, but got ~a");
    let str113 = vm.gc.new_string("condition accessor");
    let str114 = vm.gc.new_string("expected condition of a subtype of ~s, but got ~a");
    let str115 = vm.gc.new_string("condition accessor");
    let str116 = vm.gc.new_string("expected condition of a subtype of ~s, but got ~a");
    let str117 = vm.gc.new_string("condition accessor");
    let str118 = vm.gc.new_string("expected condition of a subtype of ~s, but got ~a");
    let str119 = vm.gc.new_string("  #<condition~!");
    let str120 = vm.gc.new_string("~%    ~a");
    let str121 = vm.gc.new_string(" ~a");
    let str122 = vm.gc.new_string(": ~a");
    let str123 = vm.gc.new_string(": ~a");
    let str124 = vm.gc.new_string("~%     ~a: ~a");
    let str125 = vm.gc.new_string("~%     ~a: ~a");
    let str126 = vm.gc.new_string("~%   >");
    let str127 = vm.gc.new_string("~a~!");
    let str128 = vm.gc.new_string("~a~!");
    let str129 = vm.gc.new_string("string");
    let str130 = vm.gc.new_string("string, symbol, or #f");
    let str131 = vm.gc.new_string("string");
    let str132 = vm.gc.new_string("string, symbol, or #f");
    let str133 = vm.gc.new_string("syntax error: ~a");
    let str134 = vm.gc.new_string("malformed letrec*");
    let str135 = vm.gc.new_string("malformed letrec*");
    let str136 = vm.gc.new_string("malformed letrec*");
    let str137 = vm.gc.new_string("malformed when");
    let str138 = vm.gc.new_string("malformed unless");
    let str139 = vm.gc.new_string(",@ in invalid context");
    let str140 = vm.gc.new_string("malformed lambda");
    let str141 = vm.gc.new_string("syntax-error: malformed and:");
    let str142 = vm.gc.new_string("syntax-error: malformed or:");
    let str143 = vm.gc.new_string("syntax-error: 'else' clause followed by more clauses:");
    let str144 = vm.gc.new_string("syntax-error: bad clause in cond:");
    let str145 = vm.gc.new_string("syntax-error: bad clause in cond:");
    let str146 = vm.gc.new_string("syntax-error: bad clause in cond:");
    let str147 = vm.gc.new_string("syntax-error: at least one clause is required for cond:");
    let str148 = vm.gc.new_string("syntax-error: malformed cond:");
    let str149 = vm.gc.new_string("syntax-error: malformed cond:");
    let str150 = vm.gc.new_string("malformed receive");
    let str151 = vm.gc.new_string("reference to uninitialized variable on letrec");
    let str152 = vm.gc.new_string("reference to uninitialized variable on letrec*");
    let str153 = vm.gc.new_string(" got too few argument");
    let str154 = vm.gc.new_string(" got too few argment");
    let str155 = vm.gc.new_string("~a[~a;~a]");
    let str156 = vm.gc.new_string("($const ~s)");
    let str157 = vm.gc.new_string("($list)");
    let str158 = vm.gc.new_string("($const #<undef>)");
    let str159 = vm.gc.new_string("($lambda[~a;~a] ~a");
    let str160 = vm.gc.new_string(")");
    let str161 = vm.gc.new_string("($seq");
    let str162 = vm.gc.new_string(")");
    let str163 = vm.gc.new_string("($lref ~a)");
    let str164 = vm.gc.new_string("($gref ~a)");
    let str165 = vm.gc.new_string("($lset ~a");
    let str166 = vm.gc.new_string(")");
    let str167 = vm.gc.new_string("($gset ~a)");
    let str168 = vm.gc.new_string("($let~a (");
    let str169 = vm.gc.new_string("");
    let str170 = vm.gc.new_string("rec");
    let str171 = vm.gc.new_string("(~a ");
    let str172 = vm.gc.new_string(")");
    let str173 = vm.gc.new_string(")");
    let str174 = vm.gc.new_string(")");
    let str175 = vm.gc.new_string("($if ");
    let str176 = vm.gc.new_string(")");
    let str177 = vm.gc.new_string("($receive ~a");
    let str178 = vm.gc.new_string(")");
    let str179 = vm.gc.new_string("label#~a");
    let str180 = vm.gc.new_string("($label #~a");
    let str181 = vm.gc.new_string(")");
    let str182 = vm.gc.new_string("($asm ~a");
    let str183 = vm.gc.new_string(")");
    let str184 = vm.gc.new_string("($define () ~a");
    let str185 = vm.gc.new_string(")");
    let str186 = vm.gc.new_string("($CALL-CC ");
    let str187 = vm.gc.new_string(")");
    let str188 = vm.gc.new_string("($label ");
    let str189 = vm.gc.new_string(")");
    let str190 = vm.gc.new_string("($it)");
    let str191 = vm.gc.new_string("($receive ~a");
    let str192 = vm.gc.new_string(")");
    let str193 = vm.gc.new_string("($call[~a] ");
    let str194 = vm.gc.new_string("($call ");
    let str195 = vm.gc.new_string(")");
    let str196 = vm.gc.new_string("pp-iform: unknown tag:");
    let str197 = vm.gc.new_string("BUG: We have named let in pass2. named let should be expanded in pass1");
    let str198 = vm.gc.new_string("mosh");
    let str199 = vm.gc.new_string("circular reference appeared in letrec bindings:");
    let str200 = vm.gc.new_string("[internal error] iform-count-size-upto: unknown iform tag:~a");
    let str201 = vm.gc.new_string("wrong number of arguments: ~a requires ~a, but got ~a at ~a ~a:~a");
    let str202 = vm.gc.new_string("wrong number of arguments: ~a requires ~a, but got ~a");
    let str203 = vm.gc.new_string("wrong number of arguments: ~a requires ~a, but got ~a at ~a:~a");
    let str204 = vm.gc.new_string("wrong number of arguments: ~a requires ~a, but got ~a");
    let str205 = vm.gc.new_string("given list is too short:");
    let str206 = vm.gc.new_string("pass3/symbol-lookup bug? Unknown lvar:");
    let str207 = vm.gc.new_string("at least one argument required");
    let str208 = vm.gc.new_string("unknown insn on pass3/$asm");
    let str209 = vm.gc.new_string("%optimize?");
    let str210 = vm.gc.new_string("fixnum required, but got ~a");
    let str211 = vm.gc.new_string("fixnum required, but got ~a");
    let str212 = vm.gc.new_string("fixnum required, but got ~a");
    let str213 = vm.gc.new_string("fixnum required, but got ~a");
    let str214 = vm.gc.new_string("fixnum required, but got ~a");
    let str215 = vm.gc.new_string("fixnum required, but got ~a");
    let str216 = vm.gc.new_string("fixnum required, but got ~a");
    let str217 = vm.gc.new_string("fixnum required, but got ~a");
    let str218 = vm.gc.new_string("fixnum required, but got ~a");
    let str219 = vm.gc.new_string("2nd parameter must be less than or equal to 3rd parameter");
    let str220 = vm.gc.new_string("expected endianness, but got ~a, as argument 3");
    let str221 = vm.gc.new_string("expected endianness, but got ~a, as argument 3");
    let str222 = vm.gc.new_string("value out of range, ~s as argument 3");
    let str223 = vm.gc.new_string("value out of range, ~s as argument 3");
    let str224 = vm.gc.new_string("expected appropriate element size as argument 3, but got ~a");
    let str225 = vm.gc.new_string("expected appropriate element size as argument 3, but got ~a");
    let str226 = vm.gc.new_string("exact non-negative integer required");
    let str227 = vm.gc.new_string("expected real, but got ~s as argument 1");
    let str228 = vm.gc.new_string("expected real, but got ~s as argument 2");
    let str229 = vm.gc.new_string("integer valued numbers required");
    let str230 = vm.gc.new_string("integer valued numbers required");
    let str231 = vm.gc.new_string("can't update! immutable hashtable");
    
    let ops = vec![
        Op::Undef,
        Op::Closure {size: 0, arg_len: 0, is_optional_arg: false, num_free_vars: 0},
        Op::Constant(list0),
        Op::Return(0),
        Op::DefineGlobal(vm.gc.intern("available-features")),
        Op::Nop,
        Op::Closure {size: 0, arg_len: 0, is_optional_arg: false, num_free_vars: 0},
        Op::Constant(list32),
        Op::Return(0),
        Op::DefineGlobal(vm.gc.intern("available-libraries")),
        Op::Nop,
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::ReferLocal(0),
        Op::Test(3),
        Op::Constant(Object::False),
        Op::Return(1),
        Op::Constant(Object::True),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("not")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::ReferLocal(0),
        Op::Car,
        Op::Car,
        Op::Car,
        Op::Car,
        Op::Car,
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("caaaaar")),
        Op::Nop,
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::ReferLocal(0),
        Op::Car,
        Op::Car,
        Op::Car,
        Op::Car,
        Op::Cdr,
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("cdaaaar")),
        Op::Nop,
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::ReferLocal(0),
        Op::Car,
        Op::Car,
        Op::Car,
        Op::Cdr,
        Op::Car,
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("cadaaar")),
        Op::Nop,
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::ReferLocal(0),
        Op::Car,
        Op::Car,
        Op::Car,
        Op::Cdr,
        Op::Cdr,
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("cddaaar")),
        Op::Nop,
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::ReferLocal(0),
        Op::Car,
        Op::Car,
        Op::Cdr,
        Op::Car,
        Op::Car,
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("caadaar")),
        Op::Nop,
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::ReferLocal(0),
        Op::Car,
        Op::Car,
        Op::Cdr,
        Op::Car,
        Op::Cdr,
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("cdadaar")),
        Op::Nop,
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::ReferLocal(0),
        Op::Car,
        Op::Car,
        Op::Cdr,
        Op::Cdr,
        Op::Car,
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("caddaar")),
        Op::Nop,
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::ReferLocal(0),
        Op::Car,
        Op::Car,
        Op::Cdr,
        Op::Cdr,
        Op::Cdr,
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("cdddaar")),
        Op::Nop,
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::ReferLocal(0),
        Op::Car,
        Op::Cdr,
        Op::Car,
        Op::Car,
        Op::Car,
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("caaadar")),
        Op::Nop,
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::ReferLocal(0),
        Op::Car,
        Op::Cdr,
        Op::Car,
        Op::Car,
        Op::Cdr,
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("cdaadar")),
        Op::Nop,
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::ReferLocal(0),
        Op::Car,
        Op::Cdr,
        Op::Car,
        Op::Cdr,
        Op::Car,
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("cadadar")),
        Op::Nop,
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::ReferLocal(0),
        Op::Car,
        Op::Cdr,
        Op::Car,
        Op::Cdr,
        Op::Cdr,
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("cddadar")),
        Op::Nop,
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::ReferLocal(0),
        Op::Car,
        Op::Cdr,
        Op::Cdr,
        Op::Car,
        Op::Car,
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("caaddar")),
        Op::Nop,
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::ReferLocal(0),
        Op::Car,
        Op::Cdr,
        Op::Cdr,
        Op::Car,
        Op::Cdr,
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("cdaddar")),
        Op::Nop,
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::ReferLocal(0),
        Op::Car,
        Op::Cdr,
        Op::Cdr,
        Op::Cdr,
        Op::Car,
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("cadddar")),
        Op::Nop,
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::ReferLocal(0),
        Op::Car,
        Op::Cdr,
        Op::Cdr,
        Op::Cdr,
        Op::Cdr,
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("cddddar")),
        Op::Nop,
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::ReferLocal(0),
        Op::Cdr,
        Op::Car,
        Op::Car,
        Op::Car,
        Op::Car,
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("caaaadr")),
        Op::Nop,
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::ReferLocal(0),
        Op::Cdr,
        Op::Car,
        Op::Car,
        Op::Car,
        Op::Cdr,
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("cdaaadr")),
        Op::Nop,
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::ReferLocal(0),
        Op::Cdr,
        Op::Car,
        Op::Car,
        Op::Cdr,
        Op::Car,
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("cadaadr")),
        Op::Nop,
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::ReferLocal(0),
        Op::Cdr,
        Op::Car,
        Op::Car,
        Op::Cdr,
        Op::Cdr,
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("cddaadr")),
        Op::Nop,
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::ReferLocal(0),
        Op::Cdr,
        Op::Car,
        Op::Cdr,
        Op::Car,
        Op::Car,
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("caadadr")),
        Op::Nop,
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::ReferLocal(0),
        Op::Cdr,
        Op::Car,
        Op::Cdr,
        Op::Car,
        Op::Cdr,
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("cdadadr")),
        Op::Nop,
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::ReferLocal(0),
        Op::Cdr,
        Op::Car,
        Op::Cdr,
        Op::Cdr,
        Op::Car,
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("caddadr")),
        Op::Nop,
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::ReferLocal(0),
        Op::Cdr,
        Op::Car,
        Op::Cdr,
        Op::Cdr,
        Op::Cdr,
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("cdddadr")),
        Op::Nop,
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::ReferLocal(0),
        Op::Cdr,
        Op::Cdr,
        Op::Car,
        Op::Car,
        Op::Car,
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("caaaddr")),
        Op::Nop,
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::ReferLocal(0),
        Op::Cdr,
        Op::Cdr,
        Op::Car,
        Op::Car,
        Op::Cdr,
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("cdaaddr")),
        Op::Nop,
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::ReferLocal(0),
        Op::Cdr,
        Op::Cdr,
        Op::Car,
        Op::Cdr,
        Op::Car,
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("cadaddr")),
        Op::Nop,
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::ReferLocal(0),
        Op::Cdr,
        Op::Cdr,
        Op::Car,
        Op::Cdr,
        Op::Cdr,
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("cddaddr")),
        Op::Nop,
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::ReferLocal(0),
        Op::Cdr,
        Op::Cdr,
        Op::Cdr,
        Op::Car,
        Op::Car,
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("caadddr")),
        Op::Nop,
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::ReferLocal(0),
        Op::Cdr,
        Op::Cdr,
        Op::Cdr,
        Op::Car,
        Op::Cdr,
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("cdadddr")),
        Op::Nop,
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::ReferLocal(0),
        Op::Cdr,
        Op::Cdr,
        Op::Cdr,
        Op::Cdr,
        Op::Car,
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("caddddr")),
        Op::Nop,
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::ReferLocal(0),
        Op::Cdr,
        Op::Cdr,
        Op::Cdr,
        Op::Cdr,
        Op::Cdr,
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("cdddddr")),
        Op::Nop,
        Op::ReferFreePush(152),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 1},
        Op::LetFrame(2),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(0),
        Op::Display(2),
        Op::Frame(2),
        Op::ReferLocalCall(0, 0),
        Op::Receive(0, 1),
        Op::Enter(1),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(0),
        Op::ReferFree(0),
        Op::TailCall(2, 5),
        Op::Leave(1),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("call-with-values")),
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::ConstantPush(Object::Number(0)),
        Op::ReferLocal(0),
        Op::NumberEqual,
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("zero?")),
        Op::Nop,
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::ReferLocalPushConstant(0, Object::Number(0)),
        Op::NumberGt,
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("positive?")),
        Op::Nop,
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::ReferLocalPushConstant(0, Object::Number(0)),
        Op::NumberLt,
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("negative?")),
        Op::Nop,
        Op::Closure {size: 0, arg_len: 0, is_optional_arg: false, num_free_vars: 0},
        Op::Constant(Object::False),
        Op::Undef,
        Op::Return(0),
        Op::DefineGlobal(vm.gc.intern("unspecified")),
        Op::Nop,
        Op::ReferFreePush(48),
        Op::Closure {size: 0, arg_len: 3, is_optional_arg: true, num_free_vars: 1},
        Op::ReferLocalBranchNotNull(2, 7),
        Op::ConstantPush(str0),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferFree(0),
        Op::TailCall(3, 3),
        Op::Return(3),
        Op::ConstantPush(str1),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocal(2),
        Op::CarPush,
        Op::ReferFree(0),
        Op::TailCall(4, 3),
        Op::Return(3),
        Op::DefineGlobal(vm.gc.intern("wrong-type-argument-message")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 0},
        Op::ReferLocalBranchNotNull(1, 3),
        Op::Constant(Object::Nil),
        Op::Return(2),
        Op::Frame(4),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::ReferLocalCall(0, 1),
        Op::PushFrame(5),
        Op::ReferLocalPush(0),
        Op::ReferLocal(1),
        Op::CdrPush,
        Op::ReferGlobalCall(vm.gc.intern("map-1"), 2),
        Op::Cons,
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("map-1")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(152),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 1},
        Op::ReferLocalBranchNotNull(1, 3),
        Op::Constant(Object::Nil),
        Op::Return(2),
        Op::Frame(5),
        Op::ReferLocalPush(0),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::ReferFreeCall(0, 2),
        Op::PushFrame(5),
        Op::ReferLocalPush(0),
        Op::ReferLocal(1),
        Op::CdrPush,
        Op::ReferGlobalCall(vm.gc.intern("map-n"), 2),
        Op::Cons,
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("map-n")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(88),
        Op::ReferFreePush(2),
        Op::ReferFreePush(197),
        Op::ReferFreePush(152),
        Op::Closure {size: 0, arg_len: 3, is_optional_arg: true, num_free_vars: 4},
        Op::ReferLocalBranchNotNull(2, 25),
        Op::Frame(3),
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(3, 1),
        Op::Test(6),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferGlobal(vm.gc.intern("map-1")),
        Op::TailCall(2, 3),
        Op::Return(3),
        Op::ConstantPush(sym9),
        Op::Frame(5),
        Op::ConstantPush(str2),
        Op::ReferLocalPushConstant(1, Object::Number(2)),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("wrong-type-argument-message"), 3),
        Op::PushFrame(5),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferFreeCall(2, 3),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("assertion-violation")),
        Op::TailCall(3, 3),
        Op::Return(3),
        Op::LetFrame(12),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Display(6),
        Op::Frame(5),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferFreeCall(0, 3),
        Op::PushEnter(1),
        Op::ReferLocal(0),
        Op::Test(6),
        Op::ReferFreePush(5),
        Op::ReferLocalPush(0),
        Op::ReferGlobal(vm.gc.intern("map-n")),
        Op::TailCall(2, 6),
        Op::LocalJmp(11),
        Op::ConstantPush(sym9),
        Op::ConstantPush(str3),
        Op::Frame(5),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreeCall(2, 3),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("assertion-violation")),
        Op::TailCall(3, 6),
        Op::Leave(1),
        Op::Return(3),
        Op::DefineGlobal(vm.gc.intern("map")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 0},
        Op::ReferLocalBranchNotNull(1, 4),
        Op::ReferGlobal(vm.gc.intern("unspecified")),
        Op::TailCall(0, 2),
        Op::Return(2),
        Op::Frame(4),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::ReferLocalCall(0, 1),
        Op::ReferLocalPush(0),
        Op::ReferLocal(1),
        Op::CdrPush,
        Op::ReferGlobal(vm.gc.intern("for-each-1")),
        Op::TailCall(2, 2),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("for-each-1")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(152),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 1},
        Op::ReferLocalBranchNotNull(1, 4),
        Op::ReferGlobal(vm.gc.intern("unspecified")),
        Op::TailCall(0, 2),
        Op::Return(2),
        Op::Frame(5),
        Op::ReferLocalPush(0),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::ReferFreeCall(0, 2),
        Op::ReferLocalPush(0),
        Op::ReferLocal(1),
        Op::CdrPush,
        Op::ReferGlobal(vm.gc.intern("for-each-n")),
        Op::TailCall(2, 2),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("for-each-n")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(88),
        Op::ReferFreePush(2),
        Op::ReferFreePush(197),
        Op::ReferFreePush(152),
        Op::Closure {size: 0, arg_len: 3, is_optional_arg: true, num_free_vars: 4},
        Op::ReferLocalBranchNotNull(2, 25),
        Op::Frame(3),
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(3, 1),
        Op::Test(6),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferGlobal(vm.gc.intern("for-each-1")),
        Op::TailCall(2, 3),
        Op::Return(3),
        Op::ConstantPush(sym10),
        Op::Frame(5),
        Op::ConstantPush(str4),
        Op::ReferLocalPushConstant(1, Object::Number(2)),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("wrong-type-argument-message"), 3),
        Op::PushFrame(5),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferFreeCall(2, 3),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("assertion-violation")),
        Op::TailCall(3, 3),
        Op::Return(3),
        Op::LetFrame(12),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Display(6),
        Op::Frame(5),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferFreeCall(0, 3),
        Op::PushEnter(1),
        Op::ReferLocal(0),
        Op::Test(6),
        Op::ReferFreePush(5),
        Op::ReferLocalPush(0),
        Op::ReferGlobal(vm.gc.intern("for-each-n")),
        Op::TailCall(2, 6),
        Op::LocalJmp(11),
        Op::ConstantPush(sym10),
        Op::ConstantPush(str5),
        Op::Frame(5),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreeCall(2, 3),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("assertion-violation")),
        Op::TailCall(3, 6),
        Op::Leave(1),
        Op::Return(3),
        Op::DefineGlobal(vm.gc.intern("for-each")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(197),
        Op::ReferFreePush(152),
        Op::ReferFreePush(2),
        Op::Closure {size: 0, arg_len: 3, is_optional_arg: true, num_free_vars: 3},
        Op::ReferLocalBranchNotNull(2, 6),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferGlobal(vm.gc.intern("for-all-1")),
        Op::TailCall(2, 3),
        Op::Return(3),
        Op::LetFrame(11),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferFreePush(0),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::Display(6),
        Op::Frame(5),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferFreeCall(0, 3),
        Op::PushEnter(1),
        Op::ReferLocal(0),
        Op::Test(6),
        Op::ReferFreePush(5),
        Op::ReferLocalPush(0),
        Op::ReferGlobal(vm.gc.intern("for-all-n-quick")),
        Op::TailCall(2, 6),
        Op::LocalJmp(10),
        Op::ConstantPush(sym11),
        Op::ConstantPush(str6),
        Op::Frame(4),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreeCall(2, 2),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("assertion-violation")),
        Op::TailCall(3, 6),
        Op::Leave(1),
        Op::Return(3),
        Op::DefineGlobal(vm.gc.intern("for-all")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(48),
        Op::ReferFreePush(89),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 2},
        Op::ReferLocalBranchNotNull(1, 3),
        Op::Constant(Object::True),
        Op::Return(2),
        Op::ReferLocal(1),
        Op::PairP,
        Op::Test(49),
        Op::LetFrame(14),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Display(4),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::ReferLocal(1),
        Op::CdrPush,
        Op::Enter(2),
        Op::ReferLocalBranchNotNull(1, 5),
        Op::ReferLocalPush(0),
        Op::ReferFree(3),
        Op::TailCall(1, 6),
        Op::LocalJmp(31),
        Op::ReferLocal(1),
        Op::PairP,
        Op::Test(12),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(3, 1),
        Op::Test(24),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::ReferLocal(1),
        Op::CdrPush,
        Op::Shiftj(2, 2, 0),
        Op::LocalJmp(-17),
        Op::LocalJmp(17),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(3, 1),
        Op::Test(13),
        Op::ConstantPush(sym11),
        Op::Frame(4),
        Op::ConstantPush(str7),
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(1, 2),
        Op::PushFrame(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreeCall(0, 2),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("assertion-violation")),
        Op::TailCall(3, 6),
        Op::Leave(2),
        Op::Return(2),
        Op::ConstantPush(sym11),
        Op::Frame(4),
        Op::ConstantPush(str8),
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(1, 2),
        Op::PushFrame(4),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(0, 2),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("assertion-violation")),
        Op::TailCall(3, 2),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("for-all-1")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::LetFrame(1),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(0),
        Op::Display(2),
        Op::Undef,
        Op::Push,
        Op::Box(0),
        Op::Enter(1),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 2},
        Op::ReferLocalBranchNotNull(0, 3),
        Op::Constant(Object::Nil),
        Op::Return(1),
        Op::ReferLocal(0),
        Op::Cdar,
        Op::BranchNotNull(7),
        Op::ReferLocal(0),
        Op::CdrPush,
        Op::ReferFree(0),
        Op::Indirect,
        Op::LocalTailCall(1, 1),
        Op::Return(1),
        Op::ReferLocal(0),
        Op::Cdar,
        Op::PushFrame(6),
        Op::ReferLocal(0),
        Op::CdrPush,
        Op::ReferFree(0),
        Op::Indirect,
        Op::LocalCall(1),
        Op::Cons,
        Op::Return(1),
        Op::AssignLocal(0),
        Op::ReferFreePush(0),
        Op::ReferLocal(0),
        Op::Indirect,
        Op::LocalTailCall(1, 4),
        Op::Leave(1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("collect-cdr")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(191),
        Op::ReferFreePush(48),
        Op::ReferFreePush(152),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 3},
        Op::LetFrame(19),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::ReferFreePush(2),
        Op::Display(6),
        Op::Frame(3),
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(0, 1),
        Op::PushEnter(1),
        Op::LetFrame(17),
        Op::ReferFreePush(4),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::Display(7),
        Op::Undef,
        Op::Push,
        Op::Box(0),
        Op::Enter(1),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 2},
        Op::LetFrame(1),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Display(4),
        Op::Undef,
        Op::Push,
        Op::Box(0),
        Op::Enter(1),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 4},
        Op::ReferLocalBranchNotNull(0, 3),
        Op::Constant(Object::Nil),
        Op::Return(1),
        Op::ReferLocal(0),
        Op::Car,
        Op::PairP,
        Op::Test(11),
        Op::ReferLocal(0),
        Op::Caar,
        Op::PushFrame(6),
        Op::ReferLocal(0),
        Op::CdrPush,
        Op::ReferFree(2),
        Op::Indirect,
        Op::LocalCall(1),
        Op::Cons,
        Op::Return(1),
        Op::ConstantPush(sym11),
        Op::Frame(5),
        Op::ConstantPush(str9),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::ReferFreeCall(1, 2),
        Op::Push,
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("assertion-violation")),
        Op::TailCall(3, 1),
        Op::Return(1),
        Op::AssignLocal(0),
        Op::ReferFreePush(2),
        Op::ReferLocal(0),
        Op::Indirect,
        Op::LocalTailCall(1, 4),
        Op::Leave(1),
        Op::Return(1),
        Op::AssignLocal(0),
        Op::LetFrame(17),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(0),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(0),
        Op::Display(6),
        Op::Frame(5),
        Op::ReferFreePush(3),
        Op::ReferLocal(0),
        Op::Indirect,
        Op::LocalCall(1),
        Op::PushFrame(3),
        Op::ReferFreePush(3),
        Op::ReferGlobalCall(vm.gc.intern("collect-cdr"), 1),
        Op::PushEnter(2),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(5, 1),
        Op::Push,
        Op::ReferFree(4),
        Op::BranchNotNumberEqual(2),
        Op::LocalJmp(6),
        Op::Frame(5),
        Op::ConstantPush(sym11),
        Op::ConstantPush(str10),
        Op::ReferFreePush(3),
        Op::ReferGlobalCall(vm.gc.intern("assertion-violation"), 3),
        Op::ReferLocalBranchNotNull(1, 6),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(0),
        Op::ReferFree(1),
        Op::TailCall(2, 12),
        Op::LocalJmp(17),
        Op::Frame(4),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(1, 2),
        Op::Test(12),
        Op::Frame(5),
        Op::ReferLocalPush(1),
        Op::ReferFree(0),
        Op::Indirect,
        Op::LocalCall(1),
        Op::PushFrame(3),
        Op::ReferLocalPush(1),
        Op::ReferGlobalCall(vm.gc.intern("collect-cdr"), 1),
        Op::Push,
        Op::Shiftj(2, 2, 0),
        Op::LocalJmp(-33),
        Op::Leave(2),
        Op::Leave(1),
        Op::Leave(1),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("for-all-n")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(152),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 1},
        Op::ReferLocalBranchNotNull(1, 2),
        Op::Return(2),
        Op::LetFrame(8),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(1),
        Op::Display(3),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::ReferLocal(1),
        Op::CdrPush,
        Op::Enter(2),
        Op::ReferLocalBranchNotNull(1, 6),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(0),
        Op::ReferFree(1),
        Op::TailCall(2, 6),
        Op::LocalJmp(12),
        Op::Frame(4),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(1, 2),
        Op::Test(7),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::ReferLocal(1),
        Op::CdrPush,
        Op::Shiftj(2, 2, 0),
        Op::LocalJmp(-16),
        Op::Leave(2),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("for-all-n-quick")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(197),
        Op::ReferFreePush(152),
        Op::ReferFreePush(2),
        Op::Closure {size: 0, arg_len: 3, is_optional_arg: true, num_free_vars: 3},
        Op::ReferLocalBranchNotNull(2, 6),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferGlobal(vm.gc.intern("exists-1")),
        Op::TailCall(2, 3),
        Op::Return(3),
        Op::LetFrame(11),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferFreePush(0),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::Display(6),
        Op::Frame(5),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferFreeCall(0, 3),
        Op::PushEnter(1),
        Op::ReferLocal(0),
        Op::Test(6),
        Op::ReferFreePush(5),
        Op::ReferLocalPush(0),
        Op::ReferGlobal(vm.gc.intern("exists-n-quick")),
        Op::TailCall(2, 6),
        Op::LocalJmp(10),
        Op::ConstantPush(sym12),
        Op::ConstantPush(str11),
        Op::Frame(4),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreeCall(2, 2),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("assertion-violation")),
        Op::TailCall(3, 6),
        Op::Leave(1),
        Op::Return(3),
        Op::DefineGlobal(vm.gc.intern("exists")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(152),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 1},
        Op::ReferLocal(1),
        Op::PairP,
        Op::Test(30),
        Op::LetFrame(8),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(1),
        Op::Display(3),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::ReferLocal(1),
        Op::CdrPush,
        Op::Enter(2),
        Op::ReferLocalBranchNotNull(1, 6),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(0),
        Op::ReferFree(1),
        Op::TailCall(2, 6),
        Op::LocalJmp(13),
        Op::Frame(4),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(1, 2),
        Op::Test(2),
        Op::LocalJmp(7),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::ReferLocal(1),
        Op::CdrPush,
        Op::Shiftj(2, 2, 0),
        Op::LocalJmp(-17),
        Op::Leave(2),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("exists-n-quick")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(191),
        Op::ReferFreePush(48),
        Op::ReferFreePush(152),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 3},
        Op::LetFrame(19),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::ReferFreePush(2),
        Op::Display(6),
        Op::Frame(3),
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(0, 1),
        Op::PushEnter(1),
        Op::LetFrame(17),
        Op::ReferFreePush(4),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::Display(7),
        Op::Undef,
        Op::Push,
        Op::Box(0),
        Op::Enter(1),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 2},
        Op::LetFrame(1),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Display(4),
        Op::Undef,
        Op::Push,
        Op::Box(0),
        Op::Enter(1),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 4},
        Op::ReferLocalBranchNotNull(0, 3),
        Op::Constant(Object::Nil),
        Op::Return(1),
        Op::ReferLocal(0),
        Op::Car,
        Op::PairP,
        Op::Test(11),
        Op::ReferLocal(0),
        Op::Caar,
        Op::PushFrame(6),
        Op::ReferLocal(0),
        Op::CdrPush,
        Op::ReferFree(2),
        Op::Indirect,
        Op::LocalCall(1),
        Op::Cons,
        Op::Return(1),
        Op::ConstantPush(sym12),
        Op::Frame(5),
        Op::ConstantPush(str12),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::ReferFreeCall(1, 2),
        Op::Push,
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("assertion-violation")),
        Op::TailCall(3, 1),
        Op::Return(1),
        Op::AssignLocal(0),
        Op::ReferFreePush(2),
        Op::ReferLocal(0),
        Op::Indirect,
        Op::LocalTailCall(1, 4),
        Op::Leave(1),
        Op::Return(1),
        Op::AssignLocal(0),
        Op::LetFrame(17),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(0),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(0),
        Op::Display(6),
        Op::Frame(5),
        Op::ReferFreePush(3),
        Op::ReferLocal(0),
        Op::Indirect,
        Op::LocalCall(1),
        Op::PushFrame(3),
        Op::ReferFreePush(3),
        Op::ReferGlobalCall(vm.gc.intern("collect-cdr"), 1),
        Op::PushEnter(2),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(5, 1),
        Op::Push,
        Op::ReferFree(4),
        Op::BranchNotNumberEqual(2),
        Op::LocalJmp(6),
        Op::Frame(5),
        Op::ConstantPush(sym12),
        Op::ConstantPush(str13),
        Op::ReferFreePush(3),
        Op::ReferGlobalCall(vm.gc.intern("assertion-violation"), 3),
        Op::ReferLocalBranchNotNull(1, 6),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(0),
        Op::ReferFree(1),
        Op::TailCall(2, 12),
        Op::LocalJmp(18),
        Op::Frame(4),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(1, 2),
        Op::Test(2),
        Op::LocalJmp(12),
        Op::Frame(5),
        Op::ReferLocalPush(1),
        Op::ReferFree(0),
        Op::Indirect,
        Op::LocalCall(1),
        Op::PushFrame(3),
        Op::ReferLocalPush(1),
        Op::ReferGlobalCall(vm.gc.intern("collect-cdr"), 1),
        Op::Push,
        Op::Shiftj(2, 2, 0),
        Op::LocalJmp(-34),
        Op::Leave(2),
        Op::Leave(1),
        Op::Leave(1),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("exists-n")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(48),
        Op::ReferFreePush(89),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 2},
        Op::ReferLocalBranchNotNull(1, 3),
        Op::Constant(Object::False),
        Op::Return(2),
        Op::ReferLocal(1),
        Op::PairP,
        Op::Test(46),
        Op::LetFrame(13),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Display(4),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::ReferLocal(1),
        Op::CdrPush,
        Op::Enter(2),
        Op::ReferLocalBranchNotNull(1, 5),
        Op::ReferLocalPush(0),
        Op::ReferFree(3),
        Op::TailCall(1, 6),
        Op::LocalJmp(28),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(3, 1),
        Op::Test(2),
        Op::LocalJmp(23),
        Op::ReferLocal(1),
        Op::PairP,
        Op::Test(8),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::ReferLocal(1),
        Op::CdrPush,
        Op::Shiftj(2, 2, 0),
        Op::LocalJmp(-18),
        Op::LocalJmp(13),
        Op::ConstantPush(sym12),
        Op::Frame(4),
        Op::ConstantPush(str14),
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(1, 2),
        Op::PushFrame(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreeCall(0, 2),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("assertion-violation")),
        Op::TailCall(3, 6),
        Op::Leave(2),
        Op::Return(2),
        Op::ConstantPush(sym12),
        Op::Frame(4),
        Op::ConstantPush(str15),
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(1, 2),
        Op::PushFrame(4),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(0, 2),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("assertion-violation")),
        Op::TailCall(3, 2),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("exists-1")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 3, is_optional_arg: false, num_free_vars: 0},
        Op::ReferLocalBranchNotNull(2, 3),
        Op::ReferLocal(1),
        Op::Return(3),
        Op::ReferLocalPush(0),
        Op::Frame(5),
        Op::ReferLocalPush(1),
        Op::ReferLocal(2),
        Op::CarPush,
        Op::ReferLocalCall(0, 2),
        Op::Push,
        Op::ReferLocal(2),
        Op::CdrPush,
        Op::ReferGlobal(vm.gc.intern("fold-left-1")),
        Op::TailCall(3, 3),
        Op::Return(3),
        Op::DefineGlobal(vm.gc.intern("fold-left-1")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(89),
        Op::ReferFreePush(152),
        Op::Closure {size: 0, arg_len: 3, is_optional_arg: false, num_free_vars: 2},
        Op::ReferLocalBranchNotNull(2, 3),
        Op::ReferLocal(1),
        Op::Return(3),
        Op::ReferLocalPush(0),
        Op::Frame(11),
        Op::ReferLocalPush(0),
        Op::Frame(3),
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(1, 1),
        Op::Push,
        Op::ReferLocal(2),
        Op::Car,
        Op::Append2,
        Op::Push,
        Op::ReferFreeCall(0, 2),
        Op::Push,
        Op::ReferLocal(2),
        Op::CdrPush,
        Op::ReferGlobal(vm.gc.intern("fold-left-n")),
        Op::TailCall(3, 3),
        Op::Return(3),
        Op::DefineGlobal(vm.gc.intern("fold-left-n")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(88),
        Op::ReferFreePush(48),
        Op::ReferFreePush(2),
        Op::ReferFreePush(197),
        Op::ReferFreePush(152),
        Op::Closure {size: 0, arg_len: 4, is_optional_arg: true, num_free_vars: 5},
        Op::ReferLocalBranchNotNull(3, 26),
        Op::Frame(3),
        Op::ReferLocalPush(2),
        Op::ReferFreeCall(4, 1),
        Op::Test(7),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferGlobal(vm.gc.intern("fold-left-1")),
        Op::TailCall(3, 4),
        Op::Return(4),
        Op::ConstantPush(sym13),
        Op::Frame(4),
        Op::ConstantPush(str16),
        Op::ReferLocalPush(2),
        Op::ReferFreeCall(3, 2),
        Op::PushFrame(6),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferLocalPush(3),
        Op::ReferFreeCall(2, 4),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("assertion-violation")),
        Op::TailCall(3, 4),
        Op::Return(4),
        Op::LetFrame(14),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferLocalPush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Display(7),
        Op::Frame(5),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(2),
        Op::ReferLocalPush(3),
        Op::ReferFreeCall(0, 3),
        Op::PushEnter(1),
        Op::ReferLocal(0),
        Op::Test(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferLocalPush(0),
        Op::ReferGlobal(vm.gc.intern("fold-left-n")),
        Op::TailCall(3, 7),
        Op::LocalJmp(12),
        Op::ConstantPush(sym13),
        Op::ConstantPush(str17),
        Op::Frame(6),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreeCall(2, 4),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("assertion-violation")),
        Op::TailCall(3, 7),
        Op::Leave(1),
        Op::Return(4),
        Op::DefineGlobal(vm.gc.intern("fold-left")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 3, is_optional_arg: false, num_free_vars: 0},
        Op::ReferLocalBranchNotNull(2, 3),
        Op::ReferLocal(1),
        Op::Return(3),
        Op::ReferLocal(2),
        Op::Car,
        Op::PushFrame(6),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocal(2),
        Op::CdrPush,
        Op::ReferGlobalCall(vm.gc.intern("fold-right-1"), 3),
        Op::Push,
        Op::ReferLocal(0),
        Op::TailCall(2, 3),
        Op::Return(3),
        Op::DefineGlobal(vm.gc.intern("fold-right-1")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(89),
        Op::ReferFreePush(152),
        Op::Closure {size: 0, arg_len: 3, is_optional_arg: false, num_free_vars: 2},
        Op::ReferLocalBranchNotNull(2, 3),
        Op::ReferLocal(1),
        Op::Return(3),
        Op::ReferLocalPush(0),
        Op::ReferLocal(2),
        Op::Car,
        Op::PushFrame(9),
        Op::Frame(6),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocal(2),
        Op::CdrPush,
        Op::ReferGlobalCall(vm.gc.intern("fold-right-n"), 3),
        Op::Push,
        Op::ReferFreeCall(1, 1),
        Op::Append2,
        Op::Push,
        Op::ReferFree(0),
        Op::TailCall(2, 3),
        Op::Return(3),
        Op::DefineGlobal(vm.gc.intern("fold-right-n")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(88),
        Op::ReferFreePush(48),
        Op::ReferFreePush(2),
        Op::ReferFreePush(197),
        Op::ReferFreePush(152),
        Op::Closure {size: 0, arg_len: 4, is_optional_arg: true, num_free_vars: 5},
        Op::ReferLocalBranchNotNull(3, 26),
        Op::Frame(3),
        Op::ReferLocalPush(2),
        Op::ReferFreeCall(4, 1),
        Op::Test(7),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferGlobal(vm.gc.intern("fold-right-1")),
        Op::TailCall(3, 4),
        Op::Return(4),
        Op::ConstantPush(sym14),
        Op::Frame(4),
        Op::ConstantPush(str18),
        Op::ReferLocalPush(2),
        Op::ReferFreeCall(3, 2),
        Op::PushFrame(6),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferLocalPush(3),
        Op::ReferFreeCall(2, 4),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("assertion-violation")),
        Op::TailCall(3, 4),
        Op::Return(4),
        Op::LetFrame(14),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferLocalPush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Display(7),
        Op::Frame(5),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(2),
        Op::ReferLocalPush(3),
        Op::ReferFreeCall(0, 3),
        Op::PushEnter(1),
        Op::ReferLocal(0),
        Op::Test(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferLocalPush(0),
        Op::ReferGlobal(vm.gc.intern("fold-right-n")),
        Op::TailCall(3, 7),
        Op::LocalJmp(12),
        Op::ConstantPush(sym14),
        Op::ConstantPush(str19),
        Op::Frame(6),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreeCall(2, 4),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("assertion-violation")),
        Op::TailCall(3, 7),
        Op::Leave(1),
        Op::Return(4),
        Op::DefineGlobal(vm.gc.intern("fold-right")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(167),
        Op::ReferFreePush(152),
        Op::ReferFreePush(192),
        Op::Closure {size: 0, arg_len: 3, is_optional_arg: true, num_free_vars: 3},
        Op::Frame(12),
        Op::ReferGlobalPush(vm.gc.intern("map")),
        Op::ReferLocalPush(0),
        Op::Frame(3),
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(2, 1),
        Op::PushFrame(4),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(2),
        Op::ReferGlobalCall(vm.gc.intern("map"), 2),
        Op::Push,
        Op::ReferFreeCall(1, 4),
        Op::Push,
        Op::ReferFree(0),
        Op::TailCall(1, 3),
        Op::Return(3),
        Op::DefineGlobal(vm.gc.intern("vector-map")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(191),
        Op::ReferFreePush(17),
        Op::ReferFreePush(18),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 3},
        Op::LetFrame(8),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::ReferFreePush(2),
        Op::Display(4),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(0, 1),
        Op::PushEnter(1),
        Op::LetFrame(6),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(3),
        Op::Display(4),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(0, 1),
        Op::PushEnter(1),
        Op::LetFrame(4),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(3),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::Display(6),
        Op::ReferFreePush(3),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Closure {size: 0, arg_len: 3, is_optional_arg: false, num_free_vars: 4},
        Op::ReferLocalPush(2),
        Op::ReferFree(3),
        Op::BranchNotLt(15),
        Op::Frame(6),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(2),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::ReferFreeCall(0, 3),
        Op::ReferLocalPush(0),
        Op::ReferLocal(1),
        Op::CdrPush,
        Op::ReferLocalPushConstant(2, Object::Number(1)),
        Op::NumberAddPush,
        Op::ReferLocal(0),
        Op::TailCall(3, 3),
        Op::Return(3),
        Op::Undef,
        Op::Return(3),
        Op::PushEnter(1),
        Op::Frame(6),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::ConstantPush(Object::Number(0)),
        Op::ReferLocal(0),
        Op::LocalCall(3),
        Op::ReferFree(2),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("list->string")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(167),
        Op::ReferFreePush(152),
        Op::Closure {size: 0, arg_len: 3, is_optional_arg: true, num_free_vars: 2},
        Op::ReferGlobalPush(vm.gc.intern("for-each")),
        Op::ReferLocalPush(0),
        Op::Frame(3),
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(1, 1),
        Op::PushFrame(4),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(2),
        Op::ReferGlobalCall(vm.gc.intern("map"), 2),
        Op::Push,
        Op::ReferFree(0),
        Op::TailCall(4, 3),
        Op::Return(3),
        Op::DefineGlobal(vm.gc.intern("vector-for-each")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 4, is_optional_arg: false, num_free_vars: 0},
        Op::ReferLocalBranchNotNull(2, 3),
        Op::ReferLocal(1),
        Op::Return(4),
        Op::ReferLocal(2),
        Op::CarPush,
        Op::ReferLocal(3),
        Op::Car,
        Op::PushFrame(8),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocal(2),
        Op::CdrPush,
        Op::ReferLocal(3),
        Op::CdrPush,
        Op::ReferGlobalCall(vm.gc.intern("foldr2"), 4),
        Op::Push,
        Op::ReferLocal(0),
        Op::TailCall(3, 4),
        Op::Return(4),
        Op::DefineGlobal(vm.gc.intern("foldr2")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 3, is_optional_arg: false, num_free_vars: 0},
        Op::LetFrame(6),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(2),
        Op::ReferLocalPush(1),
        Op::Display(3),
        Op::ReferLocalPush(2),
        Op::ReferLocalPush(1),
        Op::Enter(2),
        Op::ReferLocalBranchNotNull(0, 3),
        Op::ReferLocal(1),
        Op::LocalJmp(11),
        Op::ReferLocal(0),
        Op::Cdr,
        Op::PushFrame(5),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(2, 2),
        Op::Push,
        Op::Shiftj(2, 2, 0),
        Op::LocalJmp(-12),
        Op::Leave(2),
        Op::Return(3),
        Op::DefineGlobal(vm.gc.intern("fold")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(26),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 1},
        Op::LetFrame(10),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::Display(3),
        Op::ReferLocalPushConstant(1, Object::Nil),
        Op::PushEnter(2),
        Op::ReferLocalBranchNotNull(0, 5),
        Op::ReferLocalPush(1),
        Op::ReferFree(2),
        Op::TailCall(1, 6),
        Op::LocalJmp(29),
        Op::LetFrame(7),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(2),
        Op::Display(4),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::Enter(1),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(3, 1),
        Op::Test(7),
        Op::ReferFree(2),
        Op::CdrPush,
        Op::ReferFreePush(1),
        Op::Shiftj(2, 5, 1),
        Op::LocalJmp(-22),
        Op::LocalJmp(9),
        Op::ReferFree(2),
        Op::CdrPush,
        Op::ReferLocalPush(0),
        Op::ReferFree(1),
        Op::Cons,
        Op::Push,
        Op::Shiftj(2, 5, 1),
        Op::LocalJmp(-31),
        Op::Leave(1),
        Op::Leave(2),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("remp")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(89),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 1},
        Op::ReferLocalPush(0),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 1},
        Op::ReferFreePush(0),
        Op::ReferLocal(0),
        Op::Equal,
        Op::Return(1),
        Op::Push,
        Op::ReferLocalPush(1),
        Op::ReferGlobal(vm.gc.intern("remp")),
        Op::TailCall(2, 2),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("remove")),
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(89),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 1},
        Op::ReferLocalPush(0),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 1},
        Op::ReferFreePush(0),
        Op::ReferLocal(0),
        Op::Eqv,
        Op::Return(1),
        Op::Push,
        Op::ReferLocalPush(1),
        Op::ReferGlobal(vm.gc.intern("remp")),
        Op::TailCall(2, 2),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("remv")),
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(89),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 1},
        Op::ReferLocalPush(0),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 1},
        Op::ReferFreePush(0),
        Op::ReferLocal(0),
        Op::Eq,
        Op::Return(1),
        Op::Push,
        Op::ReferLocalPush(1),
        Op::ReferGlobal(vm.gc.intern("remp")),
        Op::TailCall(2, 2),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("remq")),
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 0},
        Op::ReferLocalBranchNotNull(1, 3),
        Op::Constant(Object::False),
        Op::Return(2),
        Op::Frame(4),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::ReferLocalCall(0, 1),
        Op::Test(3),
        Op::ReferLocal(1),
        Op::Return(2),
        Op::ReferLocalPush(0),
        Op::ReferLocal(1),
        Op::CdrPush,
        Op::ReferGlobal(vm.gc.intern("memp")),
        Op::TailCall(2, 2),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("memp")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 0},
        Op::ReferLocalBranchNotNull(1, 3),
        Op::Constant(Object::False),
        Op::Return(2),
        Op::LetFrame(4),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::Display(2),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::Enter(1),
        Op::Frame(4),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::ReferFreeCall(1, 1),
        Op::Test(3),
        Op::ReferLocal(0),
        Op::LocalJmp(6),
        Op::ReferFreePush(1),
        Op::ReferFree(0),
        Op::CdrPush,
        Op::ReferGlobal(vm.gc.intern("assp")),
        Op::TailCall(2, 5),
        Op::Leave(1),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("assp")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 0},
        Op::ReferLocalBranchNotNull(1, 3),
        Op::Constant(Object::Nil),
        Op::Return(2),
        Op::Frame(4),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::ReferLocalCall(0, 1),
        Op::Test(10),
        Op::ReferLocal(1),
        Op::Car,
        Op::PushFrame(5),
        Op::ReferLocalPush(0),
        Op::ReferLocal(1),
        Op::CdrPush,
        Op::ReferGlobalCall(vm.gc.intern("filter"), 2),
        Op::Cons,
        Op::Return(2),
        Op::ReferLocalPush(0),
        Op::ReferLocal(1),
        Op::CdrPush,
        Op::ReferGlobal(vm.gc.intern("filter")),
        Op::TailCall(2, 2),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("filter")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 0},
        Op::LetFrame(3),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::Display(2),
        Op::ReferLocalPush(1),
        Op::Enter(1),
        Op::ReferLocalBranchNotNull(0, 3),
        Op::Constant(Object::False),
        Op::LocalJmp(13),
        Op::Frame(4),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::ReferFreeCall(1, 1),
        Op::Test(4),
        Op::ReferLocal(0),
        Op::Car,
        Op::LocalJmp(5),
        Op::ReferLocal(0),
        Op::CdrPush,
        Op::Shiftj(1, 1, 0),
        Op::LocalJmp(-14),
        Op::Leave(1),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("find")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::LetFrame(2),
        Op::ReferLocalPush(0),
        Op::Display(1),
        Op::ReferLocalPush(0),
        Op::Enter(1),
        Op::ReferLocalBranchNotNull(0, 3),
        Op::Constant(Object::True),
        Op::LocalJmp(8),
        Op::ReferLocal(0),
        Op::Car,
        Op::BranchNotNull(5),
        Op::ReferLocal(0),
        Op::CdrPush,
        Op::Shiftj(1, 1, 0),
        Op::LocalJmp(-9),
        Op::Leave(1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("null*?")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(49),
        Op::ReferFreePush(51),
        Op::ReferFreePush(281),
        Op::ReferFreePush(110),
        Op::ReferFreePush(152),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 5},
        Op::LetFrame(6),
        Op::ReferFreePush(3),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(4),
        Op::Display(6),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("open-input-file"), 1),
        Op::PushFrame(2),
        Op::ReferFreeCall(0, 0),
        Op::PushEnter(2),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(5),
        Op::Closure {size: 0, arg_len: 0, is_optional_arg: false, num_free_vars: 2},
        Op::ReferFreePush(1),
        Op::ReferFree(0),
        Op::TailCall(1, 0),
        Op::Return(0),
        Op::Push,
        Op::ReferFreePush(4),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::Closure {size: 0, arg_len: 0, is_optional_arg: false, num_free_vars: 5},
        Op::LetFrame(3),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(4),
        Op::Display(5),
        Op::Frame(2),
        Op::ReferFreeCall(0, 0),
        Op::Receive(0, 1),
        Op::Enter(1),
        Op::Frame(3),
        Op::ReferFreePush(4),
        Op::ReferFreeCall(3, 1),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(0),
        Op::ReferFree(1),
        Op::TailCall(2, 3),
        Op::Leave(1),
        Op::Return(0),
        Op::Push,
        Op::ReferLocalPush(1),
        Op::ReferFreePush(5),
        Op::Closure {size: 0, arg_len: 0, is_optional_arg: false, num_free_vars: 2},
        Op::ReferFreePush(1),
        Op::ReferFree(0),
        Op::TailCall(1, 0),
        Op::Return(0),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("dynamic-wind")),
        Op::TailCall(3, 6),
        Op::Leave(2),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("with-input-from-file")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(50),
        Op::ReferFreePush(52),
        Op::ReferFreePush(281),
        Op::ReferFreePush(110),
        Op::ReferFreePush(152),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 5},
        Op::LetFrame(6),
        Op::ReferFreePush(3),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(4),
        Op::Display(6),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("open-output-file"), 1),
        Op::PushFrame(2),
        Op::ReferFreeCall(0, 0),
        Op::PushEnter(2),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(5),
        Op::Closure {size: 0, arg_len: 0, is_optional_arg: false, num_free_vars: 2},
        Op::ReferFreePush(1),
        Op::ReferFree(0),
        Op::TailCall(1, 0),
        Op::Return(0),
        Op::Push,
        Op::ReferFreePush(4),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::Closure {size: 0, arg_len: 0, is_optional_arg: false, num_free_vars: 5},
        Op::LetFrame(3),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(4),
        Op::Display(5),
        Op::Frame(2),
        Op::ReferFreeCall(0, 0),
        Op::Receive(0, 1),
        Op::Enter(1),
        Op::Frame(3),
        Op::ReferFreePush(4),
        Op::ReferFreeCall(3, 1),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(0),
        Op::ReferFree(1),
        Op::TailCall(2, 3),
        Op::Leave(1),
        Op::Return(0),
        Op::Push,
        Op::ReferLocalPush(1),
        Op::ReferFreePush(5),
        Op::Closure {size: 0, arg_len: 0, is_optional_arg: false, num_free_vars: 2},
        Op::ReferFreePush(1),
        Op::ReferFree(0),
        Op::TailCall(1, 0),
        Op::Return(0),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("dynamic-wind")),
        Op::TailCall(3, 6),
        Op::Leave(2),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("with-output-to-file")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(38),
        Op::ReferFreePush(110),
        Op::ReferFreePush(152),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 3},
        Op::LetFrame(6),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Display(4),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("open-output-file"), 1),
        Op::PushEnter(1),
        Op::LetFrame(4),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(3),
        Op::Display(5),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(0, 1),
        Op::Receive(0, 1),
        Op::Enter(1),
        Op::Frame(3),
        Op::ReferFreePush(4),
        Op::ReferFreeCall(3, 1),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(0),
        Op::ReferFree(1),
        Op::TailCall(2, 8),
        Op::Leave(1),
        Op::Leave(1),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("call-with-output-file")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(145),
        Op::ReferFreePush(110),
        Op::ReferFreePush(152),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 3},
        Op::LetFrame(6),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Display(4),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("open-input-file"), 1),
        Op::PushEnter(1),
        Op::LetFrame(4),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(3),
        Op::Display(5),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(0, 1),
        Op::Receive(0, 1),
        Op::Enter(1),
        Op::Frame(3),
        Op::ReferFreePush(4),
        Op::ReferFreeCall(3, 1),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(0),
        Op::ReferFree(1),
        Op::TailCall(2, 8),
        Op::Leave(1),
        Op::Leave(1),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("call-with-input-file")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(36),
        Op::ReferFreePush(44),
        Op::ReferFreePush(37),
        Op::Closure {size: 0, arg_len: 0, is_optional_arg: false, num_free_vars: 3},
        Op::LetFrame(3),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(2),
        Op::Display(3),
        Op::Frame(2),
        Op::ReferFreeCall(0, 0),
        Op::PushEnter(1),
        Op::LetFrame(2),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::Display(4),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Closure {size: 0, arg_len: 0, is_optional_arg: false, num_free_vars: 3},
        Op::LetFrame(4),
        Op::ReferFreePush(2),
        Op::ReferFreePush(0),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::Display(4),
        Op::Frame(3),
        Op::ReferFreePush(1),
        Op::ReferFreeCall(0, 1),
        Op::PushEnter(1),
        Op::Frame(4),
        Op::ReferFreePush(1),
        Op::ConstantPush(Object::Number(0)),
        Op::ReferFreeCall(2, 2),
        Op::ReferLocal(0),
        Op::Leave(1),
        Op::Return(0),
        Op::PushEnter(1),
        Op::ReferFreePush(2),
        Op::ReferLocal(0),
        Op::Values(2),
        Op::Leave(1),
        Op::Leave(1),
        Op::Return(0),
        Op::DefineGlobal(vm.gc.intern("open-string-output-port")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::LetFrame(1),
        Op::ReferLocalPush(0),
        Op::Display(1),
        Op::Frame(2),
        Op::ReferGlobalCall(vm.gc.intern("open-string-output-port"), 0),
        Op::Receive(2, 0),
        Op::Enter(2),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(0, 1),
        Op::ReferLocal(1),
        Op::TailCall(0, 5),
        Op::Leave(2),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("call-with-string-output-port")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(152),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: true, num_free_vars: 1},
        Op::LetFrame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::Display(2),
        Op::Frame(4),
        Op::ReferGlobalPush(vm.gc.intern("open-bytevector-output-port")),
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(0, 2),
        Op::Receive(2, 0),
        Op::Enter(2),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(1, 1),
        Op::ReferLocal(1),
        Op::TailCall(0, 6),
        Op::Leave(2),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("call-with-bytevector-output-port")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(136),
        Op::ReferFreePush(152),
        Op::ReferFreePush(137),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: true, num_free_vars: 3},
        Op::LetFrame(5),
        Op::ReferFreePush(0),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::Display(3),
        Op::Frame(4),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(0, 2),
        Op::PushEnter(1),
        Op::LetFrame(2),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(2),
        Op::Display(3),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::Closure {size: 0, arg_len: 0, is_optional_arg: false, num_free_vars: 2},
        Op::ReferFreePush(1),
        Op::ReferFree(0),
        Op::TailCall(1, 0),
        Op::Return(0),
        Op::PushEnter(1),
        Op::ReferFreePush(1),
        Op::ReferLocal(0),
        Op::Values(2),
        Op::Leave(1),
        Op::Leave(1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("open-bytevector-output-port")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(138),
        Op::ReferFreePush(241),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 2},
        Op::LetFrame(9),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::Display(4),
        Op::Frame(3),
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(0, 1),
        Op::PushEnter(1),
        Op::LetFrame(7),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::Display(4),
        Op::ConstantPush(Object::Number(0)),
        Op::Enter(1),
        Op::ReferLocalPush(0),
        Op::ReferFree(3),
        Op::BranchNotGe(3),
        Op::Constant(Object::Nil),
        Op::LocalJmp(12),
        Op::Frame(7),
        Op::Frame(4),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(1, 2),
        Op::Push,
        Op::ReferFreeCall(0, 1),
        Op::ReferLocalPushConstant(0, Object::Number(1)),
        Op::NumberAddPush,
        Op::Shiftj(1, 1, 0),
        Op::LocalJmp(-15),
        Op::Leave(1),
        Op::Leave(1),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("bytevector-for-each")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(8),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: true, num_free_vars: 1},
        Op::ReferLocalBranchNotNull(1, 5),
        Op::ReferLocalPush(0),
        Op::ReferFree(0),
        Op::TailCall(1, 2),
        Op::Return(2),
        Op::ReferLocalPush(0),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::ReferFree(0),
        Op::TailCall(2, 2),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("display")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(152),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: true, num_free_vars: 1},
        Op::ReferGlobalPush(vm.gc.intern("display")),
        Op::ConstantPush(str20),
        Op::ReferLocalPush(0),
        Op::ReferFree(0),
        Op::TailCall(3, 1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("newline")),
        Op::Nop,
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 0},
        Op::LetFrame(3),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(0),
        Op::Display(4),
        Op::Undef,
        Op::Push,
        Op::Box(0),
        Op::Enter(1),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::Closure {size: 0, arg_len: 3, is_optional_arg: false, num_free_vars: 3},
        Op::ReferLocalBranchNotNull(1, 3),
        Op::ReferLocal(1),
        Op::Return(3),
        Op::Frame(5),
        Op::ReferLocalPush(2),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::ReferLocalCall(0, 2),
        Op::PushFrame(9),
        Op::ReferLocalPush(0),
        Op::ReferLocal(1),
        Op::CdrPush,
        Op::ReferLocalPushConstant(2, Object::Number(1)),
        Op::NumberAddPush,
        Op::ReferFree(0),
        Op::Indirect,
        Op::LocalCall(3),
        Op::Cons,
        Op::Return(3),
        Op::AssignLocal(0),
        Op::ReferFreePush(0),
        Op::ReferFreePush(1),
        Op::ConstantPush(Object::Number(0)),
        Op::ReferLocal(0),
        Op::Indirect,
        Op::LocalTailCall(3, 5),
        Op::Leave(1),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("map-with-index")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(95),
        Op::ReferFreePush(22),
        Op::ReferFreePush(20),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: true, num_free_vars: 3},
        Op::LetFrame(1),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Display(5),
        Op::Undef,
        Op::Push,
        Op::Box(0),
        Op::Enter(1),
        Op::ReferFreePush(3),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 5},
        Op::ReferLocalBranchNotNull(0, 3),
        Op::Constant(Object::Nil),
        Op::Return(1),
        Op::LetFrame(8),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(3),
        Op::Display(4),
        Op::ReferLocal(0),
        Op::Car,
        Op::PushFrame(6),
        Op::ReferLocal(0),
        Op::CdrPush,
        Op::ReferFree(0),
        Op::Indirect,
        Op::LocalCall(1),
        Op::PushEnter(2),
        Op::ReferLocalBranchNotNull(1, 3),
        Op::ReferLocal(0),
        Op::LocalJmp(13),
        Op::Frame(9),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(3, 1),
        Op::PushFrame(3),
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(3, 1),
        Op::Push,
        Op::ReferFreeCall(2, 2),
        Op::Push,
        Op::ReferFree(1),
        Op::TailCall(1, 5),
        Op::Leave(2),
        Op::Return(1),
        Op::AssignLocal(0),
        Op::ReferFreePush(3),
        Op::ReferLocal(0),
        Op::Indirect,
        Op::LocalTailCall(1, 4),
        Op::Leave(1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("symbol-concat")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(23),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 1},
        Op::ReferLocalPushConstant(0, Object::Char('\n')),
        Op::Push,
        Op::ReferFree(0),
        Op::TailCall(2, 1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("string->lines")),
        Op::Nop,
        Op::ReferFreePush(157),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 1},
        Op::LetFrame(4),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::ReferFreePush(0),
        Op::Display(3),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(0, 1),
        Op::PushEnter(1),
        Op::ReferLocalPush(0),
        Op::ReferFree(2),
        Op::BranchNotEqual(3),
        Op::ReferFree(2),
        Op::LocalJmp(4),
        Op::ReferLocalPush(0),
        Op::ReferFree(0),
        Op::TailCall(1, 4),
        Op::Leave(1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("macroexpand")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("display"), 1),
        Op::ConstantPush(str21),
        Op::ReferGlobal(vm.gc.intern("display")),
        Op::TailCall(1, 1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("print")),
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 0},
        Op::ReferLocalBranchNotNull(1, 3),
        Op::ReferLocal(1),
        Op::Return(2),
        Op::Frame(4),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::ReferLocalCall(0, 1),
        Op::PushFrame(5),
        Op::ReferLocalPush(0),
        Op::ReferLocal(1),
        Op::CdrPush,
        Op::ReferGlobalCall(vm.gc.intern("map1"), 2),
        Op::Cons,
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("map1")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(154),
        Op::ReferFreePush(4),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 2},
        Op::LetFrame(4),
        Op::ReferFreePush(0),
        Op::ReferFreePush(1),
        Op::Display(2),
        Op::Frame(4),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(0, 2),
        Op::PushEnter(1),
        Op::ReferLocal(0),
        Op::Test(4),
        Op::ReferLocalPush(0),
        Op::ReferFree(1),
        Op::TailCall(1, 5),
        Op::Leave(1),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("assoc-ref")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(28),
        Op::ReferFreePush(152),
        Op::ReferFreePush(27),
        Op::ReferFreePush(30),
        Op::ReferFreePush(26),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: true, num_free_vars: 5},
        Op::LetFrame(16),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(4),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(3),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::Display(8),
        Op::Frame(4),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(0, 2),
        Op::PushEnter(1),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(7, 1),
        Op::Test(3),
        Op::ReferLocal(0),
        Op::LocalJmp(42),
        Op::LetFrame(12),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(1),
        Op::ReferFreePush(3),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::Display(7),
        Op::ReferLocalPushConstant(0, Object::Nil),
        Op::PushEnter(2),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(6, 1),
        Op::Test(2),
        Op::LocalJmp(5),
        Op::Frame(4),
        Op::ConstantPush(Object::Char('\n')),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(5, 2),
        Op::Test(9),
        Op::Constant(Object::False),
        Op::Frame(3),
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(4, 1),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("list->string")),
        Op::TailCall(1, 8),
        Op::LocalJmp(12),
        Op::Frame(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreeCall(1, 2),
        Op::Push,
        Op::ReferLocalPush(0),
        Op::ReferLocal(1),
        Op::Cons,
        Op::Push,
        Op::Shiftj(2, 2, 0),
        Op::LocalJmp(-28),
        Op::Leave(2),
        Op::Leave(1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("read-line")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(469),
        Op::ReferFreePush(143),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 2},
        Op::Frame(10),
        Op::ReferLocalPush(0),
        Op::Frame(3),
        Op::ConstantPush(list33),
        Op::ReferGlobalCall(vm.gc.intern("make-file-options"), 1),
        Op::PushConstant(sym16),
        Op::PushFrame(2),
        Op::ReferFreeCall(1, 0),
        Op::Push,
        Op::ReferFreeCall(0, 4),
        Op::Push,
        Op::ReferLocalPush(1),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 1},
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::ReferGlobal(vm.gc.intern("display")),
        Op::TailCall(2, 1),
        Op::Return(1),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("call-with-port")),
        Op::TailCall(2, 2),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("write-to-file")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(35),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 1},
        Op::LetFrame(4),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(1),
        Op::Display(3),
        Op::Frame(2),
        Op::ReferGlobalCall(vm.gc.intern("open-string-output-port"), 0),
        Op::Receive(2, 0),
        Op::Enter(2),
        Op::LetFrame(4),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::Display(5),
        Op::Frame(3),
        Op::ReferFreePush(1),
        Op::ReferFreeCall(0, 1),
        Op::PushEnter(1),
        Op::Frame(4),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(4),
        Op::ReferFreeCall(3, 2),
        Op::ReferFree(2),
        Op::TailCall(0, 9),
        Op::Leave(1),
        Op::Leave(2),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("call-with-string-io")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(35),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 1},
        Op::LetFrame(3),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(0),
        Op::Display(2),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(0, 1),
        Op::PushEnter(1),
        Op::ReferLocalPush(0),
        Op::ReferFree(1),
        Op::TailCall(1, 5),
        Op::Leave(1),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("call-with-string-input-port")),
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 0},
        Op::LetFrame(2),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(1),
        Op::Display(3),
        Op::Undef,
        Op::Push,
        Op::Box(0),
        Op::Enter(1),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 2},
        Op::Frame(3),
        Op::ReferLocalPush(1),
        Op::ReferGlobalCall(vm.gc.intern("zero?"), 1),
        Op::Test(5),
        Op::ConstantPush(Object::Nil),
        Op::ReferLocal(0),
        Op::Values(2),
        Op::Return(2),
        Op::LetFrame(5),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::Display(2),
        Op::Frame(8),
        Op::ReferLocal(0),
        Op::CdrPush,
        Op::ReferLocalPushConstant(1, Object::Number(1)),
        Op::NumberSubPush,
        Op::ReferFree(0),
        Op::Indirect,
        Op::LocalCall(2),
        Op::Receive(2, 0),
        Op::Enter(2),
        Op::ReferFree(1),
        Op::CarPush,
        Op::ReferLocal(0),
        Op::Cons,
        Op::Push,
        Op::ReferLocal(1),
        Op::Values(2),
        Op::Leave(2),
        Op::Return(2),
        Op::AssignLocal(0),
        Op::ReferFreePush(2),
        Op::ReferFreePush(0),
        Op::ReferLocal(0),
        Op::Indirect,
        Op::LocalTailCall(2, 5),
        Op::Leave(1),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("split-at")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 0},
        Op::LetFrame(2),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(0),
        Op::Display(4),
        Op::Undef,
        Op::Push,
        Op::Box(0),
        Op::Enter(1),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 3},
        Op::Frame(3),
        Op::ReferLocalPush(1),
        Op::ReferGlobalCall(vm.gc.intern("zero?"), 1),
        Op::Test(3),
        Op::Constant(Object::Nil),
        Op::Return(2),
        Op::ReferLocal(0),
        Op::Car,
        Op::PushFrame(8),
        Op::ReferLocal(0),
        Op::CdrPush,
        Op::ReferLocalPushConstant(1, Object::Number(1)),
        Op::NumberSubPush,
        Op::ReferFree(0),
        Op::Indirect,
        Op::LocalCall(2),
        Op::Cons,
        Op::Return(2),
        Op::AssignLocal(0),
        Op::ReferFreePush(0),
        Op::ReferFreePush(1),
        Op::ReferLocal(0),
        Op::Indirect,
        Op::LocalTailCall(2, 5),
        Op::Leave(1),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("take")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFree(3),
        Op::DefineGlobal(vm.gc.intern("first")),
        Op::ReferFree(70),
        Op::DefineGlobal(vm.gc.intern("second")),
        Op::ReferFree(69),
        Op::DefineGlobal(vm.gc.intern("third")),
        Op::ReferFree(68),
        Op::DefineGlobal(vm.gc.intern("fourth")),
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::ReferFreePush(48),
        Op::ReferFreePush(19),
        Op::ReferFreePush(22),
        Op::Closure {size: 0, arg_len: 3, is_optional_arg: false, num_free_vars: 3},
        Op::LetFrame(15),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::Display(6),
        Op::ReferLocalPush(2),
        Op::Frame(7),
        Op::Frame(4),
        Op::ConstantPush(str22),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(1, 2),
        Op::Push,
        Op::ReferFreeCall(0, 1),
        Op::NumberSubPush,
        Op::Enter(1),
        Op::LetFrame(10),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(5),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(0),
        Op::Display(5),
        Op::ReferLocalPush(0),
        Op::Frame(4),
        Op::ConstantPush(str23),
        Op::ReferFreePush(2),
        Op::ReferFreeCall(1, 2),
        Op::PushEnter(2),
        Op::ReferLocalPushConstantBranchNotLe(0, 0, 3),
        Op::ReferLocal(1),
        Op::LocalJmp(10),
        Op::ReferLocalPushConstant(0, Object::Number(1)),
        Op::NumberSubPush,
        Op::Frame(4),
        Op::ReferFreePush(4),
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(3, 2),
        Op::Push,
        Op::Shiftj(2, 2, 0),
        Op::LocalJmp(-11),
        Op::Leave(2),
        Op::Leave(1),
        Op::Return(3),
        Op::DefineGlobal(vm.gc.intern("lpad")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(48),
        Op::ReferFreePush(19),
        Op::ReferFreePush(22),
        Op::Closure {size: 0, arg_len: 3, is_optional_arg: false, num_free_vars: 3},
        Op::LetFrame(15),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::Display(6),
        Op::ReferLocalPush(2),
        Op::Frame(7),
        Op::Frame(4),
        Op::ConstantPush(str24),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(1, 2),
        Op::Push,
        Op::ReferFreeCall(0, 1),
        Op::NumberSubPush,
        Op::Enter(1),
        Op::LetFrame(10),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(5),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(0),
        Op::Display(5),
        Op::ReferLocalPush(0),
        Op::Frame(4),
        Op::ConstantPush(str25),
        Op::ReferFreePush(2),
        Op::ReferFreeCall(1, 2),
        Op::PushEnter(2),
        Op::ReferLocalPushConstantBranchNotLe(0, 0, 3),
        Op::ReferLocal(1),
        Op::LocalJmp(10),
        Op::ReferLocalPushConstant(0, Object::Number(1)),
        Op::NumberSubPush,
        Op::Frame(4),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(4),
        Op::ReferFreeCall(3, 2),
        Op::Push,
        Op::Shiftj(2, 2, 0),
        Op::LocalJmp(-11),
        Op::Leave(2),
        Op::Leave(1),
        Op::Return(3),
        Op::DefineGlobal(vm.gc.intern("rpad")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(19),
        Op::ReferFreePush(96),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 2},
        Op::LetFrame(11),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::ReferFreePush(1),
        Op::Display(3),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(0, 1),
        Op::PushConstant(Object::Number(1)),
        Op::NumberSubPush,
        Op::ConstantPush(Object::Nil),
        Op::Enter(2),
        Op::ReferLocalPushConstant(0, Object::Number(0)),
        Op::BranchNotLt(3),
        Op::ReferLocal(1),
        Op::LocalJmp(13),
        Op::ReferLocalPushConstant(0, Object::Number(1)),
        Op::NumberSubPush,
        Op::Frame(4),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(1, 2),
        Op::Push,
        Op::ReferLocal(1),
        Op::Cons,
        Op::Push,
        Op::Shiftj(2, 2, 0),
        Op::LocalJmp(-15),
        Op::Leave(2),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("string->list")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Undef,
        Op::Closure {size: 0, arg_len: 0, is_optional_arg: false, num_free_vars: 0},
        Op::Constant(Object::Number(3)),
        Op::Return(0),
        Op::DefineGlobal(vm.gc.intern("suma")),
        Op::Nop,
        Op::Undef,
        Op::ReferFreePush(173),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 1},
        Op::LetFrame(2),
        Op::ReferFreePush(0),
        Op::Display(1),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(0, 1),
        Op::PushEnter(1),
        Op::ReferLocal(0),
        Op::Test(3),
        Op::ReferLocal(0),
        Op::LocalJmp(2),
        Op::Constant(sym17),
        Op::Leave(1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("get-closure-name")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(19),
        Op::ReferFreePush(17),
        Op::ReferFreePush(22),
        Op::ReferFreePush(96),
        Op::ReferFreePush(18),
        Op::Closure {size: 0, arg_len: 3, is_optional_arg: true, num_free_vars: 5},
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(4, 1),
        Op::Push,
        Op::ReferLocal(1),
        Op::BranchNotGt(55),
        Op::LetFrame(13),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(3),
        Op::Display(7),
        Op::Frame(3),
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(0, 1),
        Op::PushEnter(1),
        Op::LetFrame(11),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::Display(7),
        Op::ConstantPush(Object::Number(0)),
        Op::Enter(1),
        Op::ReferLocalPush(0),
        Op::ReferFree(6),
        Op::BranchNotGe(12),
        Op::ReferFree(5),
        Op::PairP,
        Op::Test(7),
        Op::ReferFreePush(4),
        Op::ReferFree(5),
        Op::CarPush,
        Op::ReferFree(3),
        Op::TailCall(2, 9),
        Op::LocalJmp(16),
        Op::ReferFree(4),
        Op::LocalJmp(14),
        Op::Frame(9),
        Op::ReferFreePush(4),
        Op::ReferLocalPush(0),
        Op::Frame(4),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(1, 2),
        Op::Push,
        Op::ReferFreeCall(0, 3),
        Op::ReferLocalPushConstant(0, Object::Number(1)),
        Op::NumberAddPush,
        Op::Shiftj(1, 1, 0),
        Op::LocalJmp(-26),
        Op::Leave(1),
        Op::Leave(1),
        Op::Return(3),
        Op::ReferLocal(0),
        Op::Return(3),
        Op::DefineGlobal(vm.gc.intern("string-chop")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(434),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 1},
        Op::LetFrame(6),
        Op::ReferFreePush(0),
        Op::Display(1),
        Op::Frame(4),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("map"), 2),
        Op::PushEnter(1),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::Constant(sym18),
        Op::BranchNotEq(8),
        Op::ConstantPush(sym18),
        Op::ReferLocal(0),
        Op::CdrPush,
        Op::Constant(list34),
        Op::Cons,
        Op::Cons,
        Op::LocalJmp(2),
        Op::ReferLocal(0),
        Op::Leave(1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("cleanup-source")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(98),
        Op::ReferFreePush(149),
        Op::ReferFreePush(101),
        Op::ReferFreePush(100),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 4},
        Op::LetFrame(4),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(3),
        Op::ReferFreePush(3),
        Op::Display(7),
        Op::Frame(2),
        Op::ReferFreeCall(0, 0),
        Op::PushFrame(2),
        Op::ReferFreeCall(0, 0),
        Op::PushEnter(2),
        Op::Frame(128),
        Op::ReferFreePush(6),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(5),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 6},
        Op::LetFrame(37),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(5),
        Op::Display(7),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(0, 1),
        Op::PushEnter(1),
        Op::ReferLocal(0),
        Op::PairP,
        Op::Test(62),
        Op::LetFrame(22),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(5),
        Op::ReferFreePush(6),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::Display(9),
        Op::Frame(5),
        Op::ReferFreePush(1),
        Op::ReferLocalPushConstant(0, Object::False),
        Op::Push,
        Op::ReferFreeCall(0, 3),
        Op::PushEnter(1),
        Op::ReferLocal(0),
        Op::Test(29),
        Op::ReferLocalPush(0),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::Constant(Object::Number(1)),
        Op::NumberAdd,
        Op::SetCar,
        Op::ReferLocalPush(0),
        Op::ReferLocal(0),
        Op::Cdr,
        Op::PushFrame(5),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ConstantPush(Object::False),
        Op::ReferFreeCall(6, 3),
        Op::Test(3),
        Op::Constant(Object::Number(0)),
        Op::LocalJmp(9),
        Op::Frame(3),
        Op::ReferFreePush(7),
        Op::ReferGlobalCall(vm.gc.intern("set-counted!"), 1),
        Op::Frame(5),
        Op::ReferFreePush(5),
        Op::ReferFreePush(7),
        Op::ConstantPush(Object::Number(0)),
        Op::ReferFreeCall(0, 3),
        Op::NumberAdd,
        Op::SetCdr,
        Op::LocalJmp(13),
        Op::ReferFreePush(1),
        Op::ReferFreePush(2),
        Op::ConstantPush(Object::Number(1)),
        Op::Frame(5),
        Op::ReferFreePush(5),
        Op::ReferFreePush(7),
        Op::ConstantPush(Object::Number(0)),
        Op::ReferFreeCall(0, 3),
        Op::Cons,
        Op::Push,
        Op::ReferFree(6),
        Op::TailCall(3, 7),
        Op::Leave(1),
        Op::LocalJmp(39),
        Op::LetFrame(13),
        Op::ReferFreePush(6),
        Op::ReferFreePush(3),
        Op::ReferFreePush(1),
        Op::ReferFreePush(5),
        Op::ReferFreePush(2),
        Op::ReferFreePush(6),
        Op::ReferFreePush(3),
        Op::ReferFreePush(5),
        Op::Display(8),
        Op::Frame(5),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ConstantPush(Object::False),
        Op::ReferFreeCall(0, 3),
        Op::PushEnter(1),
        Op::ReferLocal(0),
        Op::Test(8),
        Op::ReferLocalPush(0),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::Constant(Object::Number(1)),
        Op::NumberAdd,
        Op::SetCar,
        Op::LocalJmp(13),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ConstantPush(Object::Number(1)),
        Op::Frame(5),
        Op::ReferFreePush(5),
        Op::ReferFreePush(1),
        Op::ConstantPush(Object::Number(0)),
        Op::ReferFreeCall(0, 3),
        Op::Cons,
        Op::Push,
        Op::ReferFree(3),
        Op::TailCall(3, 7),
        Op::Leave(1),
        Op::Leave(1),
        Op::Return(1),
        Op::Push,
        Op::ReferFreePush(2),
        Op::ReferGlobalCall(vm.gc.intern("for-each"), 2),
        Op::ReferLocal(0),
        Op::Leave(2),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("summerize-samples")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(109),
        Op::ReferFreePush(159),
        Op::ReferFreePush(48),
        Op::ReferFreePush(418),
        Op::ReferFreePush(299),
        Op::ReferFreePush(89),
        Op::ReferFreePush(102),
        Op::ReferFreePush(167),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 8},
        Op::LetFrame(25),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Display(9),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("first"), 1),
        Op::PushEnter(1),
        Op::LetFrame(23),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(8),
        Op::Display(11),
        Op::Frame(3),
        Op::ReferFreePush(0),
        Op::ReferGlobalCall(vm.gc.intern("second"), 1),
        Op::PushEnter(1),
        Op::LetFrame(21),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Display(11),
        Op::ReferFree(0),
        Op::Cddr,
        Op::PushEnter(1),
        Op::LetFrame(20),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(10),
        Op::Display(10),
        Op::Frame(4),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("summerize-samples"), 2),
        Op::PushEnter(1),
        Op::Frame(6),
        Op::ConstantPush(str26),
        Op::Frame(2),
        Op::ReferFreeCall(9, 0),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("display"), 2),
        Op::Frame(200),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(9),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 3},
        Op::LetFrame(43),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::Display(4),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("first"), 1),
        Op::PushEnter(1),
        Op::LetFrame(41),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(3),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(2),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::Display(7),
        Op::Frame(21),
        Op::Frame(16),
        Op::ConstantPush(str27),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(1, 1),
        Op::Test(5),
        Op::Frame(8),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("get-closure-name"), 1),
        Op::LocalJmp(5),
        Op::Frame(4),
        Op::ReferLocal(0),
        Op::CdrPush,
        Op::ReferGlobalCall(vm.gc.intern("cleanup-source"), 1),
        Op::Push,
        Op::ReferFreeCall(0, 2),
        Op::PushConstant(Object::Number(25)),
        Op::PushConstant(str28),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("string-chop"), 3),
        Op::PushEnter(1),
        Op::LetFrame(32),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::ReferFreePush(6),
        Op::ReferFreePush(1),
        Op::Display(6),
        Op::Frame(3),
        Op::ReferFreePush(1),
        Op::ReferFreeCall(0, 1),
        Op::Test(3),
        Op::Constant(Object::False),
        Op::LocalJmp(3),
        Op::ReferFree(1),
        Op::Car,
        Op::PushEnter(1),
        Op::LetFrame(30),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::Display(5),
        Op::ReferLocal(0),
        Op::PairP,
        Op::Test(3),
        Op::ReferLocal(0),
        Op::Car,
        Op::PushEnter(1),
        Op::LetFrame(29),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::ReferFreePush(4),
        Op::Display(6),
        Op::ReferFree(0),
        Op::PairP,
        Op::Test(4),
        Op::Frame(3),
        Op::ReferFreePush(0),
        Op::ReferGlobalCall(vm.gc.intern("second"), 1),
        Op::PushEnter(1),
        Op::LetFrame(27),
        Op::ReferFreePush(4),
        Op::ReferFreePush(5),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::ReferFreePush(5),
        Op::Display(7),
        Op::Frame(3),
        Op::ReferFreePush(0),
        Op::ReferGlobalCall(vm.gc.intern("fourth"), 1),
        Op::PushEnter(1),
        Op::Frame(2),
        Op::ReferFreeCall(6, 0),
        Op::PushConstant(str29),
        Op::PushFrame(8),
        Op::Frame(3),
        Op::ReferFreePush(0),
        Op::ReferGlobalCall(vm.gc.intern("third"), 1),
        Op::PushConstant(str30),
        Op::PushConstant(Object::Number(3)),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("lpad"), 3),
        Op::PushFrame(10),
        Op::Frame(3),
        Op::ReferFreePush(0),
        Op::ReferGlobalCall(vm.gc.intern("second"), 1),
        Op::PushConstant(Object::Number(10)),
        Op::NumberMul,
        Op::PushConstant(str31),
        Op::PushConstant(Object::Number(10)),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("lpad"), 3),
        Op::PushFrame(5),
        Op::ReferLocalPushConstant(0, str32),
        Op::PushConstant(Object::Number(10)),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("lpad"), 3),
        Op::PushFrame(5),
        Op::ReferFreePush(4),
        Op::ConstantPush(str33),
        Op::ConstantPush(Object::Number(30)),
        Op::ReferGlobalCall(vm.gc.intern("rpad"), 3),
        Op::Push,
        Op::ReferFree(3),
        Op::Test(7),
        Op::Frame(7),
        Op::ConstantPush(str34),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreeCall(1, 3),
        Op::LocalJmp(2),
        Op::Constant(str35),
        Op::Push,
        Op::ReferFree(1),
        Op::TailCall(7, 19),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Return(1),
        Op::PushFrame(43),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 0},
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("second"), 1),
        Op::PushFrame(3),
        Op::ReferLocalPush(1),
        Op::ReferGlobalCall(vm.gc.intern("second"), 1),
        Op::NumberGt,
        Op::Return(2),
        Op::PushFrame(31),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 4},
        Op::ReferLocalPush(0),
        Op::ReferLocal(1),
        Op::Car,
        Op::PushFrame(13),
        Op::Frame(10),
        Op::ConstantPush(Object::Number(100)),
        Op::ReferLocal(1),
        Op::Car,
        Op::NumberMul,
        Op::Push,
        Op::ReferFree(3),
        Op::NumberDiv,
        Op::Push,
        Op::ReferFreeCall(2, 1),
        Op::Push,
        Op::ReferFreeCall(1, 1),
        Op::Push,
        Op::ReferLocal(1),
        Op::CdrPush,
        Op::ReferFree(0),
        Op::TailCall(4, 2),
        Op::Return(2),
        Op::Push,
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("hashtable-map"), 2),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("list-sort"), 2),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("for-each"), 2),
        Op::Frame(6),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(2, 1),
        Op::Push,
        Op::ReferFreeCall(1, 1),
        Op::Frame(2),
        Op::ReferFreeCall(9, 0),
        Op::PushConstant(str36),
        Op::PushFrame(8),
        Op::ReferFreePush(6),
        Op::Constant(Object::Number(10)),
        Op::NumberMul,
        Op::PushConstant(str37),
        Op::PushConstant(Object::Number(10)),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("lpad"), 3),
        Op::Push,
        Op::ReferFree(7),
        Op::TailCall(3, 13),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("show-profile")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 0, is_optional_arg: false, num_free_vars: 0},
        Op::Constant(Object::False),
        Op::Undef,
        Op::Return(0),
        Op::DefineGlobal(vm.gc.intern("void")),
        Op::Nop,
        Op::ReferFreePush(150),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 1},
        Op::ReferLocalPushConstant(0, Object::Nil),
        Op::Push,
        Op::ReferFree(0),
        Op::TailCall(2, 1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("eval-core")),
        Op::Nop,
        Op::ReferFreePush(152),
        Op::Closure {size: 0, arg_len: 3, is_optional_arg: true, num_free_vars: 1},
        Op::ReferGlobalPush(vm.gc.intern("map")),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferFree(0),
        Op::TailCall(4, 3),
        Op::Return(3),
        Op::DefineGlobal(vm.gc.intern("ellipsis-map")),
        Op::Nop,
        Op::ReferFreePush(26),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 1},
        Op::LetFrame(16),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::Display(3),
        Op::ReferLocalPushConstant(1, Object::Nil),
        Op::PushConstant(Object::Nil),
        Op::PushEnter(3),
        Op::ReferLocalBranchNotNull(0, 9),
        Op::Frame(3),
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(2, 1),
        Op::PushFrame(3),
        Op::ReferLocalPush(2),
        Op::ReferFreeCall(2, 1),
        Op::Values(2),
        Op::LocalJmp(35),
        Op::LetFrame(10),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferFreePush(2),
        Op::Display(5),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::Enter(1),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(4, 1),
        Op::Test(11),
        Op::ReferFree(3),
        Op::CdrPush,
        Op::ReferLocalPush(0),
        Op::ReferFree(2),
        Op::Cons,
        Op::Push,
        Op::ReferFreePush(1),
        Op::Shiftj(3, 6, 1),
        Op::LocalJmp(-31),
        Op::LocalJmp(10),
        Op::ReferFree(3),
        Op::CdrPush,
        Op::ReferFreePush(2),
        Op::ReferLocalPush(0),
        Op::ReferFree(1),
        Op::Cons,
        Op::Push,
        Op::Shiftj(3, 6, 1),
        Op::LocalJmp(-41),
        Op::Leave(1),
        Op::Leave(3),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("partition")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::MakeContinuation(1),
        Op::Push,
        Op::ReferLocal(0),
        Op::TailCall(1, 1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("call-with-current-continuation")),
        Op::Nop,
        Op::ReferGlobal(vm.gc.intern("call-with-current-continuation")),
        Op::DefineGlobal(vm.gc.intern("call/cc")),
        Op::ReferFreePush(589),
        Op::ReferFreePush(110),
        Op::ReferFreePush(152),
        Op::Closure {size: 0, arg_len: 3, is_optional_arg: false, num_free_vars: 3},
        Op::Frame(2),
        Op::ReferLocalCall(0, 0),
        Op::Frame(9),
        Op::ReferLocalPush(0),
        Op::ReferLocal(2),
        Op::Cons,
        Op::PushFrame(2),
        Op::ReferFreeCall(2, 0),
        Op::Cons,
        Op::Push,
        Op::ReferFreeCall(2, 1),
        Op::LetFrame(2),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Display(4),
        Op::Frame(2),
        Op::ReferLocalCall(1, 0),
        Op::Receive(0, 1),
        Op::Enter(1),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: true, num_free_vars: 4},
        Op::Frame(5),
        Op::Frame(2),
        Op::ReferFreeCall(3, 0),
        Op::CdrPush,
        Op::ReferFreeCall(3, 1),
        Op::Frame(2),
        Op::ReferFreeCall(2, 0),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(0),
        Op::ReferFree(0),
        Op::TailCall(2, 1),
        Op::Return(1),
        Op::Push,
        Op::ReferLocalPush(0),
        Op::ReferFree(0),
        Op::TailCall(2, 6),
        Op::Leave(1),
        Op::Return(3),
        Op::DefineGlobal(vm.gc.intern("dynamic-wind")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(589),
        Op::ReferFreePush(191),
        Op::ReferFreePush(484),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 3},
        Op::LetFrame(25),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Display(6),
        Op::LetFrame(19),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(3),
        Op::Display(4),
        Op::ReferLocalPush(0),
        Op::Frame(2),
        Op::ReferFreeCall(0, 0),
        Op::PushEnter(2),
        Op::LetFrame(17),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(2),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::Display(6),
        Op::Frame(3),
        Op::ReferFreePush(1),
        Op::ReferFreeCall(0, 1),
        Op::PushFrame(3),
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(0, 1),
        Op::PushEnter(2),
        Op::LetFrame(13),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(4),
        Op::ReferFreePush(5),
        Op::ReferFreePush(3),
        Op::Display(5),
        Op::ReferLocalPush(0),
        Op::ReferLocal(1),
        Op::BranchNotGt(8),
        Op::Frame(8),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(0),
        Op::ReferLocal(1),
        Op::NumberSubPush,
        Op::ReferFreeCall(2, 2),
        Op::LocalJmp(2),
        Op::ReferFree(1),
        Op::Push,
        Op::ReferLocalPush(1),
        Op::ReferLocal(0),
        Op::BranchNotGt(8),
        Op::Frame(8),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocal(0),
        Op::NumberSubPush,
        Op::ReferFreeCall(2, 2),
        Op::LocalJmp(2),
        Op::ReferFree(0),
        Op::PushEnter(2),
        Op::ReferLocalPush(0),
        Op::ReferLocal(1),
        Op::BranchNotEq(3),
        Op::ReferLocal(0),
        Op::LocalJmp(7),
        Op::ReferLocal(0),
        Op::CdrPush,
        Op::ReferLocal(1),
        Op::CdrPush,
        Op::Shiftj(2, 2, 0),
        Op::LocalJmp(-10),
        Op::Leave(2),
        Op::Leave(2),
        Op::Leave(2),
        Op::PushEnter(1),
        Op::LetFrame(4),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(3),
        Op::Display(2),
        Op::Frame(2),
        Op::ReferFreeCall(0, 0),
        Op::PushEnter(1),
        Op::ReferLocalPush(0),
        Op::ReferFree(1),
        Op::BranchNotEq(3),
        Op::Undef,
        Op::LocalJmp(13),
        Op::Frame(4),
        Op::ReferLocal(0),
        Op::CdrPush,
        Op::ReferFreeCall(0, 1),
        Op::Frame(4),
        Op::ReferLocal(0),
        Op::Cdar,
        Op::Call(0),
        Op::ReferLocal(0),
        Op::CdrPush,
        Op::Shiftj(1, 1, 0),
        Op::LocalJmp(-16),
        Op::Leave(1),
        Op::LetFrame(1),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(3),
        Op::Display(3),
        Op::Undef,
        Op::Push,
        Op::Box(0),
        Op::Enter(1),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 3},
        Op::ReferLocalPush(0),
        Op::ReferFree(2),
        Op::BranchNotEq(3),
        Op::Undef,
        Op::Return(1),
        Op::Frame(6),
        Op::ReferLocal(0),
        Op::CdrPush,
        Op::ReferFree(1),
        Op::Indirect,
        Op::LocalCall(1),
        Op::Frame(4),
        Op::ReferLocal(0),
        Op::Caar,
        Op::Call(0),
        Op::ReferLocalPush(0),
        Op::ReferFree(0),
        Op::TailCall(1, 1),
        Op::Return(1),
        Op::AssignLocal(0),
        Op::ReferFreePush(2),
        Op::ReferLocal(0),
        Op::Indirect,
        Op::LocalTailCall(1, 7),
        Op::Leave(1),
        Op::Leave(1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("perform-dynamic-wind")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: true, num_free_vars: 0},
        Op::LetFrame(5),
        Op::ReferLocalPush(0),
        Op::Display(1),
        Op::ReferLocalBranchNotNull(1, 5),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::ReferLocal(0),
        Op::Return(1),
        Op::LocalJmp(3),
        Op::ReferLocal(1),
        Op::Car,
        Op::PushEnter(1),
        Op::LetFrame(4),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::Display(2),
        Op::ConstantPush(Object::False),
        Op::Frame(3),
        Op::ReferFreePush(0),
        Op::ReferLocalCall(0, 1),
        Op::Cons,
        Op::PushEnter(1),
        Op::LetFrame(1),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::Display(3),
        Op::Undef,
        Op::Push,
        Op::Box(0),
        Op::Enter(1),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: true, num_free_vars: 3},
        Op::LetFrame(6),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::Display(4),
        Op::Frame(6),
        Op::ReferFree(1),
        Op::Indirect,
        Op::Push,
        Op::ReferFreePush(0),
        Op::ReferGlobalCall(vm.gc.intern("dynamic-lookup"), 2),
        Op::PushEnter(1),
        Op::ReferFree(3),
        Op::BranchNotNull(4),
        Op::ReferLocal(0),
        Op::Cdr,
        Op::LocalJmp(15),
        Op::ReferFree(3),
        Op::Cdr,
        Op::BranchNotNull(8),
        Op::ReferLocalPush(0),
        Op::Frame(4),
        Op::ReferFree(3),
        Op::CarPush,
        Op::ReferFreeCall(2, 1),
        Op::SetCdr,
        Op::LocalJmp(5),
        Op::ReferFree(3),
        Op::CarPush,
        Op::ReferFree(2),
        Op::TailCall(1, 4),
        Op::Leave(1),
        Op::Return(1),
        Op::AssignLocal(0),
        Op::ReferFreePush(1),
        Op::ReferLocal(0),
        Op::Indirect,
        Op::SetCar,
        Op::ReferLocal(0),
        Op::Indirect,
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("make-parameter")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Undef,
        Op::ReferFreePush(110),
        Op::Closure {size: 0, arg_len: 3, is_optional_arg: false, num_free_vars: 1},
        Op::LetFrame(10),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::Display(3),
        Op::Frame(2),
        Op::ReferGlobalCall(vm.gc.intern("dynamic-env-local-get"), 0),
        Op::PushEnter(1),
        Op::LetFrame(9),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::Display(4),
        Op::Frame(13),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 0},
        Op::ReferLocalPush(0),
        Op::Frame(4),
        Op::ReferLocalPushConstant(1, Object::False),
        Op::Push,
        Op::ReferLocalCall(0, 2),
        Op::Cons,
        Op::Return(2),
        Op::Push,
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferGlobalCall(vm.gc.intern("map"), 3),
        Op::PushEnter(1),
        Op::LetFrame(5),
        Op::ReferFreePush(2),
        Op::ReferFreePush(3),
        Op::ReferFreePush(3),
        Op::Display(3),
        Op::ReferLocalPush(0),
        Op::ReferFree(0),
        Op::Append2,
        Op::PushEnter(1),
        Op::ReferLocalPush(0),
        Op::Closure {size: 0, arg_len: 0, is_optional_arg: false, num_free_vars: 1},
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("dynamic-env-local-set!")),
        Op::TailCall(1, 0),
        Op::Return(0),
        Op::Push,
        Op::ReferFreePush(2),
        Op::ReferFreePush(0),
        Op::Closure {size: 0, arg_len: 0, is_optional_arg: false, num_free_vars: 1},
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("dynamic-env-local-set!")),
        Op::TailCall(1, 0),
        Op::Return(0),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("dynamic-wind")),
        Op::TailCall(3, 12),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Return(3),
        Op::DefineGlobal(vm.gc.intern("dynamic-bind")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(153),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 1},
        Op::Frame(6),
        Op::ReferLocalPush(0),
        Op::Frame(2),
        Op::ReferGlobalCall(vm.gc.intern("dynamic-env-local-get"), 0),
        Op::Push,
        Op::ReferFreeCall(0, 2),
        Op::Test(2),
        Op::Return(2),
        Op::ReferLocal(1),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("dynamic-lookup")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Constant(Object::Nil),
        Op::DefineGlobal(vm.gc.intern("dynamic-env-local")),
        Op::Closure {size: 0, arg_len: 0, is_optional_arg: false, num_free_vars: 0},
        Op::ReferGlobal(vm.gc.intern("dynamic-env-local")),
        Op::Return(0),
        Op::DefineGlobal(vm.gc.intern("dynamic-env-local-get")),
        Op::Nop,
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::ReferLocal(0),
        Op::AssignGlobal(vm.gc.intern("dynamic-env-local")),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("dynamic-env-local-set!")),
        Op::Nop,
        Op::Frame(3),
        Op::ConstantPush(Object::False),
        Op::ReferGlobalCall(vm.gc.intern("make-parameter"), 1),
        Op::DefineGlobal(vm.gc.intern("current-exception-handler")),
        Op::Nop,
        Op::Frame(3),
        Op::ConstantPush(Object::False),
        Op::ReferGlobalCall(vm.gc.intern("make-parameter"), 1),
        Op::DefineGlobal(vm.gc.intern("parent-exception-handler")),
        Op::Nop,
        Op::ReferFreePush(89),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 1},
        Op::LetFrame(8),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::Display(3),
        Op::Frame(2),
        Op::ReferGlobalCall(vm.gc.intern("current-exception-handler"), 0),
        Op::PushEnter(1),
        Op::Frame(4),
        Op::ReferGlobalPush(vm.gc.intern("parent-exception-handler")),
        Op::ReferGlobalPush(vm.gc.intern("current-exception-handler")),
        Op::ReferFreeCall(2, 2),
        Op::PushFrame(26),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 3},
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("current-exception-handler")),
        Op::ReferFreeCall(2, 1),
        Op::PushFrame(3),
        Op::ReferFreePush(1),
        Op::ReferFreeCall(2, 1),
        Op::Push,
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::Closure {size: 0, arg_len: 0, is_optional_arg: false, num_free_vars: 2},
        Op::ReferFreePush(1),
        Op::ReferFree(0),
        Op::TailCall(1, 0),
        Op::Return(0),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("dynamic-bind")),
        Op::TailCall(3, 1),
        Op::Return(1),
        Op::Push,
        Op::ReferFreeCall(2, 2),
        Op::Push,
        Op::ReferFreePush(0),
        Op::Closure {size: 0, arg_len: 0, is_optional_arg: false, num_free_vars: 1},
        Op::ReferFree(0),
        Op::TailCall(0, 0),
        Op::Return(0),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("dynamic-bind")),
        Op::TailCall(3, 5),
        Op::Leave(1),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("with-exception-handler")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(198),
        Op::ReferFreePush(109),
        Op::ReferFreePush(211),
        Op::ReferFreePush(48),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 4},
        Op::LetFrame(10),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::Display(4),
        Op::Frame(2),
        Op::ReferGlobalCall(vm.gc.intern("current-exception-handler"), 0),
        Op::PushEnter(1),
        Op::ReferLocal(0),
        Op::Test(48),
        Op::Frame(3),
        Op::ReferFreePush(3),
        Op::ReferLocalCall(0, 1),
        Op::LetFrame(7),
        Op::ReferFreePush(2),
        Op::ReferFreePush(3),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::Display(4),
        Op::Frame(2),
        Op::ReferGlobalCall(vm.gc.intern("parent-exception-handler"), 0),
        Op::PushEnter(1),
        Op::ReferLocal(0),
        Op::Test(28),
        Op::LetFrame(6),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::ReferFreePush(3),
        Op::Display(4),
        Op::Frame(3),
        Op::ConstantPush(sym20),
        Op::ReferFreeCall(0, 1),
        Op::PushEnter(1),
        Op::ReferLocal(0),
        Op::Test(8),
        Op::Frame(13),
        Op::Frame(3),
        Op::ReferFreePush(3),
        Op::ReferLocalCall(0, 1),
        Op::Push,
        Op::ReferFreeCall(2, 1),
        Op::LocalJmp(7),
        Op::Frame(6),
        Op::ConstantPush(str38),
        Op::Frame(2),
        Op::ReferFreeCall(1, 0),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("display"), 2),
        Op::Leave(1),
        Op::LocalJmp(2),
        Op::Undef,
        Op::Leave(1),
        Op::Frame(5),
        Op::ConstantPush(str39),
        Op::ReferFreeCall(0, 1),
        Op::LocalJmp(2),
        Op::Undef,
        Op::Leave(1),
        Op::Frame(4),
        Op::ConstantPush(str40),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(0, 2),
        Op::Push,
        Op::ReferFree(1),
        Op::TailCall(1, 1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("raise")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(48),
        Op::ReferFreePush(54),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 2},
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("condition?"), 1),
        Op::Test(158),
        Op::LetFrame(3),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::Display(3),
        Op::Frame(2),
        Op::ReferGlobalCall(vm.gc.intern("open-string-output-port"), 0),
        Op::Receive(2, 0),
        Op::Enter(2),
        Op::Frame(144),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 3},
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("record?"), 1),
        Op::Test(126),
        Op::LetFrame(40),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::Display(4),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("record-rtd"), 1),
        Op::PushEnter(1),
        Op::Frame(9),
        Op::ReferFreePush(3),
        Op::ConstantPush(str41),
        Op::ConstantPush(Object::Number(0)),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("record-type-name"), 1),
        Op::Push,
        Op::ReferFreeCall(2, 4),
        Op::LetFrame(33),
        Op::ReferFreePush(3),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::Display(4),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("record-type-field-names"), 1),
        Op::PushEnter(1),
        Op::LetFrame(31),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::Display(5),
        Op::ReferLocal(0),
        Op::VectorLength,
        Op::PushEnter(1),
        Op::ConstantPush(Object::Number(0)),
        Op::ReferLocal(0),
        Op::BranchNotEqv(5),
        Op::ReferFreePush(4),
        Op::ReferGlobal(vm.gc.intern("newline")),
        Op::TailCall(1, 10),
        Op::LocalJmp(76),
        Op::ConstantPush(Object::Number(1)),
        Op::ReferLocal(0),
        Op::BranchNotEqv(20),
        Op::Frame(4),
        Op::ConstantPush(str42),
        Op::ReferFreePush(4),
        Op::ReferGlobalCall(vm.gc.intern("display"), 2),
        Op::Frame(11),
        Op::Frame(7),
        Op::ReferFreePush(3),
        Op::Frame(4),
        Op::ReferFreePush(2),
        Op::ConstantPush(Object::Number(0)),
        Op::ReferGlobalCall(vm.gc.intern("record-accessor"), 2),
        Op::Call(1),
        Op::Push,
        Op::ReferFreePush(4),
        Op::ReferFreeCall(1, 2),
        Op::ReferFreePush(4),
        Op::ReferGlobal(vm.gc.intern("newline")),
        Op::TailCall(1, 10),
        Op::LocalJmp(54),
        Op::Frame(4),
        Op::ConstantPush(str43),
        Op::ReferFreePush(4),
        Op::ReferGlobalCall(vm.gc.intern("display"), 2),
        Op::LetFrame(17),
        Op::ReferFreePush(0),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::Display(5),
        Op::ConstantPush(Object::Number(0)),
        Op::Enter(1),
        Op::ReferLocalPush(0),
        Op::ReferFree(4),
        Op::VectorLength,
        Op::BranchNotNumberEqual(3),
        Op::Undef,
        Op::LocalJmp(34),
        Op::Frame(4),
        Op::ConstantPush(str44),
        Op::ReferFreePush(3),
        Op::ReferGlobalCall(vm.gc.intern("display"), 2),
        Op::Frame(7),
        Op::ReferFreePush(4),
        Op::ReferLocal(0),
        Op::VectorRef,
        Op::Push,
        Op::ReferFreePush(3),
        Op::ReferGlobalCall(vm.gc.intern("display"), 2),
        Op::Frame(4),
        Op::ConstantPush(str45),
        Op::ReferFreePush(3),
        Op::ReferGlobalCall(vm.gc.intern("display"), 2),
        Op::Frame(11),
        Op::Frame(7),
        Op::ReferFreePush(2),
        Op::Frame(4),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("record-accessor"), 2),
        Op::Call(1),
        Op::Push,
        Op::ReferFreePush(3),
        Op::ReferFreeCall(0, 2),
        Op::Frame(3),
        Op::ReferFreePush(3),
        Op::ReferGlobalCall(vm.gc.intern("newline"), 1),
        Op::ReferLocalPushConstant(0, Object::Number(1)),
        Op::NumberAddPush,
        Op::Shiftj(1, 1, 0),
        Op::LocalJmp(-38),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Return(1),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(2),
        Op::ReferGlobal(vm.gc.intern("display")),
        Op::TailCall(2, 1),
        Op::Return(1),
        Op::PushFrame(3),
        Op::ReferFreePush(0),
        Op::ReferGlobalCall(vm.gc.intern("simple-conditions"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("for-each"), 2),
        Op::ReferLocal(1),
        Op::TailCall(0, 5),
        Op::Leave(2),
        Op::Return(1),
        Op::ReferLocal(0),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("condition-printer")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::LetFrame(5),
        Op::ReferLocalPush(0),
        Op::Display(1),
        Op::Frame(2),
        Op::ReferGlobalCall(vm.gc.intern("current-exception-handler"), 0),
        Op::PushEnter(1),
        Op::ReferLocal(0),
        Op::Test(5),
        Op::ReferFreePush(0),
        Op::ReferLocal(0),
        Op::TailCall(1, 4),
        Op::LocalJmp(6),
        Op::ConstantPush(sym21),
        Op::ConstantPush(str46),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("error")),
        Op::TailCall(3, 4),
        Op::Leave(1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("raise-continuable")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 0},
        Op::Constant(str47),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("get-string-n")),
        Op::Nop,
        Op::ReferFreePush(22),
        Op::ReferFreePush(95),
        Op::ReferFreePush(152),
        Op::ReferFreePush(20),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: true, num_free_vars: 4},
        Op::Frame(8),
        Op::ReferFreePush(3),
        Op::Frame(4),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("map"), 2),
        Op::Push,
        Op::ReferFreeCall(1, 2),
        Op::Push,
        Op::ReferFree(0),
        Op::TailCall(1, 1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("symbol-append")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Undef,
        Op::Undef,
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 0},
        Op::Frame(4),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferGlobalCall(vm.gc.intern("display"), 2),
        Op::ReferLocalPush(1),
        Op::ReferGlobal(vm.gc.intern("newline")),
        Op::TailCall(1, 2),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("pretty-print")),
        Op::Nop,
        Op::Nop,
        Op::Undef,
        Op::ReferGlobal(vm.gc.intern("take")),
        Op::DefineGlobal(vm.gc.intern("list-head")),
        Op::ReferFreePush(89),
        Op::ReferFreePush(411),
        Op::ReferFreePush(484),
        Op::ReferFreePush(191),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 4},
        Op::LetFrame(19),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(3),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(0),
        Op::Display(9),
        Op::Undef,
        Op::Push,
        Op::Undef,
        Op::Push,
        Op::Box(1),
        Op::Box(0),
        Op::Enter(2),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 2},
        Op::ReferLocalBranchNotNull(0, 3),
        Op::ReferLocal(1),
        Op::Return(2),
        Op::ReferLocalBranchNotNull(1, 3),
        Op::ReferLocal(0),
        Op::Return(2),
        Op::Frame(6),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::ReferLocal(0),
        Op::CarPush,
        Op::ReferFreeCall(1, 2),
        Op::Test(12),
        Op::ReferLocal(1),
        Op::Car,
        Op::PushFrame(7),
        Op::ReferLocalPush(0),
        Op::ReferLocal(1),
        Op::CdrPush,
        Op::ReferFree(0),
        Op::Indirect,
        Op::LocalCall(2),
        Op::Cons,
        Op::Return(2),
        Op::ReferLocal(0),
        Op::Car,
        Op::PushFrame(7),
        Op::ReferLocal(0),
        Op::CdrPush,
        Op::ReferLocalPush(1),
        Op::ReferFree(0),
        Op::Indirect,
        Op::LocalCall(2),
        Op::Cons,
        Op::Return(2),
        Op::AssignLocal(0),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(0),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(0),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 7},
        Op::ReferLocalPushConstant(1, Object::Number(1)),
        Op::BranchNotNumberEqual(6),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::ReferFree(5),
        Op::TailCall(1, 2),
        Op::Return(2),
        Op::ReferLocalPushConstant(1, Object::Number(2)),
        Op::BranchNotNumberEqual(25),
        Op::Frame(7),
        Op::ReferLocal(0),
        Op::Cadr,
        Op::Push,
        Op::ReferLocal(0),
        Op::CarPush,
        Op::ReferFreeCall(4, 2),
        Op::Test(9),
        Op::ReferLocal(0),
        Op::Cadr,
        Op::Push,
        Op::ReferLocal(0),
        Op::CarPush,
        Op::ReferFree(5),
        Op::TailCall(2, 2),
        Op::Return(2),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::ReferLocal(0),
        Op::Cadr,
        Op::Push,
        Op::ReferFree(5),
        Op::TailCall(2, 2),
        Op::Return(2),
        Op::LetFrame(12),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(3),
        Op::Display(6),
        Op::Frame(4),
        Op::ReferLocalPushConstant(1, Object::Number(2)),
        Op::Push,
        Op::ReferFreeCall(0, 2),
        Op::PushEnter(1),
        Op::Frame(6),
        Op::ReferFreePush(5),
        Op::ReferLocalPush(0),
        Op::ReferFree(4),
        Op::Indirect,
        Op::LocalCall(2),
        Op::PushFrame(12),
        Op::Frame(4),
        Op::ReferFreePush(5),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(3, 2),
        Op::Push,
        Op::ReferFreePush(2),
        Op::ReferLocal(0),
        Op::NumberSubPush,
        Op::ReferFree(4),
        Op::Indirect,
        Op::LocalCall(2),
        Op::Push,
        Op::ReferFree(1),
        Op::Indirect,
        Op::LocalTailCall(2, 5),
        Op::Leave(1),
        Op::Return(2),
        Op::AssignLocal(1),
        Op::ReferFree(5),
        Op::BranchNotNull(3),
        Op::Constant(Object::Nil),
        Op::LocalJmp(85),
        Op::LetFrame(19),
        Op::ReferFreePush(5),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(5),
        Op::ReferFreePush(7),
        Op::Display(6),
        Op::Frame(3),
        Op::ReferFreePush(1),
        Op::ReferFreeCall(0, 1),
        Op::PushEnter(1),
        Op::LetFrame(17),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(4),
        Op::Display(6),
        Op::LetFrame(10),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(1),
        Op::Display(3),
        Op::ReferFreePush(0),
        Op::Enter(1),
        Op::LetFrame(9),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(0),
        Op::Display(2),
        Op::ConstantPush(Object::Number(1)),
        Op::ReferLocalPush(0),
        Op::Enter(2),
        Op::ReferLocal(1),
        Op::Cdr,
        Op::BranchNotNull(4),
        Op::ReferLocalPushConstant(0, Object::Nil),
        Op::Values(2),
        Op::LocalJmp(20),
        Op::Frame(7),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::ReferLocal(1),
        Op::Cadr,
        Op::Push,
        Op::ReferFreeCall(1, 2),
        Op::Test(8),
        Op::ReferLocalPushConstant(0, Object::Number(1)),
        Op::NumberAddPush,
        Op::ReferLocal(1),
        Op::CdrPush,
        Op::Shiftj(2, 2, 0),
        Op::LocalJmp(-19),
        Op::LocalJmp(5),
        Op::ReferLocalPush(0),
        Op::ReferLocal(1),
        Op::Cdr,
        Op::Values(2),
        Op::Leave(2),
        Op::Leave(1),
        Op::Receive(2, 0),
        Op::Enter(2),
        Op::ReferLocalBranchNotNull(1, 3),
        Op::ReferFree(1),
        Op::LocalJmp(17),
        Op::Frame(4),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("list-head"), 2),
        Op::PushFrame(8),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(4),
        Op::ReferLocal(0),
        Op::NumberSubPush,
        Op::ReferFree(3),
        Op::Indirect,
        Op::LocalCall(2),
        Op::Push,
        Op::ReferFree(2),
        Op::Indirect,
        Op::LocalTailCall(2, 13),
        Op::Leave(2),
        Op::Leave(1),
        Op::Leave(2),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("list-sort")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(167),
        Op::ReferFreePush(192),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 2},
        Op::LetFrame(7),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(1),
        Op::Display(4),
        Op::Frame(3),
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(0, 1),
        Op::PushEnter(1),
        Op::LetFrame(5),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(3),
        Op::Display(4),
        Op::Frame(4),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("list-sort"), 2),
        Op::PushEnter(1),
        Op::ReferFreePush(3),
        Op::ReferLocal(0),
        Op::BranchNotEq(3),
        Op::ReferFree(2),
        Op::LocalJmp(4),
        Op::ReferLocalPush(0),
        Op::ReferFree(1),
        Op::TailCall(1, 8),
        Op::Leave(1),
        Op::Leave(1),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("vector-sort")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(411),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 1},
        Op::LetFrame(9),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(0),
        Op::Display(3),
        Op::ReferLocal(1),
        Op::VectorLength,
        Op::PushEnter(1),
        Op::LetFrame(8),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(2),
        Op::Display(5),
        Op::Frame(4),
        Op::ReferLocalPushConstant(0, Object::Number(2)),
        Op::Push,
        Op::ReferFreeCall(0, 2),
        Op::PushConstant(Object::Number(1)),
        Op::NumberAddPush,
        Op::Constant(Object::Nil),
        Op::MakeVector,
        Op::PushEnter(1),
        Op::LetFrame(3),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::Display(5),
        Op::Undef,
        Op::Push,
        Op::Box(0),
        Op::Enter(1),
        Op::ReferFreePush(3),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 5},
        Op::ReferLocalPush(1),
        Op::ReferLocal(0),
        Op::NumberSubPush,
        Op::Constant(Object::Number(10)),
        Op::BranchNotGt(150),
        Op::LetFrame(55),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(3),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(4),
        Op::Display(7),
        Op::Frame(6),
        Op::ReferLocalPush(0),
        Op::ReferLocal(1),
        Op::NumberAddPush,
        Op::ConstantPush(Object::Number(2)),
        Op::ReferFreeCall(0, 2),
        Op::PushEnter(1),
        Op::Frame(6),
        Op::ReferFreePush(6),
        Op::ReferLocalPush(0),
        Op::ReferFree(5),
        Op::Indirect,
        Op::LocalCall(2),
        Op::Frame(7),
        Op::ReferLocalPushConstant(0, Object::Number(1)),
        Op::NumberAddPush,
        Op::ReferFreePush(4),
        Op::ReferFree(5),
        Op::Indirect,
        Op::LocalCall(2),
        Op::LetFrame(46),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(6),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::Display(6),
        Op::ReferFreePush(4),
        Op::ConstantPush(Object::Number(0)),
        Op::Enter(2),
        Op::ReferLocalPush(0),
        Op::ReferFree(5),
        Op::BranchNotGt(92),
        Op::LetFrame(36),
        Op::ReferFreePush(3),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::Display(7),
        Op::ReferFreePush(1),
        Op::Constant(Object::Number(1)),
        Op::NumberAddPush,
        Op::ConstantPush(Object::Number(0)),
        Op::ReferFreePush(0),
        Op::Enter(3),
        Op::ReferLocalPush(0),
        Op::ReferFree(6),
        Op::BranchNotLe(44),
        Op::ReferLocalPush(1),
        Op::ReferFree(5),
        Op::NumberLt,
        Op::Test(40),
        Op::Frame(10),
        Op::ReferFreePush(4),
        Op::ReferLocal(1),
        Op::VectorRef,
        Op::Push,
        Op::ReferFreePush(3),
        Op::ReferLocal(0),
        Op::VectorRef,
        Op::Push,
        Op::ReferFreeCall(2, 2),
        Op::Test(15),
        Op::ReferFreePush(3),
        Op::ReferLocalPush(2),
        Op::ReferFreePush(4),
        Op::ReferLocal(1),
        Op::VectorRef,
        Op::VectorSet,
        Op::ReferLocalPush(0),
        Op::ReferLocalPushConstant(1, Object::Number(1)),
        Op::NumberAddPush,
        Op::ReferLocalPushConstant(2, Object::Number(1)),
        Op::NumberAddPush,
        Op::Shiftj(3, 3, 0),
        Op::LocalJmp(-30),
        Op::LocalJmp(43),
        Op::ReferFreePush(3),
        Op::ReferLocalPush(2),
        Op::ReferFreePush(3),
        Op::ReferLocal(0),
        Op::VectorRef,
        Op::VectorSet,
        Op::ReferLocalPushConstant(0, Object::Number(1)),
        Op::NumberAddPush,
        Op::ReferLocalPush(1),
        Op::ReferLocalPushConstant(2, Object::Number(1)),
        Op::NumberAddPush,
        Op::Shiftj(3, 3, 0),
        Op::LocalJmp(-44),
        Op::LocalJmp(29),
        Op::LetFrame(10),
        Op::ReferFreePush(5),
        Op::ReferFreePush(3),
        Op::ReferFreePush(4),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::Display(5),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::Enter(2),
        Op::ReferLocalPush(0),
        Op::ReferFree(4),
        Op::BranchNotLt(14),
        Op::ReferFreePush(3),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(2),
        Op::ReferLocal(0),
        Op::VectorRef,
        Op::VectorSet,
        Op::ReferLocalPushConstant(0, Object::Number(1)),
        Op::NumberAddPush,
        Op::ReferLocalPushConstant(1, Object::Number(1)),
        Op::NumberAddPush,
        Op::Shiftj(2, 2, 0),
        Op::LocalJmp(-14),
        Op::LocalJmp(2),
        Op::Undef,
        Op::Leave(2),
        Op::Leave(3),
        Op::LocalJmp(13),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(1),
        Op::ReferLocal(0),
        Op::VectorRef,
        Op::VectorSet,
        Op::ReferLocalPushConstant(0, Object::Number(1)),
        Op::NumberAddPush,
        Op::ReferLocalPushConstant(1, Object::Number(1)),
        Op::NumberAddPush,
        Op::Shiftj(2, 2, 0),
        Op::LocalJmp(-105),
        Op::Leave(2),
        Op::Leave(1),
        Op::Return(2),
        Op::LetFrame(23),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::Display(4),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::Enter(2),
        Op::LetFrame(21),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(0),
        Op::Display(4),
        Op::ReferLocalPush(0),
        Op::Enter(1),
        Op::ReferLocalPush(0),
        Op::ReferFree(3),
        Op::BranchNotLt(77),
        Op::LetFrame(19),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(2),
        Op::Display(6),
        Op::ReferFreePush(0),
        Op::ReferLocal(0),
        Op::VectorRef,
        Op::Push,
        Op::ReferLocalPush(0),
        Op::Box(1),
        Op::Box(0),
        Op::Enter(2),
        Op::LetFrame(16),
        Op::ReferFreePush(4),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(5),
        Op::ReferFreePush(1),
        Op::Display(7),
        Op::ReferFreePush(1),
        Op::Constant(Object::Number(1)),
        Op::NumberAddPush,
        Op::Enter(1),
        Op::ReferLocalPush(0),
        Op::ReferFree(6),
        Op::BranchNotLe(24),
        Op::Frame(9),
        Op::ReferFreePush(5),
        Op::ReferLocal(0),
        Op::VectorRef,
        Op::Push,
        Op::ReferFree(4),
        Op::Indirect,
        Op::Push,
        Op::ReferFreeCall(3, 2),
        Op::Test(8),
        Op::ReferFreePush(5),
        Op::ReferLocal(0),
        Op::VectorRef,
        Op::AssignFree(4),
        Op::ReferLocal(0),
        Op::AssignFree(2),
        Op::LocalJmp(2),
        Op::Undef,
        Op::ReferLocalPushConstant(0, Object::Number(1)),
        Op::NumberAddPush,
        Op::Shiftj(1, 1, 0),
        Op::LocalJmp(-24),
        Op::LocalJmp(19),
        Op::ReferFreePush(5),
        Op::ReferFree(2),
        Op::Indirect,
        Op::Push,
        Op::ReferFreePush(5),
        Op::ReferFree(1),
        Op::VectorRef,
        Op::VectorSet,
        Op::ReferFreePush(5),
        Op::ReferFreePush(1),
        Op::ReferFree(4),
        Op::Indirect,
        Op::VectorSet,
        Op::ReferFreePush(1),
        Op::Constant(Object::Number(1)),
        Op::NumberAddPush,
        Op::Shiftj(1, 8, 2),
        Op::LocalJmp(-75),
        Op::Leave(1),
        Op::Leave(2),
        Op::LocalJmp(2),
        Op::Undef,
        Op::Leave(1),
        Op::Leave(2),
        Op::Return(2),
        Op::AssignLocal(0),
        Op::ConstantPush(Object::Number(0)),
        Op::ReferFreePush(4),
        Op::Constant(Object::Number(1)),
        Op::NumberSubPush,
        Op::ReferLocal(0),
        Op::Indirect,
        Op::LocalTailCall(2, 11),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("vector-sort!")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(17),
        Op::ReferFreePush(24),
        Op::ReferFreePush(96),
        Op::ReferFreePush(18),
        Op::Closure {size: 0, arg_len: 3, is_optional_arg: false, num_free_vars: 4},
        Op::LetFrame(14),
        Op::ReferFreePush(3),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Display(5),
        Op::ReferLocalPush(2),
        Op::ReferLocal(1),
        Op::NumberSubPush,
        Op::Enter(1),
        Op::LetFrame(12),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(4),
        Op::Display(6),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(0, 1),
        Op::PushEnter(1),
        Op::LetFrame(10),
        Op::ReferFreePush(5),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::Display(6),
        Op::ConstantPush(Object::Number(0)),
        Op::Enter(1),
        Op::ReferLocalPush(0),
        Op::ReferFree(5),
        Op::BranchNotNumberEqual(3),
        Op::ReferFree(4),
        Op::LocalJmp(16),
        Op::Frame(11),
        Op::ReferFreePush(4),
        Op::ReferLocalPush(0),
        Op::Frame(6),
        Op::ReferFreePush(3),
        Op::ReferLocalPush(0),
        Op::ReferFree(2),
        Op::NumberAddPush,
        Op::ReferFreeCall(1, 2),
        Op::Push,
        Op::ReferFreeCall(0, 3),
        Op::ReferLocalPushConstant(0, Object::Number(1)),
        Op::NumberAddPush,
        Op::Shiftj(1, 1, 0),
        Op::LocalJmp(-19),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Return(3),
        Op::DefineGlobal(vm.gc.intern("substring")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(19),
        Op::ReferFreePush(222),
        Op::ReferFreePush(96),
        Op::ReferFreePush(30),
        Op::ReferFreePush(165),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 5},
        Op::LetFrame(30),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(4),
        Op::Display(8),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(0, 1),
        Op::PushEnter(1),
        Op::LetFrame(28),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(7),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(7),
        Op::ReferFreePush(0),
        Op::Display(9),
        Op::Frame(3),
        Op::ReferFreePush(1),
        Op::ReferFreeCall(0, 1),
        Op::PushEnter(1),
        Op::LetFrame(26),
        Op::ReferFreePush(6),
        Op::ReferFreePush(1),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(8),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::Display(9),
        Op::Frame(4),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(0, 2),
        Op::PushEnter(1),
        Op::LetFrame(23),
        Op::ReferFreePush(1),
        Op::ReferFreePush(2),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::Display(7),
        Op::LetFrame(19),
        Op::ReferFreePush(4),
        Op::ReferFreePush(2),
        Op::ReferFreePush(3),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(3),
        Op::ReferFreePush(4),
        Op::Display(7),
        Op::ReferFreePush(0),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(0),
        Op::Enter(3),
        Op::LetFrame(16),
        Op::ReferLocalPush(2),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(5),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::Display(6),
        Op::ConstantPush(Object::Number(0)),
        Op::Enter(1),
        Op::ReferLocalPush(0),
        Op::ReferFree(5),
        Op::BranchNotNumberEqual(3),
        Op::Constant(Object::Number(0)),
        Op::LocalJmp(33),
        Op::Frame(11),
        Op::Frame(4),
        Op::ReferFreePush(4),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(3, 2),
        Op::PushFrame(4),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(3, 2),
        Op::Push,
        Op::ReferFreeCall(1, 2),
        Op::Test(6),
        Op::ReferLocalPushConstant(0, Object::Number(1)),
        Op::NumberAddPush,
        Op::Shiftj(1, 1, 0),
        Op::LocalJmp(-20),
        Op::LocalJmp(16),
        Op::Frame(11),
        Op::Frame(4),
        Op::ReferFreePush(4),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(3, 2),
        Op::PushFrame(4),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(3, 2),
        Op::Push,
        Op::ReferFreeCall(0, 2),
        Op::Test(3),
        Op::Constant(Object::Number(1)),
        Op::LocalJmp(2),
        Op::Constant(Object::Number(-1)),
        Op::Leave(1),
        Op::Leave(3),
        Op::PushEnter(1),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("zero?"), 1),
        Op::Test(13),
        Op::ReferFreePush(6),
        Op::ReferFree(5),
        Op::BranchNotNumberEqual(3),
        Op::Constant(Object::Number(0)),
        Op::LocalJmp(9),
        Op::ReferFreePush(6),
        Op::ReferFree(5),
        Op::BranchNotGt(3),
        Op::Constant(Object::Number(1)),
        Op::LocalJmp(4),
        Op::Constant(Object::Number(-1)),
        Op::LocalJmp(2),
        Op::ReferLocal(0),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("string-compare")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(24),
        Op::ReferFreePush(152),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: true, num_free_vars: 2},
        Op::ReferLocalBranchNotNull(1, 3),
        Op::Constant(Object::True),
        Op::Return(2),
        Op::ConstantPush(Object::Number(-1)),
        Op::Frame(5),
        Op::ReferLocalPush(0),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::ReferGlobalCall(vm.gc.intern("string-compare"), 2),
        Op::BranchNotNumberEqual(8),
        Op::ReferGlobalPush(vm.gc.intern("string<?")),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::ReferLocal(1),
        Op::CdrPush,
        Op::ReferFree(0),
        Op::TailCall(3, 2),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("string<?")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(24),
        Op::ReferFreePush(152),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: true, num_free_vars: 2},
        Op::ReferLocalBranchNotNull(1, 3),
        Op::Constant(Object::True),
        Op::Return(2),
        Op::ConstantPush(Object::Number(1)),
        Op::Frame(5),
        Op::ReferLocalPush(0),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::ReferGlobalCall(vm.gc.intern("string-compare"), 2),
        Op::BranchNotNumberEqual(8),
        Op::ReferGlobalPush(vm.gc.intern("string>?")),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::ReferLocal(1),
        Op::CdrPush,
        Op::ReferFree(0),
        Op::TailCall(3, 2),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("string>?")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(24),
        Op::ReferFreePush(152),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: true, num_free_vars: 2},
        Op::ReferLocalBranchNotNull(1, 3),
        Op::Constant(Object::True),
        Op::Return(2),
        Op::Frame(5),
        Op::ReferLocalPush(0),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::ReferGlobalCall(vm.gc.intern("string-compare"), 2),
        Op::PushConstant(Object::Number(0)),
        Op::BranchNotLe(8),
        Op::ReferGlobalPush(vm.gc.intern("string<=?")),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::ReferLocal(1),
        Op::CdrPush,
        Op::ReferFree(0),
        Op::TailCall(3, 2),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("string<=?")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(24),
        Op::ReferFreePush(152),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: true, num_free_vars: 2},
        Op::ReferLocalBranchNotNull(1, 3),
        Op::Constant(Object::True),
        Op::Return(2),
        Op::Frame(5),
        Op::ReferLocalPush(0),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::ReferGlobalCall(vm.gc.intern("string-compare"), 2),
        Op::PushConstant(Object::Number(0)),
        Op::BranchNotGe(8),
        Op::ReferGlobalPush(vm.gc.intern("string>=?")),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::ReferLocal(1),
        Op::CdrPush,
        Op::ReferFree(0),
        Op::TailCall(3, 2),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("string>=?")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(27),
        Op::ReferFreePush(26),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 2},
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Closure {size: 0, arg_len: 0, is_optional_arg: false, num_free_vars: 2},
        Op::LetFrame(7),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Display(2),
        Op::Frame(2),
        Op::ReferGlobalCall(vm.gc.intern("read-line"), 0),
        Op::PushConstant(Object::Nil),
        Op::PushEnter(2),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(1, 1),
        Op::Test(5),
        Op::ReferLocalPush(1),
        Op::ReferFree(0),
        Op::TailCall(1, 4),
        Op::LocalJmp(10),
        Op::Frame(2),
        Op::ReferGlobalCall(vm.gc.intern("read-line"), 0),
        Op::Push,
        Op::ReferLocalPush(0),
        Op::ReferLocal(1),
        Op::Cons,
        Op::Push,
        Op::Shiftj(2, 2, 0),
        Op::LocalJmp(-16),
        Op::Leave(2),
        Op::Return(0),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("with-input-from-file")),
        Op::TailCall(2, 1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("file->list")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Undef,
        Op::Constant(list35),
        Op::DefineGlobal(vm.gc.intern("composition-exclusion-list")),
        Op::Constant(list3398),
        Op::DefineGlobal(vm.gc.intern("compatible-decompose-list")),
        Op::Constant(list3453),
        Op::DefineGlobal(vm.gc.intern("combination-class-list")),
        Op::Constant(list5497),
        Op::DefineGlobal(vm.gc.intern("canonical-decompose-list")),
        Op::Constant(list6609),
        Op::DefineGlobal(vm.gc.intern("foldcase-list")),
        Op::Constant(list6717),
        Op::DefineGlobal(vm.gc.intern("special-lowercase-list")),
        Op::Constant(list6825),
        Op::DefineGlobal(vm.gc.intern("special-uppercase-list")),
        Op::Constant(list6826),
        Op::DefineGlobal(vm.gc.intern("whitespace-property-list")),
        Op::Constant(list6827),
        Op::DefineGlobal(vm.gc.intern("other-alphabetic-property-list")),
        Op::Constant(list6828),
        Op::DefineGlobal(vm.gc.intern("other-uppercase-property-list")),
        Op::Constant(list6829),
        Op::DefineGlobal(vm.gc.intern("other-lowercase-property-list")),
        Op::Constant(list6859),
        Op::DefineGlobal(vm.gc.intern("general-category-alist")),
        Op::Constant(list6860),
        Op::DefineGlobal(vm.gc.intern("titlecase-alist")),
        Op::Constant(list6861),
        Op::DefineGlobal(vm.gc.intern("downcase-alist")),
        Op::Constant(list6862),
        Op::DefineGlobal(vm.gc.intern("upcase-alist")),
        Op::Constant(Object::False),
        Op::DefineGlobal(vm.gc.intern("upcase-hashtable")),
        Op::Constant(Object::False),
        Op::DefineGlobal(vm.gc.intern("downcase-hashtable")),
        Op::Constant(Object::False),
        Op::DefineGlobal(vm.gc.intern("titlecase-hashtable")),
        Op::Constant(Object::False),
        Op::DefineGlobal(vm.gc.intern("general-category-hashtable")),
        Op::Constant(Object::False),
        Op::DefineGlobal(vm.gc.intern("other-alphabetic-hashtable")),
        Op::Constant(Object::False),
        Op::DefineGlobal(vm.gc.intern("other-uppercase-hashtable")),
        Op::Constant(Object::False),
        Op::DefineGlobal(vm.gc.intern("other-lowercase-hashtable")),
        Op::Constant(Object::False),
        Op::DefineGlobal(vm.gc.intern("whitespace-hashtable")),
        Op::Constant(Object::False),
        Op::DefineGlobal(vm.gc.intern("special-uppercase-hashtable")),
        Op::Constant(Object::False),
        Op::DefineGlobal(vm.gc.intern("special-lowercase-hashtable")),
        Op::Constant(Object::False),
        Op::DefineGlobal(vm.gc.intern("foldcase-hashtable")),
        Op::Constant(Object::False),
        Op::DefineGlobal(vm.gc.intern("canonical-decompose-hashtable")),
        Op::Constant(Object::False),
        Op::DefineGlobal(vm.gc.intern("compatible-decompose-hashtable")),
        Op::Constant(Object::False),
        Op::DefineGlobal(vm.gc.intern("combination-class-hashtable")),
        Op::Constant(Object::False),
        Op::DefineGlobal(vm.gc.intern("compose-hashable")),
        Op::ReferFreePush(46),
        Op::ReferFreePush(101),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 2},
        Op::ReferGlobal(vm.gc.intern("foldcase-hashtable")),
        Op::Test(3),
        Op::Undef,
        Op::LocalJmp(5),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("foldcase-list")),
        Op::ReferGlobalCall(vm.gc.intern("alist->eq-hash-table"), 1),
        Op::AssignGlobal(vm.gc.intern("foldcase-hashtable")),
        Op::ReferGlobalPush(vm.gc.intern("foldcase-hashtable")),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(1, 1),
        Op::PushConstant(Object::False),
        Op::Push,
        Op::ReferFree(0),
        Op::TailCall(3, 1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("foldcase")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(98),
        Op::ReferFreePush(0),
        Op::ReferFreePush(47),
        Op::ReferFreePush(100),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 4},
        Op::LetFrame(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(3),
        Op::Display(5),
        Op::Frame(2),
        Op::ReferFreeCall(0, 0),
        Op::PushEnter(1),
        Op::Frame(58),
        Op::ReferFreePush(4),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 4},
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(3, 1),
        Op::Test(10),
        Op::ReferFreePush(2),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(1, 1),
        Op::PushConstant(Object::True),
        Op::Push,
        Op::ReferFree(0),
        Op::TailCall(3, 1),
        Op::Return(1),
        Op::ReferLocal(0),
        Op::PairP,
        Op::Test(32),
        Op::LetFrame(10),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::Display(4),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::ReferLocal(0),
        Op::CdrPush,
        Op::Enter(2),
        Op::ReferLocalPush(0),
        Op::ReferLocal(1),
        Op::BranchNotGt(3),
        Op::Constant(Object::Nil),
        Op::LocalJmp(14),
        Op::Frame(8),
        Op::ReferFreePush(3),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(2, 1),
        Op::PushConstant(Object::True),
        Op::Push,
        Op::ReferFreeCall(1, 3),
        Op::ReferLocalPushConstant(0, Object::Number(1)),
        Op::NumberAddPush,
        Op::ReferLocalPush(1),
        Op::Shiftj(2, 2, 0),
        Op::LocalJmp(-17),
        Op::Leave(2),
        Op::Return(1),
        Op::Undef,
        Op::Return(1),
        Op::Push,
        Op::ReferFreePush(1),
        Op::ReferGlobalCall(vm.gc.intern("for-each"), 2),
        Op::ReferLocal(0),
        Op::Leave(1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("property-list->hashtable")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(101),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 1},
        Op::ReferGlobal(vm.gc.intern("whitespace-hashtable")),
        Op::Test(3),
        Op::Undef,
        Op::LocalJmp(5),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("whitespace-property-list")),
        Op::ReferGlobalCall(vm.gc.intern("property-list->hashtable"), 1),
        Op::AssignGlobal(vm.gc.intern("whitespace-hashtable")),
        Op::ReferGlobalPush(vm.gc.intern("whitespace-hashtable")),
        Op::ReferLocalPushConstant(0, Object::False),
        Op::Push,
        Op::ReferFree(0),
        Op::TailCall(3, 1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("whitespace-proprety?")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(101),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 1},
        Op::ReferGlobal(vm.gc.intern("other-alphabetic-hashtable")),
        Op::Test(3),
        Op::Undef,
        Op::LocalJmp(5),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("other-alphabetic-property-list")),
        Op::ReferGlobalCall(vm.gc.intern("property-list->hashtable"), 1),
        Op::AssignGlobal(vm.gc.intern("other-alphabetic-hashtable")),
        Op::ReferGlobalPush(vm.gc.intern("other-alphabetic-hashtable")),
        Op::ReferLocalPushConstant(0, Object::False),
        Op::Push,
        Op::ReferFree(0),
        Op::TailCall(3, 1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("other-alphabetic-property?")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(101),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 1},
        Op::ReferGlobal(vm.gc.intern("other-uppercase-hashtable")),
        Op::Test(3),
        Op::Undef,
        Op::LocalJmp(5),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("other-uppercase-property-list")),
        Op::ReferGlobalCall(vm.gc.intern("property-list->hashtable"), 1),
        Op::AssignGlobal(vm.gc.intern("other-uppercase-hashtable")),
        Op::ReferGlobalPush(vm.gc.intern("other-uppercase-hashtable")),
        Op::ReferLocalPushConstant(0, Object::False),
        Op::Push,
        Op::ReferFree(0),
        Op::TailCall(3, 1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("other-uppercase-property?")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(101),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 1},
        Op::ReferGlobal(vm.gc.intern("other-lowercase-hashtable")),
        Op::Test(3),
        Op::Undef,
        Op::LocalJmp(5),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("other-lowercase-property-list")),
        Op::ReferGlobalCall(vm.gc.intern("property-list->hashtable"), 1),
        Op::AssignGlobal(vm.gc.intern("other-lowercase-hashtable")),
        Op::ReferGlobalPush(vm.gc.intern("other-lowercase-hashtable")),
        Op::ReferLocalPushConstant(0, Object::False),
        Op::Push,
        Op::ReferFree(0),
        Op::TailCall(3, 1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("other-lowercase-property?")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::ReferLocalPush(0),
        Op::ReferGlobal(vm.gc.intern("whitespace-proprety?")),
        Op::TailCall(1, 1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("char-whitespace?")),
        Op::Nop,
        Op::ReferFreePush(158),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 1},
        Op::LetFrame(7),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::Display(2),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("char-general-category"), 1),
        Op::PushEnter(1),
        Op::Frame(4),
        Op::ReferLocalPushConstant(0, list6863),
        Op::Push,
        Op::ReferFreeCall(1, 2),
        Op::Test(3),
        Op::Constant(Object::True),
        Op::LocalJmp(9),
        Op::Frame(4),
        Op::ReferLocalPushConstant(0, list6864),
        Op::Push,
        Op::ReferFreeCall(1, 2),
        Op::Test(4),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("other-alphabetic-property?")),
        Op::TailCall(1, 4),
        Op::Leave(1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("char-alphabetic?")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("char-general-category"), 1),
        Op::PushConstant(sym28),
        Op::Eq,
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("char-numeric?")),
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(158),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 1},
        Op::LetFrame(6),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::Display(2),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("char-general-category"), 1),
        Op::PushEnter(1),
        Op::ConstantPush(sym47),
        Op::ReferLocal(0),
        Op::BranchNotEqv(3),
        Op::Constant(Object::True),
        Op::LocalJmp(9),
        Op::Frame(4),
        Op::ReferLocalPushConstant(0, list6865),
        Op::Push,
        Op::ReferFreeCall(1, 2),
        Op::Test(4),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("other-uppercase-property?")),
        Op::TailCall(1, 4),
        Op::Leave(1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("char-upper-case?")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(158),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 1},
        Op::LetFrame(6),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::Display(2),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("char-general-category"), 1),
        Op::PushEnter(1),
        Op::ConstantPush(sym43),
        Op::ReferLocal(0),
        Op::BranchNotEqv(3),
        Op::Constant(Object::True),
        Op::LocalJmp(9),
        Op::Frame(4),
        Op::ReferLocalPushConstant(0, list6866),
        Op::Push,
        Op::ReferFreeCall(1, 2),
        Op::Test(4),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("other-lowercase-property?")),
        Op::TailCall(1, 4),
        Op::Leave(1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("char-lower-case?")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("char-general-category"), 1),
        Op::PushConstant(sym25),
        Op::Eq,
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("char-title-case?")),
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(46),
        Op::ReferFreePush(101),
        Op::ReferFreePush(47),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 3},
        Op::ReferGlobal(vm.gc.intern("upcase-hashtable")),
        Op::Test(3),
        Op::Undef,
        Op::LocalJmp(5),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("upcase-alist")),
        Op::ReferGlobalCall(vm.gc.intern("alist->eq-hash-table"), 1),
        Op::AssignGlobal(vm.gc.intern("upcase-hashtable")),
        Op::LetFrame(5),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::Display(4),
        Op::Frame(7),
        Op::ReferGlobalPush(vm.gc.intern("upcase-hashtable")),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(1, 1),
        Op::Push,
        Op::ReferFreeCall(0, 2),
        Op::PushEnter(1),
        Op::ReferLocal(0),
        Op::Test(5),
        Op::ReferLocalPush(0),
        Op::ReferFree(3),
        Op::TailCall(1, 4),
        Op::LocalJmp(2),
        Op::ReferFree(2),
        Op::Leave(1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("char-upcase")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(46),
        Op::ReferFreePush(101),
        Op::ReferFreePush(47),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 3},
        Op::ReferGlobal(vm.gc.intern("downcase-hashtable")),
        Op::Test(3),
        Op::Undef,
        Op::LocalJmp(5),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("downcase-alist")),
        Op::ReferGlobalCall(vm.gc.intern("alist->eq-hash-table"), 1),
        Op::AssignGlobal(vm.gc.intern("downcase-hashtable")),
        Op::LetFrame(5),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::Display(4),
        Op::Frame(7),
        Op::ReferGlobalPush(vm.gc.intern("downcase-hashtable")),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(1, 1),
        Op::Push,
        Op::ReferFreeCall(0, 2),
        Op::PushEnter(1),
        Op::ReferLocal(0),
        Op::Test(5),
        Op::ReferLocalPush(0),
        Op::ReferFree(3),
        Op::TailCall(1, 4),
        Op::LocalJmp(2),
        Op::ReferFree(2),
        Op::Leave(1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("char-downcase")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(46),
        Op::ReferFreePush(101),
        Op::ReferFreePush(47),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 3},
        Op::ReferGlobal(vm.gc.intern("titlecase-hashtable")),
        Op::Test(3),
        Op::Undef,
        Op::LocalJmp(5),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("titlecase-alist")),
        Op::ReferGlobalCall(vm.gc.intern("alist->eq-hash-table"), 1),
        Op::AssignGlobal(vm.gc.intern("titlecase-hashtable")),
        Op::LetFrame(6),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::Display(4),
        Op::Frame(7),
        Op::ReferGlobalPush(vm.gc.intern("titlecase-hashtable")),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(1, 1),
        Op::Push,
        Op::ReferFreeCall(0, 2),
        Op::PushEnter(1),
        Op::ReferLocal(0),
        Op::Test(5),
        Op::ReferLocalPush(0),
        Op::ReferFree(3),
        Op::TailCall(1, 4),
        Op::LocalJmp(4),
        Op::ReferFreePush(2),
        Op::ReferGlobal(vm.gc.intern("char-upcase")),
        Op::TailCall(1, 4),
        Op::Leave(1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("char-titlecase")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(30),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 1},
        Op::Frame(4),
        Op::ReferLocalPushConstant(0, Object::Char('İ')),
        Op::Push,
        Op::ReferFreeCall(0, 2),
        Op::Test(2),
        Op::LocalJmp(5),
        Op::Frame(4),
        Op::ReferLocalPushConstant(0, Object::Char('ı')),
        Op::Push,
        Op::ReferFreeCall(0, 2),
        Op::Test(3),
        Op::ReferLocal(0),
        Op::Return(1),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("char-upcase"), 1),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("char-downcase")),
        Op::TailCall(1, 1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("char-foldcase")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(98),
        Op::ReferFreePush(0),
        Op::ReferFreePush(100),
        Op::ReferFreePush(46),
        Op::ReferFreePush(101),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 5},
        Op::ReferGlobal(vm.gc.intern("general-category-hashtable")),
        Op::Test(3),
        Op::Undef,
        Op::LocalJmp(76),
        Op::LetFrame(3),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(4),
        Op::Display(3),
        Op::Frame(2),
        Op::ReferFreeCall(0, 0),
        Op::PushEnter(1),
        Op::Frame(64),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 3},
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 4},
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(3, 1),
        Op::Test(8),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(0),
        Op::ReferFree(1),
        Op::CarPush,
        Op::ReferFree(0),
        Op::TailCall(3, 1),
        Op::Return(1),
        Op::ReferLocal(0),
        Op::PairP,
        Op::Test(30),
        Op::LetFrame(9),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::Display(4),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::ReferLocal(0),
        Op::CdrPush,
        Op::Enter(2),
        Op::ReferLocalPush(0),
        Op::ReferLocal(1),
        Op::BranchNotGt(3),
        Op::Constant(Object::Nil),
        Op::LocalJmp(12),
        Op::Frame(6),
        Op::ReferFreePush(3),
        Op::ReferLocalPush(0),
        Op::ReferFree(2),
        Op::CarPush,
        Op::ReferFreeCall(1, 3),
        Op::ReferLocalPushConstant(0, Object::Number(1)),
        Op::NumberAddPush,
        Op::ReferLocalPush(1),
        Op::Shiftj(2, 2, 0),
        Op::LocalJmp(-15),
        Op::Leave(2),
        Op::Return(1),
        Op::Undef,
        Op::Return(1),
        Op::Push,
        Op::ReferLocal(0),
        Op::CdrPush,
        Op::ReferGlobal(vm.gc.intern("for-each")),
        Op::TailCall(2, 1),
        Op::Return(1),
        Op::Push,
        Op::ReferGlobalPush(vm.gc.intern("general-category-alist")),
        Op::ReferGlobalCall(vm.gc.intern("for-each"), 2),
        Op::ReferLocal(0),
        Op::AssignGlobal(vm.gc.intern("general-category-hashtable")),
        Op::Leave(1),
        Op::ReferGlobalPush(vm.gc.intern("general-category-hashtable")),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(1, 1),
        Op::PushConstant(sym51),
        Op::Push,
        Op::ReferFree(0),
        Op::TailCall(3, 1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("char-general-category")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(30),
        Op::ReferFreePush(152),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: true, num_free_vars: 2},
        Op::ReferFreePush(1),
        Op::Frame(4),
        Op::ReferGlobalPush(vm.gc.intern("char-titlecase")),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("map"), 2),
        Op::Push,
        Op::ReferFree(0),
        Op::TailCall(2, 1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("char-ci=?")),
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(163),
        Op::ReferFreePush(152),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: true, num_free_vars: 2},
        Op::ReferFreePush(1),
        Op::Frame(4),
        Op::ReferGlobalPush(vm.gc.intern("char-titlecase")),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("map"), 2),
        Op::Push,
        Op::ReferFree(0),
        Op::TailCall(2, 1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("char-ci<?")),
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(165),
        Op::ReferFreePush(152),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: true, num_free_vars: 2},
        Op::ReferFreePush(1),
        Op::Frame(4),
        Op::ReferGlobalPush(vm.gc.intern("char-titlecase")),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("map"), 2),
        Op::Push,
        Op::ReferFree(0),
        Op::TailCall(2, 1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("char-ci>?")),
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(162),
        Op::ReferFreePush(152),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: true, num_free_vars: 2},
        Op::ReferFreePush(1),
        Op::Frame(4),
        Op::ReferGlobalPush(vm.gc.intern("char-titlecase")),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("map"), 2),
        Op::Push,
        Op::ReferFree(0),
        Op::TailCall(2, 1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("char-ci<=?")),
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(164),
        Op::ReferFreePush(152),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: true, num_free_vars: 2},
        Op::ReferFreePush(1),
        Op::Frame(4),
        Op::ReferGlobalPush(vm.gc.intern("char-titlecase")),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("map"), 2),
        Op::Push,
        Op::ReferFree(0),
        Op::TailCall(2, 1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("char-ci>=?")),
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(46),
        Op::ReferFreePush(101),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 2},
        Op::ReferGlobal(vm.gc.intern("special-uppercase-hashtable")),
        Op::Test(3),
        Op::Undef,
        Op::LocalJmp(5),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("special-uppercase-list")),
        Op::ReferGlobalCall(vm.gc.intern("alist->eq-hash-table"), 1),
        Op::AssignGlobal(vm.gc.intern("special-uppercase-hashtable")),
        Op::ReferGlobalPush(vm.gc.intern("special-uppercase-hashtable")),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(1, 1),
        Op::PushConstant(Object::False),
        Op::Push,
        Op::ReferFree(0),
        Op::TailCall(3, 1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("special-uppercase")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(46),
        Op::ReferFreePush(101),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 2},
        Op::ReferGlobal(vm.gc.intern("special-lowercase-hashtable")),
        Op::Test(3),
        Op::Undef,
        Op::LocalJmp(5),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("special-lowercase-list")),
        Op::ReferGlobalCall(vm.gc.intern("alist->eq-hash-table"), 1),
        Op::AssignGlobal(vm.gc.intern("special-lowercase-hashtable")),
        Op::ReferGlobalPush(vm.gc.intern("special-lowercase-hashtable")),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(1, 1),
        Op::PushConstant(Object::False),
        Op::Push,
        Op::ReferFree(0),
        Op::TailCall(3, 1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("special-lowercase")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(35),
        Op::ReferFreePush(27),
        Op::ReferFreePush(30),
        Op::ReferFreePush(224),
        Op::ReferFreePush(47),
        Op::ReferFreePush(56),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 6},
        Op::LetFrame(8),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::ReferFreePush(5),
        Op::Display(7),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(0, 1),
        Op::PushEnter(1),
        Op::LetFrame(6),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::Display(7),
        Op::Frame(2),
        Op::ReferGlobalCall(vm.gc.intern("open-string-output-port"), 0),
        Op::Receive(2, 0),
        Op::Enter(2),
        Op::LetFrame(6),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(6),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(5),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::Display(9),
        Op::LetFrame(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(6),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(4),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Display(8),
        Op::Undef,
        Op::Push,
        Op::Box(0),
        Op::Enter(1),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::Closure {size: 0, arg_len: 3, is_optional_arg: false, num_free_vars: 8},
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(7, 1),
        Op::Test(4),
        Op::ReferFree(6),
        Op::TailCall(0, 3),
        Op::Return(3),
        Op::Frame(3),
        Op::ReferLocalPush(2),
        Op::ReferGlobalCall(vm.gc.intern("char-whitespace?"), 1),
        Op::Test(2),
        Op::LocalJmp(4),
        Op::Frame(3),
        Op::ReferLocalPush(2),
        Op::ReferFreeCall(7, 1),
        Op::Test(32),
        Op::Frame(3),
        Op::ReferLocalPush(1),
        Op::ReferGlobalCall(vm.gc.intern("char-whitespace?"), 1),
        Op::NotTest(11),
        Op::Frame(4),
        Op::ReferLocalPushConstant(0, Object::Char('Σ')),
        Op::Push,
        Op::ReferFreeCall(5, 2),
        Op::Test(2),
        Op::LocalJmp(5),
        Op::Frame(4),
        Op::ReferLocalPushConstant(0, Object::Char('σ')),
        Op::Push,
        Op::ReferFreeCall(5, 2),
        Op::Test(17),
        Op::Frame(4),
        Op::ConstantPush(Object::Char('ς')),
        Op::ReferFreePush(4),
        Op::ReferGlobalCall(vm.gc.intern("display"), 2),
        Op::ReferFree(3),
        Op::ReadChar,
        Op::Push,
        Op::ReferLocalPush(0),
        Op::Frame(3),
        Op::ReferFreePush(3),
        Op::ReferFreeCall(2, 1),
        Op::Push,
        Op::ReferFree(1),
        Op::Indirect,
        Op::LocalTailCall(3, 3),
        Op::Return(3),
        Op::LetFrame(15),
        Op::ReferFreePush(0),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::Display(6),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("special-lowercase"), 1),
        Op::PushEnter(1),
        Op::ReferLocal(0),
        Op::Test(31),
        Op::Frame(18),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 2},
        Op::Frame(6),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(1, 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("char-downcase"), 1),
        Op::Push,
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("display")),
        Op::TailCall(2, 1),
        Op::Return(1),
        Op::Push,
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("for-each"), 2),
        Op::ReferFree(3),
        Op::ReadChar,
        Op::Push,
        Op::ReferFreePush(2),
        Op::Frame(3),
        Op::ReferFreePush(3),
        Op::ReferFreeCall(1, 1),
        Op::Push,
        Op::ReferFree(0),
        Op::Indirect,
        Op::LocalTailCall(3, 6),
        Op::LocalJmp(19),
        Op::Frame(7),
        Op::Frame(3),
        Op::ReferFreePush(2),
        Op::ReferGlobalCall(vm.gc.intern("char-downcase"), 1),
        Op::Push,
        Op::ReferFreePush(4),
        Op::ReferGlobalCall(vm.gc.intern("display"), 2),
        Op::ReferFree(3),
        Op::ReadChar,
        Op::Push,
        Op::ReferFreePush(2),
        Op::Frame(3),
        Op::ReferFreePush(3),
        Op::ReferFreeCall(1, 1),
        Op::Push,
        Op::ReferFree(0),
        Op::Indirect,
        Op::LocalTailCall(3, 6),
        Op::Leave(1),
        Op::Return(3),
        Op::AssignLocal(0),
        Op::Frame(9),
        Op::ReferFree(2),
        Op::ReadChar,
        Op::PushConstant(Object::Char(' ')),
        Op::PushConstant(Object::Char(' ')),
        Op::Push,
        Op::ReferLocal(0),
        Op::Indirect,
        Op::LocalCall(3),
        Op::Leave(1),
        Op::PushEnter(1),
        Op::Frame(4),
        Op::ReferFreePush(8),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(7, 2),
        Op::Test(3),
        Op::ReferFree(8),
        Op::LocalJmp(2),
        Op::ReferLocal(0),
        Op::Leave(1),
        Op::Leave(2),
        Op::Leave(1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("string-downcase")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(35),
        Op::ReferFreePush(27),
        Op::ReferFreePush(47),
        Op::ReferFreePush(56),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 4},
        Op::LetFrame(6),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::ReferFreePush(3),
        Op::Display(5),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(0, 1),
        Op::PushEnter(1),
        Op::LetFrame(4),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::Display(5),
        Op::Frame(2),
        Op::ReferGlobalCall(vm.gc.intern("open-string-output-port"), 0),
        Op::Receive(2, 0),
        Op::Enter(2),
        Op::LetFrame(4),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(4),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(3),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(2),
        Op::Display(7),
        Op::LetFrame(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(4),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::Display(6),
        Op::Undef,
        Op::Push,
        Op::Box(0),
        Op::Enter(1),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 6},
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(5, 1),
        Op::Test(4),
        Op::ReferFree(4),
        Op::TailCall(0, 1),
        Op::Return(1),
        Op::LetFrame(9),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::Display(5),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("special-uppercase"), 1),
        Op::PushEnter(1),
        Op::ReferLocal(0),
        Op::Test(26),
        Op::Frame(18),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 2},
        Op::Frame(6),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(1, 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("char-upcase"), 1),
        Op::Push,
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("display")),
        Op::TailCall(2, 1),
        Op::Return(1),
        Op::Push,
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("for-each"), 2),
        Op::ReferFree(2),
        Op::ReadChar,
        Op::Push,
        Op::ReferFree(1),
        Op::Indirect,
        Op::LocalTailCall(1, 4),
        Op::LocalJmp(14),
        Op::Frame(7),
        Op::Frame(3),
        Op::ReferFreePush(0),
        Op::ReferGlobalCall(vm.gc.intern("char-upcase"), 1),
        Op::Push,
        Op::ReferFreePush(3),
        Op::ReferGlobalCall(vm.gc.intern("display"), 2),
        Op::ReferFree(2),
        Op::ReadChar,
        Op::Push,
        Op::ReferFree(1),
        Op::Indirect,
        Op::LocalTailCall(1, 4),
        Op::Leave(1),
        Op::Return(1),
        Op::AssignLocal(0),
        Op::Frame(7),
        Op::ReferFree(0),
        Op::ReadChar,
        Op::Push,
        Op::ReferLocal(0),
        Op::Indirect,
        Op::LocalCall(1),
        Op::Leave(1),
        Op::PushEnter(1),
        Op::Frame(4),
        Op::ReferFreePush(6),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(5, 2),
        Op::Test(3),
        Op::ReferFree(6),
        Op::LocalJmp(2),
        Op::ReferLocal(0),
        Op::Leave(1),
        Op::Leave(2),
        Op::Leave(1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("string-upcase")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(35),
        Op::ReferFreePush(27),
        Op::ReferFreePush(47),
        Op::ReferFreePush(56),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 4},
        Op::LetFrame(6),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::ReferFreePush(3),
        Op::Display(5),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(0, 1),
        Op::PushEnter(1),
        Op::LetFrame(4),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::Display(5),
        Op::Frame(2),
        Op::ReferGlobalCall(vm.gc.intern("open-string-output-port"), 0),
        Op::Receive(2, 0),
        Op::Enter(2),
        Op::LetFrame(4),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(4),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(3),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(2),
        Op::Display(7),
        Op::LetFrame(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(4),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::Display(6),
        Op::Undef,
        Op::Push,
        Op::Box(0),
        Op::Enter(1),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 6},
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(5, 1),
        Op::Test(4),
        Op::ReferFree(4),
        Op::TailCall(0, 1),
        Op::Return(1),
        Op::LetFrame(9),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::Display(5),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("foldcase"), 1),
        Op::PushEnter(1),
        Op::ReferLocal(0),
        Op::Test(26),
        Op::Frame(18),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 2},
        Op::Frame(6),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(1, 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("char-foldcase"), 1),
        Op::Push,
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("display")),
        Op::TailCall(2, 1),
        Op::Return(1),
        Op::Push,
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("for-each"), 2),
        Op::ReferFree(2),
        Op::ReadChar,
        Op::Push,
        Op::ReferFree(1),
        Op::Indirect,
        Op::LocalTailCall(1, 4),
        Op::LocalJmp(14),
        Op::Frame(7),
        Op::Frame(3),
        Op::ReferFreePush(0),
        Op::ReferGlobalCall(vm.gc.intern("char-foldcase"), 1),
        Op::Push,
        Op::ReferFreePush(3),
        Op::ReferGlobalCall(vm.gc.intern("display"), 2),
        Op::ReferFree(2),
        Op::ReadChar,
        Op::Push,
        Op::ReferFree(1),
        Op::Indirect,
        Op::LocalTailCall(1, 4),
        Op::Leave(1),
        Op::Return(1),
        Op::AssignLocal(0),
        Op::Frame(7),
        Op::ReferFree(0),
        Op::ReadChar,
        Op::Push,
        Op::ReferLocal(0),
        Op::Indirect,
        Op::LocalCall(1),
        Op::Leave(1),
        Op::PushEnter(1),
        Op::Frame(4),
        Op::ReferFreePush(6),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(5, 2),
        Op::Test(3),
        Op::ReferFree(6),
        Op::LocalJmp(2),
        Op::ReferLocal(0),
        Op::Leave(1),
        Op::Leave(2),
        Op::Leave(1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("string-foldcase")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(35),
        Op::ReferFreePush(27),
        Op::ReferFreePush(158),
        Op::ReferFreePush(223),
        Op::ReferFreePush(56),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 5},
        Op::LetFrame(43),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::ReferFreePush(4),
        Op::Display(6),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(0, 1),
        Op::PushEnter(1),
        Op::LetFrame(41),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::Display(6),
        Op::Frame(2),
        Op::ReferGlobalCall(vm.gc.intern("open-string-output-port"), 0),
        Op::Receive(2, 0),
        Op::Enter(2),
        Op::LetFrame(41),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(3),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(2),
        Op::Display(8),
        Op::LetFrame(38),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::Display(6),
        Op::Enter(0),
        Op::LetFrame(38),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(5),
        Op::ReferFreePush(0),
        Op::Display(6),
        Op::ReferFree(1),
        Op::ReadChar,
        Op::PushEnter(1),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(5, 1),
        Op::Test(4),
        Op::Frame(140),
        Op::ReferFreeCall(4, 0),
        Op::LocalJmp(138),
        Op::LetFrame(36),
        Op::ReferFreePush(3),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(0),
        Op::Display(7),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("char-general-category"), 1),
        Op::PushEnter(1),
        Op::Frame(4),
        Op::ReferLocalPushConstant(0, list6867),
        Op::Push,
        Op::ReferFreeCall(6, 2),
        Op::Test(110),
        Op::Frame(7),
        Op::Frame(3),
        Op::ReferFreePush(5),
        Op::ReferGlobalCall(vm.gc.intern("char-titlecase"), 1),
        Op::Push,
        Op::ReferFreePush(4),
        Op::ReferGlobalCall(vm.gc.intern("display"), 2),
        Op::LetFrame(26),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::Display(8),
        Op::ReferFree(2),
        Op::ReadChar,
        Op::PushEnter(1),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(7, 1),
        Op::Test(4),
        Op::Frame(83),
        Op::ReferFreeCall(6, 0),
        Op::LocalJmp(81),
        Op::LetFrame(24),
        Op::ReferFreePush(5),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Display(8),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("char-general-category"), 1),
        Op::PushEnter(1),
        Op::Frame(4),
        Op::ReferLocalPushConstant(0, list6868),
        Op::Push,
        Op::ReferFreeCall(7, 2),
        Op::Test(14),
        Op::Frame(7),
        Op::Frame(3),
        Op::ReferFreePush(6),
        Op::ReferGlobalCall(vm.gc.intern("char-downcase"), 1),
        Op::Push,
        Op::ReferFreePush(5),
        Op::ReferGlobalCall(vm.gc.intern("display"), 2),
        Op::ReferFree(4),
        Op::ReadChar,
        Op::Push,
        Op::Shiftj(1, 4, 1),
        Op::LocalJmp(-37),
        Op::LocalJmp(48),
        Op::Frame(4),
        Op::ReferLocalPushConstant(0, list6869),
        Op::Push,
        Op::ReferFreeCall(7, 2),
        Op::Test(23),
        Op::Frame(4),
        Op::ReferFreePush(6),
        Op::ConstantPush(list6870),
        Op::ReferFreeCall(7, 2),
        Op::Test(11),
        Op::Frame(4),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferGlobalCall(vm.gc.intern("display"), 2),
        Op::ReferFree(4),
        Op::ReadChar,
        Op::Push,
        Op::Shiftj(1, 4, 1),
        Op::LocalJmp(-57),
        Op::LocalJmp(28),
        Op::Frame(4),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferGlobalCall(vm.gc.intern("display"), 2),
        Op::Shiftj(0, 12, 4),
        Op::LocalJmp(-120),
        Op::LocalJmp(21),
        Op::ConstantPush(sym28),
        Op::ReferLocal(0),
        Op::BranchNotEqv(12),
        Op::Frame(4),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferGlobalCall(vm.gc.intern("display"), 2),
        Op::Frame(3),
        Op::ReferFreePush(4),
        Op::ReferFreeCall(0, 1),
        Op::Push,
        Op::Shiftj(1, 4, 1),
        Op::LocalJmp(-78),
        Op::LocalJmp(7),
        Op::Frame(4),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferGlobalCall(vm.gc.intern("display"), 2),
        Op::Shiftj(0, 12, 4),
        Op::LocalJmp(-141),
        Op::Leave(1),
        Op::Leave(1),
        Op::LocalJmp(10),
        Op::Frame(4),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferGlobalCall(vm.gc.intern("display"), 2),
        Op::ReferFree(3),
        Op::ReadChar,
        Op::Push,
        Op::Shiftj(1, 4, 1),
        Op::LocalJmp(-142),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(0),
        Op::PushEnter(1),
        Op::Frame(4),
        Op::ReferFreePush(7),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(6, 2),
        Op::Test(3),
        Op::ReferFree(7),
        Op::LocalJmp(2),
        Op::ReferLocal(0),
        Op::Leave(1),
        Op::Leave(2),
        Op::Leave(1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("string-titlecase")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(48),
        Op::ReferFreePush(20),
        Op::ReferFreePush(98),
        Op::ReferFreePush(100),
        Op::ReferFreePush(191),
        Op::ReferFreePush(101),
        Op::ReferFreePush(152),
        Op::ReferFreePush(47),
        Op::ReferFreePush(24),
        Op::ReferFreePush(19),
        Op::ReferFreePush(96),
        Op::ReferFreePush(46),
        Op::ReferFreePush(18),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 13},
        Op::LetFrame(19),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::Display(13),
        Op::Undef,
        Op::Push,
        Op::Box(0),
        Op::Enter(1),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 2},
        Op::Frame(5),
        Op::ConstantPush(str48),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(1, 3),
        Op::Push,
        Op::ReferFree(0),
        Op::TailCall(1, 2),
        Op::Return(2),
        Op::AssignLocal(0),
        Op::ReferGlobal(vm.gc.intern("compose-hashable")),
        Op::Test(3),
        Op::Undef,
        Op::LocalJmp(89),
        Op::LetFrame(6),
        Op::ReferFreePush(11),
        Op::ReferFreePush(12),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(12),
        Op::Display(8),
        Op::Frame(2),
        Op::ReferFreeCall(0, 0),
        Op::PushEnter(1),
        Op::Frame(13),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(7),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 2},
        Op::ReferFreePush(1),
        Op::ReferLocalPushConstant(0, Object::True),
        Op::Push,
        Op::ReferFree(0),
        Op::TailCall(3, 1),
        Op::Return(1),
        Op::Push,
        Op::ReferGlobalPush(vm.gc.intern("composition-exclusion-list")),
        Op::ReferGlobalCall(vm.gc.intern("for-each"), 2),
        Op::LetFrame(3),
        Op::ReferFreePush(5),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(7),
        Op::ReferFreePush(0),
        Op::Display(8),
        Op::Frame(2),
        Op::ReferFreeCall(0, 0),
        Op::PushEnter(1),
        Op::Frame(45),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 8},
        Op::Frame(4),
        Op::ReferLocal(0),
        Op::CdrPush,
        Op::ReferFreeCall(7, 1),
        Op::PushConstant(Object::Number(2)),
        Op::BranchNotNumberEqual(25),
        Op::Frame(6),
        Op::ReferFreePush(6),
        Op::ReferLocal(0),
        Op::Cadr,
        Op::Push,
        Op::ReferFreeCall(5, 2),
        Op::Not,
        Op::Test(17),
        Op::ReferFreePush(4),
        Op::Frame(7),
        Op::ReferFree(3),
        Op::Indirect,
        Op::Push,
        Op::ReferLocal(0),
        Op::CdrPush,
        Op::ReferFreeCall(2, 2),
        Op::PushFrame(4),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::ReferFreeCall(1, 1),
        Op::Push,
        Op::ReferFree(0),
        Op::TailCall(3, 1),
        Op::Return(1),
        Op::Constant(Object::Nil),
        Op::Return(1),
        Op::Push,
        Op::ReferGlobalPush(vm.gc.intern("canonical-decompose-list")),
        Op::ReferGlobalCall(vm.gc.intern("for-each"), 2),
        Op::ReferLocal(0),
        Op::AssignGlobal(vm.gc.intern("compose-hashable")),
        Op::Leave(1),
        Op::Leave(1),
        Op::LetFrame(13),
        Op::ReferFreePush(6),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(9),
        Op::ReferFreePush(2),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::Display(8),
        Op::Frame(3),
        Op::ReferFreePush(1),
        Op::ReferFreeCall(0, 1),
        Op::PushEnter(1),
        Op::LetFrame(11),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(6),
        Op::Display(9),
        Op::Frame(4),
        Op::ReferFreePush(1),
        Op::ConstantPush(Object::Number(0)),
        Op::ReferFreeCall(0, 2),
        Op::PushEnter(1),
        Op::LetFrame(8),
        Op::ReferFreePush(8),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(0),
        Op::Display(8),
        Op::Frame(6),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("char-combination-class"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("zero?"), 1),
        Op::Test(3),
        Op::Constant(Object::Number(0)),
        Op::LocalJmp(2),
        Op::Constant(Object::Number(256)),
        Op::PushEnter(1),
        Op::LetFrame(5),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::Display(9),
        Op::Undef,
        Op::Push,
        Op::Box(0),
        Op::Enter(1),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::Closure {size: 0, arg_len: 5, is_optional_arg: false, num_free_vars: 8},
        Op::ReferLocalPush(0),
        Op::ReferFree(7),
        Op::BranchNotGe(7),
        Op::ReferFreePush(6),
        Op::ConstantPush(Object::Number(0)),
        Op::ReferLocalPush(4),
        Op::ReferGlobal(vm.gc.intern("substring")),
        Op::TailCall(3, 5),
        Op::Return(5),
        Op::LetFrame(46),
        Op::ReferLocalPush(2),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(6),
        Op::ReferLocalPush(3),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(4),
        Op::ReferFreePush(0),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::Display(13),
        Op::Frame(4),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(0, 2),
        Op::PushEnter(1),
        Op::LetFrame(43),
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(1),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::Display(12),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("char-combination-class"), 1),
        Op::PushEnter(1),
        Op::LetFrame(41),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(9),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(10),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::Display(15),
        Op::ReferFreePush(5),
        Op::Constant(Object::Number(0)),
        Op::BranchNotNumberEqual(2),
        Op::LocalJmp(4),
        Op::ReferFreePush(5),
        Op::ReferLocal(0),
        Op::NumberLt,
        Op::Test(28),
        Op::LetFrame(9),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(3),
        Op::ReferFreePush(4),
        Op::Display(5),
        Op::ReferFreePush(0),
        Op::ReferFreePush(1),
        Op::Enter(2),
        Op::Frame(16),
        Op::ReferGlobalPush(vm.gc.intern("compose-hashable")),
        Op::Frame(11),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(4, 1),
        Op::PushFrame(3),
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(4, 1),
        Op::Push,
        Op::ReferFree(3),
        Op::Indirect,
        Op::LocalCall(2),
        Op::PushConstant(Object::False),
        Op::Push,
        Op::ReferFreeCall(2, 3),
        Op::Leave(2),
        Op::PushEnter(1),
        Op::ReferLocal(0),
        Op::Test(32),
        Op::LetFrame(11),
        Op::ReferFreePush(14),
        Op::ReferFreePush(13),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::Display(7),
        Op::ReferLocalPush(0),
        Op::Enter(1),
        Op::Frame(5),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreeCall(3, 3),
        Op::ReferFreePush(2),
        Op::Constant(Object::Number(1)),
        Op::NumberAddPush,
        Op::ReferLocalPush(0),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("char-combination-class"), 1),
        Op::Push,
        Op::ReferFreePush(5),
        Op::ReferFreePush(1),
        Op::ReferFree(0),
        Op::Indirect,
        Op::LocalTailCall(5, 17),
        Op::Leave(1),
        Op::LocalJmp(34),
        Op::Frame(5),
        Op::ReferFreePush(14),
        Op::ReferFreePush(10),
        Op::ReferFreePush(3),
        Op::ReferFreeCall(12, 3),
        Op::ReferFreePush(7),
        Op::Constant(Object::Number(0)),
        Op::BranchNotNumberEqual(14),
        Op::ReferFreePush(11),
        Op::Constant(Object::Number(1)),
        Op::NumberAddPush,
        Op::ReferFreePush(3),
        Op::ReferFreePush(7),
        Op::ReferFreePush(10),
        Op::ReferFreePush(10),
        Op::Constant(Object::Number(1)),
        Op::NumberAddPush,
        Op::ReferFree(9),
        Op::Indirect,
        Op::LocalTailCall(5, 14),
        Op::LocalJmp(13),
        Op::ReferFreePush(11),
        Op::Constant(Object::Number(1)),
        Op::NumberAddPush,
        Op::ReferFreePush(4),
        Op::ReferFreePush(7),
        Op::ReferFreePush(13),
        Op::ReferFreePush(10),
        Op::Constant(Object::Number(1)),
        Op::NumberAddPush,
        Op::ReferFree(9),
        Op::Indirect,
        Op::LocalTailCall(5, 14),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Return(5),
        Op::AssignLocal(0),
        Op::ConstantPush(Object::Number(1)),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ConstantPush(Object::Number(0)),
        Op::ConstantPush(Object::Number(1)),
        Op::ReferLocal(0),
        Op::Indirect,
        Op::LocalTailCall(5, 16),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("compose")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(56),
        Op::ReferFreePush(152),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: true, num_free_vars: 2},
        Op::ReferFreePush(1),
        Op::Frame(4),
        Op::ReferGlobalPush(vm.gc.intern("string-foldcase")),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("map"), 2),
        Op::Push,
        Op::ReferFree(0),
        Op::TailCall(2, 1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("string-ci=?")),
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(152),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: true, num_free_vars: 1},
        Op::ReferGlobalPush(vm.gc.intern("string<?")),
        Op::Frame(4),
        Op::ReferGlobalPush(vm.gc.intern("string-foldcase")),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("map"), 2),
        Op::Push,
        Op::ReferFree(0),
        Op::TailCall(2, 1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("string-ci<?")),
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(152),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: true, num_free_vars: 1},
        Op::ReferGlobalPush(vm.gc.intern("string>?")),
        Op::Frame(4),
        Op::ReferGlobalPush(vm.gc.intern("string-foldcase")),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("map"), 2),
        Op::Push,
        Op::ReferFree(0),
        Op::TailCall(2, 1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("string-ci>?")),
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(152),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: true, num_free_vars: 1},
        Op::ReferGlobalPush(vm.gc.intern("string<=?")),
        Op::Frame(4),
        Op::ReferGlobalPush(vm.gc.intern("string-foldcase")),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("map"), 2),
        Op::Push,
        Op::ReferFree(0),
        Op::TailCall(2, 1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("string-ci<=?")),
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(152),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: true, num_free_vars: 1},
        Op::ReferGlobalPush(vm.gc.intern("string>=?")),
        Op::Frame(4),
        Op::ReferGlobalPush(vm.gc.intern("string-foldcase")),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("map"), 2),
        Op::Push,
        Op::ReferFree(0),
        Op::TailCall(2, 1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("string-ci>=?")),
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(46),
        Op::ReferFreePush(101),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 2},
        Op::ReferGlobal(vm.gc.intern("canonical-decompose-hashtable")),
        Op::Test(3),
        Op::Undef,
        Op::LocalJmp(5),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("canonical-decompose-list")),
        Op::ReferGlobalCall(vm.gc.intern("alist->eq-hash-table"), 1),
        Op::AssignGlobal(vm.gc.intern("canonical-decompose-hashtable")),
        Op::ReferGlobalPush(vm.gc.intern("canonical-decompose-hashtable")),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(1, 1),
        Op::PushConstant(Object::False),
        Op::Push,
        Op::ReferFree(0),
        Op::TailCall(3, 1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("canonical-decompose")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(47),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 1},
        Op::LetFrame(6),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(0),
        Op::Display(3),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("canonical-decompose"), 1),
        Op::PushEnter(1),
        Op::ReferLocal(0),
        Op::Test(17),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 2},
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(1, 1),
        Op::Push,
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("canonical-decompose-char")),
        Op::TailCall(2, 1),
        Op::Return(1),
        Op::Push,
        Op::ReferLocalPush(0),
        Op::ReferGlobal(vm.gc.intern("for-each")),
        Op::TailCall(2, 5),
        Op::LocalJmp(5),
        Op::ReferFreePush(0),
        Op::ReferFreePush(1),
        Op::ReferGlobal(vm.gc.intern("display")),
        Op::TailCall(2, 5),
        Op::Leave(1),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("canonical-decompose-char")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(46),
        Op::ReferFreePush(101),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 2},
        Op::ReferGlobal(vm.gc.intern("compatible-decompose-hashtable")),
        Op::Test(3),
        Op::Undef,
        Op::LocalJmp(5),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("compatible-decompose-list")),
        Op::ReferGlobalCall(vm.gc.intern("alist->eq-hash-table"), 1),
        Op::AssignGlobal(vm.gc.intern("compatible-decompose-hashtable")),
        Op::ReferGlobalPush(vm.gc.intern("compatible-decompose-hashtable")),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(1, 1),
        Op::PushConstant(Object::False),
        Op::Push,
        Op::ReferFree(0),
        Op::TailCall(3, 1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("compatible-decompose")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(47),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 1},
        Op::LetFrame(10),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(0),
        Op::Display(3),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("compatible-decompose"), 1),
        Op::PushEnter(1),
        Op::ReferLocal(0),
        Op::Test(17),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 2},
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(1, 1),
        Op::Push,
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("compatible-decompose-char")),
        Op::TailCall(2, 1),
        Op::Return(1),
        Op::Push,
        Op::ReferLocalPush(0),
        Op::ReferGlobal(vm.gc.intern("for-each")),
        Op::TailCall(2, 5),
        Op::LocalJmp(34),
        Op::LetFrame(6),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(0),
        Op::Display(4),
        Op::Frame(3),
        Op::ReferFreePush(0),
        Op::ReferGlobalCall(vm.gc.intern("canonical-decompose"), 1),
        Op::PushEnter(1),
        Op::ReferLocal(0),
        Op::Test(17),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 2},
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(1, 1),
        Op::Push,
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("compatible-decompose-char")),
        Op::TailCall(2, 1),
        Op::Return(1),
        Op::Push,
        Op::ReferLocalPush(0),
        Op::ReferGlobal(vm.gc.intern("for-each")),
        Op::TailCall(2, 8),
        Op::LocalJmp(5),
        Op::ReferFreePush(0),
        Op::ReferFreePush(2),
        Op::ReferGlobal(vm.gc.intern("display")),
        Op::TailCall(2, 8),
        Op::Leave(1),
        Op::Leave(1),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("compatible-decompose-char")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(98),
        Op::ReferFreePush(100),
        Op::ReferFreePush(46),
        Op::ReferFreePush(101),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 4},
        Op::ReferGlobal(vm.gc.intern("combination-class-hashtable")),
        Op::Test(3),
        Op::Undef,
        Op::LocalJmp(35),
        Op::LetFrame(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(3),
        Op::Display(2),
        Op::Frame(2),
        Op::ReferFreeCall(0, 0),
        Op::PushEnter(1),
        Op::Frame(24),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 2},
        Op::ReferFreePush(1),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 3},
        Op::ReferFreePush(2),
        Op::ReferLocalPush(0),
        Op::ReferFree(1),
        Op::CarPush,
        Op::ReferFree(0),
        Op::TailCall(3, 1),
        Op::Return(1),
        Op::Push,
        Op::ReferLocal(0),
        Op::CdrPush,
        Op::ReferGlobal(vm.gc.intern("for-each")),
        Op::TailCall(2, 1),
        Op::Return(1),
        Op::Push,
        Op::ReferGlobalPush(vm.gc.intern("combination-class-list")),
        Op::ReferGlobalCall(vm.gc.intern("for-each"), 2),
        Op::ReferLocal(0),
        Op::AssignGlobal(vm.gc.intern("combination-class-hashtable")),
        Op::Leave(1),
        Op::ReferGlobalPush(vm.gc.intern("combination-class-hashtable")),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(1, 1),
        Op::PushConstant(Object::Number(0)),
        Op::Push,
        Op::ReferFree(0),
        Op::TailCall(3, 1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("char-combination-class")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(24),
        Op::ReferFreePush(19),
        Op::ReferFreePush(96),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 3},
        Op::LetFrame(32),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::ReferFreePush(1),
        Op::Display(3),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(0, 1),
        Op::PushEnter(1),
        Op::LetFrame(30),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::Display(3),
        Op::Frame(2),
        Op::ReferGlobalCall(vm.gc.intern("open-string-output-port"), 0),
        Op::Receive(2, 0),
        Op::Enter(2),
        Op::LetFrame(30),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::Display(5),
        Op::ConstantPush(Object::Number(0)),
        Op::Enter(1),
        Op::ReferLocalPush(0),
        Op::ReferFree(4),
        Op::BranchNotNumberEqual(4),
        Op::ReferFree(3),
        Op::TailCall(0, 11),
        Op::LocalJmp(109),
        Op::Frame(8),
        Op::Frame(4),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(1, 2),
        Op::Push,
        Op::ReferFreePush(0),
        Op::ReferGlobalCall(vm.gc.intern("display"), 2),
        Op::LetFrame(24),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::ReferFreePush(2),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(1),
        Op::ReferFreePush(4),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::Display(10),
        Op::LetFrame(11),
        Op::ReferFreePush(3),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(3),
        Op::Display(5),
        Op::ReferLocalPushConstant(0, Object::Number(1)),
        Op::NumberAddPush,
        Op::ReferFreePush(0),
        Op::Enter(2),
        Op::LetFrame(8),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(3),
        Op::Display(5),
        Op::ReferLocalPush(0),
        Op::Enter(1),
        Op::ReferFreePush(4),
        Op::ReferLocal(0),
        Op::BranchNotNumberEqual(3),
        Op::ReferLocal(0),
        Op::LocalJmp(18),
        Op::Frame(10),
        Op::Frame(7),
        Op::Frame(4),
        Op::ReferFreePush(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(2, 2),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("char-combination-class"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("zero?"), 1),
        Op::Test(3),
        Op::ReferLocal(0),
        Op::LocalJmp(5),
        Op::ReferLocalPushConstant(0, Object::Number(1)),
        Op::NumberAddPush,
        Op::Shiftj(1, 1, 0),
        Op::LocalJmp(-21),
        Op::Leave(1),
        Op::Leave(2),
        Op::PushEnter(1),
        Op::ReferLocalPush(0),
        Op::ReferFree(2),
        Op::NumberSubPush,
        Op::Constant(Object::Number(1)),
        Op::BranchNotGt(34),
        Op::Frame(34),
        Op::ReferFreePush(8),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 1},
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("display")),
        Op::TailCall(2, 1),
        Op::Return(1),
        Op::PushFrame(22),
        Op::Frame(19),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 0},
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("char-combination-class"), 1),
        Op::PushFrame(3),
        Op::ReferLocalPush(1),
        Op::ReferGlobalCall(vm.gc.intern("char-combination-class"), 1),
        Op::NumberLt,
        Op::Return(2),
        Op::PushFrame(7),
        Op::ReferFreePush(1),
        Op::ReferFreePush(2),
        Op::Constant(Object::Number(1)),
        Op::NumberAddPush,
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("substring"), 3),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("string-stable-sort!"), 2),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("string->list"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("for-each"), 2),
        Op::LocalJmp(2),
        Op::Undef,
        Op::ReferLocalPush(0),
        Op::Shiftj(1, 4, 1),
        Op::LocalJmp(-112),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(2),
        Op::Leave(1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("canonical-sort")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(24),
        Op::ReferFreePush(19),
        Op::ReferFreePush(96),
        Op::ReferFreePush(18),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 4},
        Op::LetFrame(32),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::ReferFreePush(2),
        Op::Display(5),
        Op::Frame(3),
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(0, 1),
        Op::PushEnter(1),
        Op::LetFrame(30),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::Display(5),
        Op::ConstantPush(Object::Number(0)),
        Op::Enter(1),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(4),
        Op::Constant(Object::Number(1)),
        Op::NumberSub,
        Op::BranchNotNumberEqual(3),
        Op::ReferFree(3),
        Op::LocalJmp(74),
        Op::LetFrame(27),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Display(6),
        Op::ReferFreePush(4),
        Op::Constant(Object::Number(1)),
        Op::NumberSubPush,
        Op::Enter(1),
        Op::ReferFreePush(5),
        Op::ReferLocal(0),
        Op::BranchNotNumberEqual(7),
        Op::ReferFreePush(5),
        Op::Constant(Object::Number(1)),
        Op::NumberAddPush,
        Op::Shiftj(1, 4, 1),
        Op::LocalJmp(-26),
        Op::LocalJmp(52),
        Op::Frame(12),
        Op::Frame(4),
        Op::ReferFreePush(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(2, 2),
        Op::PushFrame(5),
        Op::ReferFreePush(3),
        Op::ReferLocalPushConstant(0, Object::Number(1)),
        Op::NumberSubPush,
        Op::ReferFreeCall(2, 2),
        Op::Push,
        Op::ReferFreeCall(1, 2),
        Op::Test(34),
        Op::LetFrame(13),
        Op::ReferFreePush(3),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(2),
        Op::ReferFreePush(0),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::Display(6),
        Op::Frame(4),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(0, 2),
        Op::PushEnter(1),
        Op::Frame(11),
        Op::ReferFreePush(1),
        Op::ReferFreePush(4),
        Op::Frame(6),
        Op::ReferFreePush(1),
        Op::ReferFreePush(4),
        Op::Constant(Object::Number(1)),
        Op::NumberSubPush,
        Op::ReferFreeCall(0, 2),
        Op::Push,
        Op::ReferFreeCall(2, 3),
        Op::Frame(7),
        Op::ReferFreePush(1),
        Op::ReferFreePush(4),
        Op::Constant(Object::Number(1)),
        Op::NumberSubPush,
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(2, 3),
        Op::Leave(1),
        Op::LocalJmp(2),
        Op::Undef,
        Op::ReferLocalPushConstant(0, Object::Number(1)),
        Op::NumberSubPush,
        Op::Shiftj(1, 1, 0),
        Op::LocalJmp(-59),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("string-stable-sort!")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(35),
        Op::ReferFreePush(27),
        Op::ReferFreePush(56),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 3},
        Op::LetFrame(11),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::ReferFreePush(2),
        Op::Display(4),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(0, 1),
        Op::PushEnter(1),
        Op::LetFrame(9),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::Display(4),
        Op::Frame(2),
        Op::ReferGlobalCall(vm.gc.intern("open-string-output-port"), 0),
        Op::Receive(2, 0),
        Op::Enter(2),
        Op::LetFrame(9),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(0),
        Op::Display(6),
        Op::LetFrame(6),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(3),
        Op::Display(4),
        Op::ReferFree(0),
        Op::ReadChar,
        Op::PushEnter(1),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(3, 1),
        Op::Test(7),
        Op::Frame(15),
        Op::Frame(2),
        Op::ReferFreeCall(2, 0),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("canonical-sort"), 1),
        Op::LocalJmp(10),
        Op::Frame(4),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::ReferGlobalCall(vm.gc.intern("canonical-decompose-char"), 2),
        Op::ReferFree(0),
        Op::ReadChar,
        Op::Push,
        Op::Shiftj(1, 1, 0),
        Op::LocalJmp(-18),
        Op::Leave(1),
        Op::PushEnter(1),
        Op::Frame(4),
        Op::ReferFreePush(5),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(4, 2),
        Op::Test(3),
        Op::ReferFree(5),
        Op::LocalJmp(2),
        Op::ReferLocal(0),
        Op::Leave(1),
        Op::Leave(2),
        Op::Leave(1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("string-normalize-nfd")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(35),
        Op::ReferFreePush(27),
        Op::ReferFreePush(56),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 3},
        Op::LetFrame(11),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::ReferFreePush(2),
        Op::Display(4),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(0, 1),
        Op::PushEnter(1),
        Op::LetFrame(9),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::Display(4),
        Op::Frame(2),
        Op::ReferGlobalCall(vm.gc.intern("open-string-output-port"), 0),
        Op::Receive(2, 0),
        Op::Enter(2),
        Op::LetFrame(9),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(0),
        Op::Display(6),
        Op::LetFrame(6),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(3),
        Op::Display(4),
        Op::ReferFree(0),
        Op::ReadChar,
        Op::PushEnter(1),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(3, 1),
        Op::Test(7),
        Op::Frame(15),
        Op::Frame(2),
        Op::ReferFreeCall(2, 0),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("canonical-sort"), 1),
        Op::LocalJmp(10),
        Op::Frame(4),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::ReferGlobalCall(vm.gc.intern("compatible-decompose-char"), 2),
        Op::ReferFree(0),
        Op::ReadChar,
        Op::Push,
        Op::Shiftj(1, 1, 0),
        Op::LocalJmp(-18),
        Op::Leave(1),
        Op::PushEnter(1),
        Op::Frame(4),
        Op::ReferFreePush(5),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(4, 2),
        Op::Test(3),
        Op::ReferFree(5),
        Op::LocalJmp(2),
        Op::ReferLocal(0),
        Op::Leave(1),
        Op::Leave(2),
        Op::Leave(1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("string-normalize-nfkd")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(24),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 1},
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("string-normalize-nfd"), 1),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("compose")),
        Op::TailCall(1, 1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("string-normalize-nfc")),
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(24),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 1},
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("string-normalize-nfkd"), 1),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("compose")),
        Op::TailCall(1, 1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("string-normalize-nfkc")),
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(281),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 1},
        Op::Closure {size: 0, arg_len: 0, is_optional_arg: false, num_free_vars: 0},
        Op::Constant(Object::True),
        Op::Return(0),
        Op::Push,
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::Closure {size: 0, arg_len: 0, is_optional_arg: false, num_free_vars: 2},
        Op::ReferFreePush(1),
        Op::ReferFree(0),
        Op::TailCall(1, 0),
        Op::Return(0),
        Op::Push,
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::Closure {size: 0, arg_len: 0, is_optional_arg: false, num_free_vars: 2},
        Op::ReferFreePush(1),
        Op::ReferFree(0),
        Op::TailCall(1, 0),
        Op::Return(0),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("dynamic-wind")),
        Op::TailCall(3, 2),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("call-with-port")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(531),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 1},
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(0, 1),
        Op::PushFrame(3),
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(0, 1),
        Op::NumberGe,
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("file-newer?")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFree(284),
        Op::DefineGlobal(vm.gc.intern("fasl-write!")),
        Op::ReferFree(285),
        Op::DefineGlobal(vm.gc.intern("fasl-read!")),
        Op::ReferFree(151),
        Op::DefineGlobal(vm.gc.intern("eval-compiled!")),
        Op::ReferFreePush(42),
        Op::ReferFreePush(22),
        Op::ReferFreePush(520),
        Op::ReferFreePush(32),
        Op::ReferFreePush(464),
        Op::ReferFreePush(56),
        Op::Closure {size: 0, arg_len: 0, is_optional_arg: false, num_free_vars: 6},
        Op::LetFrame(12),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(5),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::Display(7),
        Op::Undef,
        Op::Push,
        Op::Box(0),
        Op::Enter(1),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 3},
        Op::ReferLocal(0),
        Op::Test(54),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(2, 1),
        Op::Test(50),
        Op::LetFrame(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(0),
        Op::ReferFreePush(1),
        Op::Display(3),
        Op::Frame(4),
        Op::ReferLocalPushConstant(0, str49),
        Op::Push,
        Op::ReferFreeCall(0, 2),
        Op::PushEnter(1),
        Op::MakeContinuation(4),
        Op::Push,
        Op::ReferLocalPush(0),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 3},
        Op::ReferLocalPush(0),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 1},
        Op::Constant(Object::True),
        Op::Test(3),
        Op::Constant(Object::False),
        Op::LocalJmp(2),
        Op::Undef,
        Op::Push,
        Op::ReferFree(0),
        Op::TailCall(1, 1),
        Op::Return(1),
        Op::Push,
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Closure {size: 0, arg_len: 0, is_optional_arg: false, num_free_vars: 3},
        Op::Frame(3),
        Op::ReferFreePush(2),
        Op::ReferFreeCall(1, 1),
        Op::Test(3),
        Op::Undef,
        Op::LocalJmp(4),
        Op::Frame(3),
        Op::ReferFreePush(2),
        Op::ReferFreeCall(0, 1),
        Op::ReferFree(2),
        Op::Return(0),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("with-exception-handler")),
        Op::TailCall(2, 1),
        Op::Return(1),
        Op::TailCall(1, 4),
        Op::Leave(1),
        Op::Return(1),
        Op::AssignLocal(0),
        Op::Frame(8),
        Op::Frame(3),
        Op::ConstantPush(str50),
        Op::ReferFreeCall(6, 1),
        Op::Push,
        Op::ReferLocal(0),
        Op::Indirect,
        Op::LocalCall(1),
        Op::Test(2),
        Op::LocalJmp(49),
        Op::Frame(8),
        Op::Frame(3),
        Op::ConstantPush(str51),
        Op::ReferFreeCall(6, 1),
        Op::Push,
        Op::ReferLocal(0),
        Op::Indirect,
        Op::LocalCall(1),
        Op::Test(2),
        Op::LocalJmp(39),
        Op::Frame(8),
        Op::Frame(3),
        Op::ConstantPush(str52),
        Op::ReferFreeCall(6, 1),
        Op::Push,
        Op::ReferLocal(0),
        Op::Indirect,
        Op::LocalCall(1),
        Op::Test(2),
        Op::LocalJmp(29),
        Op::Frame(6),
        Op::Frame(2),
        Op::ReferFreeCall(5, 0),
        Op::PushConstant(str53),
        Op::Push,
        Op::ReferFreeCall(4, 2),
        Op::Test(8),
        Op::Frame(3),
        Op::ConstantPush(str54),
        Op::ReferFreeCall(2, 1),
        Op::Test(4),
        Op::Constant(str55),
        Op::Test(2),
        Op::LocalJmp(15),
        Op::Frame(6),
        Op::Frame(2),
        Op::ReferFreeCall(5, 0),
        Op::PushConstant(str56),
        Op::Push,
        Op::ReferFreeCall(4, 2),
        Op::Test(4),
        Op::Constant(str57),
        Op::Test(2),
        Op::LocalJmp(5),
        Op::ConstantPush(str58),
        Op::ReferLocal(0),
        Op::Indirect,
        Op::LocalTailCall(1, 3),
        Op::Leave(1),
        Op::Return(0),
        Op::DefineGlobal(vm.gc.intern("create-mosh-cache-dir")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(19),
        Op::ReferFreePush(96),
        Op::ReferFreePush(30),
        Op::ReferFreePush(231),
        Op::ReferFreePush(22),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 5},
        Op::Frame(6),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(4, 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("zero?"), 1),
        Op::Test(2),
        Op::LocalJmp(9),
        Op::Frame(8),
        Op::Frame(4),
        Op::ReferLocalPushConstant(0, Object::Number(0)),
        Op::Push,
        Op::ReferFreeCall(3, 2),
        Op::PushConstant(Object::Char('/')),
        Op::Push,
        Op::ReferFreeCall(2, 2),
        Op::Test(3),
        Op::ReferLocal(0),
        Op::Return(1),
        Op::Frame(2),
        Op::ReferFreeCall(1, 0),
        Op::PushConstant(str59),
        Op::Push,
        Op::ReferLocalPush(0),
        Op::ReferFree(0),
        Op::TailCall(3, 1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("expand-path")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(110),
        Op::ReferFreePush(152),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: true, num_free_vars: 2},
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("display"), 1),
        Op::Frame(2),
        Op::ReferGlobalCall(vm.gc.intern("newline"), 0),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(0),
        Op::ReferFree(0),
        Op::TailCall(2, 1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("p")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(469),
        Op::ReferFreePush(143),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 2},
        Op::ReferLocalPush(0),
        Op::Frame(3),
        Op::ConstantPush(Object::Nil),
        Op::ReferGlobalCall(vm.gc.intern("make-file-options"), 1),
        Op::PushConstant(sym16),
        Op::PushFrame(2),
        Op::ReferFreeCall(1, 0),
        Op::Push,
        Op::ReferFree(0),
        Op::TailCall(4, 1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("open-output-file")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(469),
        Op::ReferFreePush(144),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 2},
        Op::ReferLocalPush(0),
        Op::Frame(3),
        Op::ConstantPush(Object::Nil),
        Op::ReferGlobalCall(vm.gc.intern("make-file-options"), 1),
        Op::PushConstant(sym16),
        Op::PushFrame(2),
        Op::ReferFreeCall(1, 0),
        Op::Push,
        Op::ReferFree(0),
        Op::TailCall(4, 1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("open-input-file")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(102),
        Op::ReferFreePush(101),
        Op::Closure {size: 0, arg_len: 3, is_optional_arg: false, num_free_vars: 2},
        Op::LetFrame(16),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::Display(5),
        Op::Frame(3),
        Op::ReferLocalPush(2),
        Op::ReferFreeCall(0, 1),
        Op::PushEnter(1),
        Op::LetFrame(14),
        Op::ReferFreePush(4),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::Display(5),
        Op::ReferLocal(0),
        Op::VectorLength,
        Op::PushEnter(1),
        Op::LetFrame(13),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(4),
        Op::Display(6),
        Op::ConstantPush(Object::Number(0)),
        Op::ReferFreePush(0),
        Op::Enter(2),
        Op::ReferFreePush(5),
        Op::ReferLocal(0),
        Op::BranchNotNumberEqual(3),
        Op::ReferLocal(1),
        Op::LocalJmp(20),
        Op::ReferLocalPushConstant(0, Object::Number(1)),
        Op::NumberAddPush,
        Op::Frame(14),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(4),
        Op::ReferLocal(0),
        Op::VectorRef,
        Op::PushFrame(7),
        Op::ReferFreePush(3),
        Op::ReferFreePush(4),
        Op::ReferLocal(0),
        Op::VectorRef,
        Op::Push,
        Op::ReferFreeCall(2, 2),
        Op::Push,
        Op::ReferFreeCall(1, 3),
        Op::Push,
        Op::Shiftj(2, 2, 0),
        Op::LocalJmp(-23),
        Op::Leave(2),
        Op::Leave(1),
        Op::Leave(1),
        Op::Return(3),
        Op::DefineGlobal(vm.gc.intern("hashtable-fold-left")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFree(48),
        Op::DefineGlobal(vm.gc.intern("df")),
        Op::ReferGlobal(vm.gc.intern("display")),
        Op::DefineGlobal(vm.gc.intern("dd")),
        Op::ReferGlobal(vm.gc.intern("print")),
        Op::DefineGlobal(vm.gc.intern("pp")),
        Op::Constant(list6871),
        Op::DefineGlobal(vm.gc.intern("*free-vars-decl*")),
        Op::ReferFreePush(609),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 1},
        Op::ReferLocal(0),
        Op::PairP,
        Op::Test(8),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::ReferLocal(0),
        Op::CdrPush,
        Op::ReferFree(0),
        Op::TailCall(2, 1),
        Op::Return(1),
        Op::ReferLocal(0),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("make-list-with-src-slot")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 0, is_optional_arg: false, num_free_vars: 0},
        Op::ReferGlobal(vm.gc.intern("*command-line-args*")),
        Op::Return(0),
        Op::DefineGlobal(vm.gc.intern("command-line")),
        Op::Nop,
        Op::Closure {size: 0, arg_len: 0, is_optional_arg: false, num_free_vars: 0},
        Op::ReferGlobal(vm.gc.intern("%mosh-executable-name")),
        Op::Return(0),
        Op::DefineGlobal(vm.gc.intern("mosh-executable-name")),
        Op::Nop,
        Op::Closure {size: 0, arg_len: 0, is_optional_arg: false, num_free_vars: 0},
        Op::ReferGlobal(vm.gc.intern("*command-line-args*")),
        Op::Return(0),
        Op::DefineGlobal(vm.gc.intern("get-command-line")),
        Op::Nop,
        Op::ReferFreePush(48),
        Op::ReferFreePush(152),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: true, num_free_vars: 2},
        Op::ConstantPush(sym668),
        Op::Frame(5),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(0, 3),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("error")),
        Op::TailCall(2, 2),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("errorf")),
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(191),
        Op::ReferFreePush(578),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: true, num_free_vars: 2},
        Op::ReferLocalPush(0),
        Op::Frame(3),
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(1, 1),
        Op::Push,
        Op::ReferLocalPush(1),
        Op::ReferFree(0),
        Op::TailCall(3, 2),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("tuple")),
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(581),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 1},
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("tuple?"), 1),
        Op::Test(13),
        Op::Frame(3),
        Op::ReferLocalPush(1),
        Op::ReferGlobalCall(vm.gc.intern("zero?"), 1),
        Op::Test(5),
        Op::ReferLocalPush(0),
        Op::ReferFree(0),
        Op::TailCall(1, 2),
        Op::Return(2),
        Op::ReferLocalPush(0),
        Op::ReferLocalPushConstant(1, Object::Number(1)),
        Op::NumberSub,
        Op::SimpleStructRef,
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("tuple-ref")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(580),
        Op::Closure {size: 0, arg_len: 3, is_optional_arg: false, num_free_vars: 1},
        Op::Frame(3),
        Op::ReferLocalPush(1),
        Op::ReferGlobalCall(vm.gc.intern("zero?"), 1),
        Op::Test(6),
        Op::ConstantPush(sym669),
        Op::ConstantPush(str60),
        Op::ReferGlobal(vm.gc.intern("assertion-violation")),
        Op::TailCall(2, 3),
        Op::Return(3),
        Op::ReferLocalPush(0),
        Op::ReferLocalPushConstant(1, Object::Number(1)),
        Op::NumberSubPush,
        Op::ReferLocalPush(2),
        Op::ReferFree(0),
        Op::TailCall(3, 3),
        Op::Return(3),
        Op::DefineGlobal(vm.gc.intern("tuple-set!")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFree(577),
        Op::DefineGlobal(vm.gc.intern("tuple?")),
        Op::Closure {size: 0, arg_len: 6, is_optional_arg: false, num_free_vars: 0},
        Op::LetFrame(8),
        Op::Frame(9),
        Op::ConstantPush(sym670),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferLocalPush(3),
        Op::ReferLocalPush(4),
        Op::ReferLocalPush(5),
        Op::ReferGlobalCall(vm.gc.intern("tuple"), 7),
        Op::PushEnter(1),
        Op::ReferLocal(0),
        Op::Leave(1),
        Op::Return(6),
        Op::DefineGlobal(vm.gc.intern("make-rtd")),
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::Frame(4),
        Op::ReferLocalPushConstant(0, Object::Number(0)),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("tuple-ref"), 2),
        Op::PushConstant(sym670),
        Op::Eq,
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("record-type-descriptor?")),
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::ReferLocalPushConstant(0, Object::Number(1)),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("tuple-ref")),
        Op::TailCall(2, 1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("rtd-name")),
        Op::Nop,
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::ReferLocalPushConstant(0, Object::Number(2)),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("tuple-ref")),
        Op::TailCall(2, 1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("rtd-parent")),
        Op::Nop,
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::ReferLocalPushConstant(0, Object::Number(3)),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("tuple-ref")),
        Op::TailCall(2, 1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("rtd-uid")),
        Op::Nop,
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::ReferLocalPushConstant(0, Object::Number(4)),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("tuple-ref")),
        Op::TailCall(2, 1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("rtd-sealed?")),
        Op::Nop,
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::ReferLocalPushConstant(0, Object::Number(5)),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("tuple-ref")),
        Op::TailCall(2, 1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("rtd-opaque?")),
        Op::Nop,
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::ReferLocalPushConstant(0, Object::Number(6)),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("tuple-ref")),
        Op::TailCall(2, 1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("rtd-fields")),
        Op::Nop,
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 0},
        Op::LetFrame(4),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::Display(2),
        Op::ReferLocalPush(1),
        Op::Enter(1),
        Op::ReferFreePush(1),
        Op::ReferLocal(0),
        Op::BranchNotEq(2),
        Op::LocalJmp(9),
        Op::ReferLocal(0),
        Op::Test(7),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("rtd-parent"), 1),
        Op::Push,
        Op::Shiftj(1, 1, 0),
        Op::LocalJmp(-11),
        Op::Leave(1),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("rtd-ancestor?")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(191),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 1},
        Op::LetFrame(9),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::Display(2),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("rtd-parent"), 1),
        Op::PushConstant(Object::Number(0)),
        Op::PushEnter(2),
        Op::ReferLocal(0),
        Op::Test(16),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("rtd-parent"), 1),
        Op::Push,
        Op::ReferLocalPush(1),
        Op::Frame(6),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("rtd-fields"), 1),
        Op::Push,
        Op::ReferFreeCall(1, 1),
        Op::NumberAddPush,
        Op::Shiftj(2, 2, 0),
        Op::LocalJmp(-15),
        Op::LocalJmp(2),
        Op::ReferLocal(1),
        Op::Leave(2),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("rtd-inherited-field-count")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(191),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 1},
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("rtd-inherited-field-count"), 1),
        Op::PushFrame(6),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("rtd-fields"), 1),
        Op::Push,
        Op::ReferFreeCall(0, 1),
        Op::NumberAdd,
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("rtd-total-field-count")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("record-type-descriptor?"), 1),
        Op::Test(2),
        Op::LocalJmp(9),
        Op::Frame(8),
        Op::ConstantPush(sym671),
        Op::Frame(4),
        Op::ConstantPush(str61),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("wrong-type-argument-message"), 2),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("assertion-violation"), 2),
        Op::ReferLocalPush(0),
        Op::ReferGlobal(vm.gc.intern("rtd-name")),
        Op::TailCall(1, 1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("record-type-name")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("record-type-descriptor?"), 1),
        Op::Test(2),
        Op::LocalJmp(9),
        Op::Frame(8),
        Op::ConstantPush(sym671),
        Op::Frame(4),
        Op::ConstantPush(str62),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("wrong-type-argument-message"), 2),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("assertion-violation"), 2),
        Op::ReferLocalPush(0),
        Op::ReferGlobal(vm.gc.intern("rtd-parent")),
        Op::TailCall(1, 1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("record-type-parent")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("record-type-descriptor?"), 1),
        Op::Test(2),
        Op::LocalJmp(9),
        Op::Frame(8),
        Op::ConstantPush(sym671),
        Op::Frame(4),
        Op::ConstantPush(str63),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("wrong-type-argument-message"), 2),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("assertion-violation"), 2),
        Op::ReferLocalPush(0),
        Op::ReferGlobal(vm.gc.intern("rtd-uid")),
        Op::TailCall(1, 1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("record-type-uid")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("record-type-descriptor?"), 1),
        Op::Test(2),
        Op::LocalJmp(9),
        Op::Frame(8),
        Op::ConstantPush(sym671),
        Op::Frame(4),
        Op::ConstantPush(str64),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("wrong-type-argument-message"), 2),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("assertion-violation"), 2),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("rtd-uid"), 1),
        Op::Not,
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("record-type-generative?")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("record-type-descriptor?"), 1),
        Op::Test(2),
        Op::LocalJmp(9),
        Op::Frame(8),
        Op::ConstantPush(sym671),
        Op::Frame(4),
        Op::ConstantPush(str65),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("wrong-type-argument-message"), 2),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("assertion-violation"), 2),
        Op::ReferLocalPush(0),
        Op::ReferGlobal(vm.gc.intern("rtd-sealed?")),
        Op::TailCall(1, 1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("record-type-sealed?")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("record-type-descriptor?"), 1),
        Op::Test(2),
        Op::LocalJmp(9),
        Op::Frame(8),
        Op::ConstantPush(sym671),
        Op::Frame(4),
        Op::ConstantPush(str66),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("wrong-type-argument-message"), 2),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("assertion-violation"), 2),
        Op::ReferLocalPush(0),
        Op::ReferGlobal(vm.gc.intern("rtd-opaque?")),
        Op::TailCall(1, 1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("record-type-opaque?")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(4),
        Op::ReferFreePush(192),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 2},
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("record-type-descriptor?"), 1),
        Op::Test(2),
        Op::LocalJmp(9),
        Op::Frame(8),
        Op::ConstantPush(sym671),
        Op::Frame(4),
        Op::ConstantPush(str67),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("wrong-type-argument-message"), 2),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("assertion-violation"), 2),
        Op::Frame(7),
        Op::ReferFreePush(1),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("rtd-fields"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("map"), 2),
        Op::Push,
        Op::ReferFree(0),
        Op::TailCall(1, 1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("record-type-field-names")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(89),
        Op::ReferFreePush(483),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 2},
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("record-type-descriptor?"), 1),
        Op::Test(2),
        Op::LocalJmp(14),
        Op::Frame(13),
        Op::ConstantPush(sym671),
        Op::Frame(5),
        Op::ConstantPush(str68),
        Op::ReferLocalPushConstant(0, Object::Number(1)),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("wrong-type-argument-message"), 3),
        Op::PushFrame(4),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(1, 2),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("assertion-violation"), 3),
        Op::Frame(7),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("rtd-fields"), 1),
        Op::Push,
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(0, 2),
        Op::Car,
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("record-field-mutable?")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(89),
        Op::ReferFreePush(88),
        Op::ReferFreePush(191),
        Op::ReferFreePush(167),
        Op::ReferFreePush(95),
        Op::ReferFreePush(22),
        Op::ReferFreePush(20),
        Op::ReferFreePush(199),
        Op::ReferFreePush(582),
        Op::ReferFreePush(583),
        Op::Closure {size: 0, arg_len: 6, is_optional_arg: false, num_free_vars: 10},
        Op::ReferLocal(0),
        Op::SymbolP,
        Op::Test(2),
        Op::LocalJmp(18),
        Op::Frame(17),
        Op::ConstantPush(sym672),
        Op::Frame(5),
        Op::ConstantPush(str69),
        Op::ReferLocalPushConstant(0, Object::Number(1)),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("wrong-type-argument-message"), 3),
        Op::PushFrame(8),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferLocalPush(3),
        Op::ReferLocalPush(4),
        Op::ReferLocalPush(5),
        Op::ReferFreeCall(9, 6),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("assertion-violation"), 3),
        Op::ReferLocal(5),
        Op::VectorP,
        Op::Test(2),
        Op::LocalJmp(18),
        Op::Frame(17),
        Op::ConstantPush(sym672),
        Op::Frame(5),
        Op::ConstantPush(str70),
        Op::ReferLocalPushConstant(5, Object::Number(6)),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("wrong-type-argument-message"), 3),
        Op::PushFrame(8),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferLocalPush(3),
        Op::ReferLocalPush(4),
        Op::ReferLocalPush(5),
        Op::ReferFreeCall(9, 6),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("assertion-violation"), 3),
        Op::ReferLocal(1),
        Op::Test(33),
        Op::Frame(3),
        Op::ReferLocalPush(1),
        Op::ReferGlobalCall(vm.gc.intern("record-type-descriptor?"), 1),
        Op::Test(2),
        Op::LocalJmp(18),
        Op::Frame(17),
        Op::ConstantPush(sym672),
        Op::Frame(5),
        Op::ConstantPush(str71),
        Op::ReferLocalPushConstant(1, Object::Number(2)),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("wrong-type-argument-message"), 3),
        Op::PushFrame(8),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferLocalPush(3),
        Op::ReferLocalPush(4),
        Op::ReferLocalPush(5),
        Op::ReferFreeCall(9, 6),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("assertion-violation"), 3),
        Op::Test(10),
        Op::Frame(3),
        Op::ReferLocalPush(1),
        Op::ReferGlobalCall(vm.gc.intern("rtd-sealed?"), 1),
        Op::Test(6),
        Op::Frame(5),
        Op::ConstantPush(sym672),
        Op::ConstantPush(str72),
        Op::ReferLocalPush(1),
        Op::ReferGlobalCall(vm.gc.intern("assertion-violation"), 3),
        Op::LetFrame(61),
        Op::ReferLocalPush(2),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(3),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(5),
        Op::ReferLocalPush(4),
        Op::ReferFreePush(9),
        Op::ReferFreePush(0),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferLocalPush(5),
        Op::ReferFreePush(6),
        Op::Display(17),
        Op::ReferLocal(4),
        Op::Test(2),
        Op::LocalJmp(6),
        Op::ReferLocal(1),
        Op::Test(4),
        Op::Frame(3),
        Op::ReferLocalPush(1),
        Op::ReferGlobalCall(vm.gc.intern("rtd-opaque?"), 1),
        Op::PushFrame(58),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(5),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 3},
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(2, 1),
        Op::Test(18),
        Op::ConstantPush(Object::Number(2)),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(1, 1),
        Op::BranchNotNumberEqual(13),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("first"), 1),
        Op::PushConstant(sym673),
        Op::Eq,
        Op::Test(7),
        Op::ConstantPush(Object::True),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("second"), 1),
        Op::Cons,
        Op::Return(1),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(2, 1),
        Op::Test(18),
        Op::ConstantPush(Object::Number(2)),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(1, 1),
        Op::BranchNotNumberEqual(13),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("first"), 1),
        Op::PushConstant(sym674),
        Op::Eq,
        Op::Test(7),
        Op::ConstantPush(Object::False),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("second"), 1),
        Op::Cons,
        Op::Return(1),
        Op::ConstantPush(sym672),
        Op::ConstantPush(str73),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("assertion-violation")),
        Op::TailCall(3, 1),
        Op::Return(1),
        Op::PushFrame(3),
        Op::ReferLocalPush(5),
        Op::ReferFreeCall(0, 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("map"), 2),
        Op::PushEnter(2),
        Op::ReferFree(16),
        Op::Test(125),
        Op::LetFrame(42),
        Op::ReferFreePush(15),
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(16),
        Op::ReferFreePush(14),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(13),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(16),
        Op::ReferFreePush(8),
        Op::Display(14),
        Op::Frame(3),
        Op::ReferFreePush(1),
        Op::ReferFreeCall(0, 1),
        Op::PushEnter(1),
        Op::ReferLocal(0),
        Op::Test(57),
        Op::Frame(14),
        Op::Frame(10),
        Op::Frame(7),
        Op::Frame(3),
        Op::ReferFreePush(13),
        Op::ReferFreeCall(12, 1),
        Op::PushConstant(str74),
        Op::Push,
        Op::ReferFreeCall(11, 2),
        Op::Push,
        Op::ReferFreeCall(10, 1),
        Op::Push,
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(9, 2),
        Op::ReferFreePush(1),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("rtd-uid"), 1),
        Op::BranchNotEqv(21),
        Op::ReferFreePush(7),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("rtd-parent"), 1),
        Op::BranchNotEqv(16),
        Op::ReferFreePush(6),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("rtd-fields"), 1),
        Op::BranchNotEqual(11),
        Op::ReferFreePush(5),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("rtd-sealed?"), 1),
        Op::BranchNotEq(6),
        Op::ReferFreePush(4),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("rtd-opaque?"), 1),
        Op::Eq,
        Op::Test(3),
        Op::ReferLocal(0),
        Op::LocalJmp(59),
        Op::ConstantPush(sym672),
        Op::ConstantPush(str75),
        Op::Frame(8),
        Op::ReferFreePush(13),
        Op::ReferFreePush(7),
        Op::ReferFreePush(1),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(6),
        Op::ReferFreeCall(3, 6),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("assertion-violation")),
        Op::TailCall(3, 13),
        Op::LocalJmp(45),
        Op::LetFrame(15),
        Op::ReferFreePush(13),
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(1),
        Op::ReferFreePush(2),
        Op::ReferFreePush(13),
        Op::ReferFreePush(7),
        Op::ReferFreePush(1),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(6),
        Op::Display(13),
        Op::Frame(8),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferGlobalCall(vm.gc.intern("make-rtd"), 6),
        Op::PushEnter(1),
        Op::Frame(14),
        Op::Frame(10),
        Op::Frame(7),
        Op::Frame(3),
        Op::ReferFreePush(5),
        Op::ReferFreeCall(11, 1),
        Op::PushConstant(str76),
        Op::Push,
        Op::ReferFreeCall(10, 2),
        Op::Push,
        Op::ReferFreeCall(9, 1),
        Op::Push,
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(8, 2),
        Op::Frame(4),
        Op::ReferFreePush(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(6, 2),
        Op::ReferLocal(0),
        Op::Leave(1),
        Op::Leave(1),
        Op::LocalJmp(36),
        Op::LetFrame(13),
        Op::ReferFreePush(15),
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(15),
        Op::ReferFreePush(14),
        Op::ReferFreePush(13),
        Op::Display(8),
        Op::Frame(8),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ConstantPush(Object::False),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferGlobalCall(vm.gc.intern("make-rtd"), 6),
        Op::PushEnter(1),
        Op::Frame(14),
        Op::Frame(10),
        Op::Frame(7),
        Op::Frame(3),
        Op::ReferFreePush(2),
        Op::ReferFreeCall(6, 1),
        Op::PushConstant(str77),
        Op::Push,
        Op::ReferFreeCall(5, 2),
        Op::Push,
        Op::ReferFreeCall(4, 1),
        Op::Push,
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(3, 2),
        Op::ReferLocal(0),
        Op::Leave(1),
        Op::Leave(2),
        Op::Return(6),
        Op::DefineGlobal(vm.gc.intern("make-record-type-descriptor")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 4, is_optional_arg: false, num_free_vars: 0},
        Op::ConstantPush(sym675),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferLocalPush(3),
        Op::ReferGlobal(vm.gc.intern("tuple")),
        Op::TailCall(5, 4),
        Op::Return(4),
        Op::DefineGlobal(vm.gc.intern("make-rcd")),
        Op::Nop,
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::Frame(4),
        Op::ReferLocalPushConstant(0, Object::Number(0)),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("tuple-ref"), 2),
        Op::PushConstant(sym675),
        Op::Eq,
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("record-constructor-descriptor?")),
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::ReferLocalPushConstant(0, Object::Number(1)),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("tuple-ref")),
        Op::TailCall(2, 1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("rcd-rtd")),
        Op::Nop,
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::ReferLocalPushConstant(0, Object::Number(2)),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("tuple-ref")),
        Op::TailCall(2, 1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("rcd-protocol")),
        Op::Nop,
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::ReferLocalPushConstant(0, Object::Number(3)),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("tuple-ref")),
        Op::TailCall(2, 1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("rcd-custom-protocol?")),
        Op::Nop,
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::ReferLocalPushConstant(0, Object::Number(4)),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("tuple-ref")),
        Op::TailCall(2, 1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("rcd-parent")),
        Op::Nop,
        Op::ReferFreePush(152),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 1},
        Op::LetFrame(4),
        Op::ReferFreePush(0),
        Op::Display(1),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("rtd-parent"), 1),
        Op::PushEnter(1),
        Op::ReferLocal(0),
        Op::Test(39),
        Op::LetFrame(2),
        Op::ReferFreePush(0),
        Op::Display(1),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("rtd-total-field-count"), 1),
        Op::PushEnter(1),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 2},
        Op::ReferFreePush(1),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: true, num_free_vars: 3},
        Op::LetFrame(6),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(2),
        Op::Display(3),
        Op::Frame(4),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::ReferGlobalCall(vm.gc.intern("split-at"), 2),
        Op::Receive(2, 0),
        Op::Enter(2),
        Op::Frame(4),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(1, 2),
        Op::Push,
        Op::ReferLocalPush(1),
        Op::ReferFree(1),
        Op::TailCall(2, 5),
        Op::Leave(2),
        Op::Return(1),
        Op::Return(1),
        Op::Leave(1),
        Op::LocalJmp(12),
        Op::ReferFreePush(0),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 1},
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: true, num_free_vars: 2},
        Op::ReferFreePush(1),
        Op::ReferLocalPush(0),
        Op::ReferFree(0),
        Op::TailCall(2, 1),
        Op::Return(1),
        Op::Return(1),
        Op::Leave(1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("default-protocol")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(89),
        Op::ReferFreePush(159),
        Op::ReferFreePush(95),
        Op::ReferFreePush(22),
        Op::ReferFreePush(20),
        Op::ReferFreePush(199),
        Op::Closure {size: 0, arg_len: 3, is_optional_arg: false, num_free_vars: 6},
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("record-type-descriptor?"), 1),
        Op::Test(2),
        Op::LocalJmp(15),
        Op::Frame(14),
        Op::ConstantPush(sym676),
        Op::Frame(5),
        Op::ConstantPush(str78),
        Op::ReferLocalPushConstant(0, Object::Number(1)),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("wrong-type-argument-message"), 3),
        Op::PushFrame(5),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferFreeCall(5, 3),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("assertion-violation"), 3),
        Op::ReferLocal(1),
        Op::Test(20),
        Op::Frame(3),
        Op::ReferLocalPush(1),
        Op::ReferGlobalCall(vm.gc.intern("record-constructor-descriptor?"), 1),
        Op::Test(2),
        Op::LocalJmp(15),
        Op::Frame(14),
        Op::ConstantPush(sym676),
        Op::Frame(5),
        Op::ConstantPush(str79),
        Op::ReferLocalPushConstant(1, Object::Number(2)),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("wrong-type-argument-message"), 3),
        Op::PushFrame(5),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferFreeCall(5, 3),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("assertion-violation"), 3),
        Op::ReferLocal(2),
        Op::Test(20),
        Op::Frame(3),
        Op::ReferLocalPush(2),
        Op::ReferFreeCall(4, 1),
        Op::Test(2),
        Op::LocalJmp(15),
        Op::Frame(14),
        Op::ConstantPush(sym676),
        Op::Frame(5),
        Op::ConstantPush(str80),
        Op::ReferLocalPushConstant(2, Object::Number(3)),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("wrong-type-argument-message"), 3),
        Op::PushFrame(5),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferFreeCall(5, 3),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("assertion-violation"), 3),
        Op::ReferLocal(1),
        Op::Test(13),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("rtd-parent"), 1),
        Op::Test(2),
        Op::LocalJmp(8),
        Op::Frame(7),
        Op::ConstantPush(sym676),
        Op::ConstantPush(str81),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferGlobalCall(vm.gc.intern("assertion-violation"), 5),
        Op::ReferLocal(1),
        Op::Test(20),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("rtd-parent"), 1),
        Op::Test(16),
        Op::Frame(3),
        Op::ReferLocalPush(1),
        Op::ReferGlobalCall(vm.gc.intern("rcd-rtd"), 1),
        Op::PushFrame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("rtd-parent"), 1),
        Op::BranchNotEq(2),
        Op::LocalJmp(8),
        Op::Frame(7),
        Op::ConstantPush(sym676),
        Op::ConstantPush(str82),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferGlobalCall(vm.gc.intern("assertion-violation"), 5),
        Op::ReferLocal(2),
        Op::Test(15),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("rtd-parent"), 1),
        Op::Test(11),
        Op::ReferLocal(1),
        Op::Test(2),
        Op::LocalJmp(8),
        Op::Frame(7),
        Op::ConstantPush(sym676),
        Op::ConstantPush(str83),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferGlobalCall(vm.gc.intern("assertion-violation"), 5),
        Op::ReferLocal(1),
        Op::Test(15),
        Op::Frame(3),
        Op::ReferLocalPush(1),
        Op::ReferGlobalCall(vm.gc.intern("rcd-custom-protocol?"), 1),
        Op::Test(11),
        Op::ReferLocal(2),
        Op::Test(2),
        Op::LocalJmp(8),
        Op::Frame(7),
        Op::ConstantPush(sym676),
        Op::ConstantPush(str84),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferGlobalCall(vm.gc.intern("assertion-violation"), 5),
        Op::LetFrame(21),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Display(5),
        Op::ReferLocal(2),
        Op::Test(2),
        Op::Constant(Object::True),
        Op::Push,
        Op::ReferLocal(2),
        Op::Test(2),
        Op::LocalJmp(4),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("default-protocol"), 1),
        Op::Push,
        Op::ReferLocal(1),
        Op::Test(2),
        Op::LocalJmp(14),
        Op::LetFrame(5),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("rtd-parent"), 1),
        Op::PushEnter(1),
        Op::ReferLocal(0),
        Op::Test(6),
        Op::Frame(5),
        Op::ReferLocalPushConstant(0, Object::False),
        Op::PushConstant(Object::False),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("make-record-constructor-descriptor"), 3),
        Op::Leave(1),
        Op::PushEnter(3),
        Op::LetFrame(12),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(4),
        Op::Display(6),
        Op::Frame(6),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(2),
        Op::ReferGlobalCall(vm.gc.intern("make-rcd"), 4),
        Op::PushEnter(1),
        Op::Frame(17),
        Op::Frame(13),
        Op::Frame(10),
        Op::Frame(6),
        Op::Frame(3),
        Op::ReferFreePush(0),
        Op::ReferGlobalCall(vm.gc.intern("rtd-name"), 1),
        Op::Push,
        Op::ReferFreeCall(4, 1),
        Op::PushConstant(str85),
        Op::Push,
        Op::ReferFreeCall(3, 2),
        Op::Push,
        Op::ReferFreeCall(2, 1),
        Op::Push,
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(1, 2),
        Op::ReferLocal(0),
        Op::Leave(1),
        Op::Leave(3),
        Op::Return(3),
        Op::DefineGlobal(vm.gc.intern("make-record-constructor-descriptor")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::Frame(7),
        Op::Frame(4),
        Op::ReferLocalPushConstant(0, Object::Number(0)),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("tuple-ref"), 2),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("record-type-descriptor?"), 1),
        Op::Test(9),
        Op::Frame(7),
        Op::Frame(4),
        Op::ReferLocalPushConstant(0, Object::Number(0)),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("tuple-ref"), 2),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("record-type-opaque?"), 1),
        Op::Not,
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("record?")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("record?"), 1),
        Op::Test(6),
        Op::ReferLocalPushConstant(0, Object::Number(0)),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("tuple-ref")),
        Op::TailCall(2, 1),
        Op::Return(1),
        Op::ConstantPush(sym677),
        Op::Frame(4),
        Op::ConstantPush(str86),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("wrong-type-argument-message"), 2),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("assertion-violation")),
        Op::TailCall(2, 1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("record-rtd")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(152),
        Op::ReferFreePush(191),
        Op::Closure {size: 0, arg_len: 3, is_optional_arg: false, num_free_vars: 2},
        Op::Frame(136),
        Op::LetFrame(1),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(2),
        Op::ReferLocalPush(1),
        Op::Display(6),
        Op::Undef,
        Op::Push,
        Op::Box(0),
        Op::Enter(1),
        Op::ReferFreePush(4),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 6},
        Op::LetFrame(3),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Display(5),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("rcd-parent"), 1),
        Op::PushEnter(1),
        Op::ReferLocal(0),
        Op::Test(52),
        Op::LetFrame(1),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferLocalPush(0),
        Op::Display(3),
        Op::ReferLocalPush(0),
        Op::Enter(1),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: true, num_free_vars: 4},
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: true, num_free_vars: 5},
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: true, num_free_vars: 6},
        Op::Frame(17),
        Op::Frame(12),
        Op::Frame(5),
        Op::ReferFreePush(5),
        Op::ReferFree(4),
        Op::Indirect,
        Op::LocalCall(1),
        Op::Push,
        Op::ReferLocalPush(0),
        Op::ReferFree(3),
        Op::Append2,
        Op::Push,
        Op::ReferFreeCall(2, 2),
        Op::PushFrame(3),
        Op::ReferFreePush(1),
        Op::ReferGlobalCall(vm.gc.intern("rcd-protocol"), 1),
        Op::Call(1),
        Op::Push,
        Op::ReferFreePush(0),
        Op::ReferFree(2),
        Op::TailCall(2, 1),
        Op::Return(1),
        Op::Return(1),
        Op::Return(1),
        Op::Leave(1),
        Op::LocalJmp(43),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(3),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: true, num_free_vars: 4},
        Op::ReferLocalPush(0),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: true, num_free_vars: 5},
        Op::LetFrame(10),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(4),
        Op::Display(5),
        Op::ReferLocalPush(0),
        Op::ReferFree(0),
        Op::Append2,
        Op::PushEnter(1),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(4, 1),
        Op::Push,
        Op::ReferFree(3),
        Op::BranchNotNumberEqual(7),
        Op::ReferGlobalPush(vm.gc.intern("tuple")),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(0),
        Op::ReferFree(1),
        Op::TailCall(3, 4),
        Op::LocalJmp(6),
        Op::ConstantPush(str87),
        Op::ConstantPush(str88),
        Op::ReferLocalPush(0),
        Op::ReferGlobal(vm.gc.intern("assertion-violation")),
        Op::TailCall(3, 4),
        Op::Leave(1),
        Op::Return(1),
        Op::Return(1),
        Op::Leave(1),
        Op::Return(1),
        Op::AssignLocal(0),
        Op::Frame(5),
        Op::ReferFreePush(4),
        Op::ReferLocal(0),
        Op::Indirect,
        Op::LocalCall(1),
        Op::Leave(1),
        Op::Call(0),
        Op::PushFrame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("rcd-protocol"), 1),
        Op::TailCall(1, 3),
        Op::Return(3),
        Op::DefineGlobal(vm.gc.intern("make-nested-conser")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(191),
        Op::ReferFreePush(152),
        Op::Closure {size: 0, arg_len: 3, is_optional_arg: false, num_free_vars: 2},
        Op::ReferFreePush(1),
        Op::ReferLocalPush(2),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(0),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: true, num_free_vars: 4},
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(3, 1),
        Op::Push,
        Op::ReferFree(2),
        Op::BranchNotNumberEqual(7),
        Op::ReferGlobalPush(vm.gc.intern("tuple")),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(0),
        Op::ReferFree(0),
        Op::TailCall(3, 1),
        Op::Return(1),
        Op::ConstantPush(str89),
        Op::ConstantPush(str90),
        Op::ReferLocalPush(0),
        Op::ReferGlobal(vm.gc.intern("assertion-violation")),
        Op::TailCall(3, 1),
        Op::Return(1),
        Op::PushFrame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("rcd-protocol"), 1),
        Op::TailCall(1, 3),
        Op::Return(3),
        Op::DefineGlobal(vm.gc.intern("make-simple-conser")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 0},
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("rtd-inherited-field-count"), 1),
        Op::Push,
        Op::ReferLocal(1),
        Op::NumberAddPush,
        Op::Constant(Object::Number(1)),
        Op::NumberAdd,
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("flat-field-offset")),
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(48),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 1},
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(0),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 3},
        Op::ReferFreePush(2),
        Op::Frame(4),
        Op::ReferLocalPushConstant(0, Object::Number(0)),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("tuple-ref"), 2),
        Op::BranchNotEq(6),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::ReferGlobal(vm.gc.intern("tuple-ref")),
        Op::TailCall(2, 1),
        Op::Return(1),
        Op::Frame(8),
        Op::ReferFreePush(2),
        Op::Frame(4),
        Op::ReferLocalPushConstant(0, Object::Number(0)),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("tuple-ref"), 2),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("rtd-ancestor?"), 2),
        Op::Test(6),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::ReferGlobal(vm.gc.intern("tuple-ref")),
        Op::TailCall(2, 1),
        Op::Return(1),
        Op::ConstantPush(str91),
        Op::Frame(11),
        Op::Frame(7),
        Op::ConstantPush(str92),
        Op::Frame(3),
        Op::ReferFreePush(2),
        Op::ReferGlobalCall(vm.gc.intern("rtd-name"), 1),
        Op::Push,
        Op::ReferFreeCall(0, 2),
        Op::Push,
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("wrong-type-argument-message"), 2),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("assertion-violation")),
        Op::TailCall(2, 1),
        Op::Return(1),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("make-accessor")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(48),
        Op::ReferFreePush(89),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 2},
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 4},
        Op::ReferFreePush(3),
        Op::Frame(4),
        Op::ReferLocalPushConstant(0, Object::Number(0)),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("tuple-ref"), 2),
        Op::BranchNotEq(7),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(1),
        Op::ReferGlobal(vm.gc.intern("tuple-set!")),
        Op::TailCall(3, 2),
        Op::Return(2),
        Op::Frame(8),
        Op::ReferFreePush(3),
        Op::Frame(4),
        Op::ReferLocalPushConstant(0, Object::Number(0)),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("tuple-ref"), 2),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("rtd-ancestor?"), 2),
        Op::Test(7),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(1),
        Op::ReferGlobal(vm.gc.intern("tuple-set!")),
        Op::TailCall(3, 2),
        Op::Return(2),
        Op::ConstantPush(str93),
        Op::Frame(14),
        Op::Frame(7),
        Op::ConstantPush(str94),
        Op::Frame(3),
        Op::ReferFreePush(3),
        Op::ReferGlobalCall(vm.gc.intern("rtd-name"), 1),
        Op::Push,
        Op::ReferFreeCall(1, 2),
        Op::PushFrame(4),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(0, 2),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("wrong-type-argument-message"), 2),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("assertion-violation")),
        Op::TailCall(2, 2),
        Op::Return(2),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("make-mutator")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::ReferLocalPush(0),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 1},
        Op::ReferFreePush(0),
        Op::Frame(4),
        Op::ReferLocalPushConstant(0, Object::Number(0)),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("tuple-ref"), 2),
        Op::BranchNotEq(2),
        Op::Return(1),
        Op::ReferFreePush(0),
        Op::Frame(4),
        Op::ReferLocalPushConstant(0, Object::Number(0)),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("tuple-ref"), 2),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("rtd-ancestor?")),
        Op::TailCall(2, 1),
        Op::Return(1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("make-predicate")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(191),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 1},
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("record-constructor-descriptor?"), 1),
        Op::Test(2),
        Op::LocalJmp(9),
        Op::Frame(8),
        Op::ConstantPush(sym678),
        Op::Frame(4),
        Op::ConstantPush(str95),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("wrong-type-argument-message"), 2),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("assertion-violation"), 2),
        Op::LetFrame(12),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::Display(2),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("rcd-rtd"), 1),
        Op::PushEnter(1),
        Op::Frame(3),
        Op::ReferFreePush(1),
        Op::ReferGlobalCall(vm.gc.intern("rcd-parent"), 1),
        Op::Test(10),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(0),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("rtd-total-field-count"), 1),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("make-nested-conser")),
        Op::TailCall(3, 4),
        Op::LocalJmp(12),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(0),
        Op::Frame(6),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("rtd-fields"), 1),
        Op::Push,
        Op::ReferFreeCall(0, 1),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("make-simple-conser")),
        Op::TailCall(3, 4),
        Op::Leave(1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("record-constructor")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("record-type-descriptor?"), 1),
        Op::Test(2),
        Op::LocalJmp(9),
        Op::Frame(8),
        Op::ConstantPush(sym679),
        Op::Frame(4),
        Op::ConstantPush(str96),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("wrong-type-argument-message"), 2),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("assertion-violation"), 2),
        Op::ReferLocalPush(0),
        Op::ReferGlobal(vm.gc.intern("make-predicate")),
        Op::TailCall(1, 1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("record-predicate")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(89),
        Op::ReferFreePush(191),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 2},
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("record-type-descriptor?"), 1),
        Op::Test(2),
        Op::LocalJmp(13),
        Op::Frame(12),
        Op::ConstantPush(sym680),
        Op::Frame(4),
        Op::ConstantPush(str97),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("wrong-type-argument-message"), 2),
        Op::PushFrame(4),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(1, 2),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("assertion-violation"), 3),
        Op::ConstantPush(Object::Number(-1)),
        Op::ReferLocalBranchNotLt(1, 9),
        Op::ReferLocalPush(1),
        Op::Frame(6),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("rtd-fields"), 1),
        Op::Push,
        Op::ReferFreeCall(0, 1),
        Op::NumberLt,
        Op::Test(2),
        Op::LocalJmp(5),
        Op::Frame(4),
        Op::ConstantPush(sym680),
        Op::ConstantPush(str98),
        Op::ReferGlobalCall(vm.gc.intern("assertion-violation"), 2),
        Op::ReferLocalPush(0),
        Op::Frame(4),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferGlobalCall(vm.gc.intern("flat-field-offset"), 2),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("make-accessor")),
        Op::TailCall(2, 2),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("record-accessor")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(89),
        Op::ReferFreePush(191),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 2},
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("record-type-descriptor?"), 1),
        Op::Test(2),
        Op::LocalJmp(13),
        Op::Frame(12),
        Op::ConstantPush(sym681),
        Op::Frame(4),
        Op::ConstantPush(str99),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("wrong-type-argument-message"), 2),
        Op::PushFrame(4),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(1, 2),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("assertion-violation"), 3),
        Op::ConstantPush(Object::Number(-1)),
        Op::ReferLocalBranchNotLt(1, 9),
        Op::ReferLocalPush(1),
        Op::Frame(6),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("rtd-fields"), 1),
        Op::Push,
        Op::ReferFreeCall(0, 1),
        Op::NumberLt,
        Op::Test(2),
        Op::LocalJmp(10),
        Op::Frame(9),
        Op::ConstantPush(sym681),
        Op::ConstantPush(str100),
        Op::Frame(4),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(1, 2),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("assertion-violation"), 3),
        Op::Frame(4),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferGlobalCall(vm.gc.intern("record-field-mutable?"), 2),
        Op::Test(2),
        Op::LocalJmp(10),
        Op::Frame(9),
        Op::ConstantPush(sym681),
        Op::ConstantPush(str101),
        Op::Frame(4),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(1, 2),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("assertion-violation"), 3),
        Op::ReferLocalPush(0),
        Op::Frame(4),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferGlobalCall(vm.gc.intern("flat-field-offset"), 2),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("make-mutator")),
        Op::TailCall(2, 2),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("record-mutator")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 3, is_optional_arg: false, num_free_vars: 0},
        Op::ConstantPush(sym682),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferGlobal(vm.gc.intern("tuple")),
        Op::TailCall(4, 3),
        Op::Return(3),
        Op::DefineGlobal(vm.gc.intern("make-record-type")),
        Op::Nop,
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::Frame(4),
        Op::ReferLocalPushConstant(0, Object::Number(0)),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("tuple-ref"), 2),
        Op::PushConstant(sym682),
        Op::Eq,
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("record-type?")),
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("record-type?"), 1),
        Op::Test(2),
        Op::LocalJmp(9),
        Op::Frame(8),
        Op::ConstantPush(sym683),
        Op::Frame(4),
        Op::ConstantPush(str102),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("wrong-type-argument-message"), 2),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("assertion-violation"), 2),
        Op::ReferLocalPushConstant(0, Object::Number(2)),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("tuple-ref")),
        Op::TailCall(2, 1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("record-type-rtd")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("record-type?"), 1),
        Op::Test(2),
        Op::LocalJmp(9),
        Op::Frame(8),
        Op::ConstantPush(sym684),
        Op::Frame(4),
        Op::ConstantPush(str103),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("wrong-type-argument-message"), 2),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("assertion-violation"), 2),
        Op::ReferLocalPushConstant(0, Object::Number(3)),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("tuple-ref")),
        Op::TailCall(2, 1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("record-type-rcd")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Frame(8),
        Op::ConstantPush(sym685),
        Op::ConstantPush(Object::False),
        Op::ConstantPush(sym686),
        Op::ConstantPush(Object::False),
        Op::ConstantPush(Object::False),
        Op::ConstantPush(vec0),
        Op::ReferGlobalCall(vm.gc.intern("make-record-type-descriptor"), 6),
        Op::DefineGlobal(vm.gc.intern("enum-set-rtd")),
        Op::Nop,
        Op::Frame(5),
        Op::ReferGlobalPush(vm.gc.intern("enum-set-rtd")),
        Op::ConstantPush(Object::False),
        Op::ConstantPush(Object::False),
        Op::ReferGlobalCall(vm.gc.intern("make-record-constructor-descriptor"), 3),
        Op::DefineGlobal(vm.gc.intern("enum-set-rcd")),
        Op::Nop,
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("enum-set-rcd")),
        Op::ReferGlobalCall(vm.gc.intern("record-constructor"), 1),
        Op::DefineGlobal(vm.gc.intern("make-enum-set")),
        Op::Nop,
        Op::Frame(4),
        Op::ReferGlobalPush(vm.gc.intern("enum-set-rtd")),
        Op::ConstantPush(Object::Number(1)),
        Op::ReferGlobalCall(vm.gc.intern("record-accessor"), 2),
        Op::DefineGlobal(vm.gc.intern("enum-set-members")),
        Op::Nop,
        Op::Frame(4),
        Op::ReferGlobalPush(vm.gc.intern("enum-set-rtd")),
        Op::ConstantPush(Object::Number(0)),
        Op::ReferGlobalCall(vm.gc.intern("record-accessor"), 2),
        Op::DefineGlobal(vm.gc.intern("enum-set-type")),
        Op::Nop,
        Op::Frame(8),
        Op::ConstantPush(sym689),
        Op::ConstantPush(Object::False),
        Op::ConstantPush(sym690),
        Op::ConstantPush(Object::False),
        Op::ConstantPush(Object::False),
        Op::ConstantPush(vec1),
        Op::ReferGlobalCall(vm.gc.intern("make-record-type-descriptor"), 6),
        Op::DefineGlobal(vm.gc.intern("enum-type-rtd")),
        Op::Nop,
        Op::Frame(5),
        Op::ReferGlobalPush(vm.gc.intern("enum-type-rtd")),
        Op::ConstantPush(Object::False),
        Op::ConstantPush(Object::False),
        Op::ReferGlobalCall(vm.gc.intern("make-record-constructor-descriptor"), 3),
        Op::DefineGlobal(vm.gc.intern("enum-type-rcd")),
        Op::Nop,
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("enum-type-rcd")),
        Op::ReferGlobalCall(vm.gc.intern("record-constructor"), 1),
        Op::DefineGlobal(vm.gc.intern("make-enum-type")),
        Op::Nop,
        Op::Frame(4),
        Op::ReferGlobalPush(vm.gc.intern("enum-type-rtd")),
        Op::ConstantPush(Object::Number(1)),
        Op::ReferGlobalCall(vm.gc.intern("record-accessor"), 2),
        Op::DefineGlobal(vm.gc.intern("enum-type-indexer")),
        Op::Nop,
        Op::Frame(4),
        Op::ReferGlobalPush(vm.gc.intern("enum-type-rtd")),
        Op::ConstantPush(Object::Number(0)),
        Op::ReferGlobalCall(vm.gc.intern("record-accessor"), 2),
        Op::DefineGlobal(vm.gc.intern("enum-type-universe")),
        Op::Nop,
        Op::ReferFreePush(98),
        Op::ReferFreePush(100),
        Op::ReferFreePush(101),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 3},
        Op::LetFrame(11),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(2),
        Op::Display(4),
        Op::Frame(2),
        Op::ReferFreeCall(0, 0),
        Op::PushEnter(1),
        Op::LetFrame(8),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(2),
        Op::ReferFreePush(3),
        Op::Display(3),
        Op::ReferFreePush(0),
        Op::ConstantPush(Object::Number(0)),
        Op::Enter(2),
        Op::ReferLocalBranchNotNull(0, 3),
        Op::Constant(Object::Nil),
        Op::LocalJmp(13),
        Op::Frame(6),
        Op::ReferFreePush(2),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(1, 3),
        Op::ReferLocal(0),
        Op::CdrPush,
        Op::ReferLocalPushConstant(1, Object::Number(1)),
        Op::NumberAddPush,
        Op::Shiftj(2, 2, 0),
        Op::LocalJmp(-14),
        Op::Leave(2),
        Op::ReferFreePush(3),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 2},
        Op::ReferFreePush(1),
        Op::ReferLocalPushConstant(0, Object::False),
        Op::Push,
        Op::ReferFree(0),
        Op::TailCall(3, 1),
        Op::Return(1),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("make-enum-type")),
        Op::TailCall(2, 4),
        Op::Leave(1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("make-enumeration-type")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(88),
        Op::ReferFreePush(161),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 2},
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(1, 1),
        Op::Test(14),
        Op::Frame(4),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("for-all"), 2),
        Op::Test(9),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("make-enumeration-type"), 1),
        Op::Push,
        Op::ReferLocalPush(0),
        Op::ReferGlobal(vm.gc.intern("make-enum-set")),
        Op::TailCall(2, 1),
        Op::Return(1),
        Op::ConstantPush(sym693),
        Op::ConstantPush(str104),
        Op::ReferGlobal(vm.gc.intern("assertion-violation")),
        Op::TailCall(2, 1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("make-enumeration")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("enum-set-type"), 1),
        Op::PushFrame(6),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("enum-set-type"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("enum-type-universe"), 1),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("make-enum-set")),
        Op::TailCall(2, 1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("enum-set-universe")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("enum-set-type"), 1),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("enum-type-indexer")),
        Op::TailCall(1, 1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("enum-set-indexer")),
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(90),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 1},
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 2},
        Op::LetFrame(12),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::ReferFreePush(1),
        Op::Display(4),
        Op::Frame(6),
        Op::Frame(3),
        Op::ReferFreePush(0),
        Op::ReferGlobalCall(vm.gc.intern("enum-set-type"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("enum-type-universe"), 1),
        Op::PushEnter(1),
        Op::Frame(12),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(3),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 2},
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::ReferFree(0),
        Op::TailCall(2, 1),
        Op::Return(1),
        Op::Push,
        Op::ReferFreePush(2),
        Op::ReferGlobalCall(vm.gc.intern("for-all"), 2),
        Op::Test(9),
        Op::Frame(3),
        Op::ReferFreePush(0),
        Op::ReferGlobalCall(vm.gc.intern("enum-set-type"), 1),
        Op::Push,
        Op::ReferFreePush(2),
        Op::ReferGlobal(vm.gc.intern("make-enum-set")),
        Op::TailCall(2, 4),
        Op::LocalJmp(7),
        Op::ConstantPush(sym694),
        Op::ConstantPush(str105),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(2),
        Op::ReferGlobal(vm.gc.intern("assertion-violation")),
        Op::TailCall(4, 4),
        Op::Leave(1),
        Op::Return(1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("enum-set-constructor")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(90),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 1},
        Op::LetFrame(6),
        Op::ReferFreePush(0),
        Op::Display(1),
        Op::Frame(6),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("enum-set-type"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("enum-type-universe"), 1),
        Op::PushFrame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("enum-set-members"), 1),
        Op::PushEnter(2),
        Op::LetFrame(1),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(0),
        Op::Display(4),
        Op::Undef,
        Op::Push,
        Op::Box(0),
        Op::Enter(1),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 4},
        Op::ReferLocalBranchNotNull(0, 3),
        Op::Constant(Object::Nil),
        Op::Return(1),
        Op::Frame(5),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::ReferFreePush(2),
        Op::ReferFreeCall(1, 2),
        Op::Test(11),
        Op::ReferLocal(0),
        Op::Car,
        Op::PushFrame(6),
        Op::ReferLocal(0),
        Op::CdrPush,
        Op::ReferFree(0),
        Op::Indirect,
        Op::LocalCall(1),
        Op::Cons,
        Op::Return(1),
        Op::ReferLocal(0),
        Op::CdrPush,
        Op::ReferFree(0),
        Op::Indirect,
        Op::LocalTailCall(1, 1),
        Op::Return(1),
        Op::AssignLocal(0),
        Op::ReferFreePush(2),
        Op::ReferLocal(0),
        Op::Indirect,
        Op::LocalTailCall(1, 8),
        Op::Leave(1),
        Op::Leave(2),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("enum-set->list")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(90),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 1},
        Op::Frame(7),
        Op::ReferLocalPush(0),
        Op::Frame(3),
        Op::ReferLocalPush(1),
        Op::ReferGlobalCall(vm.gc.intern("enum-set-members"), 1),
        Op::Push,
        Op::ReferFreeCall(0, 2),
        Op::Test(2),
        Op::Constant(Object::True),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("enum-set-member?")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(90),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 1},
        Op::LetFrame(7),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::Display(2),
        Op::Frame(6),
        Op::Frame(3),
        Op::ReferLocalPush(1),
        Op::ReferGlobalCall(vm.gc.intern("enum-set-universe"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("enum-set->list"), 1),
        Op::PushEnter(1),
        Op::Frame(17),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 2},
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::ReferFree(0),
        Op::TailCall(2, 1),
        Op::Return(1),
        Op::PushFrame(6),
        Op::Frame(3),
        Op::ReferFreePush(0),
        Op::ReferGlobalCall(vm.gc.intern("enum-set-universe"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("enum-set->list"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("for-all"), 2),
        Op::Leave(1),
        Op::Test(14),
        Op::ReferLocalPush(1),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 1},
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("enum-set-member?")),
        Op::TailCall(2, 1),
        Op::Return(1),
        Op::PushFrame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("enum-set-members"), 1),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("for-all")),
        Op::TailCall(2, 2),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("enum-set-subset?")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 0},
        Op::Frame(4),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferGlobalCall(vm.gc.intern("enum-set-subset?"), 2),
        Op::Test(5),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(0),
        Op::ReferGlobal(vm.gc.intern("enum-set-subset?")),
        Op::TailCall(2, 2),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("enum-set=?")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(90),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 1},
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("enum-set-type"), 1),
        Op::PushFrame(3),
        Op::ReferLocalPush(1),
        Op::ReferGlobalCall(vm.gc.intern("enum-set-type"), 1),
        Op::BranchNotEq(53),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("enum-set-type"), 1),
        Op::Push,
        Op::LetFrame(13),
        Op::ReferFreePush(0),
        Op::Display(1),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("enum-set-members"), 1),
        Op::PushFrame(3),
        Op::ReferLocalPush(1),
        Op::ReferGlobalCall(vm.gc.intern("enum-set-members"), 1),
        Op::PushEnter(2),
        Op::LetFrame(9),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::Display(3),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::Enter(2),
        Op::ReferLocalBranchNotNull(1, 3),
        Op::ReferLocal(0),
        Op::LocalJmp(22),
        Op::Frame(5),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(2, 2),
        Op::Test(7),
        Op::ReferLocalPush(0),
        Op::ReferLocal(1),
        Op::CdrPush,
        Op::Shiftj(2, 2, 0),
        Op::LocalJmp(-13),
        Op::LocalJmp(10),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::ReferLocal(0),
        Op::Cons,
        Op::Push,
        Op::ReferLocal(1),
        Op::CdrPush,
        Op::Shiftj(2, 2, 0),
        Op::LocalJmp(-23),
        Op::Leave(2),
        Op::Leave(2),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("make-enum-set")),
        Op::TailCall(2, 2),
        Op::Return(2),
        Op::ConstantPush(sym695),
        Op::ConstantPush(str106),
        Op::ReferGlobal(vm.gc.intern("assertion-violation")),
        Op::TailCall(2, 2),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("enum-set-union")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(90),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 1},
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("enum-set-type"), 1),
        Op::PushFrame(3),
        Op::ReferLocalPush(1),
        Op::ReferGlobalCall(vm.gc.intern("enum-set-type"), 1),
        Op::BranchNotEq(53),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("enum-set-type"), 1),
        Op::Push,
        Op::LetFrame(13),
        Op::ReferFreePush(0),
        Op::Display(1),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("enum-set-members"), 1),
        Op::PushFrame(3),
        Op::ReferLocalPush(1),
        Op::ReferGlobalCall(vm.gc.intern("enum-set-members"), 1),
        Op::PushEnter(2),
        Op::LetFrame(9),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::Display(3),
        Op::ConstantPush(Object::Nil),
        Op::ReferLocalPush(0),
        Op::Enter(2),
        Op::ReferLocalBranchNotNull(1, 3),
        Op::ReferLocal(0),
        Op::LocalJmp(22),
        Op::Frame(5),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::ReferFreePush(2),
        Op::ReferFreeCall(1, 2),
        Op::Test(11),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::ReferLocal(0),
        Op::Cons,
        Op::Push,
        Op::ReferLocal(1),
        Op::CdrPush,
        Op::Shiftj(2, 2, 0),
        Op::LocalJmp(-17),
        Op::LocalJmp(6),
        Op::ReferLocalPush(0),
        Op::ReferLocal(1),
        Op::CdrPush,
        Op::Shiftj(2, 2, 0),
        Op::LocalJmp(-23),
        Op::Leave(2),
        Op::Leave(2),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("make-enum-set")),
        Op::TailCall(2, 2),
        Op::Return(2),
        Op::ConstantPush(sym696),
        Op::ConstantPush(str107),
        Op::ReferGlobal(vm.gc.intern("assertion-violation")),
        Op::TailCall(2, 2),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("enum-set-intersection")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(90),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 1},
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("enum-set-type"), 1),
        Op::PushFrame(3),
        Op::ReferLocalPush(1),
        Op::ReferGlobalCall(vm.gc.intern("enum-set-type"), 1),
        Op::BranchNotEq(53),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("enum-set-type"), 1),
        Op::Push,
        Op::LetFrame(13),
        Op::ReferFreePush(0),
        Op::Display(1),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("enum-set-members"), 1),
        Op::PushFrame(3),
        Op::ReferLocalPush(1),
        Op::ReferGlobalCall(vm.gc.intern("enum-set-members"), 1),
        Op::PushEnter(2),
        Op::LetFrame(9),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::Display(3),
        Op::ConstantPush(Object::Nil),
        Op::ReferLocalPush(0),
        Op::Enter(2),
        Op::ReferLocalBranchNotNull(1, 3),
        Op::ReferLocal(0),
        Op::LocalJmp(22),
        Op::Frame(5),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::ReferFreePush(2),
        Op::ReferFreeCall(1, 2),
        Op::Test(7),
        Op::ReferLocalPush(0),
        Op::ReferLocal(1),
        Op::CdrPush,
        Op::Shiftj(2, 2, 0),
        Op::LocalJmp(-13),
        Op::LocalJmp(10),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::ReferLocal(0),
        Op::Cons,
        Op::Push,
        Op::ReferLocal(1),
        Op::CdrPush,
        Op::Shiftj(2, 2, 0),
        Op::LocalJmp(-23),
        Op::Leave(2),
        Op::Leave(2),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("make-enum-set")),
        Op::TailCall(2, 2),
        Op::Return(2),
        Op::ConstantPush(sym697),
        Op::ConstantPush(str108),
        Op::ReferGlobal(vm.gc.intern("assertion-violation")),
        Op::TailCall(2, 2),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("enum-set-difference")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(90),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 1},
        Op::LetFrame(9),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::Display(2),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("enum-set-members"), 1),
        Op::PushEnter(1),
        Op::Frame(3),
        Op::ReferFreePush(1),
        Op::ReferGlobalCall(vm.gc.intern("enum-set-type"), 1),
        Op::PushFrame(18),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 2},
        Op::Frame(4),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::ReferFreeCall(0, 2),
        Op::Not,
        Op::Return(1),
        Op::PushFrame(6),
        Op::Frame(3),
        Op::ReferFreePush(1),
        Op::ReferGlobalCall(vm.gc.intern("enum-set-type"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("enum-type-universe"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("filter"), 2),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("make-enum-set")),
        Op::TailCall(2, 4),
        Op::Leave(1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("enum-set-complement")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(90),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 1},
        Op::Frame(4),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferGlobalCall(vm.gc.intern("enum-set-subset?"), 2),
        Op::Test(3),
        Op::ReferLocal(0),
        Op::Return(2),
        Op::LetFrame(10),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(0),
        Op::Display(2),
        Op::Frame(6),
        Op::Frame(3),
        Op::ReferLocalPush(1),
        Op::ReferGlobalCall(vm.gc.intern("enum-set-type"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("enum-type-universe"), 1),
        Op::PushFrame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("enum-set-members"), 1),
        Op::PushEnter(2),
        Op::Frame(3),
        Op::ReferFreePush(1),
        Op::ReferGlobalCall(vm.gc.intern("enum-set-type"), 1),
        Op::PushFrame(12),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 2},
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::ReferFree(0),
        Op::TailCall(2, 1),
        Op::Return(1),
        Op::Push,
        Op::ReferLocalPush(1),
        Op::ReferGlobalCall(vm.gc.intern("filter"), 2),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("make-enum-set")),
        Op::TailCall(2, 6),
        Op::Leave(2),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("enum-set-projection")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::LetFrame(14),
        Op::Frame(8),
        Op::ConstantPush(sym698),
        Op::ConstantPush(Object::False),
        Op::ConstantPush(sym699),
        Op::ConstantPush(Object::False),
        Op::ConstantPush(Object::False),
        Op::ConstantPush(vec2),
        Op::ReferGlobalCall(vm.gc.intern("make-record-type-descriptor"), 6),
        Op::PushEnter(1),
        Op::LetFrame(7),
        Op::ReferLocalPush(0),
        Op::Display(1),
        Op::Frame(5),
        Op::ReferLocalPushConstant(0, Object::False),
        Op::PushConstant(Object::False),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("make-record-constructor-descriptor"), 3),
        Op::PushEnter(1),
        Op::Frame(5),
        Op::ConstantPush(sym698),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("make-record-type"), 3),
        Op::Leave(1),
        Op::Leave(1),
        Op::DefineGlobal(vm.gc.intern("&condition")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::ReferLocalPushConstant(0, Object::Number(1)),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("tuple-ref")),
        Op::TailCall(2, 1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("compound-condition-component")),
        Op::Nop,
        Op::ReferFreePush(174),
        Op::ReferFreePush(48),
        Op::ReferFreePush(152),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: true, num_free_vars: 3},
        Op::ConstantPush(sym700),
        Op::Frame(29),
        Op::ReferFreePush(2),
        Op::Frame(25),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(0),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 2},
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("condition?"), 1),
        Op::Test(2),
        Op::LocalJmp(10),
        Op::Frame(9),
        Op::ConstantPush(sym701),
        Op::Frame(4),
        Op::ConstantPush(str109),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(1, 2),
        Op::Push,
        Op::ReferFreePush(0),
        Op::ReferGlobalCall(vm.gc.intern("assertion-violation"), 3),
        Op::ReferLocalPush(0),
        Op::ReferGlobal(vm.gc.intern("simple-conditions")),
        Op::TailCall(1, 1),
        Op::Return(1),
        Op::Push,
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("map"), 2),
        Op::Push,
        Op::ReferFreeCall(0, 2),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("tuple")),
        Op::TailCall(2, 1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("condition")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("tuple?"), 1),
        Op::Test(7),
        Op::ConstantPush(sym700),
        Op::Frame(4),
        Op::ReferLocalPushConstant(0, Object::Number(0)),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("tuple-ref"), 2),
        Op::Eq,
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("compound-condition?")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("record?"), 1),
        Op::Test(10),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&condition")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rtd"), 1),
        Op::PushFrame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("record-rtd"), 1),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("rtd-ancestor?")),
        Op::TailCall(2, 1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("simple-condition?")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("simple-condition?"), 1),
        Op::Test(2),
        Op::Return(1),
        Op::ReferLocalPush(0),
        Op::ReferGlobal(vm.gc.intern("compound-condition?")),
        Op::TailCall(1, 1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("condition?")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(89),
        Op::ReferFreePush(48),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 2},
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("simple-condition?"), 1),
        Op::Test(5),
        Op::ReferLocalPush(0),
        Op::ReferFree(1),
        Op::TailCall(1, 1),
        Op::Return(1),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("compound-condition?"), 1),
        Op::Test(5),
        Op::ReferLocalPush(0),
        Op::ReferGlobal(vm.gc.intern("compound-condition-component")),
        Op::TailCall(1, 1),
        Op::Return(1),
        Op::ConstantPush(sym702),
        Op::Frame(4),
        Op::ConstantPush(str110),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(0, 2),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("assertion-violation")),
        Op::TailCall(2, 1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("simple-conditions")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 0},
        Op::ReferLocal(1),
        Op::NullP,
        Op::NotTest(12),
        Op::Frame(4),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::ReferLocalCall(0, 1),
        Op::Test(2),
        Op::Return(2),
        Op::ReferLocalPush(0),
        Op::ReferLocal(1),
        Op::CdrPush,
        Op::ReferGlobal(vm.gc.intern("any1")),
        Op::TailCall(2, 2),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("any1")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(48),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 1},
        Op::Frame(7),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&condition")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rtd"), 1),
        Op::Push,
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("rtd-ancestor?"), 2),
        Op::Test(2),
        Op::LocalJmp(9),
        Op::Frame(8),
        Op::ConstantPush(sym703),
        Op::Frame(4),
        Op::ConstantPush(str111),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(0, 2),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("assertion-violation"), 2),
        Op::ReferLocalPush(0),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 1},
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("simple-condition?"), 1),
        Op::Test(9),
        Op::ReferFreePush(0),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("record-rtd"), 1),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("rtd-ancestor?")),
        Op::TailCall(2, 1),
        Op::Return(1),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("compound-condition?"), 1),
        Op::Test(17),
        Op::ReferFreePush(0),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 1},
        Op::ReferFreePush(0),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("record-rtd"), 1),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("rtd-ancestor?")),
        Op::TailCall(2, 1),
        Op::Return(1),
        Op::PushFrame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("compound-condition-component"), 1),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("any1")),
        Op::TailCall(2, 1),
        Op::Return(1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("condition-predicate")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(48),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 1},
        Op::Frame(7),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&condition")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rtd"), 1),
        Op::Push,
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("rtd-ancestor?"), 2),
        Op::Test(2),
        Op::LocalJmp(11),
        Op::Frame(10),
        Op::ConstantPush(sym704),
        Op::Frame(4),
        Op::ConstantPush(str112),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(0, 2),
        Op::Push,
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferGlobalCall(vm.gc.intern("assertion-violation"), 4),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(1),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 3},
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("simple-condition?"), 1),
        Op::Test(33),
        Op::Frame(7),
        Op::ReferFreePush(2),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("record-rtd"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("rtd-ancestor?"), 2),
        Op::Test(2),
        Op::LocalJmp(20),
        Op::LetFrame(9),
        Op::ReferFreePush(1),
        Op::ReferFreePush(2),
        Op::Display(2),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::Enter(2),
        Op::Frame(11),
        Op::ConstantPush(str113),
        Op::Frame(5),
        Op::ConstantPush(str114),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(1, 3),
        Op::Push,
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferGlobalCall(vm.gc.intern("assertion-violation"), 4),
        Op::Leave(2),
        Op::ReferLocalPush(0),
        Op::ReferFree(0),
        Op::TailCall(1, 1),
        Op::Return(1),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("compound-condition?"), 1),
        Op::Test(55),
        Op::LetFrame(14),
        Op::ReferFreePush(0),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::ReferFreePush(2),
        Op::Display(5),
        Op::Frame(18),
        Op::ReferFreePush(0),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 1},
        Op::Frame(7),
        Op::ReferFreePush(0),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("record-rtd"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("rtd-ancestor?"), 2),
        Op::Test(2),
        Op::ReferLocal(0),
        Op::Return(1),
        Op::PushFrame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("compound-condition-component"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("any1"), 2),
        Op::PushEnter(1),
        Op::ReferLocal(0),
        Op::Test(5),
        Op::ReferLocalPush(0),
        Op::ReferFree(4),
        Op::TailCall(1, 4),
        Op::LocalJmp(21),
        Op::LetFrame(9),
        Op::ReferFreePush(1),
        Op::ReferFreePush(2),
        Op::ReferFreePush(0),
        Op::Display(3),
        Op::ReferFreePush(0),
        Op::ReferFreePush(1),
        Op::Enter(2),
        Op::ConstantPush(str115),
        Op::Frame(5),
        Op::ConstantPush(str116),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(2, 3),
        Op::Push,
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferGlobal(vm.gc.intern("assertion-violation")),
        Op::TailCall(4, 8),
        Op::Leave(2),
        Op::Leave(1),
        Op::Return(1),
        Op::LetFrame(9),
        Op::ReferFreePush(1),
        Op::ReferFreePush(2),
        Op::Display(2),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::Enter(2),
        Op::ConstantPush(str117),
        Op::Frame(5),
        Op::ConstantPush(str118),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(1, 3),
        Op::Push,
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferGlobal(vm.gc.intern("assertion-violation")),
        Op::TailCall(4, 5),
        Op::Leave(2),
        Op::Return(1),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("condition-accessor")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(48),
        Op::ReferFreePush(26),
        Op::ReferFreePush(31),
        Op::ReferFreePush(167),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 4},
        Op::Frame(3),
        Op::ReferLocalPush(1),
        Op::ReferGlobalCall(vm.gc.intern("condition?"), 1),
        Op::Test(304),
        Op::LetFrame(13),
        Op::ReferFreePush(3),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::Display(6),
        Op::Frame(2),
        Op::ReferGlobalCall(vm.gc.intern("make-string-output-port"), 0),
        Op::PushEnter(1),
        Op::Frame(4),
        Op::ReferLocalPushConstant(0, str119),
        Op::Push,
        Op::ReferFreeCall(5, 2),
        Op::LetFrame(4),
        Op::ReferFreePush(3),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(5),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(4),
        Op::Display(6),
        Op::Frame(3),
        Op::ReferFreePush(0),
        Op::ReferGlobalCall(vm.gc.intern("simple-conditions"), 1),
        Op::PushEnter(1),
        Op::Frame(261),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 6},
        Op::LetFrame(56),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Display(7),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("record-rtd"), 1),
        Op::PushEnter(1),
        Op::LetFrame(54),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(6),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::Display(10),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("record-type-name"), 1),
        Op::Push,
        Op::LetFrame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Display(3),
        Op::ReferLocalPush(0),
        Op::Enter(1),
        Op::LetFrame(2),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Display(4),
        Op::Undef,
        Op::Push,
        Op::Box(0),
        Op::Enter(1),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 4},
        Op::LetFrame(8),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Display(3),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("record-type-parent"), 1),
        Op::PushEnter(1),
        Op::ReferLocal(0),
        Op::Test(20),
        Op::LetFrame(5),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::Display(2),
        Op::ReferLocalPush(0),
        Op::Enter(1),
        Op::ReferLocalPush(0),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("record-type-name"), 1),
        Op::Push,
        Op::ReferFree(1),
        Op::Cons,
        Op::Push,
        Op::ReferFree(0),
        Op::Indirect,
        Op::LocalTailCall(2, 8),
        Op::Leave(1),
        Op::LocalJmp(5),
        Op::ReferFree(2),
        Op::CdrPush,
        Op::ReferFree(0),
        Op::TailCall(1, 5),
        Op::Leave(1),
        Op::Return(2),
        Op::AssignLocal(0),
        Op::Frame(6),
        Op::ReferFreePush(2),
        Op::ConstantPush(Object::Nil),
        Op::ReferLocal(0),
        Op::Indirect,
        Op::LocalCall(2),
        Op::Leave(1),
        Op::Leave(1),
        Op::PushFrame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("record-type-field-names"), 1),
        Op::VectorLength,
        Op::PushEnter(3),
        Op::Frame(5),
        Op::ReferFreePush(9),
        Op::ConstantPush(str120),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(8, 3),
        Op::ReferLocal(1),
        Op::PairP,
        Op::Test(6),
        Op::Frame(5),
        Op::ReferFreePush(9),
        Op::ConstantPush(str121),
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(8, 3),
        Op::ReferLocalPushConstant(2, Object::Number(1)),
        Op::BranchNotNumberEqual(49),
        Op::LetFrame(17),
        Op::ReferFreePush(5),
        Op::ReferFreePush(9),
        Op::ReferFreePush(7),
        Op::ReferFreePush(2),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(2),
        Op::Display(7),
        Op::Frame(7),
        Op::ReferFreePush(1),
        Op::Frame(4),
        Op::ReferFreePush(0),
        Op::ConstantPush(Object::Number(0)),
        Op::ReferGlobalCall(vm.gc.intern("record-accessor"), 2),
        Op::Call(1),
        Op::PushEnter(1),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(6, 1),
        Op::Test(14),
        Op::ReferFreePush(5),
        Op::ConstantPush(str122),
        Op::Frame(7),
        Op::ReferFreePush(1),
        Op::Frame(4),
        Op::ReferFreePush(0),
        Op::ConstantPush(Object::Number(0)),
        Op::ReferGlobalCall(vm.gc.intern("record-accessor"), 2),
        Op::Call(1),
        Op::Push,
        Op::ReferFree(2),
        Op::TailCall(3, 12),
        Op::LocalJmp(13),
        Op::ReferFreePush(5),
        Op::ConstantPush(str123),
        Op::Frame(7),
        Op::ReferFreePush(1),
        Op::Frame(4),
        Op::ReferFreePush(0),
        Op::ConstantPush(Object::Number(0)),
        Op::ReferGlobalCall(vm.gc.intern("record-accessor"), 2),
        Op::Call(1),
        Op::Push,
        Op::ReferFree(2),
        Op::TailCall(3, 12),
        Op::Leave(1),
        Op::LocalJmp(84),
        Op::ReferLocalPushConstant(2, Object::Number(1)),
        Op::BranchNotGt(81),
        Op::LetFrame(21),
        Op::ReferFreePush(1),
        Op::ReferFreePush(7),
        Op::ReferFreePush(2),
        Op::ReferFreePush(5),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(2),
        Op::ReferFreePush(4),
        Op::Display(8),
        Op::Frame(6),
        Op::Frame(3),
        Op::ReferFreePush(1),
        Op::ReferGlobalCall(vm.gc.intern("record-type-field-names"), 1),
        Op::Push,
        Op::ReferFreeCall(0, 1),
        Op::PushEnter(1),
        Op::LetFrame(18),
        Op::ReferFreePush(6),
        Op::ReferFreePush(1),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(2),
        Op::Display(6),
        Op::ConstantPush(Object::Number(0)),
        Op::ReferLocalPush(0),
        Op::Enter(2),
        Op::ReferLocal(1),
        Op::PairP,
        Op::Test(47),
        Op::LetFrame(16),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::Display(9),
        Op::Frame(7),
        Op::ReferFreePush(1),
        Op::Frame(4),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("record-accessor"), 2),
        Op::Call(1),
        Op::PushEnter(1),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(8, 1),
        Op::Test(9),
        Op::Frame(15),
        Op::ReferFreePush(7),
        Op::ConstantPush(str124),
        Op::ReferFree(6),
        Op::CarPush,
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(5, 4),
        Op::LocalJmp(8),
        Op::Frame(7),
        Op::ReferFreePush(7),
        Op::ConstantPush(str125),
        Op::ReferFree(6),
        Op::CarPush,
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(5, 4),
        Op::ReferFreePush(4),
        Op::Constant(Object::Number(1)),
        Op::NumberAddPush,
        Op::ReferFree(6),
        Op::CdrPush,
        Op::Shiftj(2, 5, 1),
        Op::LocalJmp(-47),
        Op::Leave(1),
        Op::Leave(2),
        Op::Leave(1),
        Op::LocalJmp(2),
        Op::Undef,
        Op::Leave(3),
        Op::Leave(1),
        Op::Return(1),
        Op::Push,
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("for-each"), 2),
        Op::Leave(1),
        Op::Frame(4),
        Op::ReferLocalPushConstant(0, str126),
        Op::Push,
        Op::ReferFreeCall(5, 2),
        Op::ReferFreePush(0),
        Op::ConstantPush(str127),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("extract-accumulated-string"), 1),
        Op::Push,
        Op::ReferFree(5),
        Op::TailCall(3, 5),
        Op::Leave(1),
        Op::Return(2),
        Op::ReferLocalPushConstant(0, str128),
        Op::Push,
        Op::ReferLocalPush(1),
        Op::ReferFree(3),
        Op::TailCall(3, 2),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("describe-condition")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::LetFrame(16),
        Op::Frame(11),
        Op::ConstantPush(sym705),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&condition")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rtd"), 1),
        Op::PushConstant(sym706),
        Op::PushConstant(Object::False),
        Op::PushConstant(Object::False),
        Op::PushConstant(vec3),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("make-record-type-descriptor"), 6),
        Op::PushEnter(1),
        Op::LetFrame(8),
        Op::ReferLocalPush(0),
        Op::Display(1),
        Op::Frame(8),
        Op::ReferLocalPush(0),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&condition")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rcd"), 1),
        Op::PushConstant(Object::False),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("make-record-constructor-descriptor"), 3),
        Op::PushEnter(1),
        Op::Frame(5),
        Op::ConstantPush(sym705),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("make-record-type"), 3),
        Op::Leave(1),
        Op::Leave(1),
        Op::DefineGlobal(vm.gc.intern("&message")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Frame(6),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&message")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rcd"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("record-constructor"), 1),
        Op::DefineGlobal(vm.gc.intern("make-message-condition")),
        Op::Nop,
        Op::Nop,
        Op::Frame(6),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&message")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rtd"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("condition-predicate"), 1),
        Op::DefineGlobal(vm.gc.intern("message-condition?")),
        Op::Nop,
        Op::Nop,
        Op::Frame(13),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&message")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rtd"), 1),
        Op::PushFrame(7),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&message")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rtd"), 1),
        Op::PushConstant(Object::Number(0)),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("record-accessor"), 2),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("condition-accessor"), 2),
        Op::DefineGlobal(vm.gc.intern("condition-message")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::LetFrame(16),
        Op::Frame(11),
        Op::ConstantPush(sym708),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&condition")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rtd"), 1),
        Op::PushConstant(sym709),
        Op::PushConstant(Object::False),
        Op::PushConstant(Object::False),
        Op::PushConstant(vec4),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("make-record-type-descriptor"), 6),
        Op::PushEnter(1),
        Op::LetFrame(8),
        Op::ReferLocalPush(0),
        Op::Display(1),
        Op::Frame(8),
        Op::ReferLocalPush(0),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&condition")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rcd"), 1),
        Op::PushConstant(Object::False),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("make-record-constructor-descriptor"), 3),
        Op::PushEnter(1),
        Op::Frame(5),
        Op::ConstantPush(sym708),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("make-record-type"), 3),
        Op::Leave(1),
        Op::Leave(1),
        Op::DefineGlobal(vm.gc.intern("&warning")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Frame(6),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&warning")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rcd"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("record-constructor"), 1),
        Op::DefineGlobal(vm.gc.intern("make-warning")),
        Op::Nop,
        Op::Nop,
        Op::Frame(6),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&warning")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rtd"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("condition-predicate"), 1),
        Op::DefineGlobal(vm.gc.intern("warning?")),
        Op::Nop,
        Op::Nop,
        Op::LetFrame(16),
        Op::Frame(11),
        Op::ConstantPush(sym710),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&condition")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rtd"), 1),
        Op::PushConstant(sym711),
        Op::PushConstant(Object::False),
        Op::PushConstant(Object::False),
        Op::PushConstant(vec5),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("make-record-type-descriptor"), 6),
        Op::PushEnter(1),
        Op::LetFrame(8),
        Op::ReferLocalPush(0),
        Op::Display(1),
        Op::Frame(8),
        Op::ReferLocalPush(0),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&condition")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rcd"), 1),
        Op::PushConstant(Object::False),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("make-record-constructor-descriptor"), 3),
        Op::PushEnter(1),
        Op::Frame(5),
        Op::ConstantPush(sym710),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("make-record-type"), 3),
        Op::Leave(1),
        Op::Leave(1),
        Op::DefineGlobal(vm.gc.intern("&serious")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Frame(6),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&serious")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rcd"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("record-constructor"), 1),
        Op::DefineGlobal(vm.gc.intern("make-serious-condition")),
        Op::Nop,
        Op::Nop,
        Op::Frame(6),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&serious")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rtd"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("condition-predicate"), 1),
        Op::DefineGlobal(vm.gc.intern("serious-condition?")),
        Op::Nop,
        Op::Nop,
        Op::LetFrame(16),
        Op::Frame(11),
        Op::ConstantPush(sym712),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&serious")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rtd"), 1),
        Op::PushConstant(sym713),
        Op::PushConstant(Object::False),
        Op::PushConstant(Object::False),
        Op::PushConstant(vec6),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("make-record-type-descriptor"), 6),
        Op::PushEnter(1),
        Op::LetFrame(8),
        Op::ReferLocalPush(0),
        Op::Display(1),
        Op::Frame(8),
        Op::ReferLocalPush(0),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&serious")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rcd"), 1),
        Op::PushConstant(Object::False),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("make-record-constructor-descriptor"), 3),
        Op::PushEnter(1),
        Op::Frame(5),
        Op::ConstantPush(sym712),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("make-record-type"), 3),
        Op::Leave(1),
        Op::Leave(1),
        Op::DefineGlobal(vm.gc.intern("&error")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Frame(6),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&error")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rcd"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("record-constructor"), 1),
        Op::DefineGlobal(vm.gc.intern("make-error")),
        Op::Nop,
        Op::Nop,
        Op::Frame(6),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&error")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rtd"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("condition-predicate"), 1),
        Op::DefineGlobal(vm.gc.intern("error?")),
        Op::Nop,
        Op::Nop,
        Op::LetFrame(16),
        Op::Frame(11),
        Op::ConstantPush(sym714),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&serious")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rtd"), 1),
        Op::PushConstant(sym715),
        Op::PushConstant(Object::False),
        Op::PushConstant(Object::False),
        Op::PushConstant(vec7),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("make-record-type-descriptor"), 6),
        Op::PushEnter(1),
        Op::LetFrame(8),
        Op::ReferLocalPush(0),
        Op::Display(1),
        Op::Frame(8),
        Op::ReferLocalPush(0),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&serious")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rcd"), 1),
        Op::PushConstant(Object::False),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("make-record-constructor-descriptor"), 3),
        Op::PushEnter(1),
        Op::Frame(5),
        Op::ConstantPush(sym714),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("make-record-type"), 3),
        Op::Leave(1),
        Op::Leave(1),
        Op::DefineGlobal(vm.gc.intern("&violation")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Frame(6),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&violation")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rcd"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("record-constructor"), 1),
        Op::DefineGlobal(vm.gc.intern("make-violation")),
        Op::Nop,
        Op::Nop,
        Op::Frame(6),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&violation")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rtd"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("condition-predicate"), 1),
        Op::DefineGlobal(vm.gc.intern("violation?")),
        Op::Nop,
        Op::Nop,
        Op::LetFrame(16),
        Op::Frame(11),
        Op::ConstantPush(sym716),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&violation")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rtd"), 1),
        Op::PushConstant(sym717),
        Op::PushConstant(Object::False),
        Op::PushConstant(Object::False),
        Op::PushConstant(vec8),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("make-record-type-descriptor"), 6),
        Op::PushEnter(1),
        Op::LetFrame(8),
        Op::ReferLocalPush(0),
        Op::Display(1),
        Op::Frame(8),
        Op::ReferLocalPush(0),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&violation")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rcd"), 1),
        Op::PushConstant(Object::False),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("make-record-constructor-descriptor"), 3),
        Op::PushEnter(1),
        Op::Frame(5),
        Op::ConstantPush(sym716),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("make-record-type"), 3),
        Op::Leave(1),
        Op::Leave(1),
        Op::DefineGlobal(vm.gc.intern("&assertion")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Frame(6),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&assertion")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rcd"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("record-constructor"), 1),
        Op::DefineGlobal(vm.gc.intern("make-assertion-violation")),
        Op::Nop,
        Op::Nop,
        Op::Frame(6),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&assertion")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rtd"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("condition-predicate"), 1),
        Op::DefineGlobal(vm.gc.intern("assertion-violation?")),
        Op::Nop,
        Op::Nop,
        Op::LetFrame(16),
        Op::Frame(11),
        Op::ConstantPush(sym718),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&condition")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rtd"), 1),
        Op::PushConstant(sym719),
        Op::PushConstant(Object::False),
        Op::PushConstant(Object::False),
        Op::PushConstant(vec9),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("make-record-type-descriptor"), 6),
        Op::PushEnter(1),
        Op::LetFrame(8),
        Op::ReferLocalPush(0),
        Op::Display(1),
        Op::Frame(8),
        Op::ReferLocalPush(0),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&condition")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rcd"), 1),
        Op::PushConstant(Object::False),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("make-record-constructor-descriptor"), 3),
        Op::PushEnter(1),
        Op::Frame(5),
        Op::ConstantPush(sym718),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("make-record-type"), 3),
        Op::Leave(1),
        Op::Leave(1),
        Op::DefineGlobal(vm.gc.intern("&irritants")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Frame(7),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&irritants")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rtd"), 1),
        Op::PushConstant(Object::Number(0)),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("record-accessor"), 2),
        Op::DefineGlobal(vm.gc.intern("&irritants-irritants")),
        Op::Nop,
        Op::Nop,
        Op::Frame(6),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&irritants")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rcd"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("record-constructor"), 1),
        Op::DefineGlobal(vm.gc.intern("make-irritants-condition")),
        Op::Nop,
        Op::Nop,
        Op::Frame(6),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&irritants")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rtd"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("condition-predicate"), 1),
        Op::DefineGlobal(vm.gc.intern("irritants-condition?")),
        Op::Nop,
        Op::Nop,
        Op::Frame(7),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&irritants")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rtd"), 1),
        Op::Push,
        Op::ReferGlobalPush(vm.gc.intern("&irritants-irritants")),
        Op::ReferGlobalCall(vm.gc.intern("condition-accessor"), 2),
        Op::DefineGlobal(vm.gc.intern("condition-irritants")),
        Op::Nop,
        Op::Nop,
        Op::LetFrame(16),
        Op::Frame(11),
        Op::ConstantPush(sym721),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&condition")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rtd"), 1),
        Op::PushConstant(sym722),
        Op::PushConstant(Object::False),
        Op::PushConstant(Object::False),
        Op::PushConstant(vec10),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("make-record-type-descriptor"), 6),
        Op::PushEnter(1),
        Op::LetFrame(8),
        Op::ReferLocalPush(0),
        Op::Display(1),
        Op::Frame(8),
        Op::ReferLocalPush(0),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&condition")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rcd"), 1),
        Op::PushConstant(Object::False),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("make-record-constructor-descriptor"), 3),
        Op::PushEnter(1),
        Op::Frame(5),
        Op::ConstantPush(sym721),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("make-record-type"), 3),
        Op::Leave(1),
        Op::Leave(1),
        Op::DefineGlobal(vm.gc.intern("&who")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Frame(7),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&who")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rtd"), 1),
        Op::PushConstant(Object::Number(0)),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("record-accessor"), 2),
        Op::DefineGlobal(vm.gc.intern("&who-who")),
        Op::Nop,
        Op::Nop,
        Op::Frame(6),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&who")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rcd"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("record-constructor"), 1),
        Op::DefineGlobal(vm.gc.intern("make-who-condition")),
        Op::Nop,
        Op::Nop,
        Op::Frame(6),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&who")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rtd"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("condition-predicate"), 1),
        Op::DefineGlobal(vm.gc.intern("who-condition?")),
        Op::Nop,
        Op::Nop,
        Op::Frame(7),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&who")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rtd"), 1),
        Op::Push,
        Op::ReferGlobalPush(vm.gc.intern("&who-who")),
        Op::ReferGlobalCall(vm.gc.intern("condition-accessor"), 2),
        Op::DefineGlobal(vm.gc.intern("condition-who")),
        Op::Nop,
        Op::Nop,
        Op::LetFrame(16),
        Op::Frame(11),
        Op::ConstantPush(sym724),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&violation")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rtd"), 1),
        Op::PushConstant(sym725),
        Op::PushConstant(Object::False),
        Op::PushConstant(Object::False),
        Op::PushConstant(vec11),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("make-record-type-descriptor"), 6),
        Op::PushEnter(1),
        Op::LetFrame(8),
        Op::ReferLocalPush(0),
        Op::Display(1),
        Op::Frame(8),
        Op::ReferLocalPush(0),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&violation")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rcd"), 1),
        Op::PushConstant(Object::False),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("make-record-constructor-descriptor"), 3),
        Op::PushEnter(1),
        Op::Frame(5),
        Op::ConstantPush(sym724),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("make-record-type"), 3),
        Op::Leave(1),
        Op::Leave(1),
        Op::DefineGlobal(vm.gc.intern("&non-continuable")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Frame(6),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&non-continuable")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rcd"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("record-constructor"), 1),
        Op::DefineGlobal(vm.gc.intern("make-non-continuable-violation")),
        Op::Nop,
        Op::Nop,
        Op::Frame(6),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&non-continuable")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rtd"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("condition-predicate"), 1),
        Op::DefineGlobal(vm.gc.intern("non-continuable-violation?")),
        Op::Nop,
        Op::Nop,
        Op::LetFrame(16),
        Op::Frame(11),
        Op::ConstantPush(sym726),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&violation")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rtd"), 1),
        Op::PushConstant(sym727),
        Op::PushConstant(Object::False),
        Op::PushConstant(Object::False),
        Op::PushConstant(vec12),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("make-record-type-descriptor"), 6),
        Op::PushEnter(1),
        Op::LetFrame(8),
        Op::ReferLocalPush(0),
        Op::Display(1),
        Op::Frame(8),
        Op::ReferLocalPush(0),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&violation")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rcd"), 1),
        Op::PushConstant(Object::False),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("make-record-constructor-descriptor"), 3),
        Op::PushEnter(1),
        Op::Frame(5),
        Op::ConstantPush(sym726),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("make-record-type"), 3),
        Op::Leave(1),
        Op::Leave(1),
        Op::DefineGlobal(vm.gc.intern("&implementation-restriction")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Frame(6),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&implementation-restriction")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rcd"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("record-constructor"), 1),
        Op::DefineGlobal(vm.gc.intern("make-implementation-restriction-violation")),
        Op::Nop,
        Op::Nop,
        Op::Frame(6),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&implementation-restriction")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rtd"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("condition-predicate"), 1),
        Op::DefineGlobal(vm.gc.intern("implementation-restriction-violation?")),
        Op::Nop,
        Op::Nop,
        Op::LetFrame(16),
        Op::Frame(11),
        Op::ConstantPush(sym728),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&violation")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rtd"), 1),
        Op::PushConstant(sym729),
        Op::PushConstant(Object::False),
        Op::PushConstant(Object::False),
        Op::PushConstant(vec13),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("make-record-type-descriptor"), 6),
        Op::PushEnter(1),
        Op::LetFrame(8),
        Op::ReferLocalPush(0),
        Op::Display(1),
        Op::Frame(8),
        Op::ReferLocalPush(0),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&violation")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rcd"), 1),
        Op::PushConstant(Object::False),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("make-record-constructor-descriptor"), 3),
        Op::PushEnter(1),
        Op::Frame(5),
        Op::ConstantPush(sym728),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("make-record-type"), 3),
        Op::Leave(1),
        Op::Leave(1),
        Op::DefineGlobal(vm.gc.intern("&lexical")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Frame(6),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&lexical")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rcd"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("record-constructor"), 1),
        Op::DefineGlobal(vm.gc.intern("make-lexical-violation")),
        Op::Nop,
        Op::Nop,
        Op::Frame(6),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&lexical")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rtd"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("condition-predicate"), 1),
        Op::DefineGlobal(vm.gc.intern("lexical-violation?")),
        Op::Nop,
        Op::Nop,
        Op::LetFrame(16),
        Op::Frame(11),
        Op::ConstantPush(sym730),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&violation")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rtd"), 1),
        Op::PushConstant(sym731),
        Op::PushConstant(Object::False),
        Op::PushConstant(Object::False),
        Op::PushConstant(vec14),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("make-record-type-descriptor"), 6),
        Op::PushEnter(1),
        Op::LetFrame(8),
        Op::ReferLocalPush(0),
        Op::Display(1),
        Op::Frame(8),
        Op::ReferLocalPush(0),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&violation")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rcd"), 1),
        Op::PushConstant(Object::False),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("make-record-constructor-descriptor"), 3),
        Op::PushEnter(1),
        Op::Frame(5),
        Op::ConstantPush(sym730),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("make-record-type"), 3),
        Op::Leave(1),
        Op::Leave(1),
        Op::DefineGlobal(vm.gc.intern("&syntax")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Frame(7),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&syntax")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rtd"), 1),
        Op::PushConstant(Object::Number(0)),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("record-accessor"), 2),
        Op::DefineGlobal(vm.gc.intern("&syntax-form")),
        Op::Nop,
        Op::Nop,
        Op::Frame(7),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&syntax")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rtd"), 1),
        Op::PushConstant(Object::Number(1)),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("record-accessor"), 2),
        Op::DefineGlobal(vm.gc.intern("&syntax-subform")),
        Op::Nop,
        Op::Nop,
        Op::Frame(6),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&syntax")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rcd"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("record-constructor"), 1),
        Op::DefineGlobal(vm.gc.intern("make-syntax-violation")),
        Op::Nop,
        Op::Nop,
        Op::Frame(6),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&syntax")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rtd"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("condition-predicate"), 1),
        Op::DefineGlobal(vm.gc.intern("syntax-violation?")),
        Op::Nop,
        Op::Nop,
        Op::Frame(7),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&syntax")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rtd"), 1),
        Op::Push,
        Op::ReferGlobalPush(vm.gc.intern("&syntax-form")),
        Op::ReferGlobalCall(vm.gc.intern("condition-accessor"), 2),
        Op::DefineGlobal(vm.gc.intern("syntax-violation-form")),
        Op::Nop,
        Op::Nop,
        Op::Frame(7),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&syntax")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rtd"), 1),
        Op::Push,
        Op::ReferGlobalPush(vm.gc.intern("&syntax-subform")),
        Op::ReferGlobalCall(vm.gc.intern("condition-accessor"), 2),
        Op::DefineGlobal(vm.gc.intern("syntax-violation-subform")),
        Op::Nop,
        Op::Nop,
        Op::LetFrame(16),
        Op::Frame(11),
        Op::ConstantPush(sym734),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&violation")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rtd"), 1),
        Op::PushConstant(sym735),
        Op::PushConstant(Object::False),
        Op::PushConstant(Object::False),
        Op::PushConstant(vec15),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("make-record-type-descriptor"), 6),
        Op::PushEnter(1),
        Op::LetFrame(8),
        Op::ReferLocalPush(0),
        Op::Display(1),
        Op::Frame(8),
        Op::ReferLocalPush(0),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&violation")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rcd"), 1),
        Op::PushConstant(Object::False),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("make-record-constructor-descriptor"), 3),
        Op::PushEnter(1),
        Op::Frame(5),
        Op::ConstantPush(sym734),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("make-record-type"), 3),
        Op::Leave(1),
        Op::Leave(1),
        Op::DefineGlobal(vm.gc.intern("&undefined")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Frame(6),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&undefined")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rcd"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("record-constructor"), 1),
        Op::DefineGlobal(vm.gc.intern("make-undefined-violation")),
        Op::Nop,
        Op::Nop,
        Op::Frame(6),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&undefined")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rtd"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("condition-predicate"), 1),
        Op::DefineGlobal(vm.gc.intern("undefined-violation?")),
        Op::Nop,
        Op::Nop,
        Op::LetFrame(16),
        Op::Frame(11),
        Op::ConstantPush(sym736),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&error")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rtd"), 1),
        Op::PushConstant(sym737),
        Op::PushConstant(Object::False),
        Op::PushConstant(Object::False),
        Op::PushConstant(vec16),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("make-record-type-descriptor"), 6),
        Op::PushEnter(1),
        Op::LetFrame(8),
        Op::ReferLocalPush(0),
        Op::Display(1),
        Op::Frame(8),
        Op::ReferLocalPush(0),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&error")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rcd"), 1),
        Op::PushConstant(Object::False),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("make-record-constructor-descriptor"), 3),
        Op::PushEnter(1),
        Op::Frame(5),
        Op::ConstantPush(sym736),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("make-record-type"), 3),
        Op::Leave(1),
        Op::Leave(1),
        Op::DefineGlobal(vm.gc.intern("&i/o")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Frame(6),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&i/o")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rcd"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("record-constructor"), 1),
        Op::DefineGlobal(vm.gc.intern("make-i/o-error")),
        Op::Nop,
        Op::Nop,
        Op::Frame(6),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&i/o")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rtd"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("condition-predicate"), 1),
        Op::DefineGlobal(vm.gc.intern("i/o-error?")),
        Op::Nop,
        Op::Nop,
        Op::LetFrame(16),
        Op::Frame(11),
        Op::ConstantPush(sym738),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&i/o")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rtd"), 1),
        Op::PushConstant(sym739),
        Op::PushConstant(Object::False),
        Op::PushConstant(Object::False),
        Op::PushConstant(vec17),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("make-record-type-descriptor"), 6),
        Op::PushEnter(1),
        Op::LetFrame(8),
        Op::ReferLocalPush(0),
        Op::Display(1),
        Op::Frame(8),
        Op::ReferLocalPush(0),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&i/o")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rcd"), 1),
        Op::PushConstant(Object::False),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("make-record-constructor-descriptor"), 3),
        Op::PushEnter(1),
        Op::Frame(5),
        Op::ConstantPush(sym738),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("make-record-type"), 3),
        Op::Leave(1),
        Op::Leave(1),
        Op::DefineGlobal(vm.gc.intern("&i/o-read")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Frame(6),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&i/o-read")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rcd"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("record-constructor"), 1),
        Op::DefineGlobal(vm.gc.intern("make-i/o-read-error")),
        Op::Nop,
        Op::Nop,
        Op::Frame(6),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&i/o-read")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rtd"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("condition-predicate"), 1),
        Op::DefineGlobal(vm.gc.intern("i/o-read-error?")),
        Op::Nop,
        Op::Nop,
        Op::LetFrame(16),
        Op::Frame(11),
        Op::ConstantPush(sym740),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&i/o")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rtd"), 1),
        Op::PushConstant(sym741),
        Op::PushConstant(Object::False),
        Op::PushConstant(Object::False),
        Op::PushConstant(vec18),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("make-record-type-descriptor"), 6),
        Op::PushEnter(1),
        Op::LetFrame(8),
        Op::ReferLocalPush(0),
        Op::Display(1),
        Op::Frame(8),
        Op::ReferLocalPush(0),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&i/o")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rcd"), 1),
        Op::PushConstant(Object::False),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("make-record-constructor-descriptor"), 3),
        Op::PushEnter(1),
        Op::Frame(5),
        Op::ConstantPush(sym740),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("make-record-type"), 3),
        Op::Leave(1),
        Op::Leave(1),
        Op::DefineGlobal(vm.gc.intern("&i/o-write")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Frame(6),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&i/o-write")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rcd"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("record-constructor"), 1),
        Op::DefineGlobal(vm.gc.intern("make-i/o-write-error")),
        Op::Nop,
        Op::Nop,
        Op::Frame(6),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&i/o-write")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rtd"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("condition-predicate"), 1),
        Op::DefineGlobal(vm.gc.intern("i/o-write-error?")),
        Op::Nop,
        Op::Nop,
        Op::LetFrame(16),
        Op::Frame(11),
        Op::ConstantPush(sym742),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&i/o")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rtd"), 1),
        Op::PushConstant(sym743),
        Op::PushConstant(Object::False),
        Op::PushConstant(Object::False),
        Op::PushConstant(vec19),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("make-record-type-descriptor"), 6),
        Op::PushEnter(1),
        Op::LetFrame(8),
        Op::ReferLocalPush(0),
        Op::Display(1),
        Op::Frame(8),
        Op::ReferLocalPush(0),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&i/o")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rcd"), 1),
        Op::PushConstant(Object::False),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("make-record-constructor-descriptor"), 3),
        Op::PushEnter(1),
        Op::Frame(5),
        Op::ConstantPush(sym742),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("make-record-type"), 3),
        Op::Leave(1),
        Op::Leave(1),
        Op::DefineGlobal(vm.gc.intern("&i/o-invalid-position")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Frame(7),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&i/o-invalid-position")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rtd"), 1),
        Op::PushConstant(Object::Number(0)),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("record-accessor"), 2),
        Op::DefineGlobal(vm.gc.intern("&i/o-invalid-position-position")),
        Op::Nop,
        Op::Nop,
        Op::Frame(6),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&i/o-invalid-position")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rcd"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("record-constructor"), 1),
        Op::DefineGlobal(vm.gc.intern("make-i/o-invalid-position-error")),
        Op::Nop,
        Op::Nop,
        Op::Frame(6),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&i/o-invalid-position")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rtd"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("condition-predicate"), 1),
        Op::DefineGlobal(vm.gc.intern("i/o-invalid-position-error?")),
        Op::Nop,
        Op::Nop,
        Op::Frame(7),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&i/o-invalid-position")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rtd"), 1),
        Op::Push,
        Op::ReferGlobalPush(vm.gc.intern("&i/o-invalid-position-position")),
        Op::ReferGlobalCall(vm.gc.intern("condition-accessor"), 2),
        Op::DefineGlobal(vm.gc.intern("i/o-error-position")),
        Op::Nop,
        Op::Nop,
        Op::LetFrame(16),
        Op::Frame(11),
        Op::ConstantPush(sym745),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&i/o")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rtd"), 1),
        Op::PushConstant(sym746),
        Op::PushConstant(Object::False),
        Op::PushConstant(Object::False),
        Op::PushConstant(vec20),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("make-record-type-descriptor"), 6),
        Op::PushEnter(1),
        Op::LetFrame(8),
        Op::ReferLocalPush(0),
        Op::Display(1),
        Op::Frame(8),
        Op::ReferLocalPush(0),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&i/o")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rcd"), 1),
        Op::PushConstant(Object::False),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("make-record-constructor-descriptor"), 3),
        Op::PushEnter(1),
        Op::Frame(5),
        Op::ConstantPush(sym745),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("make-record-type"), 3),
        Op::Leave(1),
        Op::Leave(1),
        Op::DefineGlobal(vm.gc.intern("&i/o-filename")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Frame(7),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&i/o-filename")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rtd"), 1),
        Op::PushConstant(Object::Number(0)),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("record-accessor"), 2),
        Op::DefineGlobal(vm.gc.intern("&i/o-filename-filename")),
        Op::Nop,
        Op::Nop,
        Op::Frame(6),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&i/o-filename")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rcd"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("record-constructor"), 1),
        Op::DefineGlobal(vm.gc.intern("make-i/o-filename-error")),
        Op::Nop,
        Op::Nop,
        Op::Frame(6),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&i/o-filename")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rtd"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("condition-predicate"), 1),
        Op::DefineGlobal(vm.gc.intern("i/o-filename-error?")),
        Op::Nop,
        Op::Nop,
        Op::Frame(7),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&i/o-filename")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rtd"), 1),
        Op::Push,
        Op::ReferGlobalPush(vm.gc.intern("&i/o-filename-filename")),
        Op::ReferGlobalCall(vm.gc.intern("condition-accessor"), 2),
        Op::DefineGlobal(vm.gc.intern("i/o-error-filename")),
        Op::Nop,
        Op::Nop,
        Op::LetFrame(16),
        Op::Frame(11),
        Op::ConstantPush(sym748),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&i/o-filename")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rtd"), 1),
        Op::PushConstant(sym749),
        Op::PushConstant(Object::False),
        Op::PushConstant(Object::False),
        Op::PushConstant(vec21),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("make-record-type-descriptor"), 6),
        Op::PushEnter(1),
        Op::LetFrame(8),
        Op::ReferLocalPush(0),
        Op::Display(1),
        Op::Frame(8),
        Op::ReferLocalPush(0),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&i/o-filename")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rcd"), 1),
        Op::PushConstant(Object::False),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("make-record-constructor-descriptor"), 3),
        Op::PushEnter(1),
        Op::Frame(5),
        Op::ConstantPush(sym748),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("make-record-type"), 3),
        Op::Leave(1),
        Op::Leave(1),
        Op::DefineGlobal(vm.gc.intern("&i/o-file-protection")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Frame(6),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&i/o-file-protection")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rcd"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("record-constructor"), 1),
        Op::DefineGlobal(vm.gc.intern("make-i/o-file-protection-error")),
        Op::Nop,
        Op::Nop,
        Op::Frame(6),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&i/o-file-protection")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rtd"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("condition-predicate"), 1),
        Op::DefineGlobal(vm.gc.intern("i/o-file-protection-error?")),
        Op::Nop,
        Op::Nop,
        Op::LetFrame(16),
        Op::Frame(11),
        Op::ConstantPush(sym750),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&i/o-file-protection")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rtd"), 1),
        Op::PushConstant(sym751),
        Op::PushConstant(Object::False),
        Op::PushConstant(Object::False),
        Op::PushConstant(vec22),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("make-record-type-descriptor"), 6),
        Op::PushEnter(1),
        Op::LetFrame(8),
        Op::ReferLocalPush(0),
        Op::Display(1),
        Op::Frame(8),
        Op::ReferLocalPush(0),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&i/o-file-protection")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rcd"), 1),
        Op::PushConstant(Object::False),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("make-record-constructor-descriptor"), 3),
        Op::PushEnter(1),
        Op::Frame(5),
        Op::ConstantPush(sym750),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("make-record-type"), 3),
        Op::Leave(1),
        Op::Leave(1),
        Op::DefineGlobal(vm.gc.intern("&i/o-file-is-read-only")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Frame(6),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&i/o-file-is-read-only")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rcd"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("record-constructor"), 1),
        Op::DefineGlobal(vm.gc.intern("make-i/o-file-is-read-only-error")),
        Op::Nop,
        Op::Nop,
        Op::Frame(6),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&i/o-file-is-read-only")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rtd"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("condition-predicate"), 1),
        Op::DefineGlobal(vm.gc.intern("i/o-file-is-read-only-error?")),
        Op::Nop,
        Op::Nop,
        Op::LetFrame(16),
        Op::Frame(11),
        Op::ConstantPush(sym752),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&i/o-filename")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rtd"), 1),
        Op::PushConstant(sym753),
        Op::PushConstant(Object::False),
        Op::PushConstant(Object::False),
        Op::PushConstant(vec23),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("make-record-type-descriptor"), 6),
        Op::PushEnter(1),
        Op::LetFrame(8),
        Op::ReferLocalPush(0),
        Op::Display(1),
        Op::Frame(8),
        Op::ReferLocalPush(0),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&i/o-filename")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rcd"), 1),
        Op::PushConstant(Object::False),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("make-record-constructor-descriptor"), 3),
        Op::PushEnter(1),
        Op::Frame(5),
        Op::ConstantPush(sym752),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("make-record-type"), 3),
        Op::Leave(1),
        Op::Leave(1),
        Op::DefineGlobal(vm.gc.intern("&i/o-file-already-exists")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Frame(6),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&i/o-file-already-exists")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rcd"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("record-constructor"), 1),
        Op::DefineGlobal(vm.gc.intern("make-i/o-file-already-exists-error")),
        Op::Nop,
        Op::Nop,
        Op::Frame(6),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&i/o-file-already-exists")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rtd"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("condition-predicate"), 1),
        Op::DefineGlobal(vm.gc.intern("i/o-file-already-exists-error?")),
        Op::Nop,
        Op::Nop,
        Op::LetFrame(16),
        Op::Frame(11),
        Op::ConstantPush(sym754),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&i/o-filename")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rtd"), 1),
        Op::PushConstant(sym755),
        Op::PushConstant(Object::False),
        Op::PushConstant(Object::False),
        Op::PushConstant(vec24),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("make-record-type-descriptor"), 6),
        Op::PushEnter(1),
        Op::LetFrame(8),
        Op::ReferLocalPush(0),
        Op::Display(1),
        Op::Frame(8),
        Op::ReferLocalPush(0),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&i/o-filename")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rcd"), 1),
        Op::PushConstant(Object::False),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("make-record-constructor-descriptor"), 3),
        Op::PushEnter(1),
        Op::Frame(5),
        Op::ConstantPush(sym754),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("make-record-type"), 3),
        Op::Leave(1),
        Op::Leave(1),
        Op::DefineGlobal(vm.gc.intern("&i/o-file-does-not-exist")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Frame(6),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&i/o-file-does-not-exist")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rcd"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("record-constructor"), 1),
        Op::DefineGlobal(vm.gc.intern("make-i/o-file-does-not-exist-error")),
        Op::Nop,
        Op::Nop,
        Op::Frame(6),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&i/o-file-does-not-exist")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rtd"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("condition-predicate"), 1),
        Op::DefineGlobal(vm.gc.intern("i/o-file-does-not-exist-error?")),
        Op::Nop,
        Op::Nop,
        Op::LetFrame(16),
        Op::Frame(11),
        Op::ConstantPush(sym756),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&i/o")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rtd"), 1),
        Op::PushConstant(sym757),
        Op::PushConstant(Object::False),
        Op::PushConstant(Object::False),
        Op::PushConstant(vec25),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("make-record-type-descriptor"), 6),
        Op::PushEnter(1),
        Op::LetFrame(8),
        Op::ReferLocalPush(0),
        Op::Display(1),
        Op::Frame(8),
        Op::ReferLocalPush(0),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&i/o")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rcd"), 1),
        Op::PushConstant(Object::False),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("make-record-constructor-descriptor"), 3),
        Op::PushEnter(1),
        Op::Frame(5),
        Op::ConstantPush(sym756),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("make-record-type"), 3),
        Op::Leave(1),
        Op::Leave(1),
        Op::DefineGlobal(vm.gc.intern("&i/o-port")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Frame(7),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&i/o-port")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rtd"), 1),
        Op::PushConstant(Object::Number(0)),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("record-accessor"), 2),
        Op::DefineGlobal(vm.gc.intern("&i/o-port-port")),
        Op::Nop,
        Op::Nop,
        Op::Frame(6),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&i/o-port")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rcd"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("record-constructor"), 1),
        Op::DefineGlobal(vm.gc.intern("make-i/o-port-error")),
        Op::Nop,
        Op::Nop,
        Op::Frame(6),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&i/o-port")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rtd"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("condition-predicate"), 1),
        Op::DefineGlobal(vm.gc.intern("i/o-port-error?")),
        Op::Nop,
        Op::Nop,
        Op::Frame(7),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&i/o-port")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rtd"), 1),
        Op::Push,
        Op::ReferGlobalPush(vm.gc.intern("&i/o-port-port")),
        Op::ReferGlobalCall(vm.gc.intern("condition-accessor"), 2),
        Op::DefineGlobal(vm.gc.intern("i/o-error-port")),
        Op::Nop,
        Op::Nop,
        Op::LetFrame(16),
        Op::Frame(11),
        Op::ConstantPush(sym759),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&i/o-port")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rtd"), 1),
        Op::PushConstant(sym760),
        Op::PushConstant(Object::False),
        Op::PushConstant(Object::False),
        Op::PushConstant(vec26),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("make-record-type-descriptor"), 6),
        Op::PushEnter(1),
        Op::LetFrame(8),
        Op::ReferLocalPush(0),
        Op::Display(1),
        Op::Frame(8),
        Op::ReferLocalPush(0),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&i/o-port")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rcd"), 1),
        Op::PushConstant(Object::False),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("make-record-constructor-descriptor"), 3),
        Op::PushEnter(1),
        Op::Frame(5),
        Op::ConstantPush(sym759),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("make-record-type"), 3),
        Op::Leave(1),
        Op::Leave(1),
        Op::DefineGlobal(vm.gc.intern("&i/o-decoding")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Frame(6),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&i/o-decoding")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rcd"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("record-constructor"), 1),
        Op::DefineGlobal(vm.gc.intern("make-i/o-decoding-error")),
        Op::Nop,
        Op::Nop,
        Op::Frame(6),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&i/o-decoding")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rtd"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("condition-predicate"), 1),
        Op::DefineGlobal(vm.gc.intern("i/o-decoding-error?")),
        Op::Nop,
        Op::Nop,
        Op::LetFrame(16),
        Op::Frame(11),
        Op::ConstantPush(sym761),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&i/o-port")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rtd"), 1),
        Op::PushConstant(sym761),
        Op::PushConstant(Object::False),
        Op::PushConstant(Object::False),
        Op::PushConstant(vec27),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("make-record-type-descriptor"), 6),
        Op::PushEnter(1),
        Op::LetFrame(8),
        Op::ReferLocalPush(0),
        Op::Display(1),
        Op::Frame(8),
        Op::ReferLocalPush(0),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&i/o-port")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rcd"), 1),
        Op::PushConstant(Object::False),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("make-record-constructor-descriptor"), 3),
        Op::PushEnter(1),
        Op::Frame(5),
        Op::ConstantPush(sym761),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("make-record-type"), 3),
        Op::Leave(1),
        Op::Leave(1),
        Op::DefineGlobal(vm.gc.intern("&i/o-encoding")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Frame(7),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&i/o-encoding")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rtd"), 1),
        Op::PushConstant(Object::Number(0)),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("record-accessor"), 2),
        Op::DefineGlobal(vm.gc.intern("&i/o-encoding-char")),
        Op::Nop,
        Op::Nop,
        Op::Frame(6),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&i/o-encoding")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rcd"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("record-constructor"), 1),
        Op::DefineGlobal(vm.gc.intern("make-i/o-encoding-error")),
        Op::Nop,
        Op::Nop,
        Op::Frame(6),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&i/o-encoding")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rtd"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("condition-predicate"), 1),
        Op::DefineGlobal(vm.gc.intern("i/o-encoding-error?")),
        Op::Nop,
        Op::Nop,
        Op::Frame(7),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&i/o-encoding")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rtd"), 1),
        Op::Push,
        Op::ReferGlobalPush(vm.gc.intern("&i/o-encoding-char")),
        Op::ReferGlobalCall(vm.gc.intern("condition-accessor"), 2),
        Op::DefineGlobal(vm.gc.intern("i/o-encoding-error-char")),
        Op::Nop,
        Op::Nop,
        Op::LetFrame(16),
        Op::Frame(11),
        Op::ConstantPush(sym763),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&implementation-restriction")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rtd"), 1),
        Op::PushConstant(sym764),
        Op::PushConstant(Object::False),
        Op::PushConstant(Object::False),
        Op::PushConstant(vec28),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("make-record-type-descriptor"), 6),
        Op::PushEnter(1),
        Op::LetFrame(8),
        Op::ReferLocalPush(0),
        Op::Display(1),
        Op::Frame(8),
        Op::ReferLocalPush(0),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&implementation-restriction")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rcd"), 1),
        Op::PushConstant(Object::False),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("make-record-constructor-descriptor"), 3),
        Op::PushEnter(1),
        Op::Frame(5),
        Op::ConstantPush(sym763),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("make-record-type"), 3),
        Op::Leave(1),
        Op::Leave(1),
        Op::DefineGlobal(vm.gc.intern("&no-infinities")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Frame(6),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&no-infinities")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rcd"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("record-constructor"), 1),
        Op::DefineGlobal(vm.gc.intern("make-no-infinities-violation")),
        Op::Nop,
        Op::Nop,
        Op::Frame(6),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&no-infinities")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rtd"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("condition-predicate"), 1),
        Op::DefineGlobal(vm.gc.intern("no-infinities-violation?")),
        Op::Nop,
        Op::Nop,
        Op::LetFrame(16),
        Op::Frame(11),
        Op::ConstantPush(sym765),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&implementation-restriction")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rtd"), 1),
        Op::PushConstant(sym766),
        Op::PushConstant(Object::False),
        Op::PushConstant(Object::False),
        Op::PushConstant(vec29),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("make-record-type-descriptor"), 6),
        Op::PushEnter(1),
        Op::LetFrame(8),
        Op::ReferLocalPush(0),
        Op::Display(1),
        Op::Frame(8),
        Op::ReferLocalPush(0),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&implementation-restriction")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rcd"), 1),
        Op::PushConstant(Object::False),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("make-record-constructor-descriptor"), 3),
        Op::PushEnter(1),
        Op::Frame(5),
        Op::ConstantPush(sym765),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("make-record-type"), 3),
        Op::Leave(1),
        Op::Leave(1),
        Op::DefineGlobal(vm.gc.intern("&no-nans")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Frame(6),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&no-nans")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rcd"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("record-constructor"), 1),
        Op::DefineGlobal(vm.gc.intern("make-no-nans-violation")),
        Op::Nop,
        Op::Nop,
        Op::Frame(6),
        Op::Frame(3),
        Op::ReferGlobalPush(vm.gc.intern("&no-nans")),
        Op::ReferGlobalCall(vm.gc.intern("record-type-rtd"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("condition-predicate"), 1),
        Op::DefineGlobal(vm.gc.intern("no-nans-violation?")),
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(31),
        Op::ReferFreePush(110),
        Op::ReferFreePush(89),
        Op::ReferFreePush(152),
        Op::Closure {size: 0, arg_len: 3, is_optional_arg: true, num_free_vars: 4},
        Op::ReferLocal(0),
        Op::NotTest(2),
        Op::LocalJmp(13),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(3, 1),
        Op::Test(2),
        Op::LocalJmp(8),
        Op::ReferLocal(0),
        Op::SymbolP,
        Op::Test(2),
        Op::LocalJmp(4),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("identifier?"), 1),
        Op::Test(44),
        Op::Frame(3),
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(3, 1),
        Op::Test(30),
        Op::Frame(25),
        Op::ReferGlobalPush(vm.gc.intern("condition")),
        Op::Frame(21),
        Op::ReferFreePush(2),
        Op::Frame(17),
        Op::Frame(2),
        Op::ReferGlobalCall(vm.gc.intern("make-assertion-violation"), 0),
        Op::Push,
        Op::ReferLocal(0),
        Op::Test(4),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("make-who-condition"), 1),
        Op::PushFrame(3),
        Op::ReferLocalPush(1),
        Op::ReferGlobalCall(vm.gc.intern("make-message-condition"), 1),
        Op::PushFrame(3),
        Op::ReferLocalPush(2),
        Op::ReferGlobalCall(vm.gc.intern("make-irritants-condition"), 1),
        Op::Push,
        Op::ReferFreeCall(1, 4),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("filter"), 2),
        Op::Push,
        Op::ReferFreeCall(0, 2),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("raise")),
        Op::TailCall(1, 3),
        Op::Return(3),
        Op::ConstantPush(sym767),
        Op::Frame(5),
        Op::ConstantPush(str129),
        Op::ReferLocalPushConstant(1, Object::Number(2)),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("wrong-type-argument-message"), 3),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("assertion-violation")),
        Op::TailCall(2, 3),
        Op::Return(3),
        Op::ConstantPush(sym767),
        Op::Frame(5),
        Op::ConstantPush(str130),
        Op::ReferLocalPushConstant(0, Object::Number(1)),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("wrong-type-argument-message"), 3),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("assertion-violation")),
        Op::TailCall(2, 3),
        Op::Return(3),
        Op::DefineGlobal(vm.gc.intern("assertion-violation")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(110),
        Op::ReferFreePush(89),
        Op::ReferFreePush(152),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: true, num_free_vars: 3},
        Op::Frame(27),
        Op::ReferGlobalPush(vm.gc.intern("condition")),
        Op::Frame(23),
        Op::ReferFreePush(2),
        Op::Frame(19),
        Op::Frame(2),
        Op::ReferGlobalCall(vm.gc.intern("make-undefined-violation"), 0),
        Op::Push,
        Op::ReferLocal(0),
        Op::Test(4),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("make-who-condition"), 1),
        Op::Push,
        Op::ReferLocal(1),
        Op::PairP,
        Op::Test(5),
        Op::Frame(4),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::ReferGlobalCall(vm.gc.intern("make-message-condition"), 1),
        Op::Push,
        Op::ReferFreeCall(1, 3),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("filter"), 2),
        Op::Push,
        Op::ReferFreeCall(0, 2),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("raise")),
        Op::TailCall(1, 2),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("undefined-violation")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(110),
        Op::ReferFreePush(89),
        Op::ReferFreePush(152),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: true, num_free_vars: 3},
        Op::Frame(27),
        Op::ReferGlobalPush(vm.gc.intern("condition")),
        Op::Frame(23),
        Op::ReferFreePush(2),
        Op::Frame(19),
        Op::Frame(2),
        Op::ReferGlobalCall(vm.gc.intern("make-lexical-violation"), 0),
        Op::Push,
        Op::ReferLocal(0),
        Op::Test(4),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("make-who-condition"), 1),
        Op::Push,
        Op::ReferLocal(1),
        Op::PairP,
        Op::Test(5),
        Op::Frame(4),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::ReferGlobalCall(vm.gc.intern("make-message-condition"), 1),
        Op::Push,
        Op::ReferFreeCall(1, 3),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("filter"), 2),
        Op::Push,
        Op::ReferFreeCall(0, 2),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("raise")),
        Op::TailCall(1, 2),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("lexical-violation")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(110),
        Op::ReferFreePush(89),
        Op::ReferFreePush(152),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: true, num_free_vars: 3},
        Op::Frame(29),
        Op::ReferGlobalPush(vm.gc.intern("condition")),
        Op::Frame(25),
        Op::ReferFreePush(2),
        Op::Frame(21),
        Op::Frame(2),
        Op::ReferGlobalCall(vm.gc.intern("make-lexical-violation"), 0),
        Op::PushFrame(2),
        Op::ReferGlobalCall(vm.gc.intern("make-i/o-read-error"), 0),
        Op::Push,
        Op::ReferLocal(0),
        Op::Test(4),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("make-who-condition"), 1),
        Op::Push,
        Op::ReferLocal(1),
        Op::PairP,
        Op::Test(5),
        Op::Frame(4),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::ReferGlobalCall(vm.gc.intern("make-message-condition"), 1),
        Op::Push,
        Op::ReferFreeCall(1, 4),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("filter"), 2),
        Op::Push,
        Op::ReferFreeCall(0, 2),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("raise")),
        Op::TailCall(1, 2),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("raise-lexical-violation-read-error")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 3, is_optional_arg: false, num_free_vars: 0},
        Op::ReferGlobalPush(vm.gc.intern("make-i/o-decoding-error")),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferGlobal(vm.gc.intern("raise-misc-i/o-error")),
        Op::TailCall(4, 3),
        Op::Return(3),
        Op::DefineGlobal(vm.gc.intern("raise-i/o-decoding-error")),
        Op::Nop,
        Op::ReferFreePush(110),
        Op::ReferFreePush(152),
        Op::ReferFreePush(89),
        Op::Closure {size: 0, arg_len: 4, is_optional_arg: true, num_free_vars: 3},
        Op::Frame(31),
        Op::ReferGlobalPush(vm.gc.intern("condition")),
        Op::Frame(27),
        Op::ReferFreePush(2),
        Op::Frame(23),
        Op::Frame(4),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(3),
        Op::ReferFreeCall(1, 2),
        Op::Push,
        Op::ReferLocal(1),
        Op::Test(4),
        Op::Frame(3),
        Op::ReferLocalPush(1),
        Op::ReferGlobalCall(vm.gc.intern("make-who-condition"), 1),
        Op::PushFrame(3),
        Op::ReferLocalPush(2),
        Op::ReferGlobalCall(vm.gc.intern("make-message-condition"), 1),
        Op::Push,
        Op::ReferLocal(3),
        Op::PairP,
        Op::Test(4),
        Op::Frame(3),
        Op::ReferLocalPush(3),
        Op::ReferGlobalCall(vm.gc.intern("make-irritants-condition"), 1),
        Op::Push,
        Op::ReferFreeCall(0, 4),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("filter"), 2),
        Op::Push,
        Op::ReferFreeCall(1, 2),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("raise")),
        Op::TailCall(1, 4),
        Op::Return(4),
        Op::DefineGlobal(vm.gc.intern("raise-misc-i/o-error")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(110),
        Op::ReferFreePush(152),
        Op::ReferFreePush(2),
        Op::ReferFreePush(89),
        Op::Closure {size: 0, arg_len: 5, is_optional_arg: true, num_free_vars: 4},
        Op::Frame(37),
        Op::ReferGlobalPush(vm.gc.intern("condition")),
        Op::Frame(33),
        Op::ReferFreePush(3),
        Op::Frame(29),
        Op::Frame(4),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(4),
        Op::ReferFreeCall(2, 2),
        Op::Push,
        Op::ReferLocal(1),
        Op::Test(4),
        Op::Frame(3),
        Op::ReferLocalPush(1),
        Op::ReferGlobalCall(vm.gc.intern("make-who-condition"), 1),
        Op::PushFrame(3),
        Op::ReferLocalPush(2),
        Op::ReferGlobalCall(vm.gc.intern("make-message-condition"), 1),
        Op::Push,
        Op::ReferLocal(3),
        Op::Test(4),
        Op::Frame(3),
        Op::ReferLocalPush(3),
        Op::ReferGlobalCall(vm.gc.intern("make-i/o-port-error"), 1),
        Op::PushFrame(7),
        Op::Frame(4),
        Op::ReferLocalPush(3),
        Op::ReferLocalPush(4),
        Op::ReferFreeCall(1, 2),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("make-irritants-condition"), 1),
        Op::Push,
        Op::ReferFreeCall(0, 5),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("filter"), 2),
        Op::Push,
        Op::ReferFreeCall(2, 2),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("raise")),
        Op::TailCall(1, 5),
        Op::Return(5),
        Op::DefineGlobal(vm.gc.intern("raise-misc-i/o-error-with-port")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 4, is_optional_arg: false, num_free_vars: 0},
        Op::ReferGlobalPush(vm.gc.intern("make-i/o-encoding-error")),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferLocalPush(3),
        Op::ReferGlobal(vm.gc.intern("raise-misc-i/o-error")),
        Op::TailCall(5, 4),
        Op::Return(4),
        Op::DefineGlobal(vm.gc.intern("raise-i/o-encoding-error")),
        Op::Nop,
        Op::ReferFreePush(110),
        Op::ReferFreePush(89),
        Op::ReferFreePush(152),
        Op::Closure {size: 0, arg_len: 3, is_optional_arg: true, num_free_vars: 3},
        Op::Frame(29),
        Op::ReferGlobalPush(vm.gc.intern("condition")),
        Op::Frame(25),
        Op::ReferFreePush(2),
        Op::Frame(21),
        Op::Frame(2),
        Op::ReferGlobalCall(vm.gc.intern("make-implementation-restriction-violation"), 0),
        Op::Push,
        Op::ReferLocal(0),
        Op::Test(4),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("make-who-condition"), 1),
        Op::PushFrame(3),
        Op::ReferLocalPush(1),
        Op::ReferGlobalCall(vm.gc.intern("make-message-condition"), 1),
        Op::Push,
        Op::ReferLocal(2),
        Op::PairP,
        Op::Test(4),
        Op::Frame(3),
        Op::ReferLocalPush(2),
        Op::ReferGlobalCall(vm.gc.intern("make-irritants-condition"), 1),
        Op::Push,
        Op::ReferFreeCall(1, 4),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("filter"), 2),
        Op::Push,
        Op::ReferFreeCall(0, 2),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("raise")),
        Op::TailCall(1, 3),
        Op::Return(3),
        Op::DefineGlobal(vm.gc.intern("implementation-restriction-violation")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 3, is_optional_arg: false, num_free_vars: 0},
        Op::ReferGlobalPush(vm.gc.intern("make-i/o-file-already-exists-error")),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferGlobal(vm.gc.intern("raise-misc-i/o-error")),
        Op::TailCall(4, 3),
        Op::Return(3),
        Op::DefineGlobal(vm.gc.intern("raise-i/o-file-already-exists-error")),
        Op::Nop,
        Op::Closure {size: 0, arg_len: 3, is_optional_arg: false, num_free_vars: 0},
        Op::ReferGlobalPush(vm.gc.intern("make-i/o-file-does-not-exist-error")),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferGlobal(vm.gc.intern("raise-misc-i/o-error")),
        Op::TailCall(4, 3),
        Op::Return(3),
        Op::DefineGlobal(vm.gc.intern("raise-i/o-file-does-not-exist-error")),
        Op::Nop,
        Op::Closure {size: 0, arg_len: 3, is_optional_arg: false, num_free_vars: 0},
        Op::ReferGlobalPush(vm.gc.intern("make-i/o-file-protection-error")),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferGlobal(vm.gc.intern("raise-misc-i/o-error")),
        Op::TailCall(4, 3),
        Op::Return(3),
        Op::DefineGlobal(vm.gc.intern("raise-i/o-file-protection-error")),
        Op::Nop,
        Op::Closure {size: 0, arg_len: 3, is_optional_arg: false, num_free_vars: 0},
        Op::ReferGlobalPush(vm.gc.intern("make-i/o-file-is-read-only-error")),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferLocalPush(2),
        Op::ReferGlobal(vm.gc.intern("raise-misc-i/o-error-with-port")),
        Op::TailCall(5, 3),
        Op::Return(3),
        Op::DefineGlobal(vm.gc.intern("raise-i/o-file-is-read-only-error")),
        Op::Nop,
        Op::ReferFreePush(110),
        Op::ReferFreePush(89),
        Op::ReferFreePush(152),
        Op::Closure {size: 0, arg_len: 4, is_optional_arg: true, num_free_vars: 3},
        Op::Frame(30),
        Op::ReferGlobalPush(vm.gc.intern("condition")),
        Op::Frame(26),
        Op::ReferFreePush(2),
        Op::Frame(22),
        Op::Frame(3),
        Op::ReferLocalPush(2),
        Op::ReferGlobalCall(vm.gc.intern("make-i/o-filename-error"), 1),
        Op::Push,
        Op::ReferLocal(0),
        Op::Test(4),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("make-who-condition"), 1),
        Op::PushFrame(3),
        Op::ReferLocalPush(1),
        Op::ReferGlobalCall(vm.gc.intern("make-message-condition"), 1),
        Op::Push,
        Op::ReferLocal(3),
        Op::PairP,
        Op::Test(4),
        Op::Frame(3),
        Op::ReferLocalPush(3),
        Op::ReferGlobalCall(vm.gc.intern("make-irritants-condition"), 1),
        Op::Push,
        Op::ReferFreeCall(1, 4),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("filter"), 2),
        Op::Push,
        Op::ReferFreeCall(0, 2),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("raise")),
        Op::TailCall(1, 4),
        Op::Return(4),
        Op::DefineGlobal(vm.gc.intern("raise-i/o-filename-error")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 4, is_optional_arg: false, num_free_vars: 0},
        Op::ReferGlobalPush(vm.gc.intern("make-i/o-invalid-position-error")),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferLocalPush(3),
        Op::ReferGlobal(vm.gc.intern("raise-misc-i/o-error-with-port")),
        Op::TailCall(5, 4),
        Op::Return(4),
        Op::DefineGlobal(vm.gc.intern("raise-i/o-invalid-position-error")),
        Op::Nop,
        Op::Closure {size: 0, arg_len: 3, is_optional_arg: false, num_free_vars: 0},
        Op::ReferGlobalPush(vm.gc.intern("make-i/o-read-error")),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferGlobal(vm.gc.intern("raise-misc-i/o-error-with-port")),
        Op::TailCall(4, 3),
        Op::Return(3),
        Op::DefineGlobal(vm.gc.intern("raise-i/o-read-error")),
        Op::Nop,
        Op::Closure {size: 0, arg_len: 3, is_optional_arg: false, num_free_vars: 0},
        Op::ReferGlobalPush(vm.gc.intern("make-i/o-write-error")),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferGlobal(vm.gc.intern("raise-misc-i/o-error-with-port")),
        Op::TailCall(4, 3),
        Op::Return(3),
        Op::DefineGlobal(vm.gc.intern("raise-i/o-write-error")),
        Op::Nop,
        Op::ReferFreePush(31),
        Op::ReferFreePush(110),
        Op::ReferFreePush(89),
        Op::ReferFreePush(152),
        Op::Closure {size: 0, arg_len: 3, is_optional_arg: true, num_free_vars: 4},
        Op::ReferLocal(0),
        Op::NotTest(2),
        Op::LocalJmp(8),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(3, 1),
        Op::Test(2),
        Op::LocalJmp(3),
        Op::ReferLocal(0),
        Op::SymbolP,
        Op::Test(44),
        Op::Frame(3),
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(3, 1),
        Op::Test(30),
        Op::Frame(25),
        Op::ReferGlobalPush(vm.gc.intern("condition")),
        Op::Frame(21),
        Op::ReferFreePush(2),
        Op::Frame(17),
        Op::Frame(2),
        Op::ReferGlobalCall(vm.gc.intern("make-error"), 0),
        Op::Push,
        Op::ReferLocal(0),
        Op::Test(4),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("make-who-condition"), 1),
        Op::PushFrame(3),
        Op::ReferLocalPush(1),
        Op::ReferGlobalCall(vm.gc.intern("make-message-condition"), 1),
        Op::PushFrame(3),
        Op::ReferLocalPush(2),
        Op::ReferGlobalCall(vm.gc.intern("make-irritants-condition"), 1),
        Op::Push,
        Op::ReferFreeCall(1, 4),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("filter"), 2),
        Op::Push,
        Op::ReferFreeCall(0, 2),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("raise")),
        Op::TailCall(1, 3),
        Op::Return(3),
        Op::ConstantPush(sym768),
        Op::Frame(5),
        Op::ConstantPush(str131),
        Op::ReferLocalPushConstant(1, Object::Number(2)),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("wrong-type-argument-message"), 3),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("assertion-violation")),
        Op::TailCall(2, 3),
        Op::Return(3),
        Op::ConstantPush(sym768),
        Op::Frame(5),
        Op::ConstantPush(str132),
        Op::ReferLocalPushConstant(0, Object::Number(1)),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("wrong-type-argument-message"), 3),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("assertion-violation")),
        Op::TailCall(2, 3),
        Op::Return(3),
        Op::DefineGlobal(vm.gc.intern("error")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Undef,
        Op::ReferFreePush(98),
        Op::ReferFreePush(100),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 2},
        Op::LetFrame(3),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::Display(3),
        Op::Frame(2),
        Op::ReferFreeCall(0, 0),
        Op::PushEnter(1),
        Op::Frame(13),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(2),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 2},
        Op::ReferFreePush(1),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferFree(0),
        Op::TailCall(3, 2),
        Op::Return(2),
        Op::Push,
        Op::ReferFreePush(1),
        Op::ReferGlobalCall(vm.gc.intern("hashtable-for-each"), 2),
        Op::ReferLocal(0),
        Op::Leave(1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("eq-hashtable-copy")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(100),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 1},
        Op::LetFrame(5),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(1),
        Op::Display(3),
        Op::ReferLocalPush(1),
        Op::Enter(1),
        Op::ReferLocalBranchNotNull(0, 3),
        Op::ReferFree(2),
        Op::LocalJmp(11),
        Op::Frame(6),
        Op::ReferFreePush(2),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::ConstantPush(Object::True),
        Op::ReferFreeCall(1, 3),
        Op::ReferLocal(0),
        Op::CdrPush,
        Op::Shiftj(1, 1, 0),
        Op::LocalJmp(-12),
        Op::Leave(1),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("hashtable-set-true!")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(191),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 1},
        Op::LetFrame(9),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(1),
        Op::Display(3),
        Op::Frame(3),
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(1, 1),
        Op::PushConstant(Object::Number(1)),
        Op::NumberSubPush,
        Op::ReferLocalPush(1),
        Op::Enter(2),
        Op::ReferLocalBranchNotNull(1, 3),
        Op::Constant(Object::Nil),
        Op::LocalJmp(12),
        Op::Frame(5),
        Op::ReferLocalPush(0),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::ReferFreeCall(2, 2),
        Op::ReferLocalPushConstant(0, Object::Number(1)),
        Op::NumberSubPush,
        Op::ReferLocal(1),
        Op::CdrPush,
        Op::Shiftj(2, 2, 0),
        Op::LocalJmp(-13),
        Op::Leave(2),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("$for-each1-with-rindex")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::ReferFreePush(48),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 1},
        Op::Frame(4),
        Op::ConstantPush(str133),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(0, 2),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("raise")),
        Op::TailCall(1, 1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("syntax-error")),
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 3, is_optional_arg: false, num_free_vars: 0},
        Op::ReferLocalPush(0),
        Op::ReferLocal(1),
        Op::Cons,
        Op::Push,
        Op::ReferLocal(2),
        Op::Cons,
        Op::Return(3),
        Op::DefineGlobal(vm.gc.intern("alist-cons")),
        Op::Nop,
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 0},
        Op::ReferLocalBranchNotNull(1, 3),
        Op::ReferLocal(1),
        Op::Return(2),
        Op::Frame(4),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::ReferLocalCall(0, 1),
        Op::PushFrame(5),
        Op::ReferLocalPush(0),
        Op::ReferLocal(1),
        Op::CdrPush,
        Op::ReferGlobalCall(vm.gc.intern("$map1"), 2),
        Op::Cons,
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("$map1")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 0},
        Op::ReferLocalBranchNotNull(1, 3),
        Op::ReferLocal(1),
        Op::Return(2),
        Op::Frame(8),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::ReferLocal(1),
        Op::Cdr,
        Op::NullP,
        Op::Push,
        Op::ReferLocalCall(0, 2),
        Op::PushFrame(5),
        Op::ReferLocalPush(0),
        Op::ReferLocal(1),
        Op::CdrPush,
        Op::ReferGlobalCall(vm.gc.intern("$map1-with-tail"), 2),
        Op::Cons,
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("$map1-with-tail")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Undef,
        Op::ReferFreePush(90),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 1},
        Op::LetFrame(9),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::Display(2),
        Op::ReferLocalPushConstant(0, Object::Nil),
        Op::PushEnter(2),
        Op::ReferLocalBranchNotNull(0, 3),
        Op::ReferLocal(1),
        Op::LocalJmp(22),
        Op::Frame(5),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(1, 2),
        Op::Test(7),
        Op::ReferLocal(0),
        Op::CdrPush,
        Op::ReferLocalPush(1),
        Op::Shiftj(2, 2, 0),
        Op::LocalJmp(-13),
        Op::LocalJmp(10),
        Op::ReferLocal(0),
        Op::CdrPush,
        Op::ReferLocal(0),
        Op::CarPush,
        Op::ReferLocal(1),
        Op::Cons,
        Op::Push,
        Op::Shiftj(2, 2, 0),
        Op::LocalJmp(-23),
        Op::Leave(2),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("uniq")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(89),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 1},
        Op::ReferLocal(1),
        Op::Cdr,
        Op::BranchNotNull(3),
        Op::Constant(Object::Nil),
        Op::Return(2),
        Op::Frame(8),
        Op::ReferLocalPush(0),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::ReferLocal(1),
        Op::Cadr,
        Op::Push,
        Op::ReferFreeCall(0, 3),
        Op::PushFrame(5),
        Op::ReferLocalPush(0),
        Op::ReferLocal(1),
        Op::CdrPush,
        Op::ReferGlobalCall(vm.gc.intern("apply-each-pair"), 2),
        Op::Cons,
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("apply-each-pair")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(26),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 1},
        Op::LetFrame(8),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::Display(3),
        Op::ReferLocalPushConstant(0, Object::Nil),
        Op::PushEnter(2),
        Op::ReferLocal(0),
        Op::Cdr,
        Op::BranchNotNull(16),
        Op::Frame(4),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::ReferFreeCall(2, 1),
        Op::Test(3),
        Op::ReferLocal(1),
        Op::LocalJmp(5),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::ReferLocal(1),
        Op::Cons,
        Op::Push,
        Op::ReferFree(1),
        Op::TailCall(1, 6),
        Op::LocalJmp(10),
        Op::ReferLocal(0),
        Op::CdrPush,
        Op::ReferLocal(0),
        Op::CarPush,
        Op::ReferLocal(1),
        Op::Cons,
        Op::Push,
        Op::Shiftj(2, 2, 0),
        Op::LocalJmp(-26),
        Op::Leave(2),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("remove-tail")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Constant(Object::Number(0)),
        Op::DefineGlobal(vm.gc.intern("$CONST")),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::ReferGlobalPush(vm.gc.intern("$CONST")),
        Op::ReferLocal(0),
        Op::Vector(2),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("$const")),
        Op::Nop,
        Op::Undef,
        Op::Undef,
        Op::Constant(Object::Number(1)),
        Op::DefineGlobal(vm.gc.intern("$LVAR")),
        Op::Closure {size: 0, arg_len: 4, is_optional_arg: false, num_free_vars: 0},
        Op::ReferGlobalPush(vm.gc.intern("$LVAR")),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferLocal(3),
        Op::Vector(5),
        Op::Return(4),
        Op::DefineGlobal(vm.gc.intern("$lvar")),
        Op::Nop,
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::ReferLocalPushConstant(0, Object::Number(1)),
        Op::VectorRef,
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("$lvar.sym-proc")),
        Op::Nop,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::Frame(8),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::ReferLocalPushConstant(0, Object::Number(1)),
        Op::VectorRef,
        Op::Return(1),
        Op::Push,
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("map"), 2),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("print")),
        Op::TailCall(1, 1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("pp-lvars")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Constant(Object::Number(2)),
        Op::DefineGlobal(vm.gc.intern("$LET")),
        Op::Closure {size: 0, arg_len: 7, is_optional_arg: true, num_free_vars: 0},
        Op::ReferGlobalPush(vm.gc.intern("$LET")),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferLocalPush(3),
        Op::ReferLocalPush(4),
        Op::ReferLocalPush(5),
        Op::ReferLocalBranchNotNull(6, 3),
        Op::Constant(Object::False),
        Op::LocalJmp(3),
        Op::ReferLocal(6),
        Op::Car,
        Op::Vector(8),
        Op::Return(7),
        Op::DefineGlobal(vm.gc.intern("$let")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::Constant(Object::Number(3)),
        Op::DefineGlobal(vm.gc.intern("$SEQ")),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 0},
        Op::ReferGlobalPush(vm.gc.intern("$SEQ")),
        Op::ReferLocalPush(0),
        Op::ReferLocal(1),
        Op::Vector(3),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("$seq")),
        Op::Nop,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::Constant(Object::Number(4)),
        Op::DefineGlobal(vm.gc.intern("$LAMBDA")),
        Op::Closure {size: 0, arg_len: 8, is_optional_arg: false, num_free_vars: 0},
        Op::ReferGlobalPush(vm.gc.intern("$LAMBDA")),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferLocalPush(3),
        Op::ReferLocalPush(4),
        Op::ReferLocalPush(5),
        Op::ReferLocalPush(6),
        Op::ReferLocal(7),
        Op::Vector(9),
        Op::Return(8),
        Op::DefineGlobal(vm.gc.intern("$lambda")),
        Op::Nop,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::Constant(Object::Number(5)),
        Op::DefineGlobal(vm.gc.intern("$LOCAL-REF")),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::ReferLocalPushConstant(0, Object::Number(3)),
        Op::Push,
        Op::ReferLocalPushConstant(0, Object::Number(3)),
        Op::VectorRef,
        Op::PushConstant(Object::Number(1)),
        Op::NumberAdd,
        Op::VectorSet,
        Op::ReferGlobalPush(vm.gc.intern("$LOCAL-REF")),
        Op::ReferLocal(0),
        Op::Vector(2),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("$local-ref")),
        Op::Nop,
        Op::Undef,
        Op::Undef,
        Op::Constant(Object::Number(6)),
        Op::DefineGlobal(vm.gc.intern("$LOCAL-ASSIGN")),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 0},
        Op::ReferGlobalPush(vm.gc.intern("$LOCAL-ASSIGN")),
        Op::ReferLocalPush(0),
        Op::ReferLocal(1),
        Op::Vector(3),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("$local-assign")),
        Op::Nop,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::Constant(Object::Number(7)),
        Op::DefineGlobal(vm.gc.intern("$GLOBAL-REF")),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::ReferGlobalPush(vm.gc.intern("$GLOBAL-REF")),
        Op::ReferLocal(0),
        Op::Vector(2),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("$global-ref")),
        Op::Nop,
        Op::Undef,
        Op::Undef,
        Op::Constant(Object::Number(8)),
        Op::DefineGlobal(vm.gc.intern("$GLOBAL-ASSIGN")),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 0},
        Op::ReferGlobalPush(vm.gc.intern("$GLOBAL-ASSIGN")),
        Op::ReferLocalPush(0),
        Op::ReferLocal(1),
        Op::Vector(3),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("$global-assign")),
        Op::Nop,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::Constant(Object::Number(9)),
        Op::DefineGlobal(vm.gc.intern("$UNDEF")),
        Op::Closure {size: 0, arg_len: 0, is_optional_arg: false, num_free_vars: 0},
        Op::ConstantPush(Object::Number(1)),
        Op::ReferGlobal(vm.gc.intern("$UNDEF")),
        Op::MakeVector,
        Op::Return(0),
        Op::DefineGlobal(vm.gc.intern("$undef")),
        Op::Nop,
        Op::Constant(Object::Number(10)),
        Op::DefineGlobal(vm.gc.intern("$IF")),
        Op::Closure {size: 0, arg_len: 3, is_optional_arg: false, num_free_vars: 0},
        Op::ReferGlobalPush(vm.gc.intern("$IF")),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocal(2),
        Op::Vector(4),
        Op::Return(3),
        Op::DefineGlobal(vm.gc.intern("$if")),
        Op::Nop,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::Constant(Object::Number(11)),
        Op::DefineGlobal(vm.gc.intern("$ASM")),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 0},
        Op::ReferGlobalPush(vm.gc.intern("$ASM")),
        Op::ReferLocalPush(0),
        Op::ReferLocal(1),
        Op::Vector(3),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("$asm")),
        Op::Nop,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::Constant(Object::Number(12)),
        Op::DefineGlobal(vm.gc.intern("$DEFINE")),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 0},
        Op::ReferGlobalPush(vm.gc.intern("$DEFINE")),
        Op::ReferLocalPush(0),
        Op::ReferLocal(1),
        Op::Vector(3),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("$define")),
        Op::Nop,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::Constant(Object::Number(13)),
        Op::DefineGlobal(vm.gc.intern("$CALL-CC")),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 0},
        Op::ReferGlobalPush(vm.gc.intern("$CALL-CC")),
        Op::ReferLocalPush(0),
        Op::ReferLocal(1),
        Op::Vector(3),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("$call-cc")),
        Op::Nop,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::Constant(Object::Number(14)),
        Op::DefineGlobal(vm.gc.intern("$CALL")),
        Op::Closure {size: 0, arg_len: 4, is_optional_arg: false, num_free_vars: 0},
        Op::ReferGlobalPush(vm.gc.intern("$CALL")),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferLocalPushConstant(3, Object::Number(0)),
        Op::PushConstant(Object::Number(0)),
        Op::Vector(7),
        Op::Return(4),
        Op::DefineGlobal(vm.gc.intern("$call")),
        Op::Nop,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::Constant(Object::Number(15)),
        Op::DefineGlobal(vm.gc.intern("$LABEL")),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::ReferGlobalPush(vm.gc.intern("$LABEL")),
        Op::ReferLocalPushConstant(0, Object::False),
        Op::Vector(3),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("$label")),
        Op::Nop,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::Constant(Object::Number(16)),
        Op::DefineGlobal(vm.gc.intern("$LIST")),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::ReferGlobalPush(vm.gc.intern("$LIST")),
        Op::ReferLocal(0),
        Op::Vector(2),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("$list")),
        Op::Nop,
        Op::Undef,
        Op::Undef,
        Op::Constant(Object::Number(17)),
        Op::DefineGlobal(vm.gc.intern("$IT")),
        Op::Closure {size: 0, arg_len: 0, is_optional_arg: false, num_free_vars: 0},
        Op::ConstantPush(Object::Number(1)),
        Op::ReferGlobal(vm.gc.intern("$IT")),
        Op::MakeVector,
        Op::Return(0),
        Op::DefineGlobal(vm.gc.intern("$it")),
        Op::Nop,
        Op::Constant(Object::Number(18)),
        Op::DefineGlobal(vm.gc.intern("$RECEIVE")),
        Op::Closure {size: 0, arg_len: 6, is_optional_arg: false, num_free_vars: 0},
        Op::ReferGlobalPush(vm.gc.intern("$RECEIVE")),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferLocalPush(3),
        Op::ReferLocalPush(4),
        Op::ReferLocal(5),
        Op::Vector(7),
        Op::Return(6),
        Op::DefineGlobal(vm.gc.intern("$receive")),
        Op::Nop,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::Constant(Object::Number(19)),
        Op::DefineGlobal(vm.gc.intern("$INSN-NUM")),
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::ReferFreePush(26),
        Op::ReferFreePush(89),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 2},
        Op::ReferLocal(0),
        Op::PairP,
        Op::Test(35),
        Op::LetFrame(9),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::Display(2),
        Op::ReferLocalPushConstant(0, Object::Nil),
        Op::PushEnter(2),
        Op::ReferLocalBranchNotNull(0, 5),
        Op::ConstantPush(Object::False),
        Op::ReferFree(1),
        Op::Values(2),
        Op::LocalJmp(22),
        Op::ReferLocal(0),
        Op::PairP,
        Op::Test(11),
        Op::ReferLocal(0),
        Op::CdrPush,
        Op::ReferLocal(0),
        Op::CarPush,
        Op::ReferLocal(1),
        Op::Cons,
        Op::Push,
        Op::Shiftj(2, 2, 0),
        Op::LocalJmp(-16),
        Op::LocalJmp(9),
        Op::ConstantPush(Object::True),
        Op::Frame(6),
        Op::ReferLocalPush(0),
        Op::ReferLocal(1),
        Op::Cons,
        Op::Push,
        Op::ReferFreeCall(0, 1),
        Op::Values(2),
        Op::Leave(2),
        Op::Return(1),
        Op::ReferLocalBranchNotNull(0, 5),
        Op::ConstantPush(Object::False),
        Op::Constant(Object::Nil),
        Op::Values(2),
        Op::Return(1),
        Op::ConstantPush(Object::True),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(0, 1),
        Op::Values(2),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("parse-lambda-vars")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(26),
        Op::ReferFreePush(191),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 2},
        Op::LetFrame(14),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::Display(3),
        Op::ReferLocalPushConstant(0, Object::Nil),
        Op::PushEnter(2),
        Op::ReferLocalBranchNotNull(0, 10),
        Op::Frame(3),
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(2, 1),
        Op::PushFrame(3),
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(1, 1),
        Op::PushConstant(Object::Number(0)),
        Op::Values(3),
        Op::LocalJmp(25),
        Op::ReferLocal(0),
        Op::PairP,
        Op::Test(11),
        Op::ReferLocal(0),
        Op::CdrPush,
        Op::ReferLocal(0),
        Op::CarPush,
        Op::ReferLocal(1),
        Op::Cons,
        Op::Push,
        Op::Shiftj(2, 2, 0),
        Op::LocalJmp(-21),
        Op::LocalJmp(12),
        Op::Frame(6),
        Op::ReferLocalPush(0),
        Op::ReferLocal(1),
        Op::Cons,
        Op::Push,
        Op::ReferFreeCall(2, 1),
        Op::PushFrame(3),
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(1, 1),
        Op::PushConstant(Object::Number(1)),
        Op::Values(3),
        Op::Leave(2),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("parse-lambda-args")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Undef,
        Op::ReferFreePush(69),
        Op::ReferFreePush(61),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 2},
        Op::ReferLocal(0),
        Op::PairP,
        Op::Test(21),
        Op::ReferLocal(0),
        Op::Cdr,
        Op::PairP,
        Op::Test(17),
        Op::ReferLocal(0),
        Op::Cddr,
        Op::PairP,
        Op::Test(13),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(1, 1),
        Op::PairP,
        Op::Test(8),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(0, 1),
        Op::PushConstant(sym769),
        Op::Equal,
        Op::Test(2),
        Op::Constant(Object::True),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("lambda-has-define?")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(69),
        Op::ReferFreePush(83),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 2},
        Op::ConstantPush(sym770),
        Op::ReferLocal(0),
        Op::Cadr,
        Op::PushFrame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(1, 1),
        Op::PushConstant(Object::Nil),
        Op::Cons,
        Op::Cons,
        Op::PushConstant(Object::Nil),
        Op::Cons,
        Op::PushFrame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(0, 1),
        Op::Cons,
        Op::Cons,
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("let1->let")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(89),
        Op::ReferFreePush(26),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 2},
        Op::LetFrame(13),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(1),
        Op::Display(3),
        Op::Frame(21),
        Op::ReferFreePush(0),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 1},
        Op::Frame(10),
        Op::ReferLocal(0),
        Op::Car,
        Op::PushFrame(5),
        Op::ReferLocal(0),
        Op::Cadr,
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("pass1/expand"), 1),
        Op::Push,
        Op::ReferFreeCall(0, 2),
        Op::Push,
        Op::ReferLocal(1),
        Op::Cons,
        Op::Return(2),
        Op::PushConstant(Object::Nil),
        Op::Push,
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("fold-right"), 3),
        Op::PushEnter(1),
        Op::ConstantPush(sym770),
        Op::ReferLocalPush(0),
        Op::LetFrame(7),
        Op::ReferFreePush(1),
        Op::ReferFreePush(2),
        Op::Display(2),
        Op::ConstantPush(Object::Nil),
        Op::ReferFreePush(0),
        Op::Enter(2),
        Op::ReferLocalBranchNotNull(1, 5),
        Op::Frame(16),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(1, 1),
        Op::LocalJmp(13),
        Op::Frame(4),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::ReferGlobalCall(vm.gc.intern("pass1/expand"), 1),
        Op::Push,
        Op::ReferLocal(0),
        Op::Cons,
        Op::Push,
        Op::ReferLocal(1),
        Op::CdrPush,
        Op::Shiftj(2, 2, 0),
        Op::LocalJmp(-16),
        Op::Leave(2),
        Op::Cons,
        Op::Cons,
        Op::Leave(1),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("expand-let")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(69),
        Op::ReferFreePush(89),
        Op::ReferFreePush(149),
        Op::ReferFreePush(168),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 4},
        Op::LetFrame(27),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Display(5),
        Op::ReferLocal(0),
        Op::Cddr,
        Op::PushEnter(1),
        Op::LetFrame(26),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(4),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(4),
        Op::Display(7),
        Op::ReferFree(0),
        Op::Cadr,
        Op::PushEnter(1),
        Op::LetFrame(25),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(0),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(6),
        Op::Display(7),
        Op::Frame(13),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::ReferLocal(0),
        Op::PairP,
        Op::Test(5),
        Op::ConstantPush(sym769),
        Op::ReferLocal(0),
        Op::Car,
        Op::Eq,
        Op::Return(1),
        Op::Push,
        Op::ReferFreePush(0),
        Op::ReferGlobalCall(vm.gc.intern("find-serial-from-head"), 2),
        Op::PushEnter(1),
        Op::LetFrame(22),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::Display(7),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::Enter(1),
        Op::LetFrame(21),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(6),
        Op::Display(8),
        Op::ReferFree(0),
        Op::Cadr,
        Op::PushEnter(1),
        Op::LetFrame(20),
        Op::ReferFreePush(1),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::Display(10),
        Op::Frame(35),
        Op::Frame(29),
        Op::ConstantPush(sym771),
        Op::Frame(19),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 2},
        Op::ReferLocal(0),
        Op::Cadr,
        Op::PushFrame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(1, 1),
        Op::Push,
        Op::ReferFree(0),
        Op::TailCall(2, 1),
        Op::Return(1),
        Op::PushFrame(4),
        Op::ReferGlobalPush(vm.gc.intern("pass1/expand")),
        Op::ReferFreePush(3),
        Op::ReferGlobalCall(vm.gc.intern("map"), 2),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("map"), 2),
        Op::PushFrame(4),
        Op::ReferGlobalPush(vm.gc.intern("pass1/expand")),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("map"), 2),
        Op::Cons,
        Op::Cons,
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("make-list-with-src-slot"), 1),
        Op::PushFrame(3),
        Op::ReferFreePush(2),
        Op::ReferFreeCall(1, 1),
        Op::Push,
        Op::ReferFreeCall(0, 2),
        Op::PushEnter(1),
        Op::Frame(9),
        Op::ConstantPush(sym770),
        Op::ReferFreePush(9),
        Op::ReferLocalPushConstant(0, Object::Nil),
        Op::Cons,
        Op::Cons,
        Op::Cons,
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("make-list-with-src-slot"), 1),
        Op::PushFrame(3),
        Op::ReferFreePush(2),
        Op::ReferFreeCall(1, 1),
        Op::Push,
        Op::ReferFree(0),
        Op::TailCall(2, 19),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("let-internal-define->letrec*")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(88),
        Op::ReferFreePush(26),
        Op::ReferFreePush(149),
        Op::ReferFreePush(168),
        Op::ReferFreePush(80),
        Op::ReferFreePush(66),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 6},
        Op::ReferLocal(0),
        Op::PairP,
        Op::Test(143),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::Constant(sym771),
        Op::BranchNotEqual(10),
        Op::ReferLocal(0),
        Op::Cdr,
        Op::PairP,
        Op::Test(135),
        Op::Frame(5),
        Op::ReferLocal(0),
        Op::Cadr,
        Op::Push,
        Op::ReferFreeCall(5, 1),
        Op::Test(129),
        Op::LetFrame(35),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Display(7),
        Op::ReferLocal(0),
        Op::Cadr,
        Op::PushConstant(Object::Nil),
        Op::PushConstant(Object::Nil),
        Op::PushEnter(3),
        Op::ReferLocalBranchNotNull(0, 70),
        Op::Frame(5),
        Op::ReferFree(6),
        Op::Cddr,
        Op::Push,
        Op::ReferFreeCall(5, 1),
        Op::Test(52),
        Op::LetFrame(18),
        Op::ReferFreePush(6),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(6),
        Op::ReferFreePush(4),
        Op::ReferFreePush(4),
        Op::Display(6),
        Op::Frame(3),
        Op::ReferLocalPush(2),
        Op::ReferFreeCall(0, 1),
        Op::PushFrame(3),
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(0, 1),
        Op::Push,
        Op::ReferFree(2),
        Op::Cddr,
        Op::PushEnter(3),
        Op::Frame(25),
        Op::ConstantPush(sym771),
        Op::Frame(15),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 0},
        Op::ReferLocalPush(0),
        Op::ReferLocalPushConstant(1, Object::Nil),
        Op::Cons,
        Op::Cons,
        Op::Return(2),
        Op::Push,
        Op::ReferLocalPush(0),
        Op::Frame(4),
        Op::ReferGlobalPush(vm.gc.intern("pass1/expand")),
        Op::ReferLocalPush(1),
        Op::ReferGlobalCall(vm.gc.intern("map"), 2),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("map"), 3),
        Op::PushFrame(4),
        Op::ReferGlobalPush(vm.gc.intern("pass1/expand")),
        Op::ReferLocalPush(2),
        Op::ReferGlobalCall(vm.gc.intern("map"), 2),
        Op::Cons,
        Op::Cons,
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("make-list-with-src-slot"), 1),
        Op::PushFrame(3),
        Op::ReferFreePush(2),
        Op::ReferFreeCall(4, 1),
        Op::Push,
        Op::ReferFree(3),
        Op::TailCall(2, 11),
        Op::Leave(3),
        Op::LocalJmp(55),
        Op::LetFrame(3),
        Op::ReferFreePush(6),
        Op::ReferFreePush(6),
        Op::Display(2),
        Op::ReferFreePush(0),
        Op::Enter(1),
        Op::ConstantPush(str134),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("error")),
        Op::TailCall(2, 9),
        Op::Leave(1),
        Op::LocalJmp(43),
        Op::ReferLocal(0),
        Op::Car,
        Op::PairP,
        Op::Test(28),
        Op::ReferLocal(0),
        Op::Cdar,
        Op::PairP,
        Op::Test(24),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(1, 1),
        Op::NullP,
        Op::Test(19),
        Op::ReferLocal(0),
        Op::Cdr,
        Op::PushFrame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(0, 1),
        Op::Push,
        Op::ReferLocal(1),
        Op::Cons,
        Op::Push,
        Op::ReferLocal(0),
        Op::Caar,
        Op::Push,
        Op::ReferLocal(2),
        Op::Cons,
        Op::Push,
        Op::Shiftj(3, 3, 0),
        Op::LocalJmp(-99),
        Op::LocalJmp(12),
        Op::LetFrame(3),
        Op::ReferFreePush(6),
        Op::ReferFreePush(6),
        Op::Display(2),
        Op::ReferFreePush(0),
        Op::Enter(1),
        Op::ConstantPush(str135),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("error")),
        Op::TailCall(2, 9),
        Op::Leave(1),
        Op::Leave(3),
        Op::Return(1),
        Op::LetFrame(3),
        Op::ReferLocalPush(0),
        Op::Display(1),
        Op::ReferLocalPush(0),
        Op::Enter(1),
        Op::ConstantPush(str136),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("error")),
        Op::TailCall(2, 4),
        Op::Leave(1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("expand-letrec*")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(26),
        Op::ReferFreePush(149),
        Op::ReferFreePush(168),
        Op::ReferFreePush(83),
        Op::ReferFreePush(68),
        Op::ReferFreePush(69),
        Op::ReferFreePush(82),
        Op::ReferFreePush(61),
        Op::ReferFreePush(75),
        Op::ReferFreePush(88),
        Op::ReferFreePush(89),
        Op::ReferFreePush(176),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 12},
        Op::ReferLocal(0),
        Op::PairP,
        Op::Test(719),
        Op::LetFrame(211),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Display(13),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::Enter(1),
        Op::ConstantPush(sym772),
        Op::ReferLocal(0),
        Op::BranchNotEqv(3),
        Op::ReferFree(12),
        Op::LocalJmp(694),
        Op::ConstantPush(sym773),
        Op::ReferLocal(0),
        Op::BranchNotEqv(3),
        Op::ReferFree(12),
        Op::LocalJmp(689),
        Op::ConstantPush(sym769),
        Op::ReferLocal(0),
        Op::BranchNotEqv(51),
        Op::Frame(3),
        Op::ReferFreePush(12),
        Op::ReferGlobalCall(vm.gc.intern("define-is-lambda?"), 1),
        Op::Test(8),
        Op::Frame(3),
        Op::ReferFreePush(12),
        Op::ReferGlobalCall(vm.gc.intern("define->lambda"), 1),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("pass1/expand")),
        Op::TailCall(1, 4),
        Op::LocalJmp(675),
        Op::Frame(32),
        Op::LetFrame(8),
        Op::ReferFreePush(11),
        Op::ReferFreePush(12),
        Op::Display(2),
        Op::ConstantPush(Object::Nil),
        Op::ReferFreePush(0),
        Op::Enter(2),
        Op::ReferLocalBranchNotNull(1, 5),
        Op::Frame(20),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(1, 1),
        Op::LocalJmp(17),
        Op::LetFrame(2),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::Enter(1),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("pass1/expand"), 1),
        Op::Leave(1),
        Op::Push,
        Op::ReferLocal(0),
        Op::Cons,
        Op::Push,
        Op::ReferLocal(1),
        Op::CdrPush,
        Op::Shiftj(2, 2, 0),
        Op::LocalJmp(-20),
        Op::Leave(2),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("make-list-with-src-slot"), 1),
        Op::PushFrame(3),
        Op::ReferFreePush(12),
        Op::ReferFreeCall(10, 1),
        Op::Push,
        Op::ReferFree(9),
        Op::TailCall(2, 4),
        Op::LocalJmp(636),
        Op::ConstantPush(sym774),
        Op::ReferLocal(0),
        Op::BranchNotEqv(17),
        Op::Frame(9),
        Op::Frame(6),
        Op::Frame(3),
        Op::ReferFreePush(12),
        Op::ReferGlobalCall(vm.gc.intern("let1->let"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("pass1/expand"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("make-list-with-src-slot"), 1),
        Op::PushFrame(3),
        Op::ReferFreePush(12),
        Op::ReferFreeCall(10, 1),
        Op::Push,
        Op::ReferFree(9),
        Op::TailCall(2, 4),
        Op::LocalJmp(617),
        Op::ConstantPush(sym770),
        Op::ReferLocal(0),
        Op::BranchNotEqv(185),
        Op::Frame(3),
        Op::ReferFreePush(12),
        Op::ReferGlobalCall(vm.gc.intern("let-is-named?"), 1),
        Op::Test(95),
        Op::ReferFree(12),
        Op::PairP,
        Op::Test(76),
        Op::ReferFree(12),
        Op::CarPush,
        Op::Constant(sym770),
        Op::BranchNotEqual(30),
        Op::ReferFree(12),
        Op::Cdr,
        Op::PairP,
        Op::Test(68),
        Op::ReferFree(12),
        Op::Cddr,
        Op::PairP,
        Op::Test(64),
        Op::Frame(3),
        Op::ReferFreePush(12),
        Op::ReferFreeCall(8, 1),
        Op::PairP,
        Op::Test(59),
        Op::Frame(3),
        Op::ReferFreePush(12),
        Op::ReferFreeCall(7, 1),
        Op::PairP,
        Op::Test(54),
        Op::Frame(3),
        Op::ReferFreePush(12),
        Op::ReferFreeCall(7, 1),
        Op::CarPush,
        Op::Constant(sym769),
        Op::BranchNotEqual(6),
        Op::Frame(3),
        Op::ReferFreePush(12),
        Op::ReferFreeCall(7, 1),
        Op::Cdr,
        Op::PairP,
        Op::Test(42),
        Op::ReferFree(12),
        Op::Cadr,
        Op::Frame(3),
        Op::ReferFreePush(12),
        Op::ReferFreeCall(6, 1),
        Op::Frame(3),
        Op::ReferFreePush(12),
        Op::ReferFreeCall(7, 1),
        Op::Cadr,
        Op::Frame(3),
        Op::ReferFreePush(12),
        Op::ReferFreeCall(7, 1),
        Op::Cddr,
        Op::Frame(3),
        Op::ReferFreePush(12),
        Op::ReferFreeCall(5, 1),
        Op::Frame(18),
        Op::Frame(15),
        Op::Frame(12),
        Op::Frame(6),
        Op::Frame(3),
        Op::ReferFreePush(12),
        Op::ReferGlobalCall(vm.gc.intern("named-let-internal-define->letrec*"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("make-list-with-src-slot"), 1),
        Op::PushFrame(3),
        Op::ReferFreePush(12),
        Op::ReferFreeCall(10, 1),
        Op::Push,
        Op::ReferFreeCall(9, 2),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("pass1/expand"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("make-list-with-src-slot"), 1),
        Op::PushFrame(3),
        Op::ReferFreePush(12),
        Op::ReferFreeCall(10, 1),
        Op::Push,
        Op::ReferFree(9),
        Op::TailCall(2, 4),
        Op::LocalJmp(532),
        Op::Frame(9),
        Op::Frame(6),
        Op::Frame(3),
        Op::ReferFreePush(12),
        Op::ReferGlobalCall(vm.gc.intern("named-let->letrec"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("pass1/expand"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("make-list-with-src-slot"), 1),
        Op::PushFrame(3),
        Op::ReferFreePush(12),
        Op::ReferFreeCall(10, 1),
        Op::Push,
        Op::ReferFree(9),
        Op::TailCall(2, 4),
        Op::LocalJmp(516),
        Op::ReferFree(12),
        Op::PairP,
        Op::Test(66),
        Op::ReferFree(12),
        Op::CarPush,
        Op::Constant(sym770),
        Op::BranchNotEqual(23),
        Op::ReferFree(12),
        Op::Cdr,
        Op::PairP,
        Op::Test(58),
        Op::ReferFree(12),
        Op::Cddr,
        Op::PairP,
        Op::Test(54),
        Op::Frame(3),
        Op::ReferFreePush(12),
        Op::ReferFreeCall(6, 1),
        Op::PairP,
        Op::Test(49),
        Op::Frame(3),
        Op::ReferFreePush(12),
        Op::ReferFreeCall(4, 1),
        Op::PushConstant(sym769),
        Op::BranchNotEqual(5),
        Op::Frame(3),
        Op::ReferFreePush(12),
        Op::ReferFreeCall(3, 1),
        Op::PairP,
        Op::Test(39),
        Op::ReferFree(12),
        Op::Cadr,
        Op::Frame(3),
        Op::ReferFreePush(12),
        Op::ReferFreeCall(3, 1),
        Op::Car,
        Op::Frame(3),
        Op::ReferFreePush(12),
        Op::ReferFreeCall(3, 1),
        Op::Cdr,
        Op::Frame(3),
        Op::ReferFreePush(12),
        Op::ReferFreeCall(8, 1),
        Op::Frame(18),
        Op::Frame(15),
        Op::Frame(12),
        Op::Frame(6),
        Op::Frame(3),
        Op::ReferFreePush(12),
        Op::ReferGlobalCall(vm.gc.intern("let-internal-define->letrec*"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("make-list-with-src-slot"), 1),
        Op::PushFrame(3),
        Op::ReferFreePush(12),
        Op::ReferFreeCall(10, 1),
        Op::Push,
        Op::ReferFreeCall(9, 2),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("pass1/expand"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("make-list-with-src-slot"), 1),
        Op::PushFrame(3),
        Op::ReferFreePush(12),
        Op::ReferFreeCall(10, 1),
        Op::Push,
        Op::ReferFree(9),
        Op::TailCall(2, 4),
        Op::LocalJmp(448),
        Op::Frame(11),
        Op::Frame(8),
        Op::ReferFree(12),
        Op::Cadr,
        Op::Push,
        Op::ReferFree(12),
        Op::Cddr,
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("expand-let"), 2),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("make-list-with-src-slot"), 1),
        Op::PushFrame(3),
        Op::ReferFreePush(12),
        Op::ReferFreeCall(10, 1),
        Op::Push,
        Op::ReferFree(9),
        Op::TailCall(2, 4),
        Op::LocalJmp(430),
        Op::ConstantPush(sym775),
        Op::ReferLocal(0),
        Op::BranchNotEqv(17),
        Op::Frame(9),
        Op::Frame(6),
        Op::Frame(3),
        Op::ReferFreePush(12),
        Op::ReferGlobalCall(vm.gc.intern("let*->let"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("pass1/expand"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("make-list-with-src-slot"), 1),
        Op::PushFrame(3),
        Op::ReferFreePush(12),
        Op::ReferFreeCall(10, 1),
        Op::Push,
        Op::ReferFree(9),
        Op::TailCall(2, 4),
        Op::LocalJmp(411),
        Op::ConstantPush(sym776),
        Op::ReferLocal(0),
        Op::BranchNotEqv(90),
        Op::ReferFree(12),
        Op::PairP,
        Op::Test(83),
        Op::ReferFree(12),
        Op::CarPush,
        Op::Constant(sym776),
        Op::BranchNotEqual(5),
        Op::Frame(4),
        Op::ReferFree(12),
        Op::CdrPush,
        Op::ReferFreeCall(2, 1),
        Op::Test(74),
        Op::LetFrame(18),
        Op::ReferFreePush(11),
        Op::ReferFreePush(2),
        Op::ReferFreePush(12),
        Op::Display(3),
        Op::ReferFree(0),
        Op::CdrPush,
        Op::ConstantPush(Object::Nil),
        Op::ConstantPush(Object::Nil),
        Op::Enter(3),
        Op::ReferLocalBranchNotNull(0, 31),
        Op::LetFrame(8),
        Op::ReferFreePush(2),
        Op::ReferFreePush(2),
        Op::Display(2),
        Op::Frame(3),
        Op::ReferLocalPush(2),
        Op::ReferFreeCall(0, 1),
        Op::PushFrame(3),
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(0, 1),
        Op::PushEnter(2),
        Op::ConstantPush(sym776),
        Op::Frame(15),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 0},
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("pass1/expand"), 1),
        Op::PushFrame(4),
        Op::ReferGlobalPush(vm.gc.intern("pass1/expand")),
        Op::ReferLocalPush(1),
        Op::ReferGlobalCall(vm.gc.intern("map"), 2),
        Op::Cons,
        Op::Return(2),
        Op::Push,
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferGlobalCall(vm.gc.intern("map"), 3),
        Op::Cons,
        Op::Leave(2),
        Op::LocalJmp(31),
        Op::ReferLocal(0),
        Op::Car,
        Op::PairP,
        Op::Test(24),
        Op::Frame(5),
        Op::ReferLocal(0),
        Op::Cdar,
        Op::Push,
        Op::ReferFreeCall(1, 1),
        Op::Test(18),
        Op::ReferLocal(0),
        Op::CdrPush,
        Op::ReferLocal(0),
        Op::Cdar,
        Op::Push,
        Op::ReferLocal(1),
        Op::Cons,
        Op::Push,
        Op::ReferLocal(0),
        Op::Caar,
        Op::Push,
        Op::ReferLocal(2),
        Op::Cons,
        Op::Push,
        Op::Shiftj(3, 3, 0),
        Op::LocalJmp(-56),
        Op::LocalJmp(4),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("match:error")),
        Op::TailCall(1, 9),
        Op::Leave(3),
        Op::LocalJmp(323),
        Op::ReferFreePush(12),
        Op::ReferGlobal(vm.gc.intern("match:error")),
        Op::TailCall(1, 4),
        Op::LocalJmp(319),
        Op::ConstantPush(sym771),
        Op::ReferLocal(0),
        Op::BranchNotEqv(14),
        Op::Frame(6),
        Op::Frame(3),
        Op::ReferFreePush(12),
        Op::ReferGlobalCall(vm.gc.intern("expand-letrec*"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("make-list-with-src-slot"), 1),
        Op::PushFrame(3),
        Op::ReferFreePush(12),
        Op::ReferFreeCall(10, 1),
        Op::Push,
        Op::ReferFree(9),
        Op::TailCall(2, 4),
        Op::LocalJmp(303),
        Op::ConstantPush(sym777),
        Op::ReferLocal(0),
        Op::BranchNotEqv(41),
        Op::Frame(33),
        Op::Frame(30),
        Op::Frame(27),
        Op::Frame(21),
        Op::ConstantPush(sym778),
        Op::ConstantPush(sym779),
        Op::ReferFree(12),
        Op::Cadr,
        Op::PushConstant(Object::Nil),
        Op::Cons,
        Op::PushConstant(sym204),
        Op::PushFrame(3),
        Op::ReferFreePush(12),
        Op::ReferFreeCall(6, 1),
        Op::PushConstant(list6885),
        Op::Cons,
        Op::Cons,
        Op::PushConstant(Object::Nil),
        Op::Cons,
        Op::Cons,
        Op::Cons,
        Op::Cons,
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("make-list-with-src-slot"), 1),
        Op::PushFrame(3),
        Op::ReferFreePush(12),
        Op::ReferFreeCall(10, 1),
        Op::Push,
        Op::ReferFreeCall(9, 2),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("pass1/expand"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("make-list-with-src-slot"), 1),
        Op::PushFrame(3),
        Op::ReferFreePush(12),
        Op::ReferFreeCall(10, 1),
        Op::Push,
        Op::ReferFree(9),
        Op::TailCall(2, 4),
        Op::LocalJmp(260),
        Op::ConstantPush(sym18),
        Op::ReferLocal(0),
        Op::BranchNotEqv(76),
        Op::Frame(3),
        Op::ReferFreePush(12),
        Op::ReferGlobalCall(vm.gc.intern("lambda-has-define?"), 1),
        Op::Test(26),
        Op::Frame(18),
        Op::Frame(15),
        Op::Frame(12),
        Op::Frame(6),
        Op::Frame(3),
        Op::ReferFreePush(12),
        Op::ReferGlobalCall(vm.gc.intern("internal-define->letrec*"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("make-list-with-src-slot"), 1),
        Op::PushFrame(3),
        Op::ReferFreePush(12),
        Op::ReferFreeCall(10, 1),
        Op::Push,
        Op::ReferFreeCall(9, 2),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("pass1/expand"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("make-list-with-src-slot"), 1),
        Op::PushFrame(3),
        Op::ReferFreePush(12),
        Op::ReferFreeCall(10, 1),
        Op::Push,
        Op::ReferFree(9),
        Op::TailCall(2, 4),
        Op::LocalJmp(228),
        Op::Frame(39),
        Op::Frame(36),
        Op::Frame(6),
        Op::ConstantPush(sym18),
        Op::ReferFree(12),
        Op::Cadr,
        Op::Push,
        Op::ReferFreeCall(1, 2),
        Op::Push,
        Op::LetFrame(7),
        Op::ReferFreePush(11),
        Op::ReferFreePush(12),
        Op::Display(2),
        Op::ConstantPush(Object::Nil),
        Op::ReferFree(0),
        Op::Cddr,
        Op::PushEnter(2),
        Op::ReferLocalBranchNotNull(1, 5),
        Op::Frame(16),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(1, 1),
        Op::LocalJmp(13),
        Op::Frame(4),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::ReferGlobalCall(vm.gc.intern("pass1/expand"), 1),
        Op::Push,
        Op::ReferLocal(0),
        Op::Cons,
        Op::Push,
        Op::ReferLocal(1),
        Op::CdrPush,
        Op::Shiftj(2, 2, 0),
        Op::LocalJmp(-16),
        Op::Leave(2),
        Op::Push,
        Op::ReferFreeCall(0, 2),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("make-list-with-src-slot"), 1),
        Op::PushFrame(3),
        Op::ReferFreePush(12),
        Op::ReferFreeCall(10, 1),
        Op::Push,
        Op::ReferFree(9),
        Op::TailCall(2, 4),
        Op::LocalJmp(182),
        Op::ConstantPush(sym780),
        Op::ReferLocal(0),
        Op::BranchNotEqv(62),
        Op::ReferFree(12),
        Op::PairP,
        Op::Test(55),
        Op::ReferFree(12),
        Op::CarPush,
        Op::Constant(sym780),
        Op::BranchNotEqual(8),
        Op::ReferFree(12),
        Op::Cdr,
        Op::PairP,
        Op::Test(47),
        Op::ReferFree(12),
        Op::Cddr,
        Op::PairP,
        Op::Test(43),
        Op::LetFrame(14),
        Op::ReferFreePush(12),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(12),
        Op::ReferFreePush(8),
        Op::ReferFreePush(12),
        Op::ReferFreePush(6),
        Op::ReferFreePush(12),
        Op::Display(8),
        Op::ReferFree(0),
        Op::Cadr,
        Op::PushFrame(3),
        Op::ReferFreePush(0),
        Op::ReferFreeCall(1, 1),
        Op::PushFrame(3),
        Op::ReferFreePush(0),
        Op::ReferFreeCall(3, 1),
        Op::PushEnter(3),
        Op::Frame(15),
        Op::Frame(12),
        Op::ConstantPush(sym776),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocal(2),
        Op::Cons,
        Op::Cons,
        Op::PushConstant(Object::Nil),
        Op::Cons,
        Op::Cons,
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("pass1/expand"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("make-list-with-src-slot"), 1),
        Op::PushFrame(3),
        Op::ReferFreePush(0),
        Op::ReferFreeCall(6, 1),
        Op::Push,
        Op::ReferFree(5),
        Op::TailCall(2, 9),
        Op::Leave(3),
        Op::LocalJmp(122),
        Op::ConstantPush(str137),
        Op::ReferGlobal(vm.gc.intern("syntax-error")),
        Op::TailCall(1, 4),
        Op::LocalJmp(118),
        Op::ConstantPush(sym781),
        Op::ReferLocal(0),
        Op::BranchNotEqv(66),
        Op::ReferFree(12),
        Op::PairP,
        Op::Test(59),
        Op::ReferFree(12),
        Op::CarPush,
        Op::Constant(sym781),
        Op::BranchNotEqual(8),
        Op::ReferFree(12),
        Op::Cdr,
        Op::PairP,
        Op::Test(51),
        Op::ReferFree(12),
        Op::Cddr,
        Op::PairP,
        Op::Test(47),
        Op::LetFrame(16),
        Op::ReferFreePush(12),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(12),
        Op::ReferFreePush(8),
        Op::ReferFreePush(12),
        Op::ReferFreePush(6),
        Op::ReferFreePush(12),
        Op::Display(8),
        Op::ReferFree(0),
        Op::Cadr,
        Op::PushFrame(3),
        Op::ReferFreePush(0),
        Op::ReferFreeCall(1, 1),
        Op::PushFrame(3),
        Op::ReferFreePush(0),
        Op::ReferFreeCall(3, 1),
        Op::PushEnter(3),
        Op::Frame(19),
        Op::Frame(16),
        Op::ConstantPush(sym776),
        Op::ConstantPush(sym782),
        Op::ReferLocalPushConstant(0, Object::Nil),
        Op::Cons,
        Op::Cons,
        Op::Push,
        Op::ReferLocalPush(1),
        Op::ReferLocal(2),
        Op::Cons,
        Op::Cons,
        Op::PushConstant(Object::Nil),
        Op::Cons,
        Op::Cons,
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("pass1/expand"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("make-list-with-src-slot"), 1),
        Op::PushFrame(3),
        Op::ReferFreePush(0),
        Op::ReferFreeCall(6, 1),
        Op::Push,
        Op::ReferFree(5),
        Op::TailCall(2, 9),
        Op::Leave(3),
        Op::LocalJmp(54),
        Op::ConstantPush(str138),
        Op::ReferGlobal(vm.gc.intern("syntax-error")),
        Op::TailCall(1, 4),
        Op::LocalJmp(50),
        Op::ConstantPush(sym783),
        Op::ReferLocal(0),
        Op::BranchNotEqv(17),
        Op::Frame(9),
        Op::Frame(6),
        Op::Frame(3),
        Op::ReferFreePush(12),
        Op::ReferGlobalCall(vm.gc.intern("aif->let"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("pass1/expand"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("make-list-with-src-slot"), 1),
        Op::PushFrame(3),
        Op::ReferFreePush(12),
        Op::ReferFreeCall(10, 1),
        Op::Push,
        Op::ReferFree(9),
        Op::TailCall(2, 4),
        Op::LocalJmp(31),
        Op::ConstantPush(sym784),
        Op::ReferLocal(0),
        Op::BranchNotEqv(17),
        Op::Frame(9),
        Op::Frame(6),
        Op::Frame(3),
        Op::ReferFreePush(12),
        Op::ReferGlobalCall(vm.gc.intern("case->cond"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("pass1/expand"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("make-list-with-src-slot"), 1),
        Op::PushFrame(3),
        Op::ReferFreePush(12),
        Op::ReferFreeCall(10, 1),
        Op::Push,
        Op::ReferFree(9),
        Op::TailCall(2, 4),
        Op::LocalJmp(12),
        Op::ConstantPush(sym785),
        Op::ReferLocal(0),
        Op::BranchNotEqv(8),
        Op::ReferFree(12),
        Op::Cadr,
        Op::PushConstant(Object::Number(0)),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("expand-quasiquote")),
        Op::TailCall(2, 4),
        Op::LocalJmp(2),
        Op::ReferFree(12),
        Op::Leave(1),
        Op::Return(1),
        Op::ReferLocal(0),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("pass1/expand")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::ReferLocal(0),
        Op::Cadr,
        Op::PairP,
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("define-is-lambda?")),
        Op::Nop,
        Op::ReferFreePush(89),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 1},
        Op::ReferLocal(0),
        Op::Cdr,
        Op::BranchNotNull(4),
        Op::ReferLocal(0),
        Op::Car,
        Op::Return(1),
        Op::ConstantPush(sym786),
        Op::ReferLocal(0),
        Op::Car,
        Op::PushFrame(4),
        Op::ReferLocal(0),
        Op::CdrPush,
        Op::ReferGlobalCall(vm.gc.intern("conditions->if"), 1),
        Op::PushConstant(Object::False),
        Op::Push,
        Op::ReferFree(0),
        Op::TailCall(4, 1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("conditions->if")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(89),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 1},
        Op::LetFrame(14),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::Display(3),
        Op::ConstantPush(Object::Nil),
        Op::ReferLocalPush(1),
        Op::Enter(2),
        Op::ReferLocalBranchNotNull(1, 10),
        Op::ReferLocalBranchNotNull(0, 6),
        Op::ConstantPush(Object::Nil),
        Op::ReferLocalPush(1),
        Op::ReferFree(2),
        Op::TailCall(2, 6),
        Op::LocalJmp(31),
        Op::ReferLocalPushConstant(0, Object::Nil),
        Op::Values(2),
        Op::LocalJmp(28),
        Op::Frame(4),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::ReferFreeCall(1, 1),
        Op::Test(13),
        Op::ReferLocalPush(0),
        Op::Frame(4),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::ReferFreeCall(2, 1),
        Op::Append2,
        Op::Push,
        Op::ReferLocal(1),
        Op::CdrPush,
        Op::Shiftj(2, 2, 0),
        Op::LocalJmp(-25),
        Op::LocalJmp(11),
        Op::ReferLocalBranchNotNull(0, 6),
        Op::ConstantPush(Object::Nil),
        Op::ReferLocalPush(1),
        Op::ReferFree(2),
        Op::TailCall(2, 6),
        Op::LocalJmp(5),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferFree(2),
        Op::TailCall(2, 6),
        Op::Leave(2),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("find-serial-from-head")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(69),
        Op::ReferFreePush(89),
        Op::ReferFreePush(149),
        Op::ReferFreePush(168),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 4},
        Op::LetFrame(27),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Display(5),
        Op::ReferLocal(0),
        Op::Cddr,
        Op::PushEnter(1),
        Op::LetFrame(26),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(4),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(4),
        Op::Display(7),
        Op::ReferFree(0),
        Op::Cadr,
        Op::PushEnter(1),
        Op::LetFrame(25),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(0),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(6),
        Op::Display(7),
        Op::Frame(13),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::ReferLocal(0),
        Op::PairP,
        Op::Test(5),
        Op::ConstantPush(sym769),
        Op::ReferLocal(0),
        Op::Car,
        Op::Eq,
        Op::Return(1),
        Op::Push,
        Op::ReferFreePush(0),
        Op::ReferGlobalCall(vm.gc.intern("find-serial-from-head"), 2),
        Op::PushEnter(1),
        Op::LetFrame(22),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::Display(7),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::Enter(1),
        Op::LetFrame(21),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(6),
        Op::Display(8),
        Op::ReferFree(0),
        Op::Cadr,
        Op::PushEnter(1),
        Op::LetFrame(20),
        Op::ReferFreePush(1),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::Display(10),
        Op::Frame(35),
        Op::Frame(29),
        Op::ConstantPush(sym771),
        Op::Frame(19),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 2},
        Op::ReferLocal(0),
        Op::Cadr,
        Op::PushFrame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(1, 1),
        Op::Push,
        Op::ReferFree(0),
        Op::TailCall(2, 1),
        Op::Return(1),
        Op::PushFrame(4),
        Op::ReferGlobalPush(vm.gc.intern("pass1/expand")),
        Op::ReferFreePush(3),
        Op::ReferGlobalCall(vm.gc.intern("map"), 2),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("map"), 2),
        Op::PushFrame(4),
        Op::ReferGlobalPush(vm.gc.intern("pass1/expand")),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("map"), 2),
        Op::Cons,
        Op::Cons,
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("make-list-with-src-slot"), 1),
        Op::PushFrame(3),
        Op::ReferFreePush(2),
        Op::ReferFreeCall(1, 1),
        Op::Push,
        Op::ReferFreeCall(0, 2),
        Op::PushEnter(1),
        Op::Frame(9),
        Op::ConstantPush(sym18),
        Op::ReferFreePush(9),
        Op::ReferLocalPushConstant(0, Object::Nil),
        Op::Cons,
        Op::Cons,
        Op::Cons,
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("make-list-with-src-slot"), 1),
        Op::PushFrame(3),
        Op::ReferFreePush(2),
        Op::ReferFreeCall(1, 1),
        Op::Push,
        Op::ReferFree(0),
        Op::TailCall(2, 19),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("internal-define->letrec*")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(89),
        Op::ReferFreePush(176),
        Op::ReferFreePush(149),
        Op::ReferFreePush(168),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 4},
        Op::LetFrame(13),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Display(5),
        Op::ReferLocal(0),
        Op::Cadr,
        Op::Push,
        Op::ReferLocal(0),
        Op::Cddr,
        Op::PushEnter(2),
        Op::ConstantPush(sym769),
        Op::ReferLocal(0),
        Op::Car,
        Op::PushFrame(18),
        Op::Frame(12),
        Op::Frame(9),
        Op::Frame(5),
        Op::ConstantPush(sym18),
        Op::ReferLocal(0),
        Op::CdrPush,
        Op::ReferFreeCall(4, 2),
        Op::Push,
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(3, 2),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("make-list-with-src-slot"), 1),
        Op::PushFrame(3),
        Op::ReferFreePush(2),
        Op::ReferFreeCall(1, 1),
        Op::Push,
        Op::ReferFreeCall(0, 2),
        Op::PushConstant(Object::Nil),
        Op::Cons,
        Op::Cons,
        Op::Cons,
        Op::Leave(2),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("define->lambda")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(149),
        Op::ReferFreePush(168),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 2},
        Op::LetFrame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Display(3),
        Op::ReferLocal(0),
        Op::Cadr,
        Op::Push,
        Op::ReferLocal(0),
        Op::Cddr,
        Op::PushEnter(2),
        Op::LetFrame(1),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Display(6),
        Op::Undef,
        Op::Push,
        Op::Box(0),
        Op::Enter(1),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 6},
        Op::ReferLocalBranchNotNull(0, 3),
        Op::ReferFree(4),
        Op::Return(1),
        Op::Frame(18),
        Op::ConstantPush(sym770),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::Constant(Object::Nil),
        Op::Cons,
        Op::PushFrame(6),
        Op::ReferLocal(0),
        Op::CdrPush,
        Op::ReferFree(3),
        Op::Indirect,
        Op::LocalCall(1),
        Op::Cons,
        Op::Cons,
        Op::PushConstant(Object::Nil),
        Op::Cons,
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("make-list-with-src-slot"), 1),
        Op::PushFrame(3),
        Op::ReferFreePush(2),
        Op::ReferFreeCall(1, 1),
        Op::Push,
        Op::ReferFree(0),
        Op::TailCall(2, 1),
        Op::Return(1),
        Op::AssignLocal(0),
        Op::Frame(5),
        Op::ReferFreePush(4),
        Op::ReferLocal(0),
        Op::Indirect,
        Op::LocalCall(1),
        Op::Leave(1),
        Op::Car,
        Op::Leave(2),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("let*->let")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(191),
        Op::ReferFreePush(59),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 2},
        Op::LetFrame(1),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(1),
        Op::Display(5),
        Op::Undef,
        Op::Push,
        Op::Box(0),
        Op::Enter(1),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 5},
        Op::ReferLocalBranchNotNull(0, 3),
        Op::Constant(Object::Nil),
        Op::Return(1),
        Op::ConstantPush(sym787),
        Op::ReferLocal(0),
        Op::Caar,
        Op::BranchNotEq(3),
        Op::ReferLocal(0),
        Op::Return(1),
        Op::ConstantPush(Object::Number(1)),
        Op::Frame(5),
        Op::ReferLocal(0),
        Op::Caar,
        Op::Push,
        Op::ReferFreeCall(3, 1),
        Op::BranchNotNumberEqual(27),
        Op::ConstantPush(sym144),
        Op::ConstantPush(sym772),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(2, 1),
        Op::PushConstant(Object::Nil),
        Op::Cons,
        Op::Cons,
        Op::Push,
        Op::ReferFreePush(1),
        Op::Constant(Object::Nil),
        Op::Cons,
        Op::Cons,
        Op::Cons,
        Op::Push,
        Op::ReferLocal(0),
        Op::Cdar,
        Op::Cons,
        Op::PushFrame(6),
        Op::ReferLocal(0),
        Op::CdrPush,
        Op::ReferFree(0),
        Op::Indirect,
        Op::LocalCall(1),
        Op::Cons,
        Op::Return(1),
        Op::ConstantPush(sym210),
        Op::ReferFreePush(1),
        Op::ConstantPush(sym772),
        Op::ReferLocal(0),
        Op::Caar,
        Op::PushConstant(Object::Nil),
        Op::Cons,
        Op::Cons,
        Op::PushConstant(Object::Nil),
        Op::Cons,
        Op::Cons,
        Op::Cons,
        Op::Push,
        Op::ReferLocal(0),
        Op::Cdar,
        Op::Cons,
        Op::PushFrame(6),
        Op::ReferLocal(0),
        Op::CdrPush,
        Op::ReferFree(0),
        Op::Indirect,
        Op::LocalCall(1),
        Op::Cons,
        Op::Return(1),
        Op::AssignLocal(0),
        Op::ReferFreePush(3),
        Op::ReferLocal(0),
        Op::Indirect,
        Op::LocalTailCall(1, 5),
        Op::Leave(1),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("expand-clauses")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(55),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 1},
        Op::LetFrame(13),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::Display(2),
        Op::ReferLocal(0),
        Op::Cadr,
        Op::PushEnter(1),
        Op::LetFrame(12),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::Display(3),
        Op::ReferFree(0),
        Op::Cddr,
        Op::PushEnter(1),
        Op::LetFrame(11),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::ReferFreePush(2),
        Op::Display(3),
        Op::Frame(2),
        Op::ReferFreeCall(0, 0),
        Op::PushEnter(1),
        Op::LetFrame(10),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::ReferFreePush(2),
        Op::Display(3),
        Op::Frame(4),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("expand-clauses"), 2),
        Op::PushEnter(1),
        Op::ConstantPush(sym770),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::Constant(Object::Nil),
        Op::Cons,
        Op::Cons,
        Op::PushConstant(Object::Nil),
        Op::Cons,
        Op::PushConstant(sym776),
        Op::Push,
        Op::ReferLocal(0),
        Op::Cons,
        Op::PushConstant(Object::Nil),
        Op::Cons,
        Op::Cons,
        Op::Cons,
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("case->cond")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(69),
        Op::ReferFreePush(26),
        Op::ReferFreePush(83),
        Op::ReferFreePush(149),
        Op::ReferFreePush(168),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 5},
        Op::LetFrame(37),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Display(6),
        Op::ReferLocal(0),
        Op::Cadr,
        Op::PushEnter(1),
        Op::LetFrame(36),
        Op::ReferFreePush(3),
        Op::ReferFreePush(5),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::Display(8),
        Op::Frame(3),
        Op::ReferFreePush(1),
        Op::ReferFreeCall(0, 1),
        Op::PushEnter(1),
        Op::LetFrame(34),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(7),
        Op::ReferFreePush(1),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(7),
        Op::ReferLocalPush(0),
        Op::Display(9),
        Op::LetFrame(6),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(0),
        Op::Display(2),
        Op::ConstantPush(Object::Nil),
        Op::ReferLocalPush(0),
        Op::Enter(2),
        Op::ReferLocalBranchNotNull(1, 5),
        Op::Frame(14),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(1, 1),
        Op::LocalJmp(11),
        Op::ReferLocal(1),
        Op::Car,
        Op::CarPush,
        Op::ReferLocal(0),
        Op::Cons,
        Op::Push,
        Op::ReferLocal(1),
        Op::CdrPush,
        Op::Shiftj(2, 2, 0),
        Op::LocalJmp(-14),
        Op::Leave(2),
        Op::PushEnter(1),
        Op::LetFrame(27),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(0),
        Op::ReferFreePush(1),
        Op::Display(8),
        Op::LetFrame(6),
        Op::ReferFreePush(0),
        Op::ReferFreePush(1),
        Op::Display(2),
        Op::ConstantPush(Object::Nil),
        Op::ReferFreePush(0),
        Op::Enter(2),
        Op::ReferLocalBranchNotNull(1, 5),
        Op::Frame(15),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(1, 1),
        Op::LocalJmp(12),
        Op::ReferLocal(1),
        Op::Car,
        Op::Cadr,
        Op::Push,
        Op::ReferLocal(0),
        Op::Cons,
        Op::Push,
        Op::ReferLocal(1),
        Op::CdrPush,
        Op::Shiftj(2, 2, 0),
        Op::LocalJmp(-15),
        Op::Leave(2),
        Op::PushEnter(1),
        Op::LetFrame(20),
        Op::ReferFreePush(5),
        Op::ReferFreePush(7),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::Display(8),
        Op::Frame(3),
        Op::ReferFreePush(1),
        Op::ReferFreeCall(0, 1),
        Op::PushEnter(1),
        Op::LetFrame(18),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(7),
        Op::ReferFreePush(1),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::Display(9),
        Op::Frame(14),
        Op::Frame(8),
        Op::ConstantPush(sym18),
        Op::ReferFreePush(3),
        Op::ReferLocal(0),
        Op::Cons,
        Op::Cons,
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("make-list-with-src-slot"), 1),
        Op::PushFrame(3),
        Op::ReferFreePush(2),
        Op::ReferFreeCall(1, 1),
        Op::Push,
        Op::ReferFreeCall(0, 2),
        Op::PushEnter(1),
        Op::Frame(18),
        Op::ConstantPush(sym788),
        Op::ReferFreePush(8),
        Op::ReferLocalPushConstant(0, Object::Nil),
        Op::Cons,
        Op::Cons,
        Op::PushConstant(Object::Nil),
        Op::Cons,
        Op::Push,
        Op::ReferFreePush(8),
        Op::ReferFree(7),
        Op::Cons,
        Op::PushConstant(Object::Nil),
        Op::Cons,
        Op::Cons,
        Op::Cons,
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("make-list-with-src-slot"), 1),
        Op::PushFrame(3),
        Op::ReferFreePush(2),
        Op::ReferFreeCall(1, 1),
        Op::Push,
        Op::ReferFree(0),
        Op::TailCall(2, 19),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("named-let->letrec")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(83),
        Op::ReferFreePush(69),
        Op::ReferFreePush(89),
        Op::ReferFreePush(149),
        Op::ReferFreePush(168),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 5},
        Op::LetFrame(29),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(4),
        Op::Display(6),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(0, 1),
        Op::PushEnter(1),
        Op::LetFrame(27),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(5),
        Op::Display(7),
        Op::ReferFree(0),
        Op::Cadr,
        Op::PushEnter(1),
        Op::LetFrame(26),
        Op::ReferFreePush(4),
        Op::ReferFreePush(5),
        Op::ReferFreePush(3),
        Op::ReferFreePush(0),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::ReferFreePush(5),
        Op::Display(9),
        Op::Frame(3),
        Op::ReferFreePush(1),
        Op::ReferFreeCall(0, 1),
        Op::PushEnter(1),
        Op::LetFrame(24),
        Op::ReferFreePush(0),
        Op::ReferFreePush(6),
        Op::ReferFreePush(1),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(8),
        Op::Display(8),
        Op::Frame(13),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::ReferLocal(0),
        Op::PairP,
        Op::Test(5),
        Op::ConstantPush(sym769),
        Op::ReferLocal(0),
        Op::Car,
        Op::Eq,
        Op::Return(1),
        Op::Push,
        Op::ReferFreePush(0),
        Op::ReferGlobalCall(vm.gc.intern("find-serial-from-head"), 2),
        Op::PushEnter(1),
        Op::LetFrame(21),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::Display(8),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::Enter(1),
        Op::LetFrame(20),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(7),
        Op::Display(9),
        Op::ReferFree(0),
        Op::Cadr,
        Op::PushEnter(1),
        Op::LetFrame(19),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::Display(11),
        Op::Frame(33),
        Op::Frame(27),
        Op::ConstantPush(sym771),
        Op::Frame(19),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 2},
        Op::ReferLocal(0),
        Op::Cadr,
        Op::PushFrame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(1, 1),
        Op::Push,
        Op::ReferFree(0),
        Op::TailCall(2, 1),
        Op::Return(1),
        Op::PushFrame(4),
        Op::ReferGlobalPush(vm.gc.intern("pass1/expand")),
        Op::ReferFreePush(3),
        Op::ReferGlobalCall(vm.gc.intern("map"), 2),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("map"), 2),
        Op::Push,
        Op::ReferLocal(0),
        Op::Cons,
        Op::Cons,
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("make-list-with-src-slot"), 1),
        Op::PushFrame(3),
        Op::ReferFreePush(2),
        Op::ReferFreeCall(1, 1),
        Op::Push,
        Op::ReferFreeCall(0, 2),
        Op::PushEnter(1),
        Op::Frame(11),
        Op::ConstantPush(sym770),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferLocalPushConstant(0, Object::Nil),
        Op::Cons,
        Op::Cons,
        Op::Cons,
        Op::Cons,
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("make-list-with-src-slot"), 1),
        Op::PushFrame(3),
        Op::ReferFreePush(2),
        Op::ReferFreeCall(1, 1),
        Op::Push,
        Op::ReferFree(0),
        Op::TailCall(2, 22),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("named-let-internal-define->letrec*")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(69),
        Op::ReferFreePush(68),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 2},
        Op::ConstantPush(sym770),
        Op::ConstantPush(sym789),
        Op::ReferLocal(0),
        Op::Cadr,
        Op::PushConstant(Object::Nil),
        Op::Cons,
        Op::Cons,
        Op::PushConstant(Object::Nil),
        Op::Cons,
        Op::PushConstant(sym786),
        Op::PushConstant(sym789),
        Op::PushFrame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(1, 1),
        Op::PushFrame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(0, 1),
        Op::PushConstant(Object::Nil),
        Op::Cons,
        Op::Cons,
        Op::Cons,
        Op::Cons,
        Op::PushConstant(Object::Nil),
        Op::Cons,
        Op::Cons,
        Op::Cons,
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("aif->let")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::ReferLocal(0),
        Op::Cadr,
        Op::SymbolP,
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("let-is-named?")),
        Op::Nop,
        Op::ReferFreePush(89),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 1},
        Op::ReferLocalPushConstant(0, sym772),
        Op::BranchNotEq(6),
        Op::ConstantPush(sym772),
        Op::ReferLocalPush(1),
        Op::ReferFree(0),
        Op::TailCall(2, 2),
        Op::Return(2),
        Op::ReferLocalPushConstant(0, sym790),
        Op::BranchNotEq(3),
        Op::ReferLocal(1),
        Op::Return(2),
        Op::ReferLocalPushConstant(0, sym791),
        Op::BranchNotEq(7),
        Op::ConstantPush(sym785),
        Op::ConstantPush(str139),
        Op::ReferLocalPush(1),
        Op::ReferGlobal(vm.gc.intern("error")),
        Op::TailCall(3, 2),
        Op::Return(2),
        Op::ReferLocalPush(0),
        Op::ReferLocal(1),
        Op::Cons,
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("finalize-quasiquote")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 3, is_optional_arg: false, num_free_vars: 0},
        Op::ReferLocal(0),
        Op::VectorP,
        Op::Test(7),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferGlobal(vm.gc.intern("descend-quasiquote-vector")),
        Op::TailCall(3, 3),
        Op::Return(3),
        Op::ReferLocal(0),
        Op::PairP,
        Op::Test(61),
        Op::Frame(4),
        Op::ReferLocalPushConstant(0, sym785),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("interesting-to-quasiquote?"), 2),
        Op::Test(8),
        Op::ReferLocalPush(0),
        Op::ReferLocalPushConstant(1, Object::Number(1)),
        Op::NumberAddPush,
        Op::ReferLocalPush(2),
        Op::ReferGlobal(vm.gc.intern("descend-quasiquote-pair")),
        Op::TailCall(3, 3),
        Op::Return(3),
        Op::Frame(4),
        Op::ReferLocalPushConstant(0, sym790),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("interesting-to-quasiquote?"), 2),
        Op::Test(17),
        Op::ReferLocalPushConstant(1, Object::Number(0)),
        Op::BranchNotNumberEqual(8),
        Op::ConstantPush(sym790),
        Op::ReferLocal(0),
        Op::Cadr,
        Op::Push,
        Op::ReferLocal(2),
        Op::TailCall(2, 3),
        Op::Return(3),
        Op::ReferLocalPush(0),
        Op::ReferLocalPushConstant(1, Object::Number(1)),
        Op::NumberSubPush,
        Op::ReferLocalPush(2),
        Op::ReferGlobal(vm.gc.intern("descend-quasiquote-pair")),
        Op::TailCall(3, 3),
        Op::Return(3),
        Op::Frame(4),
        Op::ReferLocalPushConstant(0, sym791),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("interesting-to-quasiquote?"), 2),
        Op::Test(17),
        Op::ReferLocalPushConstant(1, Object::Number(0)),
        Op::BranchNotNumberEqual(8),
        Op::ConstantPush(sym791),
        Op::ReferLocal(0),
        Op::Cadr,
        Op::Push,
        Op::ReferLocal(2),
        Op::TailCall(2, 3),
        Op::Return(3),
        Op::ReferLocalPush(0),
        Op::ReferLocalPushConstant(1, Object::Number(1)),
        Op::NumberSubPush,
        Op::ReferLocalPush(2),
        Op::ReferGlobal(vm.gc.intern("descend-quasiquote-pair")),
        Op::TailCall(3, 3),
        Op::Return(3),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferGlobal(vm.gc.intern("descend-quasiquote-pair")),
        Op::TailCall(3, 3),
        Op::Return(3),
        Op::ConstantPush(sym772),
        Op::ReferLocalPush(0),
        Op::ReferLocal(2),
        Op::TailCall(2, 3),
        Op::Return(3),
        Op::DefineGlobal(vm.gc.intern("descend-quasiquote")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(89),
        Op::Closure {size: 0, arg_len: 3, is_optional_arg: false, num_free_vars: 1},
        Op::ReferLocal(0),
        Op::CarPush,
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferFreePush(0),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 4},
        Op::ReferFree(3),
        Op::CdrPush,
        Op::ReferFreePush(2),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(3),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(0),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 5},
        Op::ReferFreePush(4),
        Op::Constant(sym772),
        Op::BranchNotEq(3),
        Op::ReferLocalPushConstant(0, sym772),
        Op::Eq,
        Op::Test(6),
        Op::ConstantPush(sym772),
        Op::ReferFreePush(3),
        Op::ReferFree(2),
        Op::TailCall(2, 2),
        Op::Return(2),
        Op::ReferFreePush(4),
        Op::Constant(sym791),
        Op::BranchNotEq(24),
        Op::ReferLocalPushConstant(0, sym772),
        Op::BranchNotEq(3),
        Op::ReferLocal(1),
        Op::NullP,
        Op::Test(6),
        Op::ConstantPush(sym790),
        Op::ReferFreePush(1),
        Op::ReferFree(2),
        Op::TailCall(2, 2),
        Op::Return(2),
        Op::ConstantPush(sym226),
        Op::Frame(8),
        Op::ReferFreePush(1),
        Op::Frame(4),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferGlobalCall(vm.gc.intern("finalize-quasiquote"), 2),
        Op::Push,
        Op::ReferFreeCall(0, 2),
        Op::Push,
        Op::ReferFree(2),
        Op::TailCall(2, 2),
        Op::Return(2),
        Op::ConstantPush(sym53),
        Op::Frame(11),
        Op::Frame(4),
        Op::ReferFreePush(4),
        Op::ReferFreePush(1),
        Op::ReferGlobalCall(vm.gc.intern("finalize-quasiquote"), 2),
        Op::PushFrame(4),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferGlobalCall(vm.gc.intern("finalize-quasiquote"), 2),
        Op::Push,
        Op::ReferFreeCall(0, 2),
        Op::Push,
        Op::ReferFree(2),
        Op::TailCall(2, 2),
        Op::Return(2),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("descend-quasiquote")),
        Op::TailCall(3, 2),
        Op::Return(2),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("descend-quasiquote")),
        Op::TailCall(3, 3),
        Op::Return(3),
        Op::DefineGlobal(vm.gc.intern("descend-quasiquote-pair")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(167),
        Op::ReferFreePush(89),
        Op::Closure {size: 0, arg_len: 3, is_optional_arg: false, num_free_vars: 2},
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(1, 1),
        Op::Push,
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(2),
        Op::ReferFreePush(0),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 3},
        Op::ReferLocalPushConstant(0, sym772),
        Op::BranchNotEq(6),
        Op::ConstantPush(sym772),
        Op::ReferFreePush(2),
        Op::ReferFree(1),
        Op::TailCall(2, 2),
        Op::Return(2),
        Op::ConstantPush(sym244),
        Op::Frame(7),
        Op::Frame(4),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferGlobalCall(vm.gc.intern("finalize-quasiquote"), 2),
        Op::Push,
        Op::ReferFreeCall(0, 1),
        Op::Push,
        Op::ReferFree(1),
        Op::TailCall(2, 2),
        Op::Return(2),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("descend-quasiquote")),
        Op::TailCall(3, 3),
        Op::Return(3),
        Op::DefineGlobal(vm.gc.intern("descend-quasiquote-vector")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 0},
        Op::ReferLocal(0),
        Op::PairP,
        Op::Test(5),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::ReferLocal(1),
        Op::Eq,
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("interesting-to-quasiquote?")),
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 0},
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferGlobalPush(vm.gc.intern("finalize-quasiquote")),
        Op::ReferGlobal(vm.gc.intern("descend-quasiquote")),
        Op::TailCall(3, 2),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("expand-quasiquote")),
        Op::Nop,
        Op::Constant(Object::False),
        Op::ReferFreePush(194),
        Op::ReferFreePush(196),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 2},
        Op::LetFrame(5),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::Display(3),
        Op::Frame(4),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(0, 2),
        Op::PushEnter(1),
        Op::ReferLocal(0),
        Op::Test(5),
        Op::ReferLocalPush(0),
        Op::ReferFree(2),
        Op::TailCall(1, 5),
        Op::LocalJmp(8),
        Op::Constant(Object::True),
        Op::Test(5),
        Op::ReferFreePush(1),
        Op::ReferGlobal(vm.gc.intern("$global-ref")),
        Op::TailCall(1, 5),
        Op::LocalJmp(2),
        Op::Constant(Object::Nil),
        Op::Leave(1),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("pass1/refer->iform")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(194),
        Op::Closure {size: 0, arg_len: 4, is_optional_arg: false, num_free_vars: 1},
        Op::ReferLocal(1),
        Op::PairP,
        Op::Test(53),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::Constant(sym18),
        Op::Equal,
        Op::Test(48),
        Op::ReferLocal(1),
        Op::Cdr,
        Op::LetFrame(15),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(2),
        Op::ReferFreePush(0),
        Op::Display(3),
        Op::Frame(5),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferGlobalCall(vm.gc.intern("pass1/lambda->iform"), 3),
        Op::PushEnter(1),
        Op::LetFrame(11),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(2),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Display(5),
        Op::Frame(4),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreeCall(0, 2),
        Op::PushEnter(1),
        Op::ReferLocal(0),
        Op::Test(13),
        Op::ReferLocalPushConstant(0, Object::Number(4)),
        Op::PushConstant(Object::Number(1)),
        Op::Push,
        Op::ReferLocalPushConstant(0, Object::Number(4)),
        Op::VectorRef,
        Op::NumberAdd,
        Op::VectorSet,
        Op::ReferLocalPush(0),
        Op::ReferFreePush(4),
        Op::ReferGlobal(vm.gc.intern("$local-assign")),
        Op::TailCall(2, 10),
        Op::LocalJmp(6),
        Op::Constant(Object::True),
        Op::ReferFreePush(2),
        Op::ReferFreePush(4),
        Op::ReferGlobal(vm.gc.intern("$global-assign")),
        Op::TailCall(2, 10),
        Op::Leave(1),
        Op::Leave(1),
        Op::Return(4),
        Op::LetFrame(15),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(2),
        Op::ReferFreePush(0),
        Op::Display(3),
        Op::Frame(5),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferLocalPush(3),
        Op::ReferGlobalCall(vm.gc.intern("pass1/sexp->iform"), 3),
        Op::PushEnter(1),
        Op::LetFrame(11),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(2),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Display(5),
        Op::Frame(4),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreeCall(0, 2),
        Op::PushEnter(1),
        Op::ReferLocal(0),
        Op::Test(13),
        Op::ReferLocalPushConstant(0, Object::Number(4)),
        Op::PushConstant(Object::Number(1)),
        Op::Push,
        Op::ReferLocalPushConstant(0, Object::Number(4)),
        Op::VectorRef,
        Op::NumberAdd,
        Op::VectorSet,
        Op::ReferLocalPush(0),
        Op::ReferFreePush(4),
        Op::ReferGlobal(vm.gc.intern("$local-assign")),
        Op::TailCall(2, 10),
        Op::LocalJmp(6),
        Op::Constant(Object::True),
        Op::ReferFreePush(2),
        Op::ReferFreePush(4),
        Op::ReferGlobal(vm.gc.intern("$global-assign")),
        Op::TailCall(2, 10),
        Op::Leave(1),
        Op::Leave(1),
        Op::Return(4),
        Op::DefineGlobal(vm.gc.intern("pass1/assign")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(191),
        Op::Closure {size: 0, arg_len: 3, is_optional_arg: false, num_free_vars: 1},
        Op::LetFrame(7),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(2),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::Display(4),
        Op::Frame(19),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 2},
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("pass1/expand"), 1),
        Op::Push,
        Op::ReferFreePush(1),
        Op::ReferLocal(1),
        Op::Test(2),
        Op::ReferFree(0),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("pass1/sexp->iform")),
        Op::TailCall(3, 2),
        Op::Return(2),
        Op::Push,
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("$map1-with-tail"), 2),
        Op::PushEnter(1),
        Op::ConstantPush(Object::Number(1)),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(3, 1),
        Op::BranchNotNumberEqual(4),
        Op::ReferLocal(0),
        Op::Car,
        Op::LocalJmp(5),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("$seq")),
        Op::TailCall(2, 6),
        Op::Leave(1),
        Op::Return(3),
        Op::DefineGlobal(vm.gc.intern("pass1/body->iform")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::LetFrame(1),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(0),
        Op::Display(2),
        Op::Undef,
        Op::Push,
        Op::Box(0),
        Op::Enter(1),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 2},
        Op::ReferLocal(0),
        Op::PairP,
        Op::NotTest(4),
        Op::ReferLocal(0),
        Op::NullP,
        Op::Not,
        Op::Test(4),
        Op::ReferLocalPushConstant(0, Object::Nil),
        Op::Cons,
        Op::Return(1),
        Op::ReferLocalBranchNotNull(0, 3),
        Op::Constant(Object::Nil),
        Op::Return(1),
        Op::ReferLocal(0),
        Op::Car,
        Op::PushFrame(6),
        Op::ReferLocal(0),
        Op::CdrPush,
        Op::ReferFree(0),
        Op::Indirect,
        Op::LocalCall(1),
        Op::Cons,
        Op::Return(1),
        Op::AssignLocal(0),
        Op::ReferFreePush(0),
        Op::ReferLocal(0),
        Op::Indirect,
        Op::LocalTailCall(1, 4),
        Op::Leave(1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("dotpair->list")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(26),
        Op::ReferFreePush(191),
        Op::ReferFreePush(149),
        Op::Closure {size: 0, arg_len: 3, is_optional_arg: false, num_free_vars: 3},
        Op::ReferLocal(1),
        Op::PairP,
        Op::Test(130),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::Constant(sym18),
        Op::BranchNotEqual(4),
        Op::ReferLocal(1),
        Op::Cdr,
        Op::PairP,
        Op::Test(122),
        Op::LetFrame(34),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(2),
        Op::Display(6),
        Op::ReferLocal(1),
        Op::Cadr,
        Op::Push,
        Op::ReferLocal(1),
        Op::Cddr,
        Op::PushEnter(2),
        Op::LetFrame(32),
        Op::ReferFreePush(5),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(0),
        Op::Display(8),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("parse-lambda-vars"), 1),
        Op::Receive(2, 0),
        Op::Enter(2),
        Op::LetFrame(31),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(5),
        Op::ReferFreePush(7),
        Op::ReferLocalPush(1),
        Op::Display(9),
        Op::LetFrame(11),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(1),
        Op::Display(2),
        Op::ConstantPush(Object::Nil),
        Op::ReferLocalPush(1),
        Op::Enter(2),
        Op::ReferLocalBranchNotNull(1, 5),
        Op::Frame(23),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(1, 1),
        Op::LocalJmp(20),
        Op::LetFrame(5),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::Enter(1),
        Op::Frame(6),
        Op::ReferLocalPushConstant(0, Object::False),
        Op::PushConstant(Object::Number(0)),
        Op::PushConstant(Object::Number(0)),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("$lvar"), 4),
        Op::Leave(1),
        Op::Push,
        Op::ReferLocal(0),
        Op::Cons,
        Op::Push,
        Op::ReferLocal(1),
        Op::CdrPush,
        Op::Shiftj(2, 2, 0),
        Op::LocalJmp(-23),
        Op::Leave(2),
        Op::PushFrame(3),
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(2, 1),
        Op::PushEnter(2),
        Op::Frame(3),
        Op::ReferFreePush(8),
        Op::ReferFreeCall(7, 1),
        Op::Push,
        Op::ReferFreePush(6),
        Op::Frame(5),
        Op::ReferFree(8),
        Op::Cadr,
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("dotpair->list"), 1),
        Op::Cons,
        Op::Cons,
        Op::Push,
        Op::ReferFreePush(6),
        Op::ReferFree(5),
        Op::Test(4),
        Op::ReferLocalPushConstant(1, Object::Number(1)),
        Op::NumberSub,
        Op::LocalJmp(2),
        Op::ReferLocal(1),
        Op::Push,
        Op::ReferFree(5),
        Op::Test(3),
        Op::Constant(Object::Number(1)),
        Op::LocalJmp(2),
        Op::Constant(Object::Number(0)),
        Op::Push,
        Op::ReferLocalPush(0),
        Op::Frame(8),
        Op::ReferFreePush(4),
        Op::ReferLocalPush(0),
        Op::ReferFree(3),
        Op::Append2,
        Op::PushConstant(Object::True),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("pass1/body->iform"), 3),
        Op::PushConstant(Object::Nil),
        Op::PushConstant(Object::Nil),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("$lambda")),
        Op::TailCall(8, 15),
        Op::Leave(2),
        Op::Leave(2),
        Op::Leave(2),
        Op::Return(3),
        Op::ConstantPush(sym668),
        Op::ConstantPush(str140),
        Op::ReferLocalPush(1),
        Op::ReferGlobal(vm.gc.intern("error")),
        Op::TailCall(3, 3),
        Op::Return(3),
        Op::DefineGlobal(vm.gc.intern("pass1/lambda->iform")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 3, is_optional_arg: false, num_free_vars: 0},
        Op::LetFrame(1),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::Display(3),
        Op::Undef,
        Op::Push,
        Op::Box(0),
        Op::Enter(1),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 3},
        Op::ReferLocalBranchNotNull(0, 5),
        Op::ConstantPush(Object::True),
        Op::ReferGlobal(vm.gc.intern("$const")),
        Op::TailCall(1, 1),
        Op::Return(1),
        Op::ReferLocal(0),
        Op::PairP,
        Op::Test(50),
        Op::ReferLocal(0),
        Op::Cdr,
        Op::BranchNotNull(18),
        Op::LetFrame(5),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::Display(2),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::Enter(1),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("pass1/expand"), 1),
        Op::Push,
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("pass1/sexp->iform")),
        Op::TailCall(3, 4),
        Op::Leave(1),
        Op::Return(1),
        Op::LetFrame(10),
        Op::ReferFreePush(2),
        Op::ReferFreePush(0),
        Op::Display(2),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::ReferLocal(0),
        Op::CdrPush,
        Op::Enter(2),
        Op::Frame(8),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("pass1/expand"), 1),
        Op::Push,
        Op::ReferFreePush(1),
        Op::ConstantPush(Object::False),
        Op::ReferGlobalCall(vm.gc.intern("pass1/sexp->iform"), 3),
        Op::PushFrame(5),
        Op::ReferLocalPush(1),
        Op::ReferFree(0),
        Op::Indirect,
        Op::LocalCall(1),
        Op::PushFrame(2),
        Op::ReferGlobalCall(vm.gc.intern("$it"), 0),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("$if")),
        Op::TailCall(3, 5),
        Op::Leave(2),
        Op::Return(1),
        Op::ConstantPush(sym668),
        Op::ConstantPush(str141),
        Op::ReferLocalPush(0),
        Op::ReferGlobal(vm.gc.intern("error")),
        Op::TailCall(3, 1),
        Op::Return(1),
        Op::AssignLocal(0),
        Op::ReferFreePush(2),
        Op::ReferLocal(0),
        Op::Indirect,
        Op::LocalTailCall(1, 6),
        Op::Leave(1),
        Op::Return(3),
        Op::DefineGlobal(vm.gc.intern("pass1/and->iform")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 3, is_optional_arg: false, num_free_vars: 0},
        Op::LetFrame(1),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::Display(3),
        Op::Undef,
        Op::Push,
        Op::Box(0),
        Op::Enter(1),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 3},
        Op::ReferLocalBranchNotNull(0, 5),
        Op::ConstantPush(Object::False),
        Op::ReferGlobal(vm.gc.intern("$const")),
        Op::TailCall(1, 1),
        Op::Return(1),
        Op::ReferLocal(0),
        Op::PairP,
        Op::Test(51),
        Op::ReferLocal(0),
        Op::Cdr,
        Op::BranchNotNull(18),
        Op::LetFrame(5),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::Display(2),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::Enter(1),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("pass1/expand"), 1),
        Op::Push,
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("pass1/sexp->iform")),
        Op::TailCall(3, 4),
        Op::Leave(1),
        Op::Return(1),
        Op::LetFrame(10),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Display(3),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::ReferLocal(0),
        Op::CdrPush,
        Op::Enter(2),
        Op::Frame(8),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("pass1/expand"), 1),
        Op::Push,
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferGlobalCall(vm.gc.intern("pass1/sexp->iform"), 3),
        Op::PushFrame(2),
        Op::ReferGlobalCall(vm.gc.intern("$it"), 0),
        Op::PushFrame(5),
        Op::ReferLocalPush(1),
        Op::ReferFree(0),
        Op::Indirect,
        Op::LocalCall(1),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("$if")),
        Op::TailCall(3, 5),
        Op::Leave(2),
        Op::Return(1),
        Op::ConstantPush(sym668),
        Op::ConstantPush(str142),
        Op::ReferLocalPush(0),
        Op::ReferGlobal(vm.gc.intern("error")),
        Op::TailCall(3, 1),
        Op::Return(1),
        Op::AssignLocal(0),
        Op::ReferFreePush(2),
        Op::ReferLocal(0),
        Op::Indirect,
        Op::LocalTailCall(1, 6),
        Op::Leave(1),
        Op::Return(3),
        Op::DefineGlobal(vm.gc.intern("pass1/or->iform")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(89),
        Op::ReferFreePush(196),
        Op::ReferFreePush(88),
        Op::ReferFreePush(66),
        Op::ReferFreePush(80),
        Op::ReferFreePush(81),
        Op::ReferFreePush(67),
        Op::Closure {size: 0, arg_len: 3, is_optional_arg: false, num_free_vars: 7},
        Op::LetFrame(11),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(4),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Display(12),
        Op::Undef,
        Op::Push,
        Op::Box(0),
        Op::Enter(1),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 11},
        Op::LetFrame(55),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(4),
        Op::ReferFreePush(5),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(10),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(5),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::Display(21),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Closure {size: 0, arg_len: 3, is_optional_arg: false, num_free_vars: 3},
        Op::Frame(5),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(2),
        Op::ConstantPush(Object::False),
        Op::ReferGlobalCall(vm.gc.intern("pass1/sexp->iform"), 3),
        Op::PushFrame(5),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferGlobalCall(vm.gc.intern("pass1/body->iform"), 3),
        Op::PushFrame(5),
        Op::ReferLocalPush(2),
        Op::ReferFree(0),
        Op::Indirect,
        Op::LocalCall(1),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("$if")),
        Op::TailCall(3, 3),
        Op::Return(3),
        Op::Push,
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 3},
        Op::Frame(8),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("pass1/expand"), 1),
        Op::Push,
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferGlobalCall(vm.gc.intern("pass1/sexp->iform"), 3),
        Op::PushFrame(2),
        Op::ReferGlobalCall(vm.gc.intern("$it"), 0),
        Op::PushFrame(5),
        Op::ReferLocalPush(1),
        Op::ReferFree(0),
        Op::Indirect,
        Op::LocalCall(1),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("$if")),
        Op::TailCall(3, 2),
        Op::Return(2),
        Op::Push,
        Op::ReferFreePush(2),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(6),
        Op::Closure {size: 0, arg_len: 3, is_optional_arg: false, num_free_vars: 6},
        Op::LetFrame(35),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(5),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(5),
        Op::Display(9),
        Op::Frame(8),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("pass1/expand"), 1),
        Op::Push,
        Op::ReferFreePush(0),
        Op::ConstantPush(Object::False),
        Op::ReferGlobalCall(vm.gc.intern("pass1/sexp->iform"), 3),
        Op::PushFrame(6),
        Op::ConstantPush(sym792),
        Op::ConstantPush(Object::Nil),
        Op::ConstantPush(Object::Number(0)),
        Op::ConstantPush(Object::Number(0)),
        Op::ReferGlobalCall(vm.gc.intern("$lvar"), 4),
        Op::PushEnter(2),
        Op::ReferLocalPushConstant(1, Object::Number(2)),
        Op::Push,
        Op::ReferLocal(0),
        Op::VectorSet,
        Op::ConstantPush(sym770),
        Op::Frame(3),
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(8, 1),
        Op::PushFrame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(8, 1),
        Op::PushFrame(30),
        Op::Frame(3),
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(7, 1),
        Op::PushFrame(19),
        Op::Frame(8),
        Op::Frame(3),
        Op::ReferFreePush(6),
        Op::ReferGlobalCall(vm.gc.intern("pass1/expand"), 1),
        Op::Push,
        Op::ReferFreePush(0),
        Op::ReferFreePush(4),
        Op::ReferGlobalCall(vm.gc.intern("pass1/sexp->iform"), 3),
        Op::PushFrame(6),
        Op::Frame(3),
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(7, 1),
        Op::Push,
        Op::ReferFreeCall(8, 1),
        Op::Push,
        Op::ReferFreePush(4),
        Op::ConstantPush(Object::False),
        Op::ReferGlobalCall(vm.gc.intern("$call"), 4),
        Op::PushFrame(5),
        Op::ReferFreePush(3),
        Op::ReferFree(2),
        Op::Indirect,
        Op::LocalCall(1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("$if"), 3),
        Op::Push,
        Op::ReferFreePush(4),
        Op::ReferFreePush(1),
        Op::ReferGlobal(vm.gc.intern("$let")),
        Op::TailCall(6, 7),
        Op::Leave(2),
        Op::Return(3),
        Op::PushEnter(3),
        Op::ReferFree(20),
        Op::BranchNotNull(4),
        Op::ReferGlobal(vm.gc.intern("$undef")),
        Op::TailCall(0, 6),
        Op::LocalJmp(219),
        Op::ReferFree(20),
        Op::PairP,
        Op::Test(206),
        Op::ReferFree(20),
        Op::Car,
        Op::PairP,
        Op::Test(202),
        Op::LetFrame(2),
        Op::ReferFreePush(20),
        Op::Display(1),
        Op::ReferFree(0),
        Op::Caar,
        Op::PushEnter(1),
        Op::ReferLocalPushConstant(0, sym787),
        Op::Eq,
        Op::Leave(1),
        Op::Test(94),
        Op::Frame(5),
        Op::ReferFree(20),
        Op::Cdar,
        Op::Push,
        Op::ReferFreeCall(19, 1),
        Op::Test(29),
        Op::LetFrame(8),
        Op::ReferFreePush(6),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(20),
        Op::ReferFreePush(20),
        Op::Display(5),
        Op::ReferFree(0),
        Op::Cdar,
        Op::Push,
        Op::ReferFree(0),
        Op::CdrPush,
        Op::Enter(2),
        Op::ReferLocalBranchNotNull(1, 3),
        Op::Undef,
        Op::LocalJmp(6),
        Op::Frame(5),
        Op::ConstantPush(sym668),
        Op::ConstantPush(str143),
        Op::ReferFreePush(4),
        Op::ReferGlobalCall(vm.gc.intern("error"), 3),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferGlobal(vm.gc.intern("pass1/body->iform")),
        Op::TailCall(3, 10),
        Op::Leave(2),
        Op::LocalJmp(168),
        Op::ReferFree(20),
        Op::Cdar,
        Op::PairP,
        Op::Test(45),
        Op::LetFrame(3),
        Op::ReferFreePush(20),
        Op::ReferFreePush(15),
        Op::Display(2),
        Op::Frame(3),
        Op::ReferFreePush(1),
        Op::ReferFreeCall(0, 1),
        Op::PushEnter(1),
        Op::ReferLocalPushConstant(0, sym793),
        Op::Eq,
        Op::Leave(1),
        Op::Test(22),
        Op::Frame(3),
        Op::ReferFreePush(20),
        Op::ReferFreeCall(14, 1),
        Op::PairP,
        Op::Test(17),
        Op::Frame(3),
        Op::ReferFreePush(20),
        Op::ReferFreeCall(13, 1),
        Op::NullP,
        Op::Test(12),
        Op::ReferFree(20),
        Op::Caar,
        Op::PushFrame(3),
        Op::ReferFreePush(20),
        Op::ReferFreeCall(12, 1),
        Op::Push,
        Op::ReferFree(20),
        Op::CdrPush,
        Op::ReferLocal(2),
        Op::LocalTailCall(3, 6),
        Op::LocalJmp(131),
        Op::ReferFree(20),
        Op::Caar,
        Op::Push,
        Op::ReferFree(20),
        Op::Cdar,
        Op::Push,
        Op::ReferFree(20),
        Op::CdrPush,
        Op::ReferLocal(0),
        Op::LocalTailCall(3, 6),
        Op::LocalJmp(120),
        Op::LetFrame(3),
        Op::ReferFreePush(6),
        Op::Display(1),
        Op::Enter(0),
        Op::ConstantPush(sym668),
        Op::ConstantPush(str144),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("error")),
        Op::TailCall(3, 8),
        Op::Leave(0),
        Op::LocalJmp(109),
        Op::ReferFree(20),
        Op::Cdar,
        Op::PairP,
        Op::Test(56),
        Op::LetFrame(3),
        Op::ReferFreePush(20),
        Op::ReferFreePush(15),
        Op::Display(2),
        Op::Frame(3),
        Op::ReferFreePush(1),
        Op::ReferFreeCall(0, 1),
        Op::PushEnter(1),
        Op::ReferLocalPushConstant(0, sym793),
        Op::Eq,
        Op::Leave(1),
        Op::Test(22),
        Op::Frame(3),
        Op::ReferFreePush(20),
        Op::ReferFreeCall(14, 1),
        Op::PairP,
        Op::Test(17),
        Op::Frame(3),
        Op::ReferFreePush(20),
        Op::ReferFreeCall(13, 1),
        Op::NullP,
        Op::Test(12),
        Op::ReferFree(20),
        Op::Caar,
        Op::PushFrame(3),
        Op::ReferFreePush(20),
        Op::ReferFreeCall(12, 1),
        Op::Push,
        Op::ReferFree(20),
        Op::CdrPush,
        Op::ReferLocal(2),
        Op::LocalTailCall(3, 6),
        Op::LocalJmp(72),
        Op::ReferFree(20),
        Op::Cdar,
        Op::BranchNotNull(9),
        Op::ReferFree(20),
        Op::Caar,
        Op::Push,
        Op::ReferFree(20),
        Op::CdrPush,
        Op::ReferLocal(1),
        Op::LocalTailCall(2, 6),
        Op::LocalJmp(61),
        Op::ReferFree(20),
        Op::Caar,
        Op::Push,
        Op::ReferFree(20),
        Op::Cdar,
        Op::Push,
        Op::ReferFree(20),
        Op::CdrPush,
        Op::ReferLocal(0),
        Op::LocalTailCall(3, 6),
        Op::LocalJmp(50),
        Op::ReferFree(20),
        Op::Cdar,
        Op::BranchNotNull(9),
        Op::ReferFree(20),
        Op::Caar,
        Op::Push,
        Op::ReferFree(20),
        Op::CdrPush,
        Op::ReferLocal(1),
        Op::LocalTailCall(2, 6),
        Op::LocalJmp(39),
        Op::Frame(5),
        Op::ReferFree(20),
        Op::Cdar,
        Op::Push,
        Op::ReferFreeCall(19, 1),
        Op::Test(12),
        Op::ReferFree(20),
        Op::Caar,
        Op::Push,
        Op::ReferFree(20),
        Op::Cdar,
        Op::Push,
        Op::ReferFree(20),
        Op::CdrPush,
        Op::ReferLocal(0),
        Op::LocalTailCall(3, 6),
        Op::LocalJmp(22),
        Op::LetFrame(3),
        Op::ReferFreePush(6),
        Op::Display(1),
        Op::Enter(0),
        Op::ConstantPush(sym668),
        Op::ConstantPush(str145),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("error")),
        Op::TailCall(3, 8),
        Op::Leave(0),
        Op::LocalJmp(11),
        Op::LetFrame(3),
        Op::ReferFreePush(6),
        Op::Display(1),
        Op::Enter(0),
        Op::ConstantPush(sym668),
        Op::ConstantPush(str146),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("error")),
        Op::TailCall(3, 8),
        Op::Leave(0),
        Op::Leave(3),
        Op::Return(1),
        Op::AssignLocal(0),
        Op::ReferFree(5),
        Op::PairP,
        Op::Test(39),
        Op::ReferFree(5),
        Op::Cdr,
        Op::BranchNotNull(6),
        Op::ConstantPush(str147),
        Op::ReferFreePush(5),
        Op::ReferGlobal(vm.gc.intern("error")),
        Op::TailCall(2, 6),
        Op::LocalJmp(42),
        Op::Frame(4),
        Op::ReferFree(5),
        Op::CdrPush,
        Op::ReferFreeCall(4, 1),
        Op::Test(14),
        Op::LetFrame(2),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(5),
        Op::Display(2),
        Op::ReferFree(0),
        Op::CdrPush,
        Op::Enter(1),
        Op::ReferLocalPush(0),
        Op::ReferFree(1),
        Op::Indirect,
        Op::LocalTailCall(1, 9),
        Op::Leave(1),
        Op::LocalJmp(24),
        Op::LetFrame(3),
        Op::ReferFreePush(5),
        Op::ReferFreePush(5),
        Op::Display(2),
        Op::ReferFreePush(0),
        Op::Enter(1),
        Op::ConstantPush(str148),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("error")),
        Op::TailCall(2, 9),
        Op::Leave(1),
        Op::LocalJmp(12),
        Op::LetFrame(3),
        Op::ReferFreePush(5),
        Op::ReferFreePush(5),
        Op::Display(2),
        Op::ReferFreePush(0),
        Op::Enter(1),
        Op::ConstantPush(str149),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("error")),
        Op::TailCall(2, 9),
        Op::Leave(1),
        Op::Leave(1),
        Op::Return(3),
        Op::DefineGlobal(vm.gc.intern("pass1/cond->iform")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Constant(Object::Nil),
        Op::DefineGlobal(vm.gc.intern("top-level-macros")),
        Op::ReferFreePush(153),
        Op::ReferFreePush(111),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 2},
        Op::LetFrame(7),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::Display(3),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::Enter(1),
        Op::LetFrame(6),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(2),
        Op::Display(3),
        Op::ReferLocal(0),
        Op::SymbolP,
        Op::Test(5),
        Op::Frame(4),
        Op::ReferLocalPush(0),
        Op::ReferGlobalPush(vm.gc.intern("top-level-macros")),
        Op::ReferFreeCall(0, 2),
        Op::PushEnter(1),
        Op::ReferLocal(0),
        Op::Test(11),
        Op::Frame(6),
        Op::ReferLocal(0),
        Op::CdrPush,
        Op::ReferFree(2),
        Op::CdrPush,
        Op::ReferFreeCall(1, 2),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("pass1/expand")),
        Op::TailCall(1, 7),
        Op::LocalJmp(6),
        Op::Constant(Object::True),
        Op::Test(3),
        Op::ReferFree(2),
        Op::LocalJmp(2),
        Op::Constant(Object::Nil),
        Op::Leave(1),
        Op::Leave(1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("pass1/macroexpand")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::ReferFreePush(153),
        Op::ReferFreePush(111),
        Op::ReferFreePush(26),
        Op::Closure {size: 0, arg_len: 4, is_optional_arg: false, num_free_vars: 3},
        Op::LetFrame(28),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(2),
        Op::ReferLocalPush(3),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::ReferFreePush(2),
        Op::Display(7),
        Op::ReferLocal(0),
        Op::SymbolP,
        Op::Test(5),
        Op::Frame(4),
        Op::ReferLocalPush(0),
        Op::ReferGlobalPush(vm.gc.intern("top-level-macros")),
        Op::ReferFreeCall(0, 2),
        Op::PushEnter(1),
        Op::ReferLocal(0),
        Op::Test(15),
        Op::Frame(8),
        Op::Frame(5),
        Op::ReferLocal(0),
        Op::CdrPush,
        Op::ReferFreePush(6),
        Op::ReferFreeCall(5, 2),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("pass1/expand"), 1),
        Op::Push,
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferGlobal(vm.gc.intern("pass1/sexp->iform")),
        Op::TailCall(3, 7),
        Op::LocalJmp(56),
        Op::Constant(Object::True),
        Op::Test(53),
        Op::Frame(8),
        Op::Frame(3),
        Op::ReferFreePush(2),
        Op::ReferGlobalCall(vm.gc.intern("pass1/expand"), 1),
        Op::Push,
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferGlobalCall(vm.gc.intern("pass1/sexp->iform"), 3),
        Op::Push,
        Op::LetFrame(11),
        Op::ReferFreePush(1),
        Op::ReferFreePush(4),
        Op::ReferFreePush(6),
        Op::Display(3),
        Op::ConstantPush(Object::Nil),
        Op::ReferFreePush(0),
        Op::Enter(2),
        Op::ReferLocalBranchNotNull(1, 5),
        Op::Frame(27),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(2, 1),
        Op::LocalJmp(24),
        Op::LetFrame(5),
        Op::ReferFreePush(1),
        Op::Display(1),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::Enter(1),
        Op::Frame(8),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("pass1/expand"), 1),
        Op::Push,
        Op::ReferFreePush(0),
        Op::ConstantPush(Object::False),
        Op::ReferGlobalCall(vm.gc.intern("pass1/sexp->iform"), 3),
        Op::Leave(1),
        Op::Push,
        Op::ReferLocal(0),
        Op::Cons,
        Op::Push,
        Op::ReferLocal(1),
        Op::CdrPush,
        Op::Shiftj(2, 2, 0),
        Op::LocalJmp(-27),
        Op::Leave(2),
        Op::Push,
        Op::ReferFreePush(3),
        Op::ConstantPush(Object::False),
        Op::ReferGlobal(vm.gc.intern("$call")),
        Op::TailCall(4, 7),
        Op::LocalJmp(2),
        Op::Constant(Object::Nil),
        Op::Leave(1),
        Op::Return(4),
        Op::DefineGlobal(vm.gc.intern("pass1/call")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(69),
        Op::ReferFreePush(61),
        Op::ReferFreePush(83),
        Op::ReferFreePush(75),
        Op::ReferFreePush(149),
        Op::ReferFreePush(168),
        Op::Closure {size: 0, arg_len: 3, is_optional_arg: false, num_free_vars: 6},
        Op::ReferLocal(0),
        Op::PairP,
        Op::Test(79),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::Constant(sym769),
        Op::BranchNotEqual(23),
        Op::ReferLocal(0),
        Op::Cdr,
        Op::PairP,
        Op::Test(71),
        Op::ReferLocal(0),
        Op::Cddr,
        Op::PairP,
        Op::Test(67),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(5, 1),
        Op::PairP,
        Op::Test(62),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(4, 1),
        Op::PushConstant(sym18),
        Op::BranchNotEqual(5),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(3, 1),
        Op::NullP,
        Op::Test(52),
        Op::LetFrame(15),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(5),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(2),
        Op::Display(6),
        Op::ReferLocal(0),
        Op::Cadr,
        Op::PushFrame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(0, 1),
        Op::PushEnter(2),
        Op::LetFrame(12),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::Display(6),
        Op::Frame(6),
        Op::ConstantPush(sym18),
        Op::ReferLocal(1),
        Op::Cons,
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("make-list-with-src-slot"), 1),
        Op::PushEnter(1),
        Op::Frame(10),
        Op::ReferLocalPush(0),
        Op::Frame(6),
        Op::Frame(3),
        Op::ReferFreePush(5),
        Op::ReferFreeCall(4, 1),
        Op::Push,
        Op::ReferFreeCall(3, 1),
        Op::Push,
        Op::ReferFreeCall(2, 2),
        Op::ReferFreePush(1),
        Op::Frame(5),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::ReferGlobalCall(vm.gc.intern("pass1/lambda->iform"), 3),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("$define")),
        Op::TailCall(2, 10),
        Op::Leave(1),
        Op::Leave(2),
        Op::Return(3),
        Op::ReferLocal(0),
        Op::Cadr,
        Op::PushFrame(11),
        Op::Frame(6),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(5, 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("pass1/expand"), 1),
        Op::Push,
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferGlobalCall(vm.gc.intern("pass1/sexp->iform"), 3),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("$define")),
        Op::TailCall(2, 3),
        Op::Return(3),
        Op::DefineGlobal(vm.gc.intern("pass1/define")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(69),
        Op::ReferFreePush(83),
        Op::ReferFreePush(26),
        Op::Closure {size: 0, arg_len: 3, is_optional_arg: false, num_free_vars: 3},
        Op::ReferLocal(0),
        Op::PairP,
        Op::Test(115),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::Constant(sym778),
        Op::BranchNotEqual(8),
        Op::ReferLocal(0),
        Op::Cdr,
        Op::PairP,
        Op::Test(107),
        Op::ReferLocal(0),
        Op::Cddr,
        Op::PairP,
        Op::Test(103),
        Op::LetFrame(33),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(2),
        Op::Display(5),
        Op::ReferLocal(0),
        Op::Cadr,
        Op::PushFrame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(0, 1),
        Op::PushFrame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(1, 1),
        Op::PushEnter(3),
        Op::LetFrame(28),
        Op::ReferFreePush(4),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(3),
        Op::ReferLocalPush(2),
        Op::ReferFreePush(2),
        Op::Display(6),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("parse-lambda-args"), 1),
        Op::Receive(3, 0),
        Op::Enter(3),
        Op::LetFrame(27),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(5),
        Op::ReferLocalPush(0),
        Op::Display(8),
        Op::LetFrame(11),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(0),
        Op::Display(2),
        Op::ConstantPush(Object::Nil),
        Op::ReferLocalPush(0),
        Op::Enter(2),
        Op::ReferLocalBranchNotNull(1, 5),
        Op::Frame(23),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(1, 1),
        Op::LocalJmp(20),
        Op::LetFrame(5),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::Enter(1),
        Op::Frame(6),
        Op::ReferLocalPushConstant(0, Object::False),
        Op::PushConstant(Object::Number(0)),
        Op::PushConstant(Object::Number(0)),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("$lvar"), 4),
        Op::Leave(1),
        Op::Push,
        Op::ReferLocal(0),
        Op::Cons,
        Op::Push,
        Op::ReferLocal(1),
        Op::CdrPush,
        Op::Shiftj(2, 2, 0),
        Op::LocalJmp(-23),
        Op::Leave(2),
        Op::PushEnter(1),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::Frame(8),
        Op::Frame(3),
        Op::ReferFreePush(5),
        Op::ReferGlobalCall(vm.gc.intern("pass1/expand"), 1),
        Op::Push,
        Op::ReferFreePush(4),
        Op::ConstantPush(Object::False),
        Op::ReferGlobalCall(vm.gc.intern("pass1/sexp->iform"), 3),
        Op::PushFrame(11),
        Op::Frame(3),
        Op::ReferFreePush(3),
        Op::ReferGlobalCall(vm.gc.intern("pass1/expand"), 1),
        Op::Push,
        Op::ReferLocalPush(0),
        Op::ReferFree(4),
        Op::Append2,
        Op::Push,
        Op::ReferFreePush(2),
        Op::ReferGlobalCall(vm.gc.intern("pass1/body->iform"), 3),
        Op::Push,
        Op::ReferFreePush(2),
        Op::ReferGlobal(vm.gc.intern("$receive")),
        Op::TailCall(6, 16),
        Op::Leave(1),
        Op::Leave(3),
        Op::Leave(3),
        Op::Return(3),
        Op::ConstantPush(str150),
        Op::ReferGlobal(vm.gc.intern("syntax-error")),
        Op::TailCall(1, 3),
        Op::Return(3),
        Op::DefineGlobal(vm.gc.intern("pass1/receive")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(26),
        Op::ReferFreePush(149),
        Op::Closure {size: 0, arg_len: 6, is_optional_arg: false, num_free_vars: 2},
        Op::LetFrame(27),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(2),
        Op::ReferLocalPush(4),
        Op::ReferLocalPush(5),
        Op::ReferLocalPush(3),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(4),
        Op::ReferLocalPush(1),
        Op::Display(8),
        Op::LetFrame(11),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(4),
        Op::ReferLocalPush(1),
        Op::Display(3),
        Op::ConstantPush(Object::Nil),
        Op::ReferLocalPush(1),
        Op::Enter(2),
        Op::ReferLocalBranchNotNull(1, 5),
        Op::Frame(27),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(2, 1),
        Op::LocalJmp(24),
        Op::LetFrame(5),
        Op::ReferFreePush(1),
        Op::Display(1),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::Enter(1),
        Op::Frame(8),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("pass1/expand"), 1),
        Op::Push,
        Op::ReferFreePush(0),
        Op::ConstantPush(Object::False),
        Op::ReferGlobalCall(vm.gc.intern("pass1/sexp->iform"), 3),
        Op::Leave(1),
        Op::Push,
        Op::ReferLocal(0),
        Op::Cons,
        Op::Push,
        Op::ReferLocal(1),
        Op::CdrPush,
        Op::Shiftj(2, 2, 0),
        Op::LocalJmp(-27),
        Op::Leave(2),
        Op::PushEnter(1),
        Op::LetFrame(15),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(6),
        Op::ReferFreePush(1),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(7),
        Op::Display(6),
        Op::Frame(13),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 0},
        Op::ReferLocalPush(0),
        Op::ReferLocalPushConstant(1, Object::Number(0)),
        Op::PushConstant(Object::Number(0)),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("$lvar")),
        Op::TailCall(4, 2),
        Op::Return(2),
        Op::Push,
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("map"), 3),
        Op::PushEnter(1),
        Op::ConstantPush(sym770),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(5),
        Op::Frame(11),
        Op::Frame(3),
        Op::ReferFreePush(4),
        Op::ReferGlobalCall(vm.gc.intern("pass1/expand"), 1),
        Op::Push,
        Op::ReferLocalPush(0),
        Op::ReferFree(3),
        Op::Append2,
        Op::Push,
        Op::ReferFreePush(2),
        Op::ReferGlobalCall(vm.gc.intern("pass1/body->iform"), 3),
        Op::Push,
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferGlobal(vm.gc.intern("$let")),
        Op::TailCall(6, 12),
        Op::Leave(1),
        Op::Leave(1),
        Op::Return(6),
        Op::DefineGlobal(vm.gc.intern("pass1/let")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(89),
        Op::Closure {size: 0, arg_len: 3, is_optional_arg: true, num_free_vars: 1},
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferFree(0),
        Op::TailCall(3, 3),
        Op::Return(3),
        Op::DefineGlobal(vm.gc.intern("make-compile-error")),
        Op::Nop,
        Op::ReferFreePush(26),
        Op::ReferFreePush(90),
        Op::ReferFreePush(149),
        Op::ReferFreePush(434),
        Op::Closure {size: 0, arg_len: 6, is_optional_arg: false, num_free_vars: 4},
        Op::LetFrame(48),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(3),
        Op::ReferLocalPush(4),
        Op::ReferLocalPush(5),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(2),
        Op::ReferLocalPush(3),
        Op::ReferFreePush(0),
        Op::ReferFreePush(3),
        Op::ReferLocalPush(0),
        Op::Display(10),
        Op::LetFrame(11),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(0),
        Op::Display(2),
        Op::ConstantPush(Object::Nil),
        Op::ReferLocalPush(0),
        Op::Enter(2),
        Op::ReferLocalBranchNotNull(1, 5),
        Op::Frame(25),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(1, 1),
        Op::LocalJmp(22),
        Op::LetFrame(5),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::Enter(1),
        Op::Frame(8),
        Op::ReferLocalPush(0),
        Op::Frame(2),
        Op::ReferGlobalCall(vm.gc.intern("$undef"), 0),
        Op::PushConstant(Object::Number(0)),
        Op::PushConstant(Object::Number(0)),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("$lvar"), 4),
        Op::Leave(1),
        Op::Push,
        Op::ReferLocal(0),
        Op::Cons,
        Op::Push,
        Op::ReferLocal(1),
        Op::CdrPush,
        Op::Shiftj(2, 2, 0),
        Op::LocalJmp(-25),
        Op::Leave(2),
        Op::PushEnter(1),
        Op::LetFrame(36),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(9),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::Display(12),
        Op::LetFrame(11),
        Op::ReferFreePush(3),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(4),
        Op::Display(5),
        Op::ConstantPush(Object::Nil),
        Op::ReferFreePush(0),
        Op::Enter(2),
        Op::ReferLocalBranchNotNull(1, 5),
        Op::Frame(29),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(4, 1),
        Op::LocalJmp(26),
        Op::LetFrame(5),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::Display(3),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::Enter(1),
        Op::Frame(8),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(2),
        Op::ReferFree(1),
        Op::Append2,
        Op::Push,
        Op::ReferFreePush(0),
        Op::ReferGlobalCall(vm.gc.intern("pass1/sexp->iform"), 3),
        Op::Leave(1),
        Op::Push,
        Op::ReferLocal(0),
        Op::Cons,
        Op::Push,
        Op::ReferLocal(1),
        Op::CdrPush,
        Op::Shiftj(2, 2, 0),
        Op::LocalJmp(-29),
        Op::Leave(2),
        Op::PushEnter(1),
        Op::Frame(42),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 0},
        Op::ReferGlobalPush(vm.gc.intern("$LAMBDA")),
        Op::ReferLocalPushConstant(1, Object::Number(0)),
        Op::VectorRef,
        Op::BranchNotEqv(27),
        Op::ReferLocalPushConstant(1, Object::Number(1)),
        Op::VectorRef,
        Op::Test(17),
        Op::ReferLocalPushConstant(1, Object::Number(1)),
        Op::VectorRef,
        Op::PairP,
        Op::Test(13),
        Op::ReferLocalPushConstant(1, Object::Number(1)),
        Op::VectorRef,
        Op::Cdr,
        Op::PairP,
        Op::Test(8),
        Op::ReferLocalPushConstant(1, Object::Number(1)),
        Op::VectorRef,
        Op::CdrPush,
        Op::ReferLocalPushConstant(0, Object::Number(1)),
        Op::VectorRef,
        Op::SetCar,
        Op::LocalJmp(2),
        Op::Undef,
        Op::ReferLocalPushConstant(1, Object::Number(2)),
        Op::Push,
        Op::ReferLocalPushConstant(0, Object::Number(1)),
        Op::VectorRef,
        Op::VectorSet,
        Op::LocalJmp(2),
        Op::Undef,
        Op::ReferLocalPushConstant(0, Object::Number(2)),
        Op::Push,
        Op::ReferLocal(1),
        Op::VectorSet,
        Op::Return(2),
        Op::Push,
        Op::ReferFreePush(2),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("for-each"), 3),
        Op::LetFrame(21),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(9),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(2),
        Op::ReferFreePush(10),
        Op::Display(9),
        Op::Frame(18),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 2},
        Op::ReferGlobalPush(vm.gc.intern("$LOCAL-REF")),
        Op::ReferLocalPushConstant(0, Object::Number(0)),
        Op::VectorRef,
        Op::BranchNotEqv(7),
        Op::ReferLocalPushConstant(0, Object::Number(1)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFreePush(1),
        Op::ReferFree(0),
        Op::TailCall(2, 1),
        Op::Return(1),
        Op::Push,
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("find"), 2),
        Op::PushEnter(1),
        Op::ConstantPush(sym794),
        Op::ReferFreePush(1),
        Op::ReferFreePush(7),
        Op::Frame(11),
        Op::Frame(3),
        Op::ReferFreePush(6),
        Op::ReferGlobalCall(vm.gc.intern("pass1/expand"), 1),
        Op::Push,
        Op::ReferFreePush(1),
        Op::ReferFree(5),
        Op::Append2,
        Op::Push,
        Op::ReferFreePush(4),
        Op::ReferGlobalCall(vm.gc.intern("pass1/body->iform"), 3),
        Op::Push,
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferLocal(0),
        Op::Test(13),
        Op::Frame(12),
        Op::ConstantPush(sym788),
        Op::ConstantPush(str151),
        Op::Frame(7),
        Op::ReferLocalPushConstant(0, Object::Number(1)),
        Op::VectorRef,
        Op::PushConstant(Object::Number(1)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFreeCall(2, 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("make-compile-error"), 3),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("$let")),
        Op::TailCall(7, 15),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Return(6),
        Op::DefineGlobal(vm.gc.intern("pass1/letrec")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(26),
        Op::ReferFreePush(90),
        Op::ReferFreePush(149),
        Op::ReferFreePush(434),
        Op::Closure {size: 0, arg_len: 6, is_optional_arg: false, num_free_vars: 4},
        Op::LetFrame(61),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(3),
        Op::ReferLocalPush(4),
        Op::ReferLocalPush(5),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(2),
        Op::ReferLocalPush(3),
        Op::ReferFreePush(0),
        Op::ReferFreePush(3),
        Op::ReferLocalPush(0),
        Op::Display(10),
        Op::LetFrame(11),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(0),
        Op::Display(2),
        Op::ConstantPush(Object::Nil),
        Op::ReferLocalPush(0),
        Op::Enter(2),
        Op::ReferLocalBranchNotNull(1, 5),
        Op::Frame(25),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(1, 1),
        Op::LocalJmp(22),
        Op::LetFrame(5),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::Enter(1),
        Op::Frame(8),
        Op::ReferLocalPush(0),
        Op::Frame(2),
        Op::ReferGlobalCall(vm.gc.intern("$undef"), 0),
        Op::PushConstant(Object::Number(0)),
        Op::PushConstant(Object::Number(0)),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("$lvar"), 4),
        Op::Leave(1),
        Op::Push,
        Op::ReferLocal(0),
        Op::Cons,
        Op::Push,
        Op::ReferLocal(1),
        Op::CdrPush,
        Op::Shiftj(2, 2, 0),
        Op::LocalJmp(-25),
        Op::Leave(2),
        Op::PushEnter(1),
        Op::LetFrame(49),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(5),
        Op::ReferFreePush(7),
        Op::ReferFreePush(4),
        Op::ReferFreePush(6),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(9),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::Display(12),
        Op::LetFrame(11),
        Op::ReferFreePush(3),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(4),
        Op::Display(5),
        Op::ConstantPush(Object::Nil),
        Op::ReferFreePush(0),
        Op::Enter(2),
        Op::ReferLocalBranchNotNull(1, 5),
        Op::Frame(29),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(4, 1),
        Op::LocalJmp(26),
        Op::LetFrame(5),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::Display(3),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::Enter(1),
        Op::Frame(8),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(2),
        Op::ReferFree(1),
        Op::Append2,
        Op::Push,
        Op::ReferFreePush(0),
        Op::ReferGlobalCall(vm.gc.intern("pass1/sexp->iform"), 3),
        Op::Leave(1),
        Op::Push,
        Op::ReferLocal(0),
        Op::Cons,
        Op::Push,
        Op::ReferLocal(1),
        Op::CdrPush,
        Op::Shiftj(2, 2, 0),
        Op::LocalJmp(-29),
        Op::Leave(2),
        Op::PushEnter(1),
        Op::Frame(42),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 0},
        Op::ReferGlobalPush(vm.gc.intern("$LAMBDA")),
        Op::ReferLocalPushConstant(1, Object::Number(0)),
        Op::VectorRef,
        Op::BranchNotEqv(27),
        Op::ReferLocalPushConstant(1, Object::Number(1)),
        Op::VectorRef,
        Op::Test(17),
        Op::ReferLocalPushConstant(1, Object::Number(1)),
        Op::VectorRef,
        Op::PairP,
        Op::Test(13),
        Op::ReferLocalPushConstant(1, Object::Number(1)),
        Op::VectorRef,
        Op::Cdr,
        Op::PairP,
        Op::Test(8),
        Op::ReferLocalPushConstant(1, Object::Number(1)),
        Op::VectorRef,
        Op::CdrPush,
        Op::ReferLocalPushConstant(0, Object::Number(1)),
        Op::VectorRef,
        Op::SetCar,
        Op::LocalJmp(2),
        Op::Undef,
        Op::ReferLocalPushConstant(1, Object::Number(2)),
        Op::Push,
        Op::ReferLocalPushConstant(0, Object::Number(1)),
        Op::VectorRef,
        Op::VectorSet,
        Op::LocalJmp(2),
        Op::Undef,
        Op::ReferLocalPushConstant(0, Object::Number(2)),
        Op::Push,
        Op::ReferLocal(1),
        Op::VectorSet,
        Op::Return(2),
        Op::Push,
        Op::ReferFreePush(2),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("for-each"), 3),
        Op::LetFrame(34),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(8),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(10),
        Op::ReferFreePush(1),
        Op::Display(11),
        Op::LetFrame(15),
        Op::ReferFreePush(3),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::Display(4),
        Op::ConstantPush(Object::Nil),
        Op::ReferFreePush(3),
        Op::ReferLocalPush(0),
        Op::Enter(3),
        Op::ReferLocalBranchNotNull(2, 3),
        Op::Constant(Object::False),
        Op::LocalJmp(40),
        Op::ReferGlobalPush(vm.gc.intern("$LOCAL-REF")),
        Op::ReferLocal(2),
        Op::CarPush,
        Op::Constant(Object::Number(0)),
        Op::VectorRef,
        Op::BranchNotEqv(19),
        Op::Frame(8),
        Op::ReferLocal(2),
        Op::CarPush,
        Op::Constant(Object::Number(1)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFreePush(3),
        Op::ReferFreeCall(2, 2),
        Op::Test(14),
        Op::Frame(8),
        Op::ReferLocal(2),
        Op::CarPush,
        Op::Constant(Object::Number(1)),
        Op::VectorRef,
        Op::Push,
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(2, 2),
        Op::Not,
        Op::Test(4),
        Op::ReferLocal(2),
        Op::Car,
        Op::LocalJmp(12),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::ReferLocal(0),
        Op::Cons,
        Op::Push,
        Op::ReferLocal(1),
        Op::CdrPush,
        Op::ReferLocal(2),
        Op::CdrPush,
        Op::Shiftj(3, 3, 0),
        Op::LocalJmp(-41),
        Op::Leave(3),
        Op::PushEnter(1),
        Op::ConstantPush(sym794),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::Frame(11),
        Op::Frame(3),
        Op::ReferFreePush(8),
        Op::ReferGlobalCall(vm.gc.intern("pass1/expand"), 1),
        Op::Push,
        Op::ReferFreePush(3),
        Op::ReferFree(0),
        Op::Append2,
        Op::Push,
        Op::ReferFreePush(6),
        Op::ReferGlobalCall(vm.gc.intern("pass1/body->iform"), 3),
        Op::Push,
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferLocal(0),
        Op::Test(13),
        Op::Frame(12),
        Op::ConstantPush(sym771),
        Op::ConstantPush(str152),
        Op::Frame(7),
        Op::ReferLocalPushConstant(0, Object::Number(1)),
        Op::VectorRef,
        Op::PushConstant(Object::Number(1)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFreeCall(4, 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("make-compile-error"), 3),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("$let")),
        Op::TailCall(7, 15),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Return(6),
        Op::DefineGlobal(vm.gc.intern("pass1/letrec*")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 5, is_optional_arg: false, num_free_vars: 0},
        Op::Frame(8),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("pass1/expand"), 1),
        Op::Push,
        Op::ReferLocalPushConstant(3, Object::False),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("pass1/sexp->iform"), 3),
        Op::PushFrame(8),
        Op::Frame(3),
        Op::ReferLocalPush(1),
        Op::ReferGlobalCall(vm.gc.intern("pass1/expand"), 1),
        Op::Push,
        Op::ReferLocalPush(3),
        Op::ReferLocalPush(4),
        Op::ReferGlobalCall(vm.gc.intern("pass1/sexp->iform"), 3),
        Op::Push,
        Op::ReferLocalBranchNotNull(2, 4),
        Op::Frame(12),
        Op::ReferGlobalCall(vm.gc.intern("$undef"), 0),
        Op::LocalJmp(10),
        Op::Frame(9),
        Op::Frame(4),
        Op::ReferLocal(2),
        Op::CarPush,
        Op::ReferGlobalCall(vm.gc.intern("pass1/expand"), 1),
        Op::Push,
        Op::ReferLocalPush(3),
        Op::ReferLocalPush(4),
        Op::ReferGlobalCall(vm.gc.intern("pass1/sexp->iform"), 3),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("$if")),
        Op::TailCall(3, 5),
        Op::Return(5),
        Op::DefineGlobal(vm.gc.intern("pass1/if")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(62),
        Op::ReferFreePush(76),
        Op::ReferFreePush(69),
        Op::Closure {size: 0, arg_len: 3, is_optional_arg: false, num_free_vars: 3},
        Op::ReferLocal(0),
        Op::Cadr,
        Op::PairP,
        Op::Test(24),
        Op::Frame(21),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(2, 1),
        Op::PushFrame(14),
        Op::ConstantPush(sym18),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(1, 1),
        Op::PushFrame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(0, 1),
        Op::PushConstant(Object::Nil),
        Op::Cons,
        Op::Cons,
        Op::Cons,
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("compile-partial"), 1),
        Op::Push,
        Op::ReferGlobalPush(vm.gc.intern("top-level-macros")),
        Op::ReferGlobalCall(vm.gc.intern("alist-cons"), 3),
        Op::AssignGlobal(vm.gc.intern("top-level-macros")),
        Op::LocalJmp(14),
        Op::Frame(12),
        Op::ReferLocal(0),
        Op::Cadr,
        Op::PushFrame(6),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(0, 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("compile-partial"), 1),
        Op::Push,
        Op::ReferGlobalPush(vm.gc.intern("top-level-macros")),
        Op::ReferGlobalCall(vm.gc.intern("alist-cons"), 3),
        Op::AssignGlobal(vm.gc.intern("top-level-macros")),
        Op::ReferGlobal(vm.gc.intern("$undef")),
        Op::TailCall(0, 3),
        Op::Return(3),
        Op::DefineGlobal(vm.gc.intern("pass1/define-macro")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(191),
        Op::ReferFreePush(89),
        Op::Closure {size: 0, arg_len: 4, is_optional_arg: false, num_free_vars: 2},
        Op::LetFrame(25),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(2),
        Op::ReferLocalPush(3),
        Op::ReferFreePush(0),
        Op::ReferFreePush(1),
        Op::Display(6),
        Op::Frame(3),
        Op::ReferLocalPush(2),
        Op::ReferFreeCall(0, 1),
        Op::PushEnter(1),
        Op::ConstantPush(Object::Number(2)),
        Op::ReferLocal(0),
        Op::BranchNotGt(6),
        Op::ReferFreePush(5),
        Op::ConstantPush(str153),
        Op::ReferGlobal(vm.gc.intern("error")),
        Op::TailCall(2, 7),
        Op::LocalJmp(46),
        Op::ConstantPush(Object::Number(2)),
        Op::ReferLocal(0),
        Op::BranchNotNumberEqual(28),
        Op::ReferFreePush(4),
        Op::Frame(22),
        Op::Frame(9),
        Op::Frame(4),
        Op::ReferFree(3),
        Op::CarPush,
        Op::ReferGlobalCall(vm.gc.intern("pass1/expand"), 1),
        Op::Push,
        Op::ReferFreePush(2),
        Op::ConstantPush(Object::False),
        Op::ReferGlobalCall(vm.gc.intern("pass1/sexp->iform"), 3),
        Op::PushFrame(10),
        Op::Frame(5),
        Op::ReferFree(3),
        Op::Cadr,
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("pass1/expand"), 1),
        Op::Push,
        Op::ReferFreePush(2),
        Op::ConstantPush(Object::False),
        Op::ReferGlobalCall(vm.gc.intern("pass1/sexp->iform"), 3),
        Op::Push,
        Op::ReferFreeCall(1, 2),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("$asm")),
        Op::TailCall(2, 7),
        Op::LocalJmp(16),
        Op::Frame(10),
        Op::Frame(7),
        Op::Frame(4),
        Op::ReferFreePush(5),
        Op::ReferFreePush(3),
        Op::ReferGlobalCall(vm.gc.intern("apply-each-pair"), 2),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("conditions->if"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("pass1/expand"), 1),
        Op::Push,
        Op::ReferFreePush(2),
        Op::ConstantPush(Object::False),
        Op::ReferGlobal(vm.gc.intern("pass1/sexp->iform")),
        Op::TailCall(3, 7),
        Op::Leave(1),
        Op::Return(4),
        Op::DefineGlobal(vm.gc.intern("pass1/asm-numcmp")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(89),
        Op::Closure {size: 0, arg_len: 3, is_optional_arg: false, num_free_vars: 1},
        Op::ReferLocalPush(0),
        Op::Frame(11),
        Op::Frame(8),
        Op::Frame(3),
        Op::ReferLocalPush(1),
        Op::ReferGlobalCall(vm.gc.intern("pass1/expand"), 1),
        Op::Push,
        Op::ReferLocalPushConstant(2, Object::False),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("pass1/sexp->iform"), 3),
        Op::Push,
        Op::ReferFreeCall(0, 1),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("$asm")),
        Op::TailCall(2, 3),
        Op::Return(3),
        Op::DefineGlobal(vm.gc.intern("pass1/asm-1-arg")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(89),
        Op::Closure {size: 0, arg_len: 4, is_optional_arg: false, num_free_vars: 1},
        Op::ReferLocalPush(0),
        Op::Frame(19),
        Op::Frame(8),
        Op::Frame(3),
        Op::ReferLocalPush(1),
        Op::ReferGlobalCall(vm.gc.intern("pass1/expand"), 1),
        Op::Push,
        Op::ReferLocalPushConstant(3, Object::False),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("pass1/sexp->iform"), 3),
        Op::PushFrame(8),
        Op::Frame(3),
        Op::ReferLocalPush(2),
        Op::ReferGlobalCall(vm.gc.intern("pass1/expand"), 1),
        Op::Push,
        Op::ReferLocalPushConstant(3, Object::False),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("pass1/sexp->iform"), 3),
        Op::Push,
        Op::ReferFreeCall(0, 2),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("$asm")),
        Op::TailCall(2, 4),
        Op::Return(4),
        Op::DefineGlobal(vm.gc.intern("pass1/asm-2-arg")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(89),
        Op::Closure {size: 0, arg_len: 5, is_optional_arg: false, num_free_vars: 1},
        Op::ReferLocalPush(0),
        Op::Frame(27),
        Op::Frame(8),
        Op::Frame(3),
        Op::ReferLocalPush(1),
        Op::ReferGlobalCall(vm.gc.intern("pass1/expand"), 1),
        Op::Push,
        Op::ReferLocalPushConstant(4, Object::False),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("pass1/sexp->iform"), 3),
        Op::PushFrame(8),
        Op::Frame(3),
        Op::ReferLocalPush(2),
        Op::ReferGlobalCall(vm.gc.intern("pass1/expand"), 1),
        Op::Push,
        Op::ReferLocalPushConstant(4, Object::False),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("pass1/sexp->iform"), 3),
        Op::PushFrame(8),
        Op::Frame(3),
        Op::ReferLocalPush(3),
        Op::ReferGlobalCall(vm.gc.intern("pass1/expand"), 1),
        Op::Push,
        Op::ReferLocalPushConstant(4, Object::False),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("pass1/sexp->iform"), 3),
        Op::Push,
        Op::ReferFreeCall(0, 3),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("$asm")),
        Op::TailCall(2, 5),
        Op::Return(5),
        Op::DefineGlobal(vm.gc.intern("pass1/asm-3-arg")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(89),
        Op::Closure {size: 0, arg_len: 3, is_optional_arg: false, num_free_vars: 1},
        Op::LetFrame(8),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(2),
        Op::ReferFreePush(0),
        Op::Display(3),
        Op::ReferLocalBranchNotNull(1, 3),
        Op::Constant(Object::Nil),
        Op::LocalJmp(3),
        Op::ReferLocal(1),
        Op::Car,
        Op::PushEnter(1),
        Op::ReferFreePush(2),
        Op::Frame(11),
        Op::Frame(8),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("pass1/expand"), 1),
        Op::Push,
        Op::ReferFreePush(1),
        Op::ConstantPush(Object::False),
        Op::ReferGlobalCall(vm.gc.intern("pass1/sexp->iform"), 3),
        Op::Push,
        Op::ReferFreeCall(0, 1),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("$asm")),
        Op::TailCall(2, 6),
        Op::Leave(1),
        Op::Return(3),
        Op::DefineGlobal(vm.gc.intern("pass1/asm-1-arg-optional")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(89),
        Op::Closure {size: 0, arg_len: 4, is_optional_arg: false, num_free_vars: 1},
        Op::LetFrame(13),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(3),
        Op::ReferFreePush(0),
        Op::Display(4),
        Op::ReferLocalBranchNotNull(2, 3),
        Op::Constant(Object::Nil),
        Op::LocalJmp(3),
        Op::ReferLocal(2),
        Op::Car,
        Op::PushEnter(1),
        Op::ReferFreePush(3),
        Op::Frame(19),
        Op::Frame(8),
        Op::Frame(3),
        Op::ReferFreePush(2),
        Op::ReferGlobalCall(vm.gc.intern("pass1/expand"), 1),
        Op::Push,
        Op::ReferFreePush(1),
        Op::ConstantPush(Object::False),
        Op::ReferGlobalCall(vm.gc.intern("pass1/sexp->iform"), 3),
        Op::PushFrame(8),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("pass1/expand"), 1),
        Op::Push,
        Op::ReferFreePush(1),
        Op::ConstantPush(Object::False),
        Op::ReferGlobalCall(vm.gc.intern("pass1/sexp->iform"), 3),
        Op::Push,
        Op::ReferFreeCall(0, 2),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("$asm")),
        Op::TailCall(2, 7),
        Op::Leave(1),
        Op::Return(4),
        Op::DefineGlobal(vm.gc.intern("pass1/asm-2-arg-optional")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(191),
        Op::ReferFreePush(26),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 2},
        Op::LetFrame(17),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Display(3),
        Op::ReferLocal(0),
        Op::CdrPush,
        Op::Enter(1),
        Op::LetFrame(16),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::Display(5),
        Op::Frame(4),
        Op::ReferFree(1),
        Op::CdrPush,
        Op::ReferFreeCall(0, 1),
        Op::PushEnter(1),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("zero?"), 1),
        Op::Test(3),
        Op::ReferFree(1),
        Op::LocalJmp(44),
        Op::ConstantPush(Object::Number(1)),
        Op::ReferLocal(0),
        Op::BranchNotNumberEqual(10),
        Op::ConstantPush(sym268),
        Op::ConstantPush(Object::Number(-1)),
        Op::ReferFree(3),
        Op::Car,
        Op::NumberMul,
        Op::PushConstant(Object::Nil),
        Op::Cons,
        Op::Cons,
        Op::LocalJmp(32),
        Op::ConstantPush(sym268),
        Op::ReferFree(3),
        Op::CarPush,
        Op::LetFrame(7),
        Op::ReferFreePush(2),
        Op::ReferFreePush(3),
        Op::Display(2),
        Op::ConstantPush(Object::Nil),
        Op::ReferFree(0),
        Op::CdrPush,
        Op::Enter(2),
        Op::ReferLocalBranchNotNull(1, 5),
        Op::Frame(16),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(1, 1),
        Op::LocalJmp(13),
        Op::ConstantPush(Object::Number(-1)),
        Op::ReferLocal(1),
        Op::Car,
        Op::NumberMul,
        Op::Push,
        Op::ReferLocal(0),
        Op::Cons,
        Op::Push,
        Op::ReferLocal(1),
        Op::CdrPush,
        Op::Shiftj(2, 2, 0),
        Op::LocalJmp(-16),
        Op::Leave(2),
        Op::Cons,
        Op::Cons,
        Op::Leave(1),
        Op::Leave(1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("sub->add")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(191),
        Op::ReferFreePush(89),
        Op::ReferFreePush(26),
        Op::Closure {size: 0, arg_len: 4, is_optional_arg: false, num_free_vars: 3},
        Op::LetFrame(69),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(3),
        Op::ReferLocalPush(2),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(2),
        Op::Display(7),
        Op::Frame(3),
        Op::ReferLocalPush(2),
        Op::ReferFreeCall(0, 1),
        Op::PushEnter(1),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("zero?"), 1),
        Op::Test(42),
        Op::ConstantPush(sym268),
        Op::ReferFree(6),
        Op::BranchNotEqv(10),
        Op::Frame(3),
        Op::ConstantPush(Object::Number(0)),
        Op::ReferGlobalCall(vm.gc.intern("pass1/expand"), 1),
        Op::Push,
        Op::ReferFreePush(5),
        Op::ConstantPush(Object::False),
        Op::ReferGlobal(vm.gc.intern("pass1/sexp->iform")),
        Op::TailCall(3, 7),
        Op::LocalJmp(178),
        Op::ConstantPush(sym270),
        Op::ReferFree(6),
        Op::BranchNotEqv(10),
        Op::Frame(3),
        Op::ConstantPush(Object::Number(1)),
        Op::ReferGlobalCall(vm.gc.intern("pass1/expand"), 1),
        Op::Push,
        Op::ReferFreePush(5),
        Op::ConstantPush(Object::False),
        Op::ReferGlobal(vm.gc.intern("pass1/sexp->iform")),
        Op::TailCall(3, 7),
        Op::LocalJmp(166),
        Op::ConstantPush(sym226),
        Op::ReferFree(6),
        Op::BranchNotEqv(10),
        Op::Frame(3),
        Op::ConstantPush(Object::Nil),
        Op::ReferGlobalCall(vm.gc.intern("pass1/expand"), 1),
        Op::Push,
        Op::ReferFreePush(5),
        Op::ConstantPush(Object::False),
        Op::ReferGlobal(vm.gc.intern("pass1/sexp->iform")),
        Op::TailCall(3, 7),
        Op::LocalJmp(154),
        Op::ReferFreePush(6),
        Op::ConstantPush(str154),
        Op::ReferGlobal(vm.gc.intern("error")),
        Op::TailCall(2, 7),
        Op::LocalJmp(149),
        Op::ConstantPush(Object::Number(1)),
        Op::ReferLocal(0),
        Op::BranchNotNumberEqual(51),
        Op::ConstantPush(sym269),
        Op::ReferFree(6),
        Op::BranchNotEqv(18),
        Op::Frame(11),
        Op::ConstantPush(sym270),
        Op::ConstantPush(Object::Number(-1)),
        Op::ReferFree(4),
        Op::CarPush,
        Op::Constant(Object::Nil),
        Op::Cons,
        Op::Cons,
        Op::Cons,
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("pass1/expand"), 1),
        Op::Push,
        Op::ReferFreePush(5),
        Op::ConstantPush(Object::False),
        Op::ReferGlobal(vm.gc.intern("pass1/sexp->iform")),
        Op::TailCall(3, 7),
        Op::LocalJmp(126),
        Op::ConstantPush(sym271),
        Op::ReferFree(6),
        Op::BranchNotEqv(18),
        Op::Frame(11),
        Op::ConstantPush(sym271),
        Op::ConstantPush(Object::Number(1)),
        Op::ReferFree(4),
        Op::CarPush,
        Op::Constant(Object::Nil),
        Op::Cons,
        Op::Cons,
        Op::Cons,
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("pass1/expand"), 1),
        Op::Push,
        Op::ReferFreePush(5),
        Op::ConstantPush(Object::False),
        Op::ReferGlobal(vm.gc.intern("pass1/sexp->iform")),
        Op::TailCall(3, 7),
        Op::LocalJmp(106),
        Op::Frame(4),
        Op::ReferFree(4),
        Op::CarPush,
        Op::ReferGlobalCall(vm.gc.intern("pass1/expand"), 1),
        Op::Push,
        Op::ReferFreePush(5),
        Op::ConstantPush(Object::False),
        Op::ReferGlobal(vm.gc.intern("pass1/sexp->iform")),
        Op::TailCall(3, 7),
        Op::LocalJmp(96),
        Op::ConstantPush(Object::Number(2)),
        Op::ReferLocal(0),
        Op::BranchNotNumberEqual(28),
        Op::ReferFreePush(3),
        Op::Frame(22),
        Op::Frame(9),
        Op::Frame(4),
        Op::ReferFree(4),
        Op::CarPush,
        Op::ReferGlobalCall(vm.gc.intern("pass1/expand"), 1),
        Op::Push,
        Op::ReferFreePush(5),
        Op::ConstantPush(Object::False),
        Op::ReferGlobalCall(vm.gc.intern("pass1/sexp->iform"), 3),
        Op::PushFrame(10),
        Op::Frame(5),
        Op::ReferFree(4),
        Op::Cadr,
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("pass1/expand"), 1),
        Op::Push,
        Op::ReferFreePush(5),
        Op::ConstantPush(Object::False),
        Op::ReferGlobalCall(vm.gc.intern("pass1/sexp->iform"), 3),
        Op::Push,
        Op::ReferFreeCall(2, 2),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("$asm")),
        Op::TailCall(2, 7),
        Op::LocalJmp(66),
        Op::LetFrame(15),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(4),
        Op::ReferFreePush(1),
        Op::ReferFreePush(5),
        Op::Display(5),
        Op::LetFrame(11),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(2),
        Op::Display(3),
        Op::ConstantPush(Object::Nil),
        Op::ReferFreePush(0),
        Op::Enter(2),
        Op::ReferLocalBranchNotNull(1, 5),
        Op::Frame(27),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(2, 1),
        Op::LocalJmp(24),
        Op::LetFrame(5),
        Op::ReferFreePush(1),
        Op::Display(1),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::Enter(1),
        Op::Frame(8),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("pass1/expand"), 1),
        Op::Push,
        Op::ReferFreePush(0),
        Op::ConstantPush(Object::False),
        Op::ReferGlobalCall(vm.gc.intern("pass1/sexp->iform"), 3),
        Op::Leave(1),
        Op::Push,
        Op::ReferLocal(0),
        Op::Cons,
        Op::Push,
        Op::ReferLocal(1),
        Op::CdrPush,
        Op::Shiftj(2, 2, 0),
        Op::LocalJmp(-27),
        Op::Leave(2),
        Op::PushEnter(1),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 2},
        Op::ReferFreePush(1),
        Op::Frame(4),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(0, 2),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("$asm")),
        Op::TailCall(2, 2),
        Op::Return(2),
        Op::Push,
        Op::ReferLocal(0),
        Op::CarPush,
        Op::ReferLocal(0),
        Op::CdrPush,
        Op::ReferGlobal(vm.gc.intern("fold")),
        Op::TailCall(3, 10),
        Op::Leave(1),
        Op::Leave(1),
        Op::Return(4),
        Op::DefineGlobal(vm.gc.intern("pass1/asm-n-args")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(83),
        Op::ReferFreePush(69),
        Op::ReferFreePush(26),
        Op::ReferFreePush(149),
        Op::ReferFreePush(0),
        Op::ReferFreePush(82),
        Op::ReferFreePush(68),
        Op::Closure {size: 0, arg_len: 3, is_optional_arg: false, num_free_vars: 7},
        Op::ReferLocal(0),
        Op::PairP,
        Op::Test(2084),
        Op::ReferLocal(0),
        Op::PairP,
        Op::Test(2064),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::Constant(sym18),
        Op::BranchNotEqual(7),
        Op::ConstantPush(sym18),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferGlobal(vm.gc.intern("pass1/lambda->iform")),
        Op::TailCall(3, 3),
        Op::Return(3),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::Constant(sym53),
        Op::BranchNotEqual(49),
        Op::ReferLocal(0),
        Op::Cdr,
        Op::PairP,
        Op::Test(28),
        Op::ReferLocal(0),
        Op::Cddr,
        Op::PairP,
        Op::Test(24),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(6, 1),
        Op::NullP,
        Op::Test(19),
        Op::LetFrame(7),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(5),
        Op::Display(2),
        Op::ReferLocal(0),
        Op::Cadr,
        Op::PushFrame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(0, 1),
        Op::PushEnter(2),
        Op::ConstantPush(sym795),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(1),
        Op::ReferGlobal(vm.gc.intern("pass1/asm-2-arg")),
        Op::TailCall(4, 7),
        Op::Leave(2),
        Op::LocalJmp(2047),
        Op::LetFrame(5),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::Display(3),
        Op::ReferLocalPush(0),
        Op::Enter(1),
        Op::ReferFree(2),
        Op::CarPush,
        Op::ReferFree(2),
        Op::CdrPush,
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("pass1/call")),
        Op::TailCall(4, 6),
        Op::Leave(1),
        Op::Return(3),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::Constant(sym796),
        Op::BranchNotEqual(15),
        Op::LetFrame(4),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::Display(2),
        Op::ReferLocal(0),
        Op::CdrPush,
        Op::Enter(1),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("pass1/and->iform")),
        Op::TailCall(3, 6),
        Op::Leave(1),
        Op::Return(3),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::Constant(sym797),
        Op::BranchNotEqual(15),
        Op::LetFrame(4),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::Display(2),
        Op::ReferLocal(0),
        Op::CdrPush,
        Op::Enter(1),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("pass1/or->iform")),
        Op::TailCall(3, 6),
        Op::Leave(1),
        Op::Return(3),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::Constant(sym798),
        Op::BranchNotEqual(18),
        Op::LetFrame(5),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::Display(2),
        Op::ReferLocal(0),
        Op::CdrPush,
        Op::Enter(1),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("pass1/expand"), 1),
        Op::Push,
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("pass1/body->iform")),
        Op::TailCall(3, 6),
        Op::Leave(1),
        Op::Return(3),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::Constant(sym776),
        Op::BranchNotEqual(7),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferGlobal(vm.gc.intern("pass1/cond->iform")),
        Op::TailCall(3, 3),
        Op::Return(3),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::Constant(sym162),
        Op::BranchNotEqual(51),
        Op::LetFrame(14),
        Op::ReferFreePush(4),
        Op::ReferLocalPush(1),
        Op::Display(2),
        Op::ReferLocal(0),
        Op::CdrPush,
        Op::Enter(1),
        Op::ConstantPush(sym799),
        Op::LetFrame(11),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::Display(3),
        Op::ConstantPush(Object::Nil),
        Op::ReferLocalPush(0),
        Op::Enter(2),
        Op::ReferLocalBranchNotNull(1, 5),
        Op::Frame(27),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(2, 1),
        Op::LocalJmp(24),
        Op::LetFrame(5),
        Op::ReferFreePush(1),
        Op::Display(1),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::Enter(1),
        Op::Frame(8),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("pass1/expand"), 1),
        Op::Push,
        Op::ReferFreePush(0),
        Op::ConstantPush(Object::False),
        Op::ReferGlobalCall(vm.gc.intern("pass1/sexp->iform"), 3),
        Op::Leave(1),
        Op::Push,
        Op::ReferLocal(0),
        Op::Cons,
        Op::Push,
        Op::ReferLocal(1),
        Op::CdrPush,
        Op::Shiftj(2, 2, 0),
        Op::LocalJmp(-27),
        Op::Leave(2),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("$asm")),
        Op::TailCall(2, 6),
        Op::Leave(1),
        Op::Return(3),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::Constant(sym198),
        Op::BranchNotEqual(51),
        Op::LetFrame(14),
        Op::ReferFreePush(4),
        Op::ReferLocalPush(1),
        Op::Display(2),
        Op::ReferLocal(0),
        Op::CdrPush,
        Op::Enter(1),
        Op::ConstantPush(sym800),
        Op::LetFrame(11),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::Display(3),
        Op::ConstantPush(Object::Nil),
        Op::ReferLocalPush(0),
        Op::Enter(2),
        Op::ReferLocalBranchNotNull(1, 5),
        Op::Frame(27),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(2, 1),
        Op::LocalJmp(24),
        Op::LetFrame(5),
        Op::ReferFreePush(1),
        Op::Display(1),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::Enter(1),
        Op::Frame(8),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("pass1/expand"), 1),
        Op::Push,
        Op::ReferFreePush(0),
        Op::ConstantPush(Object::False),
        Op::ReferGlobalCall(vm.gc.intern("pass1/sexp->iform"), 3),
        Op::Leave(1),
        Op::Push,
        Op::ReferLocal(0),
        Op::Cons,
        Op::Push,
        Op::ReferLocal(1),
        Op::CdrPush,
        Op::Shiftj(2, 2, 0),
        Op::LocalJmp(-27),
        Op::Leave(2),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("$asm")),
        Op::TailCall(2, 6),
        Op::Leave(1),
        Op::Return(3),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::Constant(sym769),
        Op::BranchNotEqual(7),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferGlobal(vm.gc.intern("pass1/define")),
        Op::TailCall(3, 3),
        Op::Return(3),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::Constant(sym773),
        Op::BranchNotEqual(7),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferGlobal(vm.gc.intern("pass1/define-macro")),
        Op::TailCall(3, 3),
        Op::Return(3),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::Constant(sym778),
        Op::BranchNotEqual(7),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferGlobal(vm.gc.intern("pass1/receive")),
        Op::TailCall(3, 3),
        Op::Return(3),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::Constant(sym770),
        Op::BranchNotEqual(95),
        Op::ReferLocal(0),
        Op::Cdr,
        Op::PairP,
        Op::Test(74),
        Op::LetFrame(21),
        Op::ReferFreePush(4),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(3),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::Display(5),
        Op::ReferLocal(0),
        Op::Cadr,
        Op::Push,
        Op::ReferLocal(0),
        Op::Cddr,
        Op::PushEnter(2),
        Op::LetFrame(6),
        Op::ReferFreePush(4),
        Op::ReferLocalPush(0),
        Op::Display(2),
        Op::ConstantPush(Object::Nil),
        Op::ReferLocalPush(0),
        Op::Enter(2),
        Op::ReferLocalBranchNotNull(1, 5),
        Op::Frame(14),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(1, 1),
        Op::LocalJmp(11),
        Op::ReferLocal(1),
        Op::Car,
        Op::CarPush,
        Op::ReferLocal(0),
        Op::Cons,
        Op::Push,
        Op::ReferLocal(1),
        Op::CdrPush,
        Op::Shiftj(2, 2, 0),
        Op::LocalJmp(-14),
        Op::Leave(2),
        Op::Push,
        Op::LetFrame(6),
        Op::ReferFreePush(4),
        Op::ReferLocalPush(0),
        Op::Display(2),
        Op::ConstantPush(Object::Nil),
        Op::ReferLocalPush(0),
        Op::Enter(2),
        Op::ReferLocalBranchNotNull(1, 5),
        Op::Frame(15),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(1, 1),
        Op::LocalJmp(12),
        Op::ReferLocal(1),
        Op::Car,
        Op::Cadr,
        Op::Push,
        Op::ReferLocal(0),
        Op::Cons,
        Op::Push,
        Op::ReferLocal(1),
        Op::CdrPush,
        Op::Shiftj(2, 2, 0),
        Op::LocalJmp(-15),
        Op::Leave(2),
        Op::Push,
        Op::ReferLocalPush(1),
        Op::Frame(3),
        Op::ReferFreePush(3),
        Op::ReferFreeCall(2, 1),
        Op::Push,
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("pass1/let")),
        Op::TailCall(6, 7),
        Op::Leave(2),
        Op::LocalJmp(1744),
        Op::LetFrame(5),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::Display(3),
        Op::ReferLocalPush(0),
        Op::Enter(1),
        Op::ReferFree(2),
        Op::CarPush,
        Op::ReferFree(2),
        Op::CdrPush,
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("pass1/call")),
        Op::TailCall(4, 6),
        Op::Leave(1),
        Op::Return(3),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::Constant(sym788),
        Op::BranchNotEqual(95),
        Op::ReferLocal(0),
        Op::Cdr,
        Op::PairP,
        Op::Test(74),
        Op::LetFrame(21),
        Op::ReferFreePush(4),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(3),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::Display(5),
        Op::ReferLocal(0),
        Op::Cadr,
        Op::Push,
        Op::ReferLocal(0),
        Op::Cddr,
        Op::PushEnter(2),
        Op::LetFrame(6),
        Op::ReferFreePush(4),
        Op::ReferLocalPush(0),
        Op::Display(2),
        Op::ConstantPush(Object::Nil),
        Op::ReferLocalPush(0),
        Op::Enter(2),
        Op::ReferLocalBranchNotNull(1, 5),
        Op::Frame(14),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(1, 1),
        Op::LocalJmp(11),
        Op::ReferLocal(1),
        Op::Car,
        Op::CarPush,
        Op::ReferLocal(0),
        Op::Cons,
        Op::Push,
        Op::ReferLocal(1),
        Op::CdrPush,
        Op::Shiftj(2, 2, 0),
        Op::LocalJmp(-14),
        Op::Leave(2),
        Op::Push,
        Op::LetFrame(6),
        Op::ReferFreePush(4),
        Op::ReferLocalPush(0),
        Op::Display(2),
        Op::ConstantPush(Object::Nil),
        Op::ReferLocalPush(0),
        Op::Enter(2),
        Op::ReferLocalBranchNotNull(1, 5),
        Op::Frame(15),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(1, 1),
        Op::LocalJmp(12),
        Op::ReferLocal(1),
        Op::Car,
        Op::Cadr,
        Op::Push,
        Op::ReferLocal(0),
        Op::Cons,
        Op::Push,
        Op::ReferLocal(1),
        Op::CdrPush,
        Op::Shiftj(2, 2, 0),
        Op::LocalJmp(-15),
        Op::Leave(2),
        Op::Push,
        Op::ReferLocalPush(1),
        Op::Frame(3),
        Op::ReferFreePush(3),
        Op::ReferFreeCall(2, 1),
        Op::Push,
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("pass1/letrec")),
        Op::TailCall(6, 7),
        Op::Leave(2),
        Op::LocalJmp(1646),
        Op::LetFrame(5),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::Display(3),
        Op::ReferLocalPush(0),
        Op::Enter(1),
        Op::ReferFree(2),
        Op::CarPush,
        Op::ReferFree(2),
        Op::CdrPush,
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("pass1/call")),
        Op::TailCall(4, 6),
        Op::Leave(1),
        Op::Return(3),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::Constant(sym771),
        Op::BranchNotEqual(95),
        Op::ReferLocal(0),
        Op::Cdr,
        Op::PairP,
        Op::Test(74),
        Op::LetFrame(21),
        Op::ReferFreePush(4),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(3),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::Display(5),
        Op::ReferLocal(0),
        Op::Cadr,
        Op::Push,
        Op::ReferLocal(0),
        Op::Cddr,
        Op::PushEnter(2),
        Op::LetFrame(6),
        Op::ReferFreePush(4),
        Op::ReferLocalPush(0),
        Op::Display(2),
        Op::ConstantPush(Object::Nil),
        Op::ReferLocalPush(0),
        Op::Enter(2),
        Op::ReferLocalBranchNotNull(1, 5),
        Op::Frame(14),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(1, 1),
        Op::LocalJmp(11),
        Op::ReferLocal(1),
        Op::Car,
        Op::CarPush,
        Op::ReferLocal(0),
        Op::Cons,
        Op::Push,
        Op::ReferLocal(1),
        Op::CdrPush,
        Op::Shiftj(2, 2, 0),
        Op::LocalJmp(-14),
        Op::Leave(2),
        Op::Push,
        Op::LetFrame(6),
        Op::ReferFreePush(4),
        Op::ReferLocalPush(0),
        Op::Display(2),
        Op::ConstantPush(Object::Nil),
        Op::ReferLocalPush(0),
        Op::Enter(2),
        Op::ReferLocalBranchNotNull(1, 5),
        Op::Frame(15),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(1, 1),
        Op::LocalJmp(12),
        Op::ReferLocal(1),
        Op::Car,
        Op::Cadr,
        Op::Push,
        Op::ReferLocal(0),
        Op::Cons,
        Op::Push,
        Op::ReferLocal(1),
        Op::CdrPush,
        Op::Shiftj(2, 2, 0),
        Op::LocalJmp(-15),
        Op::Leave(2),
        Op::Push,
        Op::ReferLocalPush(1),
        Op::Frame(3),
        Op::ReferFreePush(3),
        Op::ReferFreeCall(2, 1),
        Op::Push,
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("pass1/letrec*")),
        Op::TailCall(6, 7),
        Op::Leave(2),
        Op::LocalJmp(1548),
        Op::LetFrame(5),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::Display(3),
        Op::ReferLocalPush(0),
        Op::Enter(1),
        Op::ReferFree(2),
        Op::CarPush,
        Op::ReferFree(2),
        Op::CdrPush,
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("pass1/call")),
        Op::TailCall(4, 6),
        Op::Leave(1),
        Op::Return(3),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::Constant(sym801),
        Op::BranchNotEqual(53),
        Op::ReferLocal(0),
        Op::Cdr,
        Op::PairP,
        Op::Test(32),
        Op::ReferLocal(0),
        Op::Cddr,
        Op::PairP,
        Op::Test(28),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(6, 1),
        Op::NullP,
        Op::Test(23),
        Op::LetFrame(8),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferFreePush(5),
        Op::Display(3),
        Op::ReferLocal(0),
        Op::Cadr,
        Op::PushFrame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(0, 1),
        Op::PushEnter(2),
        Op::ReferLocalPush(0),
        Op::Frame(3),
        Op::ReferLocalPush(1),
        Op::ReferGlobalCall(vm.gc.intern("pass1/expand"), 1),
        Op::Push,
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferGlobal(vm.gc.intern("pass1/assign")),
        Op::TailCall(4, 7),
        Op::Leave(2),
        Op::LocalJmp(1492),
        Op::LetFrame(5),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::Display(3),
        Op::ReferLocalPush(0),
        Op::Enter(1),
        Op::ReferFree(2),
        Op::CarPush,
        Op::ReferFree(2),
        Op::CdrPush,
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("pass1/call")),
        Op::TailCall(4, 6),
        Op::Leave(1),
        Op::Return(3),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::Constant(sym786),
        Op::BranchNotEqual(50),
        Op::ReferLocal(0),
        Op::Cdr,
        Op::PairP,
        Op::Test(29),
        Op::ReferLocal(0),
        Op::Cddr,
        Op::PairP,
        Op::Test(25),
        Op::LetFrame(10),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::Display(4),
        Op::ReferLocal(0),
        Op::Cadr,
        Op::PushFrame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(0, 1),
        Op::PushFrame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(1, 1),
        Op::PushEnter(3),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferGlobal(vm.gc.intern("pass1/if")),
        Op::TailCall(5, 8),
        Op::Leave(3),
        Op::LocalJmp(1439),
        Op::LetFrame(5),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::Display(3),
        Op::ReferLocalPush(0),
        Op::Enter(1),
        Op::ReferFree(2),
        Op::CarPush,
        Op::ReferFree(2),
        Op::CdrPush,
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("pass1/call")),
        Op::TailCall(4, 6),
        Op::Leave(1),
        Op::Return(3),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::Constant(sym802),
        Op::BranchNotEqual(24),
        Op::ReferLocal(0),
        Op::Cdr,
        Op::BranchNotNull(4),
        Op::ReferGlobal(vm.gc.intern("$undef")),
        Op::TailCall(0, 3),
        Op::LocalJmp(1412),
        Op::LetFrame(5),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::Display(3),
        Op::ReferLocalPush(0),
        Op::Enter(1),
        Op::ReferFree(2),
        Op::CarPush,
        Op::ReferFree(2),
        Op::CdrPush,
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("pass1/call")),
        Op::TailCall(4, 6),
        Op::Leave(1),
        Op::Return(3),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::Constant(sym803),
        Op::BranchNotEqual(47),
        Op::ReferLocal(0),
        Op::Cdr,
        Op::PairP,
        Op::Test(26),
        Op::ReferLocal(0),
        Op::Cddr,
        Op::NullP,
        Op::Test(22),
        Op::LetFrame(7),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::Display(2),
        Op::ReferLocal(0),
        Op::Cadr,
        Op::PushEnter(1),
        Op::Frame(8),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("pass1/expand"), 1),
        Op::Push,
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferGlobalCall(vm.gc.intern("pass1/sexp->iform"), 3),
        Op::Push,
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("$call-cc")),
        Op::TailCall(2, 6),
        Op::Leave(1),
        Op::LocalJmp(1362),
        Op::LetFrame(5),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::Display(3),
        Op::ReferLocalPush(0),
        Op::Enter(1),
        Op::ReferFree(2),
        Op::CarPush,
        Op::ReferFree(2),
        Op::CdrPush,
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("pass1/call")),
        Op::TailCall(4, 6),
        Op::Leave(1),
        Op::Return(3),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::Constant(sym804),
        Op::BranchNotEqual(47),
        Op::ReferLocal(0),
        Op::Cdr,
        Op::PairP,
        Op::Test(26),
        Op::ReferLocal(0),
        Op::Cddr,
        Op::NullP,
        Op::Test(22),
        Op::LetFrame(7),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::Display(2),
        Op::ReferLocal(0),
        Op::Cadr,
        Op::PushEnter(1),
        Op::Frame(8),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("pass1/expand"), 1),
        Op::Push,
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferGlobalCall(vm.gc.intern("pass1/sexp->iform"), 3),
        Op::Push,
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("$call-cc")),
        Op::TailCall(2, 6),
        Op::Leave(1),
        Op::LocalJmp(1312),
        Op::LetFrame(5),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::Display(3),
        Op::ReferLocalPush(0),
        Op::Enter(1),
        Op::ReferFree(2),
        Op::CarPush,
        Op::ReferFree(2),
        Op::CdrPush,
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("pass1/call")),
        Op::TailCall(4, 6),
        Op::Leave(1),
        Op::Return(3),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::Constant(sym772),
        Op::BranchNotEqual(35),
        Op::ReferLocal(0),
        Op::Cdr,
        Op::PairP,
        Op::Test(14),
        Op::ReferLocal(0),
        Op::Cddr,
        Op::NullP,
        Op::Test(10),
        Op::LetFrame(2),
        Op::ReferLocal(0),
        Op::Cadr,
        Op::PushEnter(1),
        Op::ReferLocalPush(0),
        Op::ReferGlobal(vm.gc.intern("$const")),
        Op::TailCall(1, 6),
        Op::Leave(1),
        Op::LocalJmp(1274),
        Op::LetFrame(5),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::Display(3),
        Op::ReferLocalPush(0),
        Op::Enter(1),
        Op::ReferFree(2),
        Op::CarPush,
        Op::ReferFree(2),
        Op::CdrPush,
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("pass1/call")),
        Op::TailCall(4, 6),
        Op::Leave(1),
        Op::Return(3),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::Constant(sym226),
        Op::BranchNotEqual(15),
        Op::LetFrame(5),
        Op::ReferLocalPush(1),
        Op::Display(1),
        Op::ReferLocal(0),
        Op::CdrPush,
        Op::Enter(1),
        Op::ConstantPush(sym805),
        Op::ConstantPush(sym226),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("pass1/asm-n-args")),
        Op::TailCall(4, 6),
        Op::Leave(1),
        Op::Return(3),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::Constant(sym268),
        Op::BranchNotEqual(15),
        Op::LetFrame(5),
        Op::ReferLocalPush(1),
        Op::Display(1),
        Op::ReferLocal(0),
        Op::CdrPush,
        Op::Enter(1),
        Op::ConstantPush(sym806),
        Op::ConstantPush(sym268),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("pass1/asm-n-args")),
        Op::TailCall(4, 6),
        Op::Leave(1),
        Op::Return(3),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::Constant(sym269),
        Op::BranchNotEqual(40),
        Op::ReferLocal(0),
        Op::Cdr,
        Op::BranchNotNull(6),
        Op::ConstantPush(sym807),
        Op::ConstantPush(Object::Nil),
        Op::ReferGlobal(vm.gc.intern("$asm")),
        Op::TailCall(2, 3),
        Op::LocalJmp(1209),
        Op::LetFrame(12),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::Display(3),
        Op::ReferLocal(0),
        Op::CdrPush,
        Op::Enter(1),
        Op::Frame(4),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("for-all"), 2),
        Op::Test(11),
        Op::ConstantPush(sym806),
        Op::ConstantPush(sym268),
        Op::Frame(3),
        Op::ReferFreePush(1),
        Op::ReferGlobalCall(vm.gc.intern("sub->add"), 1),
        Op::CdrPush,
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("pass1/asm-n-args")),
        Op::TailCall(4, 6),
        Op::LocalJmp(7),
        Op::ConstantPush(sym808),
        Op::ConstantPush(sym269),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("pass1/asm-n-args")),
        Op::TailCall(4, 6),
        Op::Leave(1),
        Op::Return(3),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::Constant(sym270),
        Op::BranchNotEqual(15),
        Op::LetFrame(5),
        Op::ReferLocalPush(1),
        Op::Display(1),
        Op::ReferLocal(0),
        Op::CdrPush,
        Op::Enter(1),
        Op::ConstantPush(sym809),
        Op::ConstantPush(sym270),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("pass1/asm-n-args")),
        Op::TailCall(4, 6),
        Op::Leave(1),
        Op::Return(3),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::Constant(sym271),
        Op::BranchNotEqual(15),
        Op::LetFrame(5),
        Op::ReferLocalPush(1),
        Op::Display(1),
        Op::ReferLocal(0),
        Op::CdrPush,
        Op::Enter(1),
        Op::ConstantPush(sym810),
        Op::ConstantPush(sym271),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("pass1/asm-n-args")),
        Op::TailCall(4, 6),
        Op::Leave(1),
        Op::Return(3),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::Constant(sym267),
        Op::BranchNotEqual(15),
        Op::LetFrame(5),
        Op::ReferLocalPush(1),
        Op::Display(1),
        Op::ReferLocal(0),
        Op::CdrPush,
        Op::Enter(1),
        Op::ConstantPush(sym811),
        Op::ConstantPush(sym267),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("pass1/asm-numcmp")),
        Op::TailCall(4, 6),
        Op::Leave(1),
        Op::Return(3),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::Constant(sym266),
        Op::BranchNotEqual(15),
        Op::LetFrame(5),
        Op::ReferLocalPush(1),
        Op::Display(1),
        Op::ReferLocal(0),
        Op::CdrPush,
        Op::Enter(1),
        Op::ConstantPush(sym812),
        Op::ConstantPush(sym266),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("pass1/asm-numcmp")),
        Op::TailCall(4, 6),
        Op::Leave(1),
        Op::Return(3),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::Constant(sym265),
        Op::BranchNotEqual(15),
        Op::LetFrame(5),
        Op::ReferLocalPush(1),
        Op::Display(1),
        Op::ReferLocal(0),
        Op::CdrPush,
        Op::Enter(1),
        Op::ConstantPush(sym813),
        Op::ConstantPush(sym265),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("pass1/asm-numcmp")),
        Op::TailCall(4, 6),
        Op::Leave(1),
        Op::Return(3),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::Constant(sym263),
        Op::BranchNotEqual(15),
        Op::LetFrame(5),
        Op::ReferLocalPush(1),
        Op::Display(1),
        Op::ReferLocal(0),
        Op::CdrPush,
        Op::Enter(1),
        Op::ConstantPush(sym814),
        Op::ConstantPush(sym263),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("pass1/asm-numcmp")),
        Op::TailCall(4, 6),
        Op::Leave(1),
        Op::Return(3),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::Constant(sym264),
        Op::BranchNotEqual(15),
        Op::LetFrame(5),
        Op::ReferLocalPush(1),
        Op::Display(1),
        Op::ReferLocal(0),
        Op::CdrPush,
        Op::Enter(1),
        Op::ConstantPush(sym815),
        Op::ConstantPush(sym264),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("pass1/asm-numcmp")),
        Op::TailCall(4, 6),
        Op::Leave(1),
        Op::Return(3),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::Constant(sym139),
        Op::BranchNotEqual(39),
        Op::ReferLocal(0),
        Op::Cdr,
        Op::PairP,
        Op::Test(18),
        Op::ReferLocal(0),
        Op::Cddr,
        Op::NullP,
        Op::Test(14),
        Op::LetFrame(4),
        Op::ReferLocalPush(1),
        Op::Display(1),
        Op::ReferLocal(0),
        Op::Cadr,
        Op::PushEnter(1),
        Op::ConstantPush(sym816),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("pass1/asm-1-arg")),
        Op::TailCall(3, 6),
        Op::Leave(1),
        Op::LocalJmp(1027),
        Op::LetFrame(5),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::Display(3),
        Op::ReferLocalPush(0),
        Op::Enter(1),
        Op::ReferFree(2),
        Op::CarPush,
        Op::ReferFree(2),
        Op::CdrPush,
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("pass1/call")),
        Op::TailCall(4, 6),
        Op::Leave(1),
        Op::Return(3),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::Constant(sym562),
        Op::BranchNotEqual(39),
        Op::ReferLocal(0),
        Op::Cdr,
        Op::PairP,
        Op::Test(18),
        Op::ReferLocal(0),
        Op::Cddr,
        Op::NullP,
        Op::Test(14),
        Op::LetFrame(4),
        Op::ReferLocalPush(1),
        Op::Display(1),
        Op::ReferLocal(0),
        Op::Cadr,
        Op::PushEnter(1),
        Op::ConstantPush(sym817),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("pass1/asm-1-arg")),
        Op::TailCall(3, 6),
        Op::Leave(1),
        Op::LocalJmp(985),
        Op::LetFrame(5),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::Display(3),
        Op::ReferLocalPush(0),
        Op::Enter(1),
        Op::ReferFree(2),
        Op::CarPush,
        Op::ReferFree(2),
        Op::CdrPush,
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("pass1/call")),
        Op::TailCall(4, 6),
        Op::Leave(1),
        Op::Return(3),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::Constant(sym564),
        Op::BranchNotEqual(59),
        Op::ReferLocal(0),
        Op::Cdr,
        Op::PairP,
        Op::Test(38),
        Op::ReferLocal(0),
        Op::Cddr,
        Op::PairP,
        Op::Test(34),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(6, 1),
        Op::PairP,
        Op::Test(29),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(1, 1),
        Op::NullP,
        Op::Test(24),
        Op::LetFrame(10),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(5),
        Op::Display(3),
        Op::ReferLocal(0),
        Op::Cadr,
        Op::PushFrame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(0, 1),
        Op::PushFrame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(1, 1),
        Op::PushEnter(3),
        Op::ConstantPush(sym818),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferFreePush(2),
        Op::ReferGlobal(vm.gc.intern("pass1/asm-3-arg")),
        Op::TailCall(5, 8),
        Op::Leave(3),
        Op::LocalJmp(923),
        Op::LetFrame(5),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::Display(3),
        Op::ReferLocalPush(0),
        Op::Enter(1),
        Op::ReferFree(2),
        Op::CarPush,
        Op::ReferFree(2),
        Op::CdrPush,
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("pass1/call")),
        Op::TailCall(4, 6),
        Op::Leave(1),
        Op::Return(3),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::Constant(sym563),
        Op::BranchNotEqual(49),
        Op::ReferLocal(0),
        Op::Cdr,
        Op::PairP,
        Op::Test(28),
        Op::ReferLocal(0),
        Op::Cddr,
        Op::PairP,
        Op::Test(24),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(6, 1),
        Op::NullP,
        Op::Test(19),
        Op::LetFrame(7),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(5),
        Op::Display(2),
        Op::ReferLocal(0),
        Op::Cadr,
        Op::PushFrame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(0, 1),
        Op::PushEnter(2),
        Op::ConstantPush(sym819),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(1),
        Op::ReferGlobal(vm.gc.intern("pass1/asm-2-arg")),
        Op::TailCall(4, 7),
        Op::Leave(2),
        Op::LocalJmp(871),
        Op::LetFrame(5),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::Display(3),
        Op::ReferLocalPush(0),
        Op::Enter(1),
        Op::ReferFree(2),
        Op::CarPush,
        Op::ReferFree(2),
        Op::CdrPush,
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("pass1/call")),
        Op::TailCall(4, 6),
        Op::Leave(1),
        Op::Return(3),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::Constant(sym624),
        Op::BranchNotEqual(49),
        Op::ReferLocal(0),
        Op::Cdr,
        Op::PairP,
        Op::Test(28),
        Op::ReferLocal(0),
        Op::Cddr,
        Op::PairP,
        Op::Test(24),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(6, 1),
        Op::NullP,
        Op::Test(19),
        Op::LetFrame(7),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(5),
        Op::Display(2),
        Op::ReferLocal(0),
        Op::Cadr,
        Op::PushFrame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(0, 1),
        Op::PushEnter(2),
        Op::ConstantPush(sym820),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(1),
        Op::ReferGlobal(vm.gc.intern("pass1/asm-2-arg")),
        Op::TailCall(4, 7),
        Op::Leave(2),
        Op::LocalJmp(819),
        Op::LetFrame(5),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::Display(3),
        Op::ReferLocalPush(0),
        Op::Enter(1),
        Op::ReferFree(2),
        Op::CarPush,
        Op::ReferFree(2),
        Op::CdrPush,
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("pass1/call")),
        Op::TailCall(4, 6),
        Op::Leave(1),
        Op::Return(3),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::Constant(sym561),
        Op::BranchNotEqual(39),
        Op::ReferLocal(0),
        Op::Cdr,
        Op::PairP,
        Op::Test(18),
        Op::LetFrame(6),
        Op::ReferLocalPush(1),
        Op::Display(1),
        Op::ReferLocal(0),
        Op::Cadr,
        Op::Push,
        Op::ReferLocal(0),
        Op::Cddr,
        Op::PushEnter(2),
        Op::ConstantPush(sym821),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("pass1/asm-2-arg-optional")),
        Op::TailCall(4, 7),
        Op::Leave(2),
        Op::LocalJmp(777),
        Op::LetFrame(5),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::Display(3),
        Op::ReferLocalPush(0),
        Op::Enter(1),
        Op::ReferFree(2),
        Op::CarPush,
        Op::ReferFree(2),
        Op::CdrPush,
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("pass1/call")),
        Op::TailCall(4, 6),
        Op::Leave(1),
        Op::Return(3),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::Constant(sym55),
        Op::BranchNotEqual(39),
        Op::ReferLocal(0),
        Op::Cdr,
        Op::PairP,
        Op::Test(18),
        Op::ReferLocal(0),
        Op::Cddr,
        Op::NullP,
        Op::Test(14),
        Op::LetFrame(4),
        Op::ReferLocalPush(1),
        Op::Display(1),
        Op::ReferLocal(0),
        Op::Cadr,
        Op::PushEnter(1),
        Op::ConstantPush(sym822),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("pass1/asm-1-arg")),
        Op::TailCall(3, 6),
        Op::Leave(1),
        Op::LocalJmp(735),
        Op::LetFrame(5),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::Display(3),
        Op::ReferLocalPush(0),
        Op::Enter(1),
        Op::ReferFree(2),
        Op::CarPush,
        Op::ReferFree(2),
        Op::CdrPush,
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("pass1/call")),
        Op::TailCall(4, 6),
        Op::Leave(1),
        Op::Return(3),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::Constant(sym56),
        Op::BranchNotEqual(39),
        Op::ReferLocal(0),
        Op::Cdr,
        Op::PairP,
        Op::Test(18),
        Op::ReferLocal(0),
        Op::Cddr,
        Op::NullP,
        Op::Test(14),
        Op::LetFrame(4),
        Op::ReferLocalPush(1),
        Op::Display(1),
        Op::ReferLocal(0),
        Op::Cadr,
        Op::PushEnter(1),
        Op::ConstantPush(sym823),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("pass1/asm-1-arg")),
        Op::TailCall(3, 6),
        Op::Leave(1),
        Op::LocalJmp(693),
        Op::LetFrame(5),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::Display(3),
        Op::ReferLocalPush(0),
        Op::Enter(1),
        Op::ReferFree(2),
        Op::CarPush,
        Op::ReferFree(2),
        Op::CdrPush,
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("pass1/call")),
        Op::TailCall(4, 6),
        Op::Leave(1),
        Op::Return(3),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::Constant(sym115),
        Op::BranchNotEqual(39),
        Op::ReferLocal(0),
        Op::Cdr,
        Op::PairP,
        Op::Test(18),
        Op::ReferLocal(0),
        Op::Cddr,
        Op::NullP,
        Op::Test(14),
        Op::LetFrame(4),
        Op::ReferLocalPush(1),
        Op::Display(1),
        Op::ReferLocal(0),
        Op::Cadr,
        Op::PushEnter(1),
        Op::ConstantPush(sym824),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("pass1/asm-1-arg")),
        Op::TailCall(3, 6),
        Op::Leave(1),
        Op::LocalJmp(651),
        Op::LetFrame(5),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::Display(3),
        Op::ReferLocalPush(0),
        Op::Enter(1),
        Op::ReferFree(2),
        Op::CarPush,
        Op::ReferFree(2),
        Op::CdrPush,
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("pass1/call")),
        Op::TailCall(4, 6),
        Op::Leave(1),
        Op::Return(3),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::Constant(sym122),
        Op::BranchNotEqual(39),
        Op::ReferLocal(0),
        Op::Cdr,
        Op::PairP,
        Op::Test(18),
        Op::ReferLocal(0),
        Op::Cddr,
        Op::NullP,
        Op::Test(14),
        Op::LetFrame(4),
        Op::ReferLocalPush(1),
        Op::Display(1),
        Op::ReferLocal(0),
        Op::Cadr,
        Op::PushEnter(1),
        Op::ConstantPush(sym825),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("pass1/asm-1-arg")),
        Op::TailCall(3, 6),
        Op::Leave(1),
        Op::LocalJmp(609),
        Op::LetFrame(5),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::Display(3),
        Op::ReferLocalPush(0),
        Op::Enter(1),
        Op::ReferFree(2),
        Op::CarPush,
        Op::ReferFree(2),
        Op::CdrPush,
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("pass1/call")),
        Op::TailCall(4, 6),
        Op::Leave(1),
        Op::Return(3),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::Constant(sym129),
        Op::BranchNotEqual(39),
        Op::ReferLocal(0),
        Op::Cdr,
        Op::PairP,
        Op::Test(18),
        Op::ReferLocal(0),
        Op::Cddr,
        Op::NullP,
        Op::Test(14),
        Op::LetFrame(4),
        Op::ReferLocalPush(1),
        Op::Display(1),
        Op::ReferLocal(0),
        Op::Cadr,
        Op::PushEnter(1),
        Op::ConstantPush(sym826),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("pass1/asm-1-arg")),
        Op::TailCall(3, 6),
        Op::Leave(1),
        Op::LocalJmp(567),
        Op::LetFrame(5),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::Display(3),
        Op::ReferLocalPush(0),
        Op::Enter(1),
        Op::ReferFree(2),
        Op::CarPush,
        Op::ReferFree(2),
        Op::CdrPush,
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("pass1/call")),
        Op::TailCall(4, 6),
        Op::Leave(1),
        Op::Return(3),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::Constant(sym136),
        Op::BranchNotEqual(39),
        Op::ReferLocal(0),
        Op::Cdr,
        Op::PairP,
        Op::Test(18),
        Op::ReferLocal(0),
        Op::Cddr,
        Op::NullP,
        Op::Test(14),
        Op::LetFrame(4),
        Op::ReferLocalPush(1),
        Op::Display(1),
        Op::ReferLocal(0),
        Op::Cadr,
        Op::PushEnter(1),
        Op::ConstantPush(sym827),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("pass1/asm-1-arg")),
        Op::TailCall(3, 6),
        Op::Leave(1),
        Op::LocalJmp(525),
        Op::LetFrame(5),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::Display(3),
        Op::ReferLocalPush(0),
        Op::Enter(1),
        Op::ReferFree(2),
        Op::CarPush,
        Op::ReferFree(2),
        Op::CdrPush,
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("pass1/call")),
        Op::TailCall(4, 6),
        Op::Leave(1),
        Op::Return(3),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::Constant(sym58),
        Op::BranchNotEqual(49),
        Op::ReferLocal(0),
        Op::Cdr,
        Op::PairP,
        Op::Test(28),
        Op::ReferLocal(0),
        Op::Cddr,
        Op::PairP,
        Op::Test(24),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(6, 1),
        Op::NullP,
        Op::Test(19),
        Op::LetFrame(7),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(5),
        Op::Display(2),
        Op::ReferLocal(0),
        Op::Cadr,
        Op::PushFrame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(0, 1),
        Op::PushEnter(2),
        Op::ConstantPush(sym828),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(1),
        Op::ReferGlobal(vm.gc.intern("pass1/asm-2-arg")),
        Op::TailCall(4, 7),
        Op::Leave(2),
        Op::LocalJmp(473),
        Op::LetFrame(5),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::Display(3),
        Op::ReferLocalPush(0),
        Op::Enter(1),
        Op::ReferFree(2),
        Op::CarPush,
        Op::ReferFree(2),
        Op::CdrPush,
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("pass1/call")),
        Op::TailCall(4, 6),
        Op::Leave(1),
        Op::Return(3),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::Constant(sym59),
        Op::BranchNotEqual(49),
        Op::ReferLocal(0),
        Op::Cdr,
        Op::PairP,
        Op::Test(28),
        Op::ReferLocal(0),
        Op::Cddr,
        Op::PairP,
        Op::Test(24),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(6, 1),
        Op::NullP,
        Op::Test(19),
        Op::LetFrame(7),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(5),
        Op::Display(2),
        Op::ReferLocal(0),
        Op::Cadr,
        Op::PushFrame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(0, 1),
        Op::PushEnter(2),
        Op::ConstantPush(sym829),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(1),
        Op::ReferGlobal(vm.gc.intern("pass1/asm-2-arg")),
        Op::TailCall(4, 7),
        Op::Leave(2),
        Op::LocalJmp(421),
        Op::LetFrame(5),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::Display(3),
        Op::ReferLocalPush(0),
        Op::Enter(1),
        Op::ReferFree(2),
        Op::CarPush,
        Op::ReferFree(2),
        Op::CdrPush,
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("pass1/call")),
        Op::TailCall(4, 6),
        Op::Leave(1),
        Op::Return(3),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::Constant(sym143),
        Op::BranchNotEqual(49),
        Op::ReferLocal(0),
        Op::Cdr,
        Op::PairP,
        Op::Test(28),
        Op::ReferLocal(0),
        Op::Cddr,
        Op::PairP,
        Op::Test(24),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(6, 1),
        Op::NullP,
        Op::Test(19),
        Op::LetFrame(7),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(5),
        Op::Display(2),
        Op::ReferLocal(0),
        Op::Cadr,
        Op::PushFrame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(0, 1),
        Op::PushEnter(2),
        Op::ConstantPush(sym830),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(1),
        Op::ReferGlobal(vm.gc.intern("pass1/asm-2-arg")),
        Op::TailCall(4, 7),
        Op::Leave(2),
        Op::LocalJmp(369),
        Op::LetFrame(5),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::Display(3),
        Op::ReferLocalPush(0),
        Op::Enter(1),
        Op::ReferFree(2),
        Op::CarPush,
        Op::ReferFree(2),
        Op::CdrPush,
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("pass1/call")),
        Op::TailCall(4, 6),
        Op::Leave(1),
        Op::Return(3),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::Constant(sym144),
        Op::BranchNotEqual(49),
        Op::ReferLocal(0),
        Op::Cdr,
        Op::PairP,
        Op::Test(28),
        Op::ReferLocal(0),
        Op::Cddr,
        Op::PairP,
        Op::Test(24),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(6, 1),
        Op::NullP,
        Op::Test(19),
        Op::LetFrame(7),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(5),
        Op::Display(2),
        Op::ReferLocal(0),
        Op::Cadr,
        Op::PushFrame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(0, 1),
        Op::PushEnter(2),
        Op::ConstantPush(sym831),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(1),
        Op::ReferGlobal(vm.gc.intern("pass1/asm-2-arg")),
        Op::TailCall(4, 7),
        Op::Leave(2),
        Op::LocalJmp(317),
        Op::LetFrame(5),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::Display(3),
        Op::ReferLocalPush(0),
        Op::Enter(1),
        Op::ReferFree(2),
        Op::CarPush,
        Op::ReferFree(2),
        Op::CdrPush,
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("pass1/call")),
        Op::TailCall(4, 6),
        Op::Leave(1),
        Op::Return(3),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::Constant(sym86),
        Op::BranchNotEqual(49),
        Op::ReferLocal(0),
        Op::Cdr,
        Op::PairP,
        Op::Test(28),
        Op::ReferLocal(0),
        Op::Cddr,
        Op::PairP,
        Op::Test(24),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(6, 1),
        Op::NullP,
        Op::Test(19),
        Op::LetFrame(7),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(5),
        Op::Display(2),
        Op::ReferLocal(0),
        Op::Cadr,
        Op::PushFrame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(0, 1),
        Op::PushEnter(2),
        Op::ConstantPush(sym832),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(1),
        Op::ReferGlobal(vm.gc.intern("pass1/asm-2-arg")),
        Op::TailCall(4, 7),
        Op::Leave(2),
        Op::LocalJmp(265),
        Op::LetFrame(5),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::Display(3),
        Op::ReferLocalPush(0),
        Op::Enter(1),
        Op::ReferFree(2),
        Op::CarPush,
        Op::ReferFree(2),
        Op::CdrPush,
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("pass1/call")),
        Op::TailCall(4, 6),
        Op::Leave(1),
        Op::Return(3),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::Constant(sym782),
        Op::BranchNotEqual(39),
        Op::ReferLocal(0),
        Op::Cdr,
        Op::PairP,
        Op::Test(18),
        Op::ReferLocal(0),
        Op::Cddr,
        Op::NullP,
        Op::Test(14),
        Op::LetFrame(4),
        Op::ReferLocalPush(1),
        Op::Display(1),
        Op::ReferLocal(0),
        Op::Cadr,
        Op::PushEnter(1),
        Op::ConstantPush(sym833),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("pass1/asm-1-arg")),
        Op::TailCall(3, 6),
        Op::Leave(1),
        Op::LocalJmp(223),
        Op::LetFrame(5),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::Display(3),
        Op::ReferLocalPush(0),
        Op::Enter(1),
        Op::ReferFree(2),
        Op::CarPush,
        Op::ReferFree(2),
        Op::CdrPush,
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("pass1/call")),
        Op::TailCall(4, 6),
        Op::Leave(1),
        Op::Return(3),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::Constant(sym57),
        Op::BranchNotEqual(39),
        Op::ReferLocal(0),
        Op::Cdr,
        Op::PairP,
        Op::Test(18),
        Op::ReferLocal(0),
        Op::Cddr,
        Op::NullP,
        Op::Test(14),
        Op::LetFrame(4),
        Op::ReferLocalPush(1),
        Op::Display(1),
        Op::ReferLocal(0),
        Op::Cadr,
        Op::PushEnter(1),
        Op::ConstantPush(sym834),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("pass1/asm-1-arg")),
        Op::TailCall(3, 6),
        Op::Leave(1),
        Op::LocalJmp(181),
        Op::LetFrame(5),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::Display(3),
        Op::ReferLocalPush(0),
        Op::Enter(1),
        Op::ReferFree(2),
        Op::CarPush,
        Op::ReferFree(2),
        Op::CdrPush,
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("pass1/call")),
        Op::TailCall(4, 6),
        Op::Leave(1),
        Op::Return(3),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::Constant(sym164),
        Op::BranchNotEqual(39),
        Op::ReferLocal(0),
        Op::Cdr,
        Op::PairP,
        Op::Test(18),
        Op::ReferLocal(0),
        Op::Cddr,
        Op::NullP,
        Op::Test(14),
        Op::LetFrame(4),
        Op::ReferLocalPush(1),
        Op::Display(1),
        Op::ReferLocal(0),
        Op::Cadr,
        Op::PushEnter(1),
        Op::ConstantPush(sym835),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("pass1/asm-1-arg")),
        Op::TailCall(3, 6),
        Op::Leave(1),
        Op::LocalJmp(139),
        Op::LetFrame(5),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::Display(3),
        Op::ReferLocalPush(0),
        Op::Enter(1),
        Op::ReferFree(2),
        Op::CarPush,
        Op::ReferFree(2),
        Op::CdrPush,
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("pass1/call")),
        Op::TailCall(4, 6),
        Op::Leave(1),
        Op::Return(3),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::Constant(sym213),
        Op::BranchNotEqual(39),
        Op::ReferLocal(0),
        Op::Cdr,
        Op::PairP,
        Op::Test(18),
        Op::ReferLocal(0),
        Op::Cddr,
        Op::NullP,
        Op::Test(14),
        Op::LetFrame(4),
        Op::ReferLocalPush(1),
        Op::Display(1),
        Op::ReferLocal(0),
        Op::Cadr,
        Op::PushEnter(1),
        Op::ConstantPush(sym836),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("pass1/asm-1-arg")),
        Op::TailCall(3, 6),
        Op::Leave(1),
        Op::LocalJmp(97),
        Op::LetFrame(5),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::Display(3),
        Op::ReferLocalPush(0),
        Op::Enter(1),
        Op::ReferFree(2),
        Op::CarPush,
        Op::ReferFree(2),
        Op::CdrPush,
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("pass1/call")),
        Op::TailCall(4, 6),
        Op::Leave(1),
        Op::Return(3),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::Constant(sym218),
        Op::BranchNotEqual(14),
        Op::LetFrame(4),
        Op::ReferLocalPush(1),
        Op::Display(1),
        Op::ReferLocal(0),
        Op::CdrPush,
        Op::Enter(1),
        Op::ConstantPush(sym837),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("pass1/asm-1-arg-optional")),
        Op::TailCall(3, 6),
        Op::Leave(1),
        Op::Return(3),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::Constant(sym80),
        Op::BranchNotEqual(14),
        Op::LetFrame(4),
        Op::ReferLocalPush(1),
        Op::Display(1),
        Op::ReferLocal(0),
        Op::CdrPush,
        Op::Enter(1),
        Op::ConstantPush(sym838),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("pass1/asm-1-arg-optional")),
        Op::TailCall(3, 6),
        Op::Leave(1),
        Op::Return(3),
        Op::LetFrame(5),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::Display(3),
        Op::ReferLocalPush(0),
        Op::Enter(1),
        Op::ReferFree(2),
        Op::CarPush,
        Op::ReferFree(2),
        Op::CdrPush,
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("pass1/call")),
        Op::TailCall(4, 6),
        Op::Leave(1),
        Op::Return(3),
        Op::LetFrame(5),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::Display(3),
        Op::ReferLocalPush(0),
        Op::Enter(1),
        Op::ReferFree(2),
        Op::CarPush,
        Op::ReferFree(2),
        Op::CdrPush,
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("pass1/call")),
        Op::TailCall(4, 6),
        Op::Leave(1),
        Op::Return(3),
        Op::ReferLocal(0),
        Op::SymbolP,
        Op::Test(6),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferGlobal(vm.gc.intern("pass1/refer->iform")),
        Op::TailCall(2, 3),
        Op::Return(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobal(vm.gc.intern("$const")),
        Op::TailCall(1, 3),
        Op::Return(3),
        Op::DefineGlobal(vm.gc.intern("pass1/sexp->iform")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(153),
        Op::ReferFreePush(89),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 2},
        Op::LetFrame(4),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::Display(3),
        Op::Frame(4),
        Op::ReferLocalPushConstant(0, list6886),
        Op::Push,
        Op::ReferFreeCall(0, 2),
        Op::PushEnter(1),
        Op::ReferLocal(0),
        Op::Test(6),
        Op::ReferLocal(0),
        Op::CdrPush,
        Op::ReferFree(2),
        Op::TailCall(1, 4),
        Op::LocalJmp(2),
        Op::ReferFree(1),
        Op::Leave(1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("mosh-insn->gosh-insn")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(109),
        Op::ReferFreePush(48),
        Op::ReferFreePush(191),
        Op::ReferFreePush(19),
        Op::ReferFreePush(153),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 5},
        Op::LetFrame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(4),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(3),
        Op::ReferFreePush(4),
        Op::Display(10),
        Op::Undef,
        Op::Push,
        Op::Undef,
        Op::Push,
        Op::Undef,
        Op::Push,
        Op::Box(2),
        Op::Box(1),
        Op::Box(0),
        Op::Enter(3),
        Op::ReferFreePush(0),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 1},
        Op::Frame(5),
        Op::Frame(2),
        Op::ReferFreeCall(0, 0),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("newline"), 1),
        Op::LetFrame(7),
        Op::ReferFreePush(0),
        Op::Display(1),
        Op::ReferLocalPush(0),
        Op::Enter(1),
        Op::LetFrame(6),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::Display(2),
        Op::ConstantPush(Object::Number(0)),
        Op::Enter(1),
        Op::ReferLocalPush(0),
        Op::ReferFree(1),
        Op::BranchNotNumberEqual(3),
        Op::Constant(Object::Nil),
        Op::LocalJmp(11),
        Op::Frame(6),
        Op::ConstantPush(Object::Char(' ')),
        Op::Frame(2),
        Op::ReferFreeCall(0, 0),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("display"), 2),
        Op::ReferLocalPushConstant(0, Object::Number(1)),
        Op::NumberAddPush,
        Op::Shiftj(1, 1, 0),
        Op::LocalJmp(-14),
        Op::Leave(1),
        Op::Leave(1),
        Op::Return(1),
        Op::AssignLocal(0),
        Op::ReferFreePush(1),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 1},
        Op::ConstantPush(str155),
        Op::ReferLocalPushConstant(0, Object::Number(1)),
        Op::VectorRef,
        Op::Push,
        Op::ReferLocalPushConstant(0, Object::Number(3)),
        Op::VectorRef,
        Op::Push,
        Op::ReferLocalPushConstant(0, Object::Number(4)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFree(0),
        Op::TailCall(4, 1),
        Op::Return(1),
        Op::AssignLocal(1),
        Op::ReferFreePush(7),
        Op::ReferFreePush(0),
        Op::ReferFreePush(1),
        Op::ReferFreePush(4),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(2),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 9},
        Op::ReferGlobalPush(vm.gc.intern("$CONST")),
        Op::ReferLocalPushConstant(1, Object::Number(0)),
        Op::VectorRef,
        Op::BranchNotEqv(11),
        Op::Frame(2),
        Op::ReferFreeCall(7, 0),
        Op::PushConstant(str156),
        Op::Push,
        Op::ReferLocalPushConstant(1, Object::Number(1)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFree(6),
        Op::TailCall(3, 2),
        Op::Return(2),
        Op::ReferGlobalPush(vm.gc.intern("$LIST")),
        Op::ReferLocalPushConstant(1, Object::Number(0)),
        Op::VectorRef,
        Op::BranchNotEqv(8),
        Op::Frame(2),
        Op::ReferFreeCall(7, 0),
        Op::PushConstant(str157),
        Op::Push,
        Op::ReferFree(6),
        Op::TailCall(2, 2),
        Op::Return(2),
        Op::ReferGlobalPush(vm.gc.intern("$UNDEF")),
        Op::ReferLocalPushConstant(1, Object::Number(0)),
        Op::VectorRef,
        Op::BranchNotEqv(8),
        Op::ConstantPush(str158),
        Op::Frame(2),
        Op::ReferFreeCall(7, 0),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("display")),
        Op::TailCall(2, 2),
        Op::Return(2),
        Op::ReferGlobalPush(vm.gc.intern("$LAMBDA")),
        Op::ReferLocalPushConstant(1, Object::Number(0)),
        Op::VectorRef,
        Op::BranchNotEqv(45),
        Op::Frame(22),
        Op::Frame(2),
        Op::ReferFreeCall(7, 0),
        Op::PushConstant(str159),
        Op::Push,
        Op::ReferLocalPushConstant(1, Object::Number(2)),
        Op::VectorRef,
        Op::PushFrame(5),
        Op::ReferLocalPushConstant(1, Object::Number(8)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFreeCall(5, 1),
        Op::PushFrame(8),
        Op::ReferFree(4),
        Op::Indirect,
        Op::Push,
        Op::ReferLocalPushConstant(1, Object::Number(5)),
        Op::VectorRef,
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("map"), 2),
        Op::Push,
        Op::ReferFreeCall(6, 5),
        Op::Frame(6),
        Op::ReferLocalPushConstant(0, Object::Number(2)),
        Op::NumberAddPush,
        Op::ReferFree(3),
        Op::Indirect,
        Op::LocalCall(1),
        Op::Frame(9),
        Op::ReferLocalPushConstant(0, Object::Number(2)),
        Op::NumberAddPush,
        Op::ReferLocalPushConstant(1, Object::Number(6)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFree(2),
        Op::Indirect,
        Op::LocalCall(2),
        Op::ConstantPush(str160),
        Op::Frame(2),
        Op::ReferFreeCall(7, 0),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("display")),
        Op::TailCall(2, 2),
        Op::Return(2),
        Op::ReferGlobalPush(vm.gc.intern("$SEQ")),
        Op::ReferLocalPushConstant(1, Object::Number(0)),
        Op::VectorRef,
        Op::BranchNotEqv(39),
        Op::Frame(6),
        Op::Frame(2),
        Op::ReferFreeCall(7, 0),
        Op::PushConstant(str161),
        Op::Push,
        Op::ReferFreeCall(6, 2),
        Op::Frame(25),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 3},
        Op::Frame(7),
        Op::ReferFreePush(2),
        Op::Constant(Object::Number(2)),
        Op::NumberAddPush,
        Op::ReferFree(1),
        Op::Indirect,
        Op::LocalCall(1),
        Op::ReferFreePush(2),
        Op::Constant(Object::Number(2)),
        Op::NumberAddPush,
        Op::ReferLocalPush(0),
        Op::ReferFree(0),
        Op::Indirect,
        Op::LocalTailCall(2, 1),
        Op::Return(1),
        Op::Push,
        Op::ReferLocalPushConstant(1, Object::Number(1)),
        Op::VectorRef,
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("for-each"), 2),
        Op::ConstantPush(str162),
        Op::Frame(2),
        Op::ReferFreeCall(7, 0),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("display")),
        Op::TailCall(2, 2),
        Op::Return(2),
        Op::ReferGlobalPush(vm.gc.intern("$LOCAL-REF")),
        Op::ReferLocalPushConstant(1, Object::Number(0)),
        Op::VectorRef,
        Op::BranchNotEqv(15),
        Op::Frame(2),
        Op::ReferFreeCall(7, 0),
        Op::PushConstant(str163),
        Op::PushFrame(7),
        Op::ReferLocalPushConstant(1, Object::Number(1)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFree(4),
        Op::Indirect,
        Op::LocalCall(1),
        Op::Push,
        Op::ReferFree(6),
        Op::TailCall(3, 2),
        Op::Return(2),
        Op::ReferGlobalPush(vm.gc.intern("$GLOBAL-REF")),
        Op::ReferLocalPushConstant(1, Object::Number(0)),
        Op::VectorRef,
        Op::BranchNotEqv(11),
        Op::Frame(2),
        Op::ReferFreeCall(7, 0),
        Op::PushConstant(str164),
        Op::Push,
        Op::ReferLocalPushConstant(1, Object::Number(1)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFree(6),
        Op::TailCall(3, 2),
        Op::Return(2),
        Op::ReferGlobalPush(vm.gc.intern("$LOCAL-ASSIGN")),
        Op::ReferLocalPushConstant(1, Object::Number(0)),
        Op::VectorRef,
        Op::BranchNotEqv(36),
        Op::Frame(13),
        Op::Frame(2),
        Op::ReferFreeCall(7, 0),
        Op::PushConstant(str165),
        Op::PushFrame(7),
        Op::ReferLocalPushConstant(1, Object::Number(1)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFree(4),
        Op::Indirect,
        Op::LocalCall(1),
        Op::Push,
        Op::ReferFreeCall(6, 3),
        Op::Frame(6),
        Op::ReferLocalPushConstant(0, Object::Number(2)),
        Op::NumberAddPush,
        Op::ReferFree(3),
        Op::Indirect,
        Op::LocalCall(1),
        Op::Frame(9),
        Op::ReferLocalPushConstant(0, Object::Number(2)),
        Op::NumberAddPush,
        Op::ReferLocalPushConstant(1, Object::Number(2)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFree(2),
        Op::Indirect,
        Op::LocalCall(2),
        Op::ConstantPush(str166),
        Op::Frame(2),
        Op::ReferFreeCall(7, 0),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("display")),
        Op::TailCall(2, 2),
        Op::Return(2),
        Op::ReferGlobalPush(vm.gc.intern("$GLOBAL-ASSIGN")),
        Op::ReferLocalPushConstant(1, Object::Number(0)),
        Op::VectorRef,
        Op::BranchNotEqv(11),
        Op::Frame(2),
        Op::ReferFreeCall(7, 0),
        Op::PushConstant(str167),
        Op::Push,
        Op::ReferLocalPushConstant(1, Object::Number(2)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFree(6),
        Op::TailCall(3, 2),
        Op::Return(2),
        Op::ReferGlobalPush(vm.gc.intern("$LET")),
        Op::ReferLocalPushConstant(1, Object::Number(0)),
        Op::VectorRef,
        Op::BranchNotEqv(158),
        Op::LetFrame(27),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::ReferFreePush(7),
        Op::ReferFreePush(4),
        Op::ReferFreePush(6),
        Op::ReferFreePush(2),
        Op::ReferFreePush(3),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(6),
        Op::Display(9),
        Op::Frame(20),
        Op::ConstantPush(str168),
        Op::LetFrame(4),
        Op::ReferLocalPushConstant(1, Object::Number(1)),
        Op::VectorRef,
        Op::PushEnter(1),
        Op::ConstantPush(sym770),
        Op::ReferLocal(0),
        Op::BranchNotEqv(3),
        Op::Constant(str169),
        Op::LocalJmp(7),
        Op::ConstantPush(sym794),
        Op::ReferLocal(0),
        Op::BranchNotEqv(3),
        Op::Constant(str170),
        Op::LocalJmp(2),
        Op::Undef,
        Op::Leave(1),
        Op::Push,
        Op::ReferFreeCall(0, 2),
        Op::PushEnter(1),
        Op::LetFrame(20),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(0),
        Op::ReferFreePush(7),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(8),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::Display(11),
        Op::ReferFreePush(1),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(0, 1),
        Op::NumberAddPush,
        Op::Enter(1),
        Op::Frame(6),
        Op::ReferFreePush(10),
        Op::Frame(2),
        Op::ReferFreeCall(9, 0),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("display"), 2),
        Op::Frame(67),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(9),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 7},
        Op::LetFrame(13),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::Display(8),
        Op::Frame(9),
        Op::ConstantPush(str171),
        Op::Frame(5),
        Op::ReferLocalPush(0),
        Op::ReferFree(1),
        Op::Indirect,
        Op::LocalCall(1),
        Op::Push,
        Op::ReferFreeCall(0, 2),
        Op::PushEnter(1),
        Op::Frame(6),
        Op::ReferLocalPush(0),
        Op::Frame(2),
        Op::ReferFreeCall(7, 0),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("display"), 2),
        Op::Frame(10),
        Op::ReferFreePush(6),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(5, 1),
        Op::NumberAddPush,
        Op::ReferFreePush(4),
        Op::ReferFree(3),
        Op::Indirect,
        Op::LocalCall(2),
        Op::Frame(6),
        Op::ConstantPush(str172),
        Op::Frame(2),
        Op::ReferFreeCall(7, 0),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("display"), 2),
        Op::ReferFreePush(6),
        Op::ReferFree(2),
        Op::Indirect,
        Op::LocalTailCall(1, 5),
        Op::Leave(1),
        Op::Return(2),
        Op::Push,
        Op::ReferFreePush(3),
        Op::Constant(Object::Number(2)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFreePush(3),
        Op::Constant(Object::Number(3)),
        Op::VectorRef,
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("for-each"), 3),
        Op::Frame(6),
        Op::ConstantPush(str173),
        Op::Frame(2),
        Op::ReferFreeCall(9, 0),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("display"), 2),
        Op::Frame(7),
        Op::ReferFreePush(1),
        Op::Constant(Object::Number(2)),
        Op::NumberAddPush,
        Op::ReferFree(4),
        Op::Indirect,
        Op::LocalCall(1),
        Op::Frame(11),
        Op::ReferFreePush(1),
        Op::Constant(Object::Number(2)),
        Op::NumberAddPush,
        Op::ReferFreePush(3),
        Op::Constant(Object::Number(4)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFree(5),
        Op::Indirect,
        Op::LocalCall(2),
        Op::ConstantPush(str174),
        Op::Frame(2),
        Op::ReferFreeCall(9, 0),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("display")),
        Op::TailCall(2, 8),
        Op::Leave(1),
        Op::Leave(1),
        Op::Return(2),
        Op::ReferGlobalPush(vm.gc.intern("$IF")),
        Op::ReferLocalPushConstant(1, Object::Number(0)),
        Op::VectorRef,
        Op::BranchNotEqv(53),
        Op::Frame(6),
        Op::ConstantPush(str175),
        Op::Frame(2),
        Op::ReferFreeCall(7, 0),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("display"), 2),
        Op::Frame(9),
        Op::ReferLocalPushConstant(0, Object::Number(5)),
        Op::NumberAddPush,
        Op::ReferLocalPushConstant(1, Object::Number(1)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFree(2),
        Op::Indirect,
        Op::LocalCall(2),
        Op::Frame(6),
        Op::ReferLocalPushConstant(0, Object::Number(2)),
        Op::NumberAddPush,
        Op::ReferFree(3),
        Op::Indirect,
        Op::LocalCall(1),
        Op::Frame(9),
        Op::ReferLocalPushConstant(0, Object::Number(2)),
        Op::NumberAddPush,
        Op::ReferLocalPushConstant(1, Object::Number(2)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFree(2),
        Op::Indirect,
        Op::LocalCall(2),
        Op::Frame(6),
        Op::ReferLocalPushConstant(0, Object::Number(2)),
        Op::NumberAddPush,
        Op::ReferFree(3),
        Op::Indirect,
        Op::LocalCall(1),
        Op::Frame(9),
        Op::ReferLocalPushConstant(0, Object::Number(2)),
        Op::NumberAddPush,
        Op::ReferLocalPushConstant(1, Object::Number(3)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFree(2),
        Op::Indirect,
        Op::LocalCall(2),
        Op::ConstantPush(str176),
        Op::Frame(2),
        Op::ReferFreeCall(7, 0),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("display")),
        Op::TailCall(2, 2),
        Op::Return(2),
        Op::ReferGlobalPush(vm.gc.intern("$RECEIVE")),
        Op::ReferLocalPushConstant(1, Object::Number(0)),
        Op::VectorRef,
        Op::BranchNotEqv(52),
        Op::Frame(14),
        Op::Frame(2),
        Op::ReferFreeCall(7, 0),
        Op::PushConstant(str177),
        Op::PushFrame(8),
        Op::ReferFree(4),
        Op::Indirect,
        Op::Push,
        Op::ReferLocalPushConstant(1, Object::Number(1)),
        Op::VectorRef,
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("map"), 2),
        Op::Push,
        Op::ReferFreeCall(6, 3),
        Op::Frame(6),
        Op::ReferLocalPushConstant(0, Object::Number(4)),
        Op::NumberAddPush,
        Op::ReferFree(3),
        Op::Indirect,
        Op::LocalCall(1),
        Op::Frame(9),
        Op::ReferLocalPushConstant(0, Object::Number(4)),
        Op::NumberAddPush,
        Op::ReferLocalPushConstant(1, Object::Number(4)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFree(2),
        Op::Indirect,
        Op::LocalCall(2),
        Op::Frame(6),
        Op::ReferLocalPushConstant(0, Object::Number(2)),
        Op::NumberAddPush,
        Op::ReferFree(3),
        Op::Indirect,
        Op::LocalCall(1),
        Op::Frame(9),
        Op::ReferLocalPushConstant(0, Object::Number(2)),
        Op::NumberAddPush,
        Op::ReferLocalPushConstant(1, Object::Number(5)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFree(2),
        Op::Indirect,
        Op::LocalCall(2),
        Op::ConstantPush(str178),
        Op::Frame(2),
        Op::ReferFreeCall(7, 0),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("display")),
        Op::TailCall(2, 2),
        Op::Return(2),
        Op::ReferGlobalPush(vm.gc.intern("$LABEL")),
        Op::ReferLocalPushConstant(1, Object::Number(0)),
        Op::VectorRef,
        Op::BranchNotEqv(81),
        Op::LetFrame(22),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(0),
        Op::Display(8),
        Op::Frame(4),
        Op::ReferLocalPushConstant(1, Object::Nil),
        Op::Push,
        Op::ReferFreeCall(0, 2),
        Op::PushEnter(1),
        Op::ReferLocal(0),
        Op::Test(10),
        Op::Frame(2),
        Op::ReferFreeCall(7, 0),
        Op::PushConstant(str179),
        Op::Push,
        Op::ReferLocal(0),
        Op::CdrPush,
        Op::ReferFree(6),
        Op::TailCall(3, 5),
        Op::LocalJmp(53),
        Op::LetFrame(16),
        Op::ReferFreePush(4),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(5),
        Op::Display(7),
        Op::Frame(3),
        Op::ConstantPush(Object::Nil),
        Op::ReferFreeCall(0, 1),
        Op::PushEnter(1),
        Op::Frame(7),
        Op::ConstantPush(Object::Nil),
        Op::ReferFreePush(6),
        Op::ReferLocal(0),
        Op::Cons,
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("push!"), 2),
        Op::Frame(7),
        Op::Frame(2),
        Op::ReferFreeCall(5, 0),
        Op::PushConstant(str180),
        Op::Push,
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(4, 3),
        Op::Frame(7),
        Op::ReferFreePush(3),
        Op::Constant(Object::Number(2)),
        Op::NumberAddPush,
        Op::ReferFree(2),
        Op::Indirect,
        Op::LocalCall(1),
        Op::Frame(11),
        Op::ReferFreePush(3),
        Op::Constant(Object::Number(2)),
        Op::NumberAddPush,
        Op::ReferFreePush(6),
        Op::Constant(Object::Number(1)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFree(1),
        Op::Indirect,
        Op::LocalCall(2),
        Op::ConstantPush(str181),
        Op::Frame(2),
        Op::ReferFreeCall(5, 0),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("display")),
        Op::TailCall(2, 8),
        Op::Leave(1),
        Op::Leave(1),
        Op::Return(2),
        Op::ReferGlobalPush(vm.gc.intern("$ASM")),
        Op::ReferLocalPushConstant(1, Object::Number(0)),
        Op::VectorRef,
        Op::BranchNotEqv(51),
        Op::LetFrame(6),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::Display(2),
        Op::Frame(5),
        Op::ReferLocalPushConstant(1, Object::Number(1)),
        Op::VectorRef,
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("mosh-insn->gosh-insn"), 1),
        Op::PushEnter(1),
        Op::Frame(7),
        Op::Frame(2),
        Op::ReferFreeCall(1, 0),
        Op::PushConstant(str182),
        Op::Push,
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(0, 3),
        Op::Leave(1),
        Op::Frame(25),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 3},
        Op::Frame(7),
        Op::ReferFreePush(2),
        Op::Constant(Object::Number(2)),
        Op::NumberAddPush,
        Op::ReferFree(1),
        Op::Indirect,
        Op::LocalCall(1),
        Op::ReferFreePush(2),
        Op::Constant(Object::Number(2)),
        Op::NumberAddPush,
        Op::ReferLocalPush(0),
        Op::ReferFree(0),
        Op::Indirect,
        Op::LocalTailCall(2, 1),
        Op::Return(1),
        Op::Push,
        Op::ReferLocalPushConstant(1, Object::Number(2)),
        Op::VectorRef,
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("for-each"), 2),
        Op::ConstantPush(str183),
        Op::Frame(2),
        Op::ReferFreeCall(7, 0),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("display")),
        Op::TailCall(2, 2),
        Op::Return(2),
        Op::ReferGlobalPush(vm.gc.intern("$DEFINE")),
        Op::ReferLocalPushConstant(1, Object::Number(0)),
        Op::VectorRef,
        Op::BranchNotEqv(32),
        Op::Frame(9),
        Op::Frame(2),
        Op::ReferFreeCall(7, 0),
        Op::PushConstant(str184),
        Op::Push,
        Op::ReferLocalPushConstant(1, Object::Number(1)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFreeCall(6, 3),
        Op::Frame(6),
        Op::ReferLocalPushConstant(0, Object::Number(2)),
        Op::NumberAddPush,
        Op::ReferFree(3),
        Op::Indirect,
        Op::LocalCall(1),
        Op::Frame(9),
        Op::ReferLocalPushConstant(0, Object::Number(2)),
        Op::NumberAddPush,
        Op::ReferLocalPushConstant(1, Object::Number(2)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFree(2),
        Op::Indirect,
        Op::LocalCall(2),
        Op::ConstantPush(str185),
        Op::Frame(2),
        Op::ReferFreeCall(7, 0),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("display")),
        Op::TailCall(2, 2),
        Op::Return(2),
        Op::ReferGlobalPush(vm.gc.intern("$CALL-CC")),
        Op::ReferLocalPushConstant(1, Object::Number(0)),
        Op::VectorRef,
        Op::BranchNotEqv(22),
        Op::Frame(6),
        Op::ConstantPush(str186),
        Op::Frame(2),
        Op::ReferFreeCall(7, 0),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("display"), 2),
        Op::Frame(8),
        Op::ConstantPush(Object::Number(0)),
        Op::ReferLocalPushConstant(1, Object::Number(1)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFree(2),
        Op::Indirect,
        Op::LocalCall(2),
        Op::ConstantPush(str187),
        Op::Frame(2),
        Op::ReferFreeCall(7, 0),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("display")),
        Op::TailCall(2, 2),
        Op::Return(2),
        Op::ReferGlobalPush(vm.gc.intern("$LABEL")),
        Op::ReferLocalPushConstant(1, Object::Number(0)),
        Op::VectorRef,
        Op::BranchNotEqv(22),
        Op::Frame(6),
        Op::ConstantPush(str188),
        Op::Frame(2),
        Op::ReferFreeCall(7, 0),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("display"), 2),
        Op::Frame(8),
        Op::ConstantPush(Object::Number(0)),
        Op::ReferLocalPushConstant(1, Object::Number(1)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFree(2),
        Op::Indirect,
        Op::LocalCall(2),
        Op::ConstantPush(str189),
        Op::Frame(2),
        Op::ReferFreeCall(7, 0),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("display")),
        Op::TailCall(2, 2),
        Op::Return(2),
        Op::ReferGlobalPush(vm.gc.intern("$IT")),
        Op::ReferLocalPushConstant(1, Object::Number(0)),
        Op::VectorRef,
        Op::BranchNotEqv(8),
        Op::ConstantPush(str190),
        Op::Frame(2),
        Op::ReferFreeCall(7, 0),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("display")),
        Op::TailCall(2, 2),
        Op::Return(2),
        Op::ReferGlobalPush(vm.gc.intern("$RECEIVE")),
        Op::ReferLocalPushConstant(1, Object::Number(0)),
        Op::VectorRef,
        Op::BranchNotEqv(52),
        Op::Frame(14),
        Op::Frame(2),
        Op::ReferFreeCall(7, 0),
        Op::PushConstant(str191),
        Op::PushFrame(8),
        Op::ReferFree(4),
        Op::Indirect,
        Op::Push,
        Op::ReferLocalPushConstant(1, Object::Number(1)),
        Op::VectorRef,
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("map"), 2),
        Op::Push,
        Op::ReferFreeCall(6, 3),
        Op::Frame(6),
        Op::ReferLocalPushConstant(0, Object::Number(4)),
        Op::NumberAddPush,
        Op::ReferFree(3),
        Op::Indirect,
        Op::LocalCall(1),
        Op::Frame(9),
        Op::ReferLocalPushConstant(0, Object::Number(4)),
        Op::NumberAddPush,
        Op::ReferLocalPushConstant(1, Object::Number(4)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFree(2),
        Op::Indirect,
        Op::LocalCall(2),
        Op::Frame(6),
        Op::ReferLocalPushConstant(0, Object::Number(2)),
        Op::NumberAddPush,
        Op::ReferFree(3),
        Op::Indirect,
        Op::LocalCall(1),
        Op::Frame(9),
        Op::ReferLocalPushConstant(0, Object::Number(2)),
        Op::NumberAddPush,
        Op::ReferLocalPushConstant(1, Object::Number(5)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFree(2),
        Op::Indirect,
        Op::LocalCall(2),
        Op::ConstantPush(str192),
        Op::Frame(2),
        Op::ReferFreeCall(7, 0),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("display")),
        Op::TailCall(2, 2),
        Op::Return(2),
        Op::ReferGlobalPush(vm.gc.intern("$CALL")),
        Op::ReferLocalPushConstant(1, Object::Number(0)),
        Op::VectorRef,
        Op::BranchNotEqv(80),
        Op::LetFrame(17),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(2),
        Op::ReferFreePush(3),
        Op::ReferFreePush(6),
        Op::Display(8),
        Op::LetFrame(4),
        Op::ReferFreePush(0),
        Op::Display(1),
        Op::ReferLocalPushConstant(1, Object::Number(4)),
        Op::VectorRef,
        Op::PushEnter(1),
        Op::ReferLocal(0),
        Op::Test(6),
        Op::Frame(6),
        Op::ConstantPush(str193),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(0, 2),
        Op::LocalJmp(2),
        Op::Constant(str194),
        Op::Leave(1),
        Op::PushEnter(1),
        Op::Frame(6),
        Op::Frame(2),
        Op::ReferFreeCall(7, 0),
        Op::Push,
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(0, 2),
        Op::Frame(13),
        Op::ReferFreePush(5),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(4, 1),
        Op::NumberAddPush,
        Op::ReferFreePush(3),
        Op::Constant(Object::Number(1)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFree(2),
        Op::Indirect,
        Op::LocalCall(2),
        Op::Frame(26),
        Op::ReferFreePush(5),
        Op::ReferFreePush(1),
        Op::ReferFreePush(2),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 3},
        Op::Frame(7),
        Op::ReferFreePush(2),
        Op::Constant(Object::Number(2)),
        Op::NumberAddPush,
        Op::ReferFree(1),
        Op::Indirect,
        Op::LocalCall(1),
        Op::ReferFreePush(2),
        Op::Constant(Object::Number(2)),
        Op::NumberAddPush,
        Op::ReferLocalPush(0),
        Op::ReferFree(0),
        Op::Indirect,
        Op::LocalTailCall(2, 1),
        Op::Return(1),
        Op::Push,
        Op::ReferFreePush(3),
        Op::Constant(Object::Number(2)),
        Op::VectorRef,
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("for-each"), 2),
        Op::ConstantPush(str195),
        Op::Frame(2),
        Op::ReferFreeCall(7, 0),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("display")),
        Op::TailCall(2, 5),
        Op::Leave(1),
        Op::Return(2),
        Op::ConstantPush(str196),
        Op::ReferLocalPushConstant(1, Object::Number(0)),
        Op::VectorRef,
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("error")),
        Op::TailCall(2, 2),
        Op::Return(2),
        Op::AssignLocal(2),
        Op::Frame(6),
        Op::ConstantPush(Object::Number(0)),
        Op::ReferFreePush(7),
        Op::ReferLocal(2),
        Op::Indirect,
        Op::LocalCall(2),
        Op::Frame(2),
        Op::ReferFreeCall(0, 0),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("newline")),
        Op::TailCall(1, 6),
        Op::Leave(3),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("pp-iform")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Constant(Object::Number(12)),
        Op::DefineGlobal(vm.gc.intern("SMALL_LAMBDA_SIZE")),
        Op::ReferGlobal(vm.gc.intern("$INSN-NUM")),
        Op::PushConstant(Object::Nil),
        Op::MakeVector,
        Op::DefineGlobal(vm.gc.intern("pass2/dispatch-table")),
        Op::Undef,
        Op::ReferFreePush(26),
        Op::ReferFreePush(89),
        Op::ReferFreePush(176),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 3},
        Op::ReferLocalPushConstant(0, Object::Number(7)),
        Op::VectorRef,
        Op::Test(3),
        Op::ReferLocal(0),
        Op::Return(2),
        Op::LetFrame(50),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(0),
        Op::Display(6),
        Op::ReferLocalPushConstant(0, Object::Number(2)),
        Op::VectorRef,
        Op::Push,
        Op::LetFrame(10),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(0),
        Op::Display(3),
        Op::ConstantPush(Object::Nil),
        Op::ReferLocalPushConstant(0, Object::Number(3)),
        Op::VectorRef,
        Op::PushEnter(2),
        Op::ReferLocalBranchNotNull(1, 5),
        Op::Frame(23),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(2, 1),
        Op::LocalJmp(20),
        Op::LetFrame(3),
        Op::ReferFreePush(1),
        Op::Display(1),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::Enter(1),
        Op::Frame(4),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::ReferGlobalCall(vm.gc.intern("pass2/optimize"), 2),
        Op::Leave(1),
        Op::Push,
        Op::ReferLocal(0),
        Op::Cons,
        Op::Push,
        Op::ReferLocal(1),
        Op::CdrPush,
        Op::Shiftj(2, 2, 0),
        Op::LocalJmp(-23),
        Op::Leave(2),
        Op::PushFrame(6),
        Op::ReferLocalPushConstant(0, Object::Number(4)),
        Op::VectorRef,
        Op::Push,
        Op::ReferLocalPush(1),
        Op::ReferGlobalCall(vm.gc.intern("pass2/optimize"), 2),
        Op::PushEnter(3),
        Op::ReferLocalBranchNotNull(0, 2),
        Op::LocalJmp(3),
        Op::ReferLocal(0),
        Op::PairP,
        Op::Test(3),
        Op::Undef,
        Op::LocalJmp(5),
        Op::Frame(4),
        Op::ConstantPush(str197),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("error"), 2),
        Op::Frame(5),
        Op::ReferGlobalPush(vm.gc.intern("pass2/optimize-closure")),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferGlobalCall(vm.gc.intern("for-each"), 3),
        Op::LetFrame(28),
        Op::ReferLocalPush(2),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(0),
        Op::Display(4),
        Op::Frame(4),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferGlobalCall(vm.gc.intern("pass2/remove-vars"), 2),
        Op::Receive(3, 0),
        Op::Enter(3),
        Op::ReferLocalBranchNotNull(0, 19),
        Op::ReferLocalBranchNotNull(2, 3),
        Op::ReferFree(3),
        Op::LocalJmp(63),
        Op::Frame(7),
        Op::ReferLocalPush(2),
        Op::Frame(3),
        Op::ReferFreePush(3),
        Op::ReferFreeCall(2, 1),
        Op::Push,
        Op::ReferFreeCall(1, 2),
        Op::Push,
        Op::ReferFreePush(0),
        Op::Constant(Object::Number(5)),
        Op::VectorRef,
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("$seq")),
        Op::TailCall(2, 12),
        Op::LocalJmp(48),
        Op::ReferFreePush(0),
        Op::ConstantPush(Object::Number(2)),
        Op::ReferLocal(0),
        Op::VectorSet,
        Op::ReferFreePush(0),
        Op::ConstantPush(Object::Number(3)),
        Op::ReferLocal(1),
        Op::VectorSet,
        Op::ReferFreePush(0),
        Op::ConstantPush(Object::Number(4)),
        Op::ReferFree(3),
        Op::VectorSet,
        Op::ReferLocalBranchNotNull(2, 3),
        Op::Undef,
        Op::LocalJmp(32),
        Op::ReferGlobalPush(vm.gc.intern("$SEQ")),
        Op::ReferFreePush(3),
        Op::Constant(Object::Number(0)),
        Op::VectorRef,
        Op::BranchNotEqv(12),
        Op::ReferFreePush(3),
        Op::ConstantPush(Object::Number(1)),
        Op::Frame(7),
        Op::ReferLocalPush(2),
        Op::ReferFreePush(3),
        Op::Constant(Object::Number(1)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFreeCall(1, 2),
        Op::VectorSet,
        Op::LocalJmp(16),
        Op::ReferFreePush(0),
        Op::ConstantPush(Object::Number(4)),
        Op::Frame(12),
        Op::ReferLocalPush(2),
        Op::Frame(3),
        Op::ReferFreePush(3),
        Op::ReferFreeCall(2, 1),
        Op::Append2,
        Op::Push,
        Op::ReferFreePush(0),
        Op::Constant(Object::Number(5)),
        Op::VectorRef,
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("$seq"), 2),
        Op::VectorSet,
        Op::ReferFree(0),
        Op::Leave(3),
        Op::Leave(3),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("pass2/$let")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 0},
        Op::ReferLocalPushConstant(0, Object::Number(4)),
        Op::PushFrame(6),
        Op::ReferLocalPushConstant(0, Object::Number(4)),
        Op::VectorRef,
        Op::Push,
        Op::ReferLocalPush(1),
        Op::ReferGlobalCall(vm.gc.intern("pass2/optimize"), 2),
        Op::VectorSet,
        Op::ReferLocalPushConstant(0, Object::Number(5)),
        Op::PushFrame(6),
        Op::ReferLocalPushConstant(0, Object::Number(5)),
        Op::VectorRef,
        Op::Push,
        Op::ReferLocalPush(1),
        Op::ReferGlobalCall(vm.gc.intern("pass2/optimize"), 2),
        Op::VectorSet,
        Op::ReferLocal(0),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("pass2/$receive")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 0},
        Op::LetFrame(42),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::Display(2),
        Op::ReferLocalPushConstant(0, Object::Number(1)),
        Op::VectorRef,
        Op::PushEnter(1),
        Op::Frame(5),
        Op::ReferLocalPushConstant(0, Object::Number(4)),
        Op::VectorRef,
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("zero?"), 1),
        Op::Test(94),
        Op::LetFrame(38),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::Display(3),
        Op::ReferLocalPushConstant(0, Object::Number(2)),
        Op::VectorRef,
        Op::PushEnter(1),
        Op::ReferLocal(0),
        Op::VectorP,
        Op::Test(80),
        Op::ReferGlobalPush(vm.gc.intern("$CONST")),
        Op::ReferLocalPushConstant(0, Object::Number(0)),
        Op::VectorRef,
        Op::BranchNotEqv(20),
        Op::ReferFreePush(1),
        Op::ConstantPush(Object::Number(3)),
        Op::ReferFreePush(1),
        Op::Constant(Object::Number(3)),
        Op::VectorRef,
        Op::PushConstant(Object::Number(1)),
        Op::NumberSub,
        Op::VectorSet,
        Op::ReferFreePush(2),
        Op::ConstantPush(Object::Number(0)),
        Op::ReferGlobal(vm.gc.intern("$CONST")),
        Op::VectorSet,
        Op::ReferFreePush(2),
        Op::ConstantPush(Object::Number(1)),
        Op::ReferLocalPushConstant(0, Object::Number(1)),
        Op::VectorRef,
        Op::VectorSet,
        Op::ReferFree(2),
        Op::LocalJmp(58),
        Op::ReferGlobalPush(vm.gc.intern("$LOCAL-REF")),
        Op::ReferLocalPushConstant(0, Object::Number(0)),
        Op::VectorRef,
        Op::BranchNotEqv(8),
        Op::Frame(7),
        Op::ReferLocalPushConstant(0, Object::Number(1)),
        Op::VectorRef,
        Op::PushConstant(Object::Number(4)),
        Op::VectorRef,
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("zero?"), 1),
        Op::Test(43),
        Op::ReferFreePush(2),
        Op::ReferLocal(0),
        Op::BranchNotEq(10),
        Op::Frame(10),
        Op::ConstantPush(str198),
        Op::ConstantPush(str199),
        Op::ReferFreePush(1),
        Op::Constant(Object::Number(1)),
        Op::VectorRef,
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("error"), 3),
        Op::LocalJmp(2),
        Op::Undef,
        Op::ReferFreePush(1),
        Op::ConstantPush(Object::Number(3)),
        Op::ReferFreePush(1),
        Op::Constant(Object::Number(3)),
        Op::VectorRef,
        Op::PushConstant(Object::Number(1)),
        Op::NumberSub,
        Op::VectorSet,
        Op::ReferLocalPushConstant(0, Object::Number(1)),
        Op::VectorRef,
        Op::PushConstant(Object::Number(3)),
        Op::Push,
        Op::ReferLocalPushConstant(0, Object::Number(1)),
        Op::VectorRef,
        Op::PushConstant(Object::Number(3)),
        Op::VectorRef,
        Op::PushConstant(Object::Number(1)),
        Op::NumberAdd,
        Op::VectorSet,
        Op::ReferFreePush(2),
        Op::ConstantPush(Object::Number(1)),
        Op::ReferLocalPushConstant(0, Object::Number(1)),
        Op::VectorRef,
        Op::VectorSet,
        Op::ReferFreePush(2),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("pass2/$local-ref")),
        Op::TailCall(2, 8),
        Op::LocalJmp(4),
        Op::ReferFree(2),
        Op::LocalJmp(2),
        Op::ReferFree(2),
        Op::Leave(1),
        Op::LocalJmp(2),
        Op::ReferFree(1),
        Op::Leave(1),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("pass2/$local-ref")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(26),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 1},
        Op::ReferLocalPushConstant(0, Object::Number(1)),
        Op::Push,
        Op::LetFrame(10),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(0),
        Op::Display(3),
        Op::ConstantPush(Object::Nil),
        Op::ReferLocalPushConstant(0, Object::Number(1)),
        Op::VectorRef,
        Op::PushEnter(2),
        Op::ReferLocalBranchNotNull(1, 5),
        Op::Frame(23),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(2, 1),
        Op::LocalJmp(20),
        Op::LetFrame(3),
        Op::ReferFreePush(1),
        Op::Display(1),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::Enter(1),
        Op::Frame(4),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::ReferGlobalCall(vm.gc.intern("pass2/optimize"), 2),
        Op::Leave(1),
        Op::Push,
        Op::ReferLocal(0),
        Op::Cons,
        Op::Push,
        Op::ReferLocal(1),
        Op::CdrPush,
        Op::Shiftj(2, 2, 0),
        Op::LocalJmp(-23),
        Op::Leave(2),
        Op::VectorSet,
        Op::ReferLocal(0),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("pass2/$seq")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(0),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 1},
        Op::LetFrame(52),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::Display(2),
        Op::ReferLocalPushConstant(0, Object::Number(1)),
        Op::VectorRef,
        Op::Push,
        Op::ReferLocalPushConstant(0, Object::Number(2)),
        Op::VectorRef,
        Op::PushEnter(2),
        Op::ConstantPush(sym806),
        Op::ReferLocal(0),
        Op::BranchNotEqv(49),
        Op::ReferGlobalPush(vm.gc.intern("$CONST")),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::Constant(Object::Number(0)),
        Op::VectorRef,
        Op::BranchNotEqv(22),
        Op::Frame(7),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::Constant(Object::Number(1)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFreeCall(1, 1),
        Op::Test(33),
        Op::ReferGlobalPush(vm.gc.intern("$CONST")),
        Op::ReferLocal(1),
        Op::Cadr,
        Op::PushConstant(Object::Number(0)),
        Op::VectorRef,
        Op::BranchNotEqv(8),
        Op::Frame(7),
        Op::ReferLocal(1),
        Op::Cadr,
        Op::PushConstant(Object::Number(1)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFreeCall(1, 1),
        Op::Test(19),
        Op::ReferFreePush(0),
        Op::ConstantPush(Object::Number(0)),
        Op::ReferGlobal(vm.gc.intern("$CONST")),
        Op::VectorSet,
        Op::ReferFreePush(0),
        Op::ConstantPush(Object::Number(1)),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::Constant(Object::Number(1)),
        Op::VectorRef,
        Op::Push,
        Op::ReferLocal(1),
        Op::Cadr,
        Op::PushConstant(Object::Number(1)),
        Op::VectorRef,
        Op::NumberAdd,
        Op::VectorSet,
        Op::LocalJmp(104),
        Op::Undef,
        Op::LocalJmp(102),
        Op::ConstantPush(sym809),
        Op::ReferLocal(0),
        Op::BranchNotEqv(49),
        Op::ReferGlobalPush(vm.gc.intern("$CONST")),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::Constant(Object::Number(0)),
        Op::VectorRef,
        Op::BranchNotEqv(22),
        Op::Frame(7),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::Constant(Object::Number(1)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFreeCall(1, 1),
        Op::Test(33),
        Op::ReferGlobalPush(vm.gc.intern("$CONST")),
        Op::ReferLocal(1),
        Op::Cadr,
        Op::PushConstant(Object::Number(0)),
        Op::VectorRef,
        Op::BranchNotEqv(8),
        Op::Frame(7),
        Op::ReferLocal(1),
        Op::Cadr,
        Op::PushConstant(Object::Number(1)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFreeCall(1, 1),
        Op::Test(19),
        Op::ReferFreePush(0),
        Op::ConstantPush(Object::Number(0)),
        Op::ReferGlobal(vm.gc.intern("$CONST")),
        Op::VectorSet,
        Op::ReferFreePush(0),
        Op::ConstantPush(Object::Number(1)),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::Constant(Object::Number(1)),
        Op::VectorRef,
        Op::Push,
        Op::ReferLocal(1),
        Op::Cadr,
        Op::PushConstant(Object::Number(1)),
        Op::VectorRef,
        Op::NumberMul,
        Op::VectorSet,
        Op::LocalJmp(53),
        Op::Undef,
        Op::LocalJmp(51),
        Op::ConstantPush(sym808),
        Op::ReferLocal(0),
        Op::BranchNotEqv(48),
        Op::ReferGlobalPush(vm.gc.intern("$CONST")),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::Constant(Object::Number(0)),
        Op::VectorRef,
        Op::BranchNotEqv(22),
        Op::Frame(7),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::Constant(Object::Number(1)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFreeCall(1, 1),
        Op::Test(33),
        Op::ReferGlobalPush(vm.gc.intern("$CONST")),
        Op::ReferLocal(1),
        Op::Cadr,
        Op::PushConstant(Object::Number(0)),
        Op::VectorRef,
        Op::BranchNotEqv(8),
        Op::Frame(7),
        Op::ReferLocal(1),
        Op::Cadr,
        Op::PushConstant(Object::Number(1)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFreeCall(1, 1),
        Op::Test(19),
        Op::ReferFreePush(0),
        Op::ConstantPush(Object::Number(0)),
        Op::ReferGlobal(vm.gc.intern("$CONST")),
        Op::VectorSet,
        Op::ReferFreePush(0),
        Op::ConstantPush(Object::Number(1)),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::Constant(Object::Number(1)),
        Op::VectorRef,
        Op::Push,
        Op::ReferLocal(1),
        Op::Cadr,
        Op::PushConstant(Object::Number(1)),
        Op::VectorRef,
        Op::NumberSub,
        Op::VectorSet,
        Op::LocalJmp(2),
        Op::Undef,
        Op::Leave(2),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("pass2/const-inliner")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(26),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 1},
        Op::ReferLocalPushConstant(0, Object::Number(2)),
        Op::Push,
        Op::LetFrame(10),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(0),
        Op::Display(3),
        Op::ConstantPush(Object::Nil),
        Op::ReferLocalPushConstant(0, Object::Number(2)),
        Op::VectorRef,
        Op::PushEnter(2),
        Op::ReferLocalBranchNotNull(1, 5),
        Op::Frame(23),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(2, 1),
        Op::LocalJmp(20),
        Op::LetFrame(3),
        Op::ReferFreePush(1),
        Op::Display(1),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::Enter(1),
        Op::Frame(4),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::ReferGlobalCall(vm.gc.intern("pass2/optimize"), 2),
        Op::Leave(1),
        Op::Push,
        Op::ReferLocal(0),
        Op::Cons,
        Op::Push,
        Op::ReferLocal(1),
        Op::CdrPush,
        Op::Shiftj(2, 2, 0),
        Op::LocalJmp(-23),
        Op::Leave(2),
        Op::VectorSet,
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("pass2/const-inliner"), 1),
        Op::ReferLocal(0),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("pass2/$asm")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 0},
        Op::ReferLocalPushConstant(0, Object::Number(6)),
        Op::PushFrame(9),
        Op::ReferLocalPushConstant(0, Object::Number(6)),
        Op::VectorRef,
        Op::Push,
        Op::ReferLocalPush(0),
        Op::ReferLocal(1),
        Op::Cons,
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("pass2/optimize"), 2),
        Op::VectorSet,
        Op::ReferLocal(0),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("pass2/$lambda")),
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(89),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 1},
        Op::LetFrame(34),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(0),
        Op::Display(3),
        Op::ReferLocalPushConstant(0, Object::Number(1)),
        Op::VectorRef,
        Op::PushEnter(1),
        Op::ReferGlobalPush(vm.gc.intern("$CONST")),
        Op::ReferLocalPushConstant(0, Object::Number(0)),
        Op::VectorRef,
        Op::BranchNotEqv(36),
        Op::ReferLocalPushConstant(0, Object::Number(1)),
        Op::VectorRef,
        Op::Test(17),
        Op::Frame(11),
        Op::ReferLocalPush(0),
        Op::Frame(7),
        Op::ReferFreePush(2),
        Op::Constant(Object::Number(2)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFreePush(1),
        Op::ReferGlobalCall(vm.gc.intern("pass2/optimize"), 2),
        Op::Push,
        Op::ReferFreeCall(0, 2),
        Op::PushConstant(Object::False),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("$seq")),
        Op::TailCall(2, 5),
        Op::LocalJmp(53),
        Op::Frame(11),
        Op::ReferLocalPush(0),
        Op::Frame(7),
        Op::ReferFreePush(2),
        Op::Constant(Object::Number(3)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFreePush(1),
        Op::ReferGlobalCall(vm.gc.intern("pass2/optimize"), 2),
        Op::Push,
        Op::ReferFreeCall(0, 2),
        Op::PushConstant(Object::False),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("$seq")),
        Op::TailCall(2, 5),
        Op::LocalJmp(37),
        Op::LetFrame(15),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::Display(6),
        Op::Frame(7),
        Op::ReferFreePush(1),
        Op::Constant(Object::Number(1)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFreePush(0),
        Op::ReferGlobalCall(vm.gc.intern("pass2/optimize"), 2),
        Op::PushFrame(7),
        Op::ReferFreePush(1),
        Op::Constant(Object::Number(2)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFreePush(0),
        Op::ReferGlobalCall(vm.gc.intern("pass2/optimize"), 2),
        Op::PushFrame(7),
        Op::ReferFreePush(1),
        Op::Constant(Object::Number(3)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFreePush(0),
        Op::ReferGlobalCall(vm.gc.intern("pass2/optimize"), 2),
        Op::PushEnter(3),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferGlobal(vm.gc.intern("$if")),
        Op::TailCall(3, 10),
        Op::Leave(3),
        Op::Leave(1),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("pass2/$if")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(158),
        Op::ReferFreePush(195),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 2},
        Op::Frame(13),
        Op::ReferLocalPushConstant(0, Object::Number(0)),
        Op::VectorRef,
        Op::Push,
        Op::ReferGlobalPush(vm.gc.intern("$LOCAL-REF")),
        Op::ReferGlobalPush(vm.gc.intern("$CONST")),
        Op::ReferGlobalPush(vm.gc.intern("$IT")),
        Op::Constant(Object::Nil),
        Op::Cons,
        Op::Cons,
        Op::Cons,
        Op::Push,
        Op::ReferFreeCall(1, 2),
        Op::Test(8),
        Op::ReferLocalPush(0),
        Op::Frame(4),
        Op::ReferLocalPushConstant(0, Object::Nil),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("iform-copy"), 2),
        Op::Values(2),
        Op::Return(1),
        Op::LetFrame(3),
        Op::ReferFreePush(0),
        Op::Display(1),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(0, 1),
        Op::PushEnter(1),
        Op::ReferLocalPush(0),
        Op::ReferLocal(0),
        Op::Values(2),
        Op::Leave(1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("pass2/label-or-dup")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(89),
        Op::Closure {size: 0, arg_len: 4, is_optional_arg: false, num_free_vars: 1},
        Op::ReferLocalPush(2),
        Op::ReferLocal(3),
        Op::BranchNotEq(9),
        Op::Frame(4),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferFreeCall(0, 2),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("$seq")),
        Op::TailCall(1, 4),
        Op::Return(4),
        Op::ReferLocalPushConstant(0, Object::Number(1)),
        Op::Push,
        Op::ReferLocal(1),
        Op::VectorSet,
        Op::ReferLocalPushConstant(0, Object::Number(2)),
        Op::Push,
        Op::ReferLocal(2),
        Op::VectorSet,
        Op::ReferLocalPushConstant(0, Object::Number(3)),
        Op::Push,
        Op::ReferLocal(3),
        Op::VectorSet,
        Op::ReferLocal(0),
        Op::Return(4),
        Op::DefineGlobal(vm.gc.intern("pass2/update-if")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 0},
        Op::ReferLocalPushConstant(0, Object::Number(2)),
        Op::PushFrame(6),
        Op::ReferLocalPushConstant(0, Object::Number(2)),
        Op::VectorRef,
        Op::Push,
        Op::ReferLocalPush(1),
        Op::ReferGlobalCall(vm.gc.intern("pass2/optimize"), 2),
        Op::VectorSet,
        Op::ReferLocal(0),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("pass2/$local-assign")),
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 0},
        Op::ReferLocalPushConstant(0, Object::Number(2)),
        Op::PushFrame(6),
        Op::ReferLocalPushConstant(0, Object::Number(2)),
        Op::VectorRef,
        Op::Push,
        Op::ReferLocalPush(1),
        Op::ReferGlobalCall(vm.gc.intern("pass2/optimize"), 2),
        Op::VectorSet,
        Op::ReferLocal(0),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("pass2/$global-assign")),
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 0},
        Op::ReferLocalPushConstant(0, Object::Number(2)),
        Op::PushFrame(6),
        Op::ReferLocalPushConstant(0, Object::Number(2)),
        Op::VectorRef,
        Op::Push,
        Op::ReferLocalPush(1),
        Op::ReferGlobalCall(vm.gc.intern("pass2/optimize"), 2),
        Op::VectorSet,
        Op::ReferLocal(0),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("pass2/$define")),
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(26),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 1},
        Op::ReferLocalPushConstant(0, Object::Number(4)),
        Op::VectorRef,
        Op::Test(3),
        Op::ReferLocal(0),
        Op::Return(2),
        Op::LetFrame(61),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(0),
        Op::Display(3),
        Op::ReferLocalPushConstant(0, Object::Number(1)),
        Op::VectorRef,
        Op::Push,
        Op::ReferLocalPushConstant(0, Object::Number(2)),
        Op::VectorRef,
        Op::PushEnter(2),
        Op::ReferFreePush(2),
        Op::ConstantPush(Object::Number(1)),
        Op::Frame(7),
        Op::ReferFreePush(2),
        Op::Constant(Object::Number(1)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFreePush(1),
        Op::ReferGlobalCall(vm.gc.intern("pass2/optimize"), 2),
        Op::VectorSet,
        Op::ReferGlobalPush(vm.gc.intern("$LAMBDA")),
        Op::ReferLocalPushConstant(0, Object::Number(0)),
        Op::VectorRef,
        Op::BranchNotEqv(10),
        Op::Frame(4),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferGlobalCall(vm.gc.intern("pass2/expand-inlined-procedure"), 2),
        Op::Push,
        Op::ReferFreePush(1),
        Op::ReferGlobal(vm.gc.intern("pass2/optimize")),
        Op::TailCall(2, 6),
        Op::LocalJmp(156),
        Op::LetFrame(46),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::ReferFreePush(1),
        Op::ReferFreePush(2),
        Op::Display(7),
        Op::ReferGlobalPush(vm.gc.intern("$LOCAL-REF")),
        Op::ReferLocalPushConstant(0, Object::Number(0)),
        Op::VectorRef,
        Op::BranchNotEqv(9),
        Op::Frame(8),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Constant(Object::Number(3)),
        Op::VectorRef,
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("pass2/classify-local-ref-call"), 3),
        Op::PushEnter(1),
        Op::ReferLocal(0),
        Op::Test(94),
        Op::ReferLocal(0),
        Op::VectorP,
        Op::Test(20),
        Op::ReferFreePush(0),
        Op::ConstantPush(Object::Number(1)),
        Op::ReferLocal(0),
        Op::VectorSet,
        Op::LetFrame(5),
        Op::ReferFreePush(1),
        Op::ReferFreePush(5),
        Op::Display(2),
        Op::Frame(4),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::ReferGlobalCall(vm.gc.intern("pass2/expand-inlined-procedure"), 2),
        Op::PushEnter(1),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::ReferGlobal(vm.gc.intern("pass2/optimize")),
        Op::TailCall(2, 12),
        Op::Leave(1),
        Op::LocalJmp(109),
        Op::ReferLocal(0),
        Op::Test(68),
        Op::LetFrame(21),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::ReferFreePush(5),
        Op::ReferFreePush(2),
        Op::ReferFreePush(3),
        Op::Display(6),
        Op::ReferFreePush(0),
        Op::Constant(Object::Number(1)),
        Op::VectorRef,
        Op::PushConstant(Object::Number(2)),
        Op::VectorRef,
        Op::PushEnter(1),
        Op::ReferFreePush(5),
        Op::ConstantPush(Object::Number(4)),
        Op::ReferFree(4),
        Op::VectorSet,
        Op::ReferLocalPushConstant(0, Object::Number(8)),
        Op::Push,
        Op::ReferFreePush(5),
        Op::ReferFree(3),
        Op::Cons,
        Op::Push,
        Op::ReferLocalPushConstant(0, Object::Number(8)),
        Op::VectorRef,
        Op::Cons,
        Op::VectorSet,
        Op::ReferFreePush(5),
        Op::ConstantPush(Object::Number(2)),
        Op::LetFrame(9),
        Op::ReferFreePush(1),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::Display(3),
        Op::ConstantPush(Object::Nil),
        Op::ReferFreePush(0),
        Op::Enter(2),
        Op::ReferLocalBranchNotNull(1, 5),
        Op::Frame(23),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(2, 1),
        Op::LocalJmp(20),
        Op::LetFrame(3),
        Op::ReferFreePush(1),
        Op::Display(1),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::Enter(1),
        Op::Frame(4),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::ReferGlobalCall(vm.gc.intern("pass2/optimize"), 2),
        Op::Leave(1),
        Op::Push,
        Op::ReferLocal(0),
        Op::Cons,
        Op::Push,
        Op::ReferLocal(1),
        Op::CdrPush,
        Op::Shiftj(2, 2, 0),
        Op::LocalJmp(-23),
        Op::Leave(2),
        Op::VectorSet,
        Op::ReferFree(5),
        Op::Leave(1),
        Op::LocalJmp(40),
        Op::ReferFree(0),
        Op::LocalJmp(38),
        Op::ReferFreePush(0),
        Op::ConstantPush(Object::Number(2)),
        Op::LetFrame(9),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(5),
        Op::Display(3),
        Op::ConstantPush(Object::Nil),
        Op::ReferFreePush(0),
        Op::Enter(2),
        Op::ReferLocalBranchNotNull(1, 5),
        Op::Frame(23),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(2, 1),
        Op::LocalJmp(20),
        Op::LetFrame(3),
        Op::ReferFreePush(1),
        Op::Display(1),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::Enter(1),
        Op::Frame(4),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::ReferGlobalCall(vm.gc.intern("pass2/optimize"), 2),
        Op::Leave(1),
        Op::Push,
        Op::ReferLocal(0),
        Op::Cons,
        Op::Push,
        Op::ReferLocal(1),
        Op::CdrPush,
        Op::Shiftj(2, 2, 0),
        Op::LocalJmp(-23),
        Op::Leave(2),
        Op::VectorSet,
        Op::ReferFree(0),
        Op::Leave(1),
        Op::Leave(2),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("pass2/$call")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 0},
        Op::ReferLocal(0),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("pass2/empty")),
        Op::Nop,
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 0},
        Op::ReferGlobalPush(vm.gc.intern("pass2/dispatch-table")),
        Op::ReferLocalPush(0),
        Op::ReferLocal(1),
        Op::VectorSet,
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("pass2/register")),
        Op::Nop,
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 0},
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferGlobalPush(vm.gc.intern("pass2/dispatch-table")),
        Op::ReferLocalPushConstant(0, Object::Number(0)),
        Op::VectorRef,
        Op::VectorRef,
        Op::TailCall(2, 2),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("pass2/optimize")),
        Op::Nop,
        Op::ReferFreePush(26),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 1},
        Op::LetFrame(22),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::Display(4),
        Op::LetFrame(16),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(0),
        Op::Display(2),
        Op::ConstantPush(Object::Nil),
        Op::ReferLocalPush(0),
        Op::Enter(2),
        Op::ReferLocalBranchNotNull(1, 5),
        Op::Frame(37),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(1, 1),
        Op::LocalJmp(34),
        Op::LetFrame(10),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::Enter(1),
        Op::LetFrame(9),
        Op::ReferLocalPush(0),
        Op::Display(1),
        Op::Frame(8),
        Op::ReferLocalPushConstant(0, Object::Number(1)),
        Op::VectorRef,
        Op::PushConstant(Object::Nil),
        Op::PushConstant(Object::Number(0)),
        Op::PushConstant(Object::Number(0)),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("$lvar"), 4),
        Op::PushEnter(1),
        Op::ReferLocalPushConstant(0, Object::Number(3)),
        Op::Push,
        Op::ReferFreePush(0),
        Op::Constant(Object::Number(3)),
        Op::VectorRef,
        Op::VectorSet,
        Op::ReferLocal(0),
        Op::Leave(1),
        Op::Leave(1),
        Op::Push,
        Op::ReferLocal(0),
        Op::Cons,
        Op::Push,
        Op::ReferLocal(1),
        Op::CdrPush,
        Op::Shiftj(2, 2, 0),
        Op::LocalJmp(-37),
        Op::Leave(2),
        Op::PushEnter(1),
        Op::ReferLocalPush(0),
        Op::Frame(6),
        Op::ReferGlobalPush(vm.gc.intern("alist-cons")),
        Op::ReferFreePush(3),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("foldr2"), 4),
        Op::Cons,
        Op::Leave(1),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("iform-copy-zip-lvs")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(153),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 1},
        Op::LetFrame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::Display(2),
        Op::Frame(4),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(0, 2),
        Op::PushEnter(1),
        Op::ReferLocal(0),
        Op::Test(4),
        Op::ReferLocal(0),
        Op::Cdr,
        Op::LocalJmp(2),
        Op::ReferFree(1),
        Op::Leave(1),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("iform-copy-lvar")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(196),
        Op::ReferFreePush(26),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 2},
        Op::LetFrame(154),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Display(4),
        Op::ReferLocalPushConstant(0, Object::Number(0)),
        Op::VectorRef,
        Op::PushEnter(1),
        Op::ReferGlobalPush(vm.gc.intern("$DEFINE")),
        Op::ReferLocal(0),
        Op::BranchNotNumberEqual(15),
        Op::ReferFreePush(3),
        Op::Constant(Object::Number(1)),
        Op::VectorRef,
        Op::PushFrame(7),
        Op::ReferFreePush(3),
        Op::Constant(Object::Number(2)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFreePush(2),
        Op::ReferGlobalCall(vm.gc.intern("iform-copy"), 2),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("$define")),
        Op::TailCall(2, 5),
        Op::LocalJmp(448),
        Op::ReferGlobalPush(vm.gc.intern("$LOCAL-REF")),
        Op::ReferLocal(0),
        Op::BranchNotNumberEqual(12),
        Op::Frame(7),
        Op::ReferFreePush(3),
        Op::Constant(Object::Number(1)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFreePush(2),
        Op::ReferGlobalCall(vm.gc.intern("iform-copy-lvar"), 2),
        Op::Push,
        Op::ReferFree(1),
        Op::TailCall(1, 5),
        Op::LocalJmp(434),
        Op::ReferGlobalPush(vm.gc.intern("$LOCAL-ASSIGN")),
        Op::ReferLocal(0),
        Op::BranchNotNumberEqual(19),
        Op::Frame(7),
        Op::ReferFreePush(3),
        Op::Constant(Object::Number(1)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFreePush(2),
        Op::ReferGlobalCall(vm.gc.intern("iform-copy-lvar"), 2),
        Op::PushFrame(7),
        Op::ReferFreePush(3),
        Op::Constant(Object::Number(2)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFreePush(2),
        Op::ReferGlobalCall(vm.gc.intern("iform-copy"), 2),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("$local-assign")),
        Op::TailCall(2, 5),
        Op::LocalJmp(413),
        Op::ReferGlobalPush(vm.gc.intern("$GLOBAL-REF")),
        Op::ReferLocal(0),
        Op::BranchNotNumberEqual(8),
        Op::ReferFreePush(3),
        Op::Constant(Object::Number(1)),
        Op::VectorRef,
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("$global-ref")),
        Op::TailCall(1, 5),
        Op::LocalJmp(403),
        Op::ReferGlobalPush(vm.gc.intern("$GLOBAL-ASSIGN")),
        Op::ReferLocal(0),
        Op::BranchNotNumberEqual(15),
        Op::ReferFreePush(3),
        Op::Constant(Object::Number(1)),
        Op::VectorRef,
        Op::PushFrame(7),
        Op::ReferFreePush(3),
        Op::Constant(Object::Number(2)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFreePush(2),
        Op::ReferGlobalCall(vm.gc.intern("iform-copy"), 2),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("$global-assign")),
        Op::TailCall(2, 5),
        Op::LocalJmp(386),
        Op::ReferGlobalPush(vm.gc.intern("$CONST")),
        Op::ReferLocal(0),
        Op::BranchNotNumberEqual(8),
        Op::ReferFreePush(3),
        Op::Constant(Object::Number(1)),
        Op::VectorRef,
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("$const")),
        Op::TailCall(1, 5),
        Op::LocalJmp(376),
        Op::ReferGlobalPush(vm.gc.intern("$IF")),
        Op::ReferLocal(0),
        Op::BranchNotNumberEqual(26),
        Op::Frame(7),
        Op::ReferFreePush(3),
        Op::Constant(Object::Number(1)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFreePush(2),
        Op::ReferGlobalCall(vm.gc.intern("iform-copy"), 2),
        Op::PushFrame(7),
        Op::ReferFreePush(3),
        Op::Constant(Object::Number(2)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFreePush(2),
        Op::ReferGlobalCall(vm.gc.intern("iform-copy"), 2),
        Op::PushFrame(7),
        Op::ReferFreePush(3),
        Op::Constant(Object::Number(3)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFreePush(2),
        Op::ReferGlobalCall(vm.gc.intern("iform-copy"), 2),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("$if")),
        Op::TailCall(3, 5),
        Op::LocalJmp(348),
        Op::ReferGlobalPush(vm.gc.intern("$LET")),
        Op::ReferLocal(0),
        Op::BranchNotNumberEqual(127),
        Op::LetFrame(33),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(0),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::Display(5),
        Op::Frame(7),
        Op::ReferFreePush(1),
        Op::Constant(Object::Number(2)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFreePush(0),
        Op::ReferGlobalCall(vm.gc.intern("iform-copy-zip-lvs"), 2),
        Op::PushEnter(1),
        Op::LetFrame(29),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(2),
        Op::Display(4),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::Enter(1),
        Op::LetFrame(28),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(3),
        Op::Display(5),
        Op::ReferFree(0),
        Op::CdrPush,
        Op::Enter(1),
        Op::ReferFreePush(4),
        Op::Constant(Object::Number(1)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFreePush(3),
        Op::LetFrame(15),
        Op::ReferFreePush(4),
        Op::ReferFreePush(1),
        Op::ReferFreePush(4),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(0),
        Op::Display(5),
        Op::LetFrame(4),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(2),
        Op::Display(3),
        Op::ReferFreePush(0),
        Op::Constant(Object::Number(1)),
        Op::VectorRef,
        Op::PushEnter(1),
        Op::ConstantPush(sym770),
        Op::ReferLocal(0),
        Op::BranchNotEqv(3),
        Op::ReferFree(2),
        Op::LocalJmp(7),
        Op::ConstantPush(sym794),
        Op::ReferLocal(0),
        Op::BranchNotEqv(3),
        Op::ReferFree(1),
        Op::LocalJmp(2),
        Op::Undef,
        Op::Leave(1),
        Op::PushEnter(1),
        Op::LetFrame(10),
        Op::ReferFreePush(3),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(2),
        Op::Display(3),
        Op::ConstantPush(Object::Nil),
        Op::ReferFreePush(0),
        Op::Constant(Object::Number(3)),
        Op::VectorRef,
        Op::PushEnter(2),
        Op::ReferLocalBranchNotNull(1, 5),
        Op::Frame(23),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(2, 1),
        Op::LocalJmp(20),
        Op::LetFrame(3),
        Op::ReferFreePush(1),
        Op::Display(1),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::Enter(1),
        Op::Frame(4),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::ReferGlobalCall(vm.gc.intern("iform-copy"), 2),
        Op::Leave(1),
        Op::Push,
        Op::ReferLocal(0),
        Op::Cons,
        Op::Push,
        Op::ReferLocal(1),
        Op::CdrPush,
        Op::Shiftj(2, 2, 0),
        Op::LocalJmp(-23),
        Op::Leave(2),
        Op::Leave(1),
        Op::PushFrame(7),
        Op::ReferFreePush(4),
        Op::Constant(Object::Number(4)),
        Op::VectorRef,
        Op::Push,
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("iform-copy"), 2),
        Op::Push,
        Op::ReferFreePush(4),
        Op::Constant(Object::Number(5)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFreePush(4),
        Op::Constant(Object::Number(6)),
        Op::VectorRef,
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("$let")),
        Op::TailCall(6, 14),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::LocalJmp(219),
        Op::ReferGlobalPush(vm.gc.intern("$LAMBDA")),
        Op::ReferLocal(0),
        Op::BranchNotNumberEqual(68),
        Op::LetFrame(23),
        Op::ReferFreePush(3),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::Display(3),
        Op::Frame(7),
        Op::ReferFreePush(1),
        Op::Constant(Object::Number(5)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFreePush(0),
        Op::ReferGlobalCall(vm.gc.intern("iform-copy-zip-lvs"), 2),
        Op::PushEnter(1),
        Op::LetFrame(19),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::Display(2),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::Enter(1),
        Op::LetFrame(18),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::Display(3),
        Op::ReferFree(0),
        Op::CdrPush,
        Op::Enter(1),
        Op::ReferFreePush(2),
        Op::Constant(Object::Number(1)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFreePush(2),
        Op::Constant(Object::Number(2)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFreePush(2),
        Op::Constant(Object::Number(3)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFreePush(2),
        Op::Constant(Object::Number(4)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFreePush(1),
        Op::Frame(7),
        Op::ReferFreePush(2),
        Op::Constant(Object::Number(6)),
        Op::VectorRef,
        Op::Push,
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("iform-copy"), 2),
        Op::Push,
        Op::ReferFreePush(2),
        Op::Constant(Object::Number(7)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFreePush(2),
        Op::Constant(Object::Number(8)),
        Op::VectorRef,
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("$lambda")),
        Op::TailCall(8, 14),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::LocalJmp(149),
        Op::ReferGlobalPush(vm.gc.intern("$SEQ")),
        Op::ReferLocal(0),
        Op::BranchNotNumberEqual(44),
        Op::LetFrame(10),
        Op::ReferFreePush(0),
        Op::ReferFreePush(2),
        Op::ReferFreePush(3),
        Op::Display(3),
        Op::ConstantPush(Object::Nil),
        Op::ReferFreePush(0),
        Op::Constant(Object::Number(1)),
        Op::VectorRef,
        Op::PushEnter(2),
        Op::ReferLocalBranchNotNull(1, 5),
        Op::Frame(23),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(2, 1),
        Op::LocalJmp(20),
        Op::LetFrame(3),
        Op::ReferFreePush(1),
        Op::Display(1),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::Enter(1),
        Op::Frame(4),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::ReferGlobalCall(vm.gc.intern("iform-copy"), 2),
        Op::Leave(1),
        Op::Push,
        Op::ReferLocal(0),
        Op::Cons,
        Op::Push,
        Op::ReferLocal(1),
        Op::CdrPush,
        Op::Shiftj(2, 2, 0),
        Op::LocalJmp(-23),
        Op::Leave(2),
        Op::Push,
        Op::ReferFreePush(3),
        Op::Constant(Object::Number(2)),
        Op::VectorRef,
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("$seq")),
        Op::TailCall(2, 5),
        Op::LocalJmp(103),
        Op::ReferGlobalPush(vm.gc.intern("$CALL")),
        Op::ReferLocal(0),
        Op::BranchNotNumberEqual(53),
        Op::Frame(7),
        Op::ReferFreePush(3),
        Op::Constant(Object::Number(1)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFreePush(2),
        Op::ReferGlobalCall(vm.gc.intern("iform-copy"), 2),
        Op::Push,
        Op::LetFrame(10),
        Op::ReferFreePush(0),
        Op::ReferFreePush(2),
        Op::ReferFreePush(3),
        Op::Display(3),
        Op::ConstantPush(Object::Nil),
        Op::ReferFreePush(0),
        Op::Constant(Object::Number(2)),
        Op::VectorRef,
        Op::PushEnter(2),
        Op::ReferLocalBranchNotNull(1, 5),
        Op::Frame(23),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(2, 1),
        Op::LocalJmp(20),
        Op::LetFrame(3),
        Op::ReferFreePush(1),
        Op::Display(1),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::Enter(1),
        Op::Frame(4),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::ReferGlobalCall(vm.gc.intern("iform-copy"), 2),
        Op::Leave(1),
        Op::Push,
        Op::ReferLocal(0),
        Op::Cons,
        Op::Push,
        Op::ReferLocal(1),
        Op::CdrPush,
        Op::Shiftj(2, 2, 0),
        Op::LocalJmp(-23),
        Op::Leave(2),
        Op::PushConstant(Object::False),
        Op::Push,
        Op::ReferFreePush(3),
        Op::Constant(Object::Number(4)),
        Op::VectorRef,
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("$call")),
        Op::TailCall(4, 5),
        Op::LocalJmp(48),
        Op::ReferGlobalPush(vm.gc.intern("$ASM")),
        Op::ReferLocal(0),
        Op::BranchNotNumberEqual(44),
        Op::ReferFreePush(3),
        Op::Constant(Object::Number(1)),
        Op::VectorRef,
        Op::Push,
        Op::LetFrame(10),
        Op::ReferFreePush(0),
        Op::ReferFreePush(2),
        Op::ReferFreePush(3),
        Op::Display(3),
        Op::ConstantPush(Object::Nil),
        Op::ReferFreePush(0),
        Op::Constant(Object::Number(2)),
        Op::VectorRef,
        Op::PushEnter(2),
        Op::ReferLocalBranchNotNull(1, 5),
        Op::Frame(23),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(2, 1),
        Op::LocalJmp(20),
        Op::LetFrame(3),
        Op::ReferFreePush(1),
        Op::Display(1),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::Enter(1),
        Op::Frame(4),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::ReferGlobalCall(vm.gc.intern("iform-copy"), 2),
        Op::Leave(1),
        Op::Push,
        Op::ReferLocal(0),
        Op::Cons,
        Op::Push,
        Op::ReferLocal(1),
        Op::CdrPush,
        Op::Shiftj(2, 2, 0),
        Op::LocalJmp(-23),
        Op::Leave(2),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("$asm")),
        Op::TailCall(2, 5),
        Op::LocalJmp(2),
        Op::ReferFree(3),
        Op::Leave(1),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("iform-copy")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(191),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 1},
        Op::Frame(5),
        Op::ReferLocalPushConstant(0, Object::Number(4)),
        Op::VectorRef,
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("zero?"), 1),
        Op::Test(67),
        Op::ReferLocalPushConstant(0, Object::Number(3)),
        Op::VectorRef,
        Op::PushConstant(Object::Number(0)),
        Op::BranchNotGt(63),
        Op::ReferGlobalPush(vm.gc.intern("$LAMBDA")),
        Op::ReferLocalPushConstant(1, Object::Number(0)),
        Op::VectorRef,
        Op::Eqv,
        Op::Test(58),
        Op::ReferLocalPushConstant(0, Object::Number(3)),
        Op::VectorRef,
        Op::PushFrame(5),
        Op::ReferLocalPushConstant(1, Object::Number(8)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFreeCall(0, 1),
        Op::BranchNotNumberEqual(45),
        Op::LetFrame(13),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::Display(2),
        Op::Frame(6),
        Op::ReferLocalPushConstant(1, Object::Number(8)),
        Op::VectorRef,
        Op::Push,
        Op::ReferLocalPush(1),
        Op::ReferGlobalCall(vm.gc.intern("pass2/classify-calls"), 2),
        Op::Receive(3, 0),
        Op::Enter(3),
        Op::ReferLocalBranchNotNull(1, 29),
        Op::ReferLocal(0),
        Op::PairP,
        Op::Test(26),
        Op::ReferLocal(0),
        Op::Cdr,
        Op::BranchNotNull(10),
        Op::Frame(7),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::ReferLocalPush(2),
        Op::ReferGlobalCall(vm.gc.intern("pass2/local-call-embedder"), 4),
        Op::Test(2),
        Op::LocalJmp(14),
        Op::ReferLocalBranchNotNull(2, 13),
        Op::Frame(4),
        Op::ReferFreePush(0),
        Op::ReferGlobalPush(vm.gc.intern("SMALL_LAMBDA_SIZE")),
        Op::ReferGlobalCall(vm.gc.intern("iform-count-size-upto"), 2),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("SMALL_LAMBDA_SIZE")),
        Op::BranchNotLt(6),
        Op::Frame(5),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("pass2/local-call-inliner"), 3),
        Op::Leave(3),
        Op::Test(2),
        Op::Return(2),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferGlobal(vm.gc.intern("pass2/local-call-optimizer")),
        Op::TailCall(2, 2),
        Op::Return(2),
        Op::Undef,
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("pass2/optimize-closure")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Undef,
        Op::ReferFreePush(48),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 1},
        Op::LetFrame(2),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(0),
        Op::Display(5),
        Op::Undef,
        Op::Push,
        Op::Undef,
        Op::Push,
        Op::Box(1),
        Op::Box(0),
        Op::Enter(2),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(0),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 5},
        Op::LetFrame(117),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Display(6),
        Op::ReferLocalPushConstant(0, Object::Number(0)),
        Op::VectorRef,
        Op::PushEnter(1),
        Op::ReferGlobalPush(vm.gc.intern("$DEFINE")),
        Op::ReferLocal(0),
        Op::BranchNotNumberEqual(27),
        Op::LetFrame(6),
        Op::ReferFreePush(2),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::Display(4),
        Op::Frame(11),
        Op::ReferFreePush(2),
        Op::Constant(Object::Number(2)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFreePush(1),
        Op::Constant(Object::Number(1)),
        Op::NumberAddPush,
        Op::ReferFree(0),
        Op::Indirect,
        Op::LocalCall(2),
        Op::PushEnter(1),
        Op::ReferLocalPush(0),
        Op::ReferFree(3),
        Op::BranchNotGe(3),
        Op::ReferFree(3),
        Op::LocalJmp(2),
        Op::ReferLocal(0),
        Op::Leave(1),
        Op::LocalJmp(455),
        Op::ReferGlobalPush(vm.gc.intern("$LOCAL-REF")),
        Op::ReferLocal(0),
        Op::BranchNotNumberEqual(5),
        Op::ReferFreePush(4),
        Op::Constant(Object::Number(1)),
        Op::NumberAdd,
        Op::LocalJmp(448),
        Op::ReferGlobalPush(vm.gc.intern("$UNDEF")),
        Op::ReferLocal(0),
        Op::BranchNotNumberEqual(3),
        Op::ReferFree(4),
        Op::LocalJmp(443),
        Op::ReferGlobalPush(vm.gc.intern("$GLOBAL-REF")),
        Op::ReferLocal(0),
        Op::BranchNotNumberEqual(5),
        Op::ReferFreePush(4),
        Op::Constant(Object::Number(1)),
        Op::NumberAdd,
        Op::LocalJmp(436),
        Op::ReferGlobalPush(vm.gc.intern("$CONST")),
        Op::ReferLocal(0),
        Op::BranchNotNumberEqual(5),
        Op::ReferFreePush(4),
        Op::Constant(Object::Number(1)),
        Op::NumberAdd,
        Op::LocalJmp(429),
        Op::ReferGlobalPush(vm.gc.intern("$LOCAL-ASSIGN")),
        Op::ReferLocal(0),
        Op::BranchNotNumberEqual(27),
        Op::LetFrame(6),
        Op::ReferFreePush(2),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::Display(4),
        Op::Frame(11),
        Op::ReferFreePush(2),
        Op::Constant(Object::Number(2)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFreePush(1),
        Op::Constant(Object::Number(1)),
        Op::NumberAddPush,
        Op::ReferFree(0),
        Op::Indirect,
        Op::LocalCall(2),
        Op::PushEnter(1),
        Op::ReferLocalPush(0),
        Op::ReferFree(3),
        Op::BranchNotGe(3),
        Op::ReferFree(3),
        Op::LocalJmp(2),
        Op::ReferLocal(0),
        Op::Leave(1),
        Op::LocalJmp(400),
        Op::ReferGlobalPush(vm.gc.intern("$GLOBAL-ASSIGN")),
        Op::ReferLocal(0),
        Op::BranchNotNumberEqual(27),
        Op::LetFrame(6),
        Op::ReferFreePush(2),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::Display(4),
        Op::Frame(11),
        Op::ReferFreePush(2),
        Op::Constant(Object::Number(2)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFreePush(1),
        Op::Constant(Object::Number(1)),
        Op::NumberAddPush,
        Op::ReferFree(0),
        Op::Indirect,
        Op::LocalCall(2),
        Op::PushEnter(1),
        Op::ReferLocalPush(0),
        Op::ReferFree(3),
        Op::BranchNotGe(3),
        Op::ReferFree(3),
        Op::LocalJmp(2),
        Op::ReferLocal(0),
        Op::Leave(1),
        Op::LocalJmp(371),
        Op::ReferGlobalPush(vm.gc.intern("$IF")),
        Op::ReferLocal(0),
        Op::BranchNotNumberEqual(74),
        Op::LetFrame(16),
        Op::ReferFreePush(2),
        Op::ReferFreePush(5),
        Op::ReferFreePush(3),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::Display(6),
        Op::Frame(11),
        Op::ReferFreePush(2),
        Op::Constant(Object::Number(1)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFreePush(1),
        Op::Constant(Object::Number(1)),
        Op::NumberAddPush,
        Op::ReferFree(0),
        Op::Indirect,
        Op::LocalCall(2),
        Op::PushEnter(1),
        Op::ReferLocalPush(0),
        Op::ReferFree(5),
        Op::BranchNotGe(3),
        Op::ReferFree(5),
        Op::LocalJmp(47),
        Op::LetFrame(10),
        Op::ReferFreePush(5),
        Op::ReferFreePush(2),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(2),
        Op::ReferFreePush(0),
        Op::Display(6),
        Op::Frame(9),
        Op::ReferFreePush(1),
        Op::Constant(Object::Number(2)),
        Op::VectorRef,
        Op::Push,
        Op::ReferLocalPush(0),
        Op::ReferFree(0),
        Op::Indirect,
        Op::LocalCall(2),
        Op::PushEnter(1),
        Op::ReferLocalPush(0),
        Op::ReferFree(5),
        Op::BranchNotGe(3),
        Op::ReferFree(5),
        Op::LocalJmp(23),
        Op::LetFrame(5),
        Op::ReferFreePush(5),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Display(3),
        Op::Frame(9),
        Op::ReferFreePush(1),
        Op::Constant(Object::Number(3)),
        Op::VectorRef,
        Op::Push,
        Op::ReferLocalPush(0),
        Op::ReferFree(0),
        Op::Indirect,
        Op::LocalCall(2),
        Op::PushEnter(1),
        Op::ReferLocalPush(0),
        Op::ReferFree(2),
        Op::BranchNotGe(3),
        Op::ReferFree(2),
        Op::LocalJmp(2),
        Op::ReferLocal(0),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::LocalJmp(295),
        Op::ReferGlobalPush(vm.gc.intern("$LET")),
        Op::ReferLocal(0),
        Op::BranchNotNumberEqual(50),
        Op::LetFrame(11),
        Op::ReferFreePush(2),
        Op::ReferFreePush(5),
        Op::ReferFreePush(3),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(1),
        Op::Display(6),
        Op::Frame(11),
        Op::ReferFreePush(2),
        Op::Constant(Object::Number(3)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFreePush(1),
        Op::Constant(Object::Number(1)),
        Op::NumberAddPush,
        Op::ReferFree(0),
        Op::Indirect,
        Op::LocalCall(2),
        Op::PushEnter(1),
        Op::ReferLocalPush(0),
        Op::ReferFree(5),
        Op::BranchNotGe(3),
        Op::ReferFree(5),
        Op::LocalJmp(23),
        Op::LetFrame(5),
        Op::ReferFreePush(5),
        Op::ReferFreePush(2),
        Op::ReferFreePush(3),
        Op::Display(3),
        Op::Frame(9),
        Op::ReferFreePush(1),
        Op::Constant(Object::Number(4)),
        Op::VectorRef,
        Op::Push,
        Op::ReferLocalPush(0),
        Op::ReferFree(0),
        Op::Indirect,
        Op::LocalCall(2),
        Op::PushEnter(1),
        Op::ReferLocalPush(0),
        Op::ReferFree(2),
        Op::BranchNotGe(3),
        Op::ReferFree(2),
        Op::LocalJmp(2),
        Op::ReferLocal(0),
        Op::Leave(1),
        Op::Leave(1),
        Op::LocalJmp(243),
        Op::ReferGlobalPush(vm.gc.intern("$LAMBDA")),
        Op::ReferLocal(0),
        Op::BranchNotNumberEqual(27),
        Op::LetFrame(6),
        Op::ReferFreePush(2),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::Display(4),
        Op::Frame(11),
        Op::ReferFreePush(2),
        Op::Constant(Object::Number(6)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFreePush(1),
        Op::Constant(Object::Number(1)),
        Op::NumberAddPush,
        Op::ReferFree(0),
        Op::Indirect,
        Op::LocalCall(2),
        Op::PushEnter(1),
        Op::ReferLocalPush(0),
        Op::ReferFree(3),
        Op::BranchNotGe(3),
        Op::ReferFree(3),
        Op::LocalJmp(2),
        Op::ReferLocal(0),
        Op::Leave(1),
        Op::LocalJmp(214),
        Op::ReferGlobalPush(vm.gc.intern("$LABEL")),
        Op::ReferLocal(0),
        Op::BranchNotNumberEqual(25),
        Op::LetFrame(5),
        Op::ReferFreePush(2),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::Display(4),
        Op::Frame(9),
        Op::ReferFreePush(2),
        Op::Constant(Object::Number(1)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFreePush(1),
        Op::ReferFree(0),
        Op::Indirect,
        Op::LocalCall(2),
        Op::PushEnter(1),
        Op::ReferLocalPush(0),
        Op::ReferFree(3),
        Op::BranchNotGe(3),
        Op::ReferFree(3),
        Op::LocalJmp(2),
        Op::ReferLocal(0),
        Op::Leave(1),
        Op::LocalJmp(187),
        Op::ReferGlobalPush(vm.gc.intern("$SEQ")),
        Op::ReferLocal(0),
        Op::BranchNotNumberEqual(25),
        Op::LetFrame(5),
        Op::ReferFreePush(2),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(1),
        Op::Display(4),
        Op::Frame(9),
        Op::ReferFreePush(2),
        Op::Constant(Object::Number(1)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFreePush(1),
        Op::ReferFree(0),
        Op::Indirect,
        Op::LocalCall(2),
        Op::PushEnter(1),
        Op::ReferLocalPush(0),
        Op::ReferFree(3),
        Op::BranchNotGe(3),
        Op::ReferFree(3),
        Op::LocalJmp(2),
        Op::ReferLocal(0),
        Op::Leave(1),
        Op::LocalJmp(160),
        Op::ReferGlobalPush(vm.gc.intern("$CALL")),
        Op::ReferLocal(0),
        Op::BranchNotNumberEqual(50),
        Op::LetFrame(11),
        Op::ReferFreePush(2),
        Op::ReferFreePush(5),
        Op::ReferFreePush(1),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::Display(6),
        Op::Frame(11),
        Op::ReferFreePush(2),
        Op::Constant(Object::Number(1)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFreePush(1),
        Op::Constant(Object::Number(1)),
        Op::NumberAddPush,
        Op::ReferFree(0),
        Op::Indirect,
        Op::LocalCall(2),
        Op::PushEnter(1),
        Op::ReferLocalPush(0),
        Op::ReferFree(5),
        Op::BranchNotGe(3),
        Op::ReferFree(5),
        Op::LocalJmp(23),
        Op::LetFrame(5),
        Op::ReferFreePush(5),
        Op::ReferFreePush(2),
        Op::ReferFreePush(3),
        Op::Display(3),
        Op::Frame(9),
        Op::ReferFreePush(1),
        Op::Constant(Object::Number(2)),
        Op::VectorRef,
        Op::Push,
        Op::ReferLocalPush(0),
        Op::ReferFree(0),
        Op::Indirect,
        Op::LocalCall(2),
        Op::PushEnter(1),
        Op::ReferLocalPush(0),
        Op::ReferFree(2),
        Op::BranchNotGe(3),
        Op::ReferFree(2),
        Op::LocalJmp(2),
        Op::ReferLocal(0),
        Op::Leave(1),
        Op::Leave(1),
        Op::LocalJmp(108),
        Op::ReferGlobalPush(vm.gc.intern("$ASM")),
        Op::ReferLocal(0),
        Op::BranchNotNumberEqual(27),
        Op::LetFrame(6),
        Op::ReferFreePush(2),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(1),
        Op::Display(4),
        Op::Frame(11),
        Op::ReferFreePush(2),
        Op::Constant(Object::Number(2)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFreePush(1),
        Op::Constant(Object::Number(1)),
        Op::NumberAddPush,
        Op::ReferFree(0),
        Op::Indirect,
        Op::LocalCall(2),
        Op::PushEnter(1),
        Op::ReferLocalPush(0),
        Op::ReferFree(3),
        Op::BranchNotGe(3),
        Op::ReferFree(3),
        Op::LocalJmp(2),
        Op::ReferLocal(0),
        Op::Leave(1),
        Op::LocalJmp(79),
        Op::ReferGlobalPush(vm.gc.intern("$IT")),
        Op::ReferLocal(0),
        Op::BranchNotNumberEqual(3),
        Op::ReferFree(4),
        Op::LocalJmp(74),
        Op::ReferGlobalPush(vm.gc.intern("$LIST")),
        Op::ReferLocal(0),
        Op::BranchNotNumberEqual(3),
        Op::ReferFree(4),
        Op::LocalJmp(69),
        Op::ReferGlobalPush(vm.gc.intern("$RECEIVE")),
        Op::ReferLocal(0),
        Op::BranchNotNumberEqual(50),
        Op::LetFrame(11),
        Op::ReferFreePush(2),
        Op::ReferFreePush(5),
        Op::ReferFreePush(3),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::Display(6),
        Op::Frame(11),
        Op::ReferFreePush(2),
        Op::Constant(Object::Number(4)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFreePush(1),
        Op::Constant(Object::Number(1)),
        Op::NumberAddPush,
        Op::ReferFree(0),
        Op::Indirect,
        Op::LocalCall(2),
        Op::PushEnter(1),
        Op::ReferLocalPush(0),
        Op::ReferFree(5),
        Op::BranchNotGe(3),
        Op::ReferFree(5),
        Op::LocalJmp(23),
        Op::LetFrame(5),
        Op::ReferFreePush(5),
        Op::ReferFreePush(2),
        Op::ReferFreePush(0),
        Op::Display(3),
        Op::Frame(9),
        Op::ReferFreePush(1),
        Op::Constant(Object::Number(5)),
        Op::VectorRef,
        Op::Push,
        Op::ReferLocalPush(0),
        Op::ReferFree(0),
        Op::Indirect,
        Op::LocalCall(2),
        Op::PushEnter(1),
        Op::ReferLocalPush(0),
        Op::ReferFree(2),
        Op::BranchNotGe(3),
        Op::ReferFree(2),
        Op::LocalJmp(2),
        Op::ReferLocal(0),
        Op::Leave(1),
        Op::Leave(1),
        Op::LocalJmp(17),
        Op::ReferGlobalPush(vm.gc.intern("$CALL-CC")),
        Op::ReferLocal(0),
        Op::BranchNotNumberEqual(3),
        Op::ReferFree(4),
        Op::LocalJmp(12),
        Op::ConstantPush(sym668),
        Op::Frame(7),
        Op::ConstantPush(str200),
        Op::ReferFreePush(5),
        Op::Constant(Object::Number(0)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFreeCall(0, 2),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("error")),
        Op::TailCall(2, 5),
        Op::Leave(1),
        Op::Return(2),
        Op::AssignLocal(0),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 3},
        Op::ReferLocalBranchNotNull(0, 3),
        Op::ReferLocal(1),
        Op::Return(2),
        Op::ReferLocalPush(1),
        Op::ReferFree(2),
        Op::BranchNotGe(3),
        Op::ReferFree(2),
        Op::Return(2),
        Op::ReferLocal(0),
        Op::Cdr,
        Op::PushFrame(7),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::ReferLocalPush(1),
        Op::ReferFree(1),
        Op::Indirect,
        Op::LocalCall(2),
        Op::Push,
        Op::ReferFree(0),
        Op::Indirect,
        Op::LocalTailCall(2, 2),
        Op::Return(2),
        Op::AssignLocal(1),
        Op::ReferFreePush(2),
        Op::ConstantPush(Object::Number(0)),
        Op::ReferLocal(0),
        Op::Indirect,
        Op::LocalTailCall(2, 6),
        Op::Leave(2),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("iform-count-size-upto")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(434),
        Op::ReferFreePush(191),
        Op::ReferFreePush(66),
        Op::ReferFreePush(89),
        Op::Closure {size: 0, arg_len: 5, is_optional_arg: false, num_free_vars: 4},
        Op::Frame(7),
        Op::ReferLocalPush(2),
        Op::ReferLocalPush(0),
        Op::ReferLocalPushConstant(1, Object::Number(0)),
        Op::NumberGt,
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("argcount-ok?"), 3),
        Op::Test(3),
        Op::Undef,
        Op::LocalJmp(43),
        Op::ReferLocal(4),
        Op::Test(29),
        Op::ReferLocal(4),
        Op::PairP,
        Op::Test(26),
        Op::ReferLocal(4),
        Op::Car,
        Op::PairP,
        Op::Test(22),
        Op::Frame(33),
        Op::ConstantPush(str201),
        Op::Frame(3),
        Op::ReferLocalPush(3),
        Op::ReferFreeCall(3, 1),
        Op::Push,
        Op::ReferLocalPush(0),
        Op::Frame(3),
        Op::ReferLocalPush(2),
        Op::ReferFreeCall(2, 1),
        Op::Push,
        Op::ReferLocal(4),
        Op::CdrPush,
        Op::ReferLocal(4),
        Op::Caar,
        Op::PushFrame(3),
        Op::ReferLocalPush(4),
        Op::ReferFreeCall(1, 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("errorf"), 7),
        Op::LocalJmp(13),
        Op::Frame(12),
        Op::ConstantPush(str202),
        Op::Frame(3),
        Op::ReferLocalPush(3),
        Op::ReferFreeCall(3, 1),
        Op::Push,
        Op::ReferLocalPush(0),
        Op::Frame(3),
        Op::ReferLocalPush(2),
        Op::ReferFreeCall(2, 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("errorf"), 4),
        Op::Frame(3),
        Op::ReferLocalPush(1),
        Op::ReferGlobalCall(vm.gc.intern("zero?"), 1),
        Op::Test(3),
        Op::ReferLocal(2),
        Op::Return(5),
        Op::LetFrame(5),
        Op::ReferFreePush(0),
        Op::Display(1),
        Op::Frame(4),
        Op::ReferLocalPush(2),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("split-at"), 2),
        Op::Receive(2, 0),
        Op::Enter(2),
        Op::ReferLocalPush(0),
        Op::Frame(6),
        Op::Frame(3),
        Op::ReferLocalPush(1),
        Op::ReferGlobalCall(vm.gc.intern("$list"), 1),
        Op::Push,
        Op::ReferFreeCall(0, 1),
        Op::Append2,
        Op::Leave(2),
        Op::Return(5),
        Op::DefineGlobal(vm.gc.intern("adjust-arglist")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(191),
        Op::Closure {size: 0, arg_len: 3, is_optional_arg: false, num_free_vars: 1},
        Op::LetFrame(4),
        Op::ReferLocalPush(2),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(0),
        Op::Display(3),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(0, 1),
        Op::PushEnter(1),
        Op::ReferFree(2),
        Op::NotTest(4),
        Op::ReferLocalPush(0),
        Op::ReferFree(1),
        Op::NumberEqual,
        Op::Test(2),
        Op::LocalJmp(6),
        Op::ReferFree(2),
        Op::Test(4),
        Op::ReferLocalPush(0),
        Op::ReferFree(1),
        Op::NumberGe,
        Op::Leave(1),
        Op::Return(3),
        Op::DefineGlobal(vm.gc.intern("argcount-ok?")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(89),
        Op::Closure {size: 0, arg_len: 3, is_optional_arg: false, num_free_vars: 1},
        Op::LetFrame(12),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(0),
        Op::Display(5),
        Op::Undef,
        Op::Push,
        Op::Box(0),
        Op::Enter(1),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 2},
        Op::LetFrame(14),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::Display(2),
        Op::Frame(6),
        Op::ReferLocalPush(1),
        Op::ReferLocalPushConstant(0, Object::Number(2)),
        Op::VectorRef,
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("pass2/expand-inlined-procedure"), 2),
        Op::PushEnter(1),
        Op::ReferFreePush(1),
        Op::ConstantPush(Object::Number(0)),
        Op::ReferGlobal(vm.gc.intern("$SEQ")),
        Op::VectorSet,
        Op::ReferGlobalPush(vm.gc.intern("$SEQ")),
        Op::ReferLocalPushConstant(0, Object::Number(0)),
        Op::VectorRef,
        Op::BranchNotEqv(7),
        Op::ReferFreePush(1),
        Op::ConstantPush(Object::Number(1)),
        Op::ReferLocalPushConstant(0, Object::Number(1)),
        Op::VectorRef,
        Op::VectorSet,
        Op::LocalJmp(7),
        Op::ReferFreePush(1),
        Op::ConstantPush(Object::Number(1)),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(0, 1),
        Op::VectorSet,
        Op::Leave(1),
        Op::Return(2),
        Op::AssignLocal(0),
        Op::ReferFreePush(4),
        Op::ConstantPush(Object::Number(3)),
        Op::Constant(Object::Number(0)),
        Op::VectorSet,
        Op::ReferFreePush(1),
        Op::ConstantPush(Object::Number(7)),
        Op::Constant(sym848),
        Op::VectorSet,
        Op::LetFrame(8),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(2),
        Op::Display(3),
        Op::ReferFreePush(0),
        Op::Enter(1),
        Op::ReferLocal(0),
        Op::Cdr,
        Op::BranchNotNull(8),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::ReferFreePush(2),
        Op::ReferFree(1),
        Op::Indirect,
        Op::LocalTailCall(2, 9),
        Op::LocalJmp(16),
        Op::Frame(11),
        Op::ReferLocal(0),
        Op::Car,
        Op::PushFrame(4),
        Op::ReferFreePush(2),
        Op::ConstantPush(Object::Nil),
        Op::ReferGlobalCall(vm.gc.intern("iform-copy"), 2),
        Op::Push,
        Op::ReferFree(1),
        Op::Indirect,
        Op::LocalCall(2),
        Op::ReferLocal(0),
        Op::CdrPush,
        Op::Shiftj(1, 1, 0),
        Op::LocalJmp(-24),
        Op::Leave(1),
        Op::Leave(1),
        Op::Return(3),
        Op::DefineGlobal(vm.gc.intern("pass2/local-call-inliner")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(195),
        Op::Closure {size: 0, arg_len: 4, is_optional_arg: false, num_free_vars: 1},
        Op::LetFrame(32),
        Op::ReferLocalPush(2),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(3),
        Op::ReferFreePush(0),
        Op::Display(5),
        Op::ReferLocalPushConstant(1, Object::Number(3)),
        Op::VectorRef,
        Op::Push,
        Op::ReferLocalPushConstant(1, Object::Number(4)),
        Op::VectorRef,
        Op::Push,
        Op::ReferLocalPushConstant(1, Object::Number(2)),
        Op::VectorRef,
        Op::PushEnter(3),
        Op::ReferFreePush(4),
        Op::ConstantPush(Object::Number(2)),
        Op::Frame(13),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(4),
        Op::Constant(Object::Number(2)),
        Op::VectorRef,
        Op::Push,
        Op::ReferLocalPush(2),
        Op::ReferFreePush(3),
        Op::Constant(Object::Number(1)),
        Op::VectorRef,
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("adjust-arglist"), 5),
        Op::VectorSet,
        Op::ReferFreePush(2),
        Op::ConstantPush(Object::Number(3)),
        Op::ReferFreePush(2),
        Op::Constant(Object::Number(3)),
        Op::VectorRef,
        Op::PushConstant(Object::Number(1)),
        Op::NumberSub,
        Op::VectorSet,
        Op::ReferFreePush(4),
        Op::ConstantPush(Object::Number(4)),
        Op::Constant(sym849),
        Op::VectorSet,
        Op::ReferFreePush(4),
        Op::ConstantPush(Object::Number(1)),
        Op::ReferFree(3),
        Op::VectorSet,
        Op::ReferFreePush(3),
        Op::ConstantPush(Object::Number(7)),
        Op::Constant(sym848),
        Op::VectorSet,
        Op::ReferFree(1),
        Op::BranchNotNull(3),
        Op::Undef,
        Op::LocalJmp(66),
        Op::LetFrame(7),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferFreePush(4),
        Op::ReferFreePush(1),
        Op::ReferFreePush(3),
        Op::ReferFreePush(0),
        Op::Display(9),
        Op::Frame(6),
        Op::ReferFreePush(1),
        Op::Constant(Object::Number(6)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFreeCall(0, 1),
        Op::PushEnter(1),
        Op::ReferFreePush(1),
        Op::ConstantPush(Object::Number(6)),
        Op::ReferLocal(0),
        Op::VectorSet,
        Op::Frame(41),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(1),
        Op::ReferFreePush(3),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 6},
        Op::ReferFreePush(5),
        Op::ConstantPush(Object::Number(3)),
        Op::ReferFreePush(5),
        Op::Constant(Object::Number(3)),
        Op::VectorRef,
        Op::PushConstant(Object::Number(1)),
        Op::NumberSub,
        Op::VectorSet,
        Op::ReferLocalPushConstant(0, Object::Number(2)),
        Op::PushFrame(12),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferLocalPushConstant(0, Object::Number(2)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::Constant(Object::Number(1)),
        Op::VectorRef,
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("adjust-arglist"), 5),
        Op::VectorSet,
        Op::ReferLocalPushConstant(0, Object::Number(1)),
        Op::Push,
        Op::ReferFree(0),
        Op::VectorSet,
        Op::ReferLocalPushConstant(0, Object::Number(4)),
        Op::PushConstant(sym850),
        Op::VectorSet,
        Op::Return(1),
        Op::Push,
        Op::ReferFreePush(2),
        Op::ReferGlobalCall(vm.gc.intern("for-each"), 2),
        Op::Constant(Object::Nil),
        Op::Leave(1),
        Op::Leave(3),
        Op::Return(4),
        Op::DefineGlobal(vm.gc.intern("pass2/local-call-embedder")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 0},
        Op::LetFrame(12),
        Op::ReferLocalPush(1),
        Op::Display(1),
        Op::ReferLocalPushConstant(1, Object::Number(3)),
        Op::VectorRef,
        Op::Push,
        Op::ReferLocalPushConstant(1, Object::Number(4)),
        Op::VectorRef,
        Op::Push,
        Op::ReferLocalPushConstant(1, Object::Number(2)),
        Op::VectorRef,
        Op::Push,
        Op::ReferLocalPushConstant(1, Object::Number(8)),
        Op::VectorRef,
        Op::PushEnter(4),
        Op::Frame(33),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferFreePush(0),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 4},
        Op::ReferLocal(0),
        Op::CarPush,
        Op::ConstantPush(Object::Number(2)),
        Op::Frame(14),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::Constant(Object::Number(2)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Constant(Object::Number(1)),
        Op::VectorRef,
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("adjust-arglist"), 5),
        Op::VectorSet,
        Op::ReferLocal(0),
        Op::CarPush,
        Op::ConstantPush(Object::Number(4)),
        Op::Constant(sym851),
        Op::VectorSet,
        Op::Return(1),
        Op::Push,
        Op::ReferLocalPush(3),
        Op::ReferGlobalCall(vm.gc.intern("for-each"), 2),
        Op::Constant(Object::Nil),
        Op::ReferFreePush(0),
        Op::ConstantPush(Object::Number(8)),
        Op::Constant(Object::Nil),
        Op::VectorSet,
        Op::Leave(4),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("pass2/local-call-optimizer")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 0},
        Op::LetFrame(4),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::Display(3),
        Op::Undef,
        Op::Push,
        Op::Box(0),
        Op::Enter(1),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::Closure {size: 0, arg_len: 4, is_optional_arg: false, num_free_vars: 3},
        Op::ReferLocalBranchNotNull(0, 6),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferLocal(3),
        Op::Values(3),
        Op::Return(4),
        Op::ReferLocal(0),
        Op::PairP,
        Op::Test(121),
        Op::ReferLocal(0),
        Op::Car,
        Op::PairP,
        Op::Test(117),
        Op::LetFrame(33),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferLocalPush(3),
        Op::ReferFreePush(0),
        Op::Display(5),
        Op::ReferLocal(0),
        Op::Caar,
        Op::Push,
        Op::ReferLocal(0),
        Op::Cdar,
        Op::Push,
        Op::ReferLocal(0),
        Op::CdrPush,
        Op::Enter(3),
        Op::LetFrame(30),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(4),
        Op::ReferLocalPush(2),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Display(8),
        Op::ReferLocalPushConstant(0, Object::Number(4)),
        Op::VectorRef,
        Op::PushEnter(1),
        Op::ConstantPush(sym852),
        Op::ReferLocal(0),
        Op::BranchNotEqv(58),
        Op::LetFrame(6),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(7),
        Op::Display(3),
        Op::ReferFreePush(0),
        Op::Enter(1),
        Op::LetFrame(5),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(0),
        Op::Display(2),
        Op::ReferLocalPush(0),
        Op::Enter(1),
        Op::ReferLocalBranchNotNull(0, 3),
        Op::Constant(Object::True),
        Op::LocalJmp(17),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::ReferFree(1),
        Op::BranchNotEq(3),
        Op::Constant(Object::True),
        Op::LocalJmp(11),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::Constant(Object::Number(7)),
        Op::VectorRef,
        Op::PushConstant(sym848),
        Op::BranchNotEq(5),
        Op::ReferLocal(0),
        Op::CdrPush,
        Op::Shiftj(1, 1, 0),
        Op::LocalJmp(-18),
        Op::Leave(1),
        Op::Leave(1),
        Op::Test(12),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFree(1),
        Op::Cons,
        Op::Push,
        Op::ReferFree(0),
        Op::Indirect,
        Op::LocalTailCall(4, 12),
        Op::LocalJmp(36),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(2),
        Op::ReferFree(3),
        Op::Cons,
        Op::Push,
        Op::ReferFreePush(1),
        Op::ReferFree(0),
        Op::Indirect,
        Op::LocalTailCall(4, 12),
        Op::LocalJmp(25),
        Op::ConstantPush(sym794),
        Op::ReferLocal(0),
        Op::BranchNotEqv(12),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(2),
        Op::ReferFree(3),
        Op::Cons,
        Op::Push,
        Op::ReferFreePush(1),
        Op::ReferFree(0),
        Op::Indirect,
        Op::LocalTailCall(4, 12),
        Op::LocalJmp(11),
        Op::ReferFreePush(5),
        Op::ReferFreePush(2),
        Op::ReferFree(4),
        Op::Cons,
        Op::Push,
        Op::ReferFreePush(3),
        Op::ReferFreePush(1),
        Op::ReferFree(0),
        Op::Indirect,
        Op::LocalTailCall(4, 12),
        Op::Leave(1),
        Op::Leave(3),
        Op::Return(4),
        Op::ReferLocalPush(0),
        Op::ReferGlobal(vm.gc.intern("match:error")),
        Op::TailCall(1, 4),
        Op::Return(4),
        Op::AssignLocal(0),
        Op::ReferFreePush(1),
        Op::ConstantPush(Object::Nil),
        Op::ConstantPush(Object::Nil),
        Op::ConstantPush(Object::Nil),
        Op::ReferLocal(0),
        Op::Indirect,
        Op::LocalTailCall(4, 5),
        Op::Leave(1),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("pass2/classify-calls")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(26),
        Op::ReferFreePush(158),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 2},
        Op::LetFrame(33),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::Display(4),
        Op::ReferLocalPush(0),
        Op::ReferLocalPushConstant(1, Object::Nil),
        Op::PushConstant(Object::Nil),
        Op::PushConstant(Object::Nil),
        Op::PushEnter(5),
        Op::ReferLocalBranchNotNull(0, 12),
        Op::Frame(3),
        Op::ReferLocalPush(2),
        Op::ReferFreeCall(3, 1),
        Op::PushFrame(3),
        Op::ReferLocalPush(3),
        Op::ReferFreeCall(3, 1),
        Op::PushFrame(3),
        Op::ReferLocalPush(4),
        Op::ReferFreeCall(3, 1),
        Op::Values(3),
        Op::LocalJmp(66),
        Op::Frame(7),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::Constant(Object::Number(3)),
        Op::VectorRef,
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("zero?"), 1),
        Op::Test(41),
        Op::Frame(7),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::Constant(Object::Number(4)),
        Op::VectorRef,
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("zero?"), 1),
        Op::Test(33),
        Op::ReferLocal(0),
        Op::CdrPush,
        Op::ReferLocal(1),
        Op::CdrPush,
        Op::ReferLocalPush(2),
        Op::ReferLocalPush(3),
        Op::Frame(15),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::Constant(Object::Number(0)),
        Op::VectorRef,
        Op::Push,
        Op::ReferGlobalPush(vm.gc.intern("$CONST")),
        Op::ReferGlobalPush(vm.gc.intern("$LOCAL-REF")),
        Op::ReferGlobalPush(vm.gc.intern("$LAMBDA")),
        Op::Constant(Object::Nil),
        Op::Cons,
        Op::Cons,
        Op::Cons,
        Op::Push,
        Op::ReferFreeCall(2, 2),
        Op::Test(3),
        Op::ReferLocal(4),
        Op::LocalJmp(5),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::ReferLocal(4),
        Op::Cons,
        Op::Push,
        Op::Shiftj(5, 5, 0),
        Op::LocalJmp(-58),
        Op::LocalJmp(18),
        Op::ReferLocal(0),
        Op::CdrPush,
        Op::ReferLocal(1),
        Op::CdrPush,
        Op::ReferLocal(0),
        Op::CarPush,
        Op::ReferLocal(2),
        Op::Cons,
        Op::Push,
        Op::ReferLocal(1),
        Op::CarPush,
        Op::ReferLocal(3),
        Op::Cons,
        Op::Push,
        Op::ReferLocalPush(4),
        Op::Shiftj(5, 5, 0),
        Op::LocalJmp(-76),
        Op::Leave(5),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("pass2/remove-vars")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(90),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 1},
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferFree(0),
        Op::TailCall(2, 2),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("pass2/self-recursing?")),
        Op::Nop,
        Op::Closure {size: 0, arg_len: 3, is_optional_arg: false, num_free_vars: 0},
        Op::LetFrame(21),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::Display(2),
        Op::ReferLocalPushConstant(0, Object::Number(1)),
        Op::VectorRef,
        Op::PushEnter(1),
        Op::LetFrame(19),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Display(3),
        Op::Frame(5),
        Op::ReferLocalPushConstant(0, Object::Number(4)),
        Op::VectorRef,
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("zero?"), 1),
        Op::PushEnter(1),
        Op::LetFrame(16),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(2),
        Op::Display(5),
        Op::ReferFreePush(0),
        Op::Constant(Object::Number(2)),
        Op::VectorRef,
        Op::PushEnter(1),
        Op::LetFrame(14),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::Display(5),
        Op::ReferLocal(0),
        Op::VectorP,
        Op::PushEnter(1),
        Op::ReferLocal(0),
        Op::Test(55),
        Op::LetFrame(13),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(4),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(4),
        Op::Display(6),
        Op::ReferGlobalPush(vm.gc.intern("$LAMBDA")),
        Op::ReferFreePush(0),
        Op::Constant(Object::Number(0)),
        Op::VectorRef,
        Op::Eqv,
        Op::PushEnter(1),
        Op::ReferFree(5),
        Op::Test(38),
        Op::ReferFree(4),
        Op::Test(36),
        Op::ReferFree(0),
        Op::Test(34),
        Op::ReferLocal(0),
        Op::Test(32),
        Op::Frame(4),
        Op::ReferFreePush(0),
        Op::ReferFreePush(2),
        Op::ReferGlobalCall(vm.gc.intern("pass2/self-recursing?"), 2),
        Op::Test(7),
        Op::ReferFree(1),
        Op::Test(3),
        Op::Constant(sym852),
        Op::LocalJmp(23),
        Op::Constant(sym794),
        Op::LocalJmp(21),
        Op::ReferFreePush(5),
        Op::Constant(Object::Number(3)),
        Op::VectorRef,
        Op::PushConstant(Object::Number(1)),
        Op::BranchNotNumberEqual(15),
        Op::ReferFreePush(5),
        Op::ConstantPush(Object::Number(3)),
        Op::ReferFreePush(5),
        Op::Constant(Object::Number(3)),
        Op::VectorRef,
        Op::PushConstant(Object::Number(1)),
        Op::NumberSub,
        Op::VectorSet,
        Op::ReferFreePush(5),
        Op::ConstantPush(Object::Number(2)),
        Op::Constant(Object::Nil),
        Op::VectorSet,
        Op::ReferFree(0),
        Op::LocalJmp(2),
        Op::Constant(sym851),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Return(3),
        Op::DefineGlobal(vm.gc.intern("pass2/classify-local-ref-call")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 0},
        Op::LetFrame(22),
        Op::ReferLocalPush(0),
        Op::Display(1),
        Op::ReferLocalPushConstant(0, Object::Number(5)),
        Op::VectorRef,
        Op::PushFrame(15),
        Op::ReferLocalPushConstant(0, Object::Number(3)),
        Op::VectorRef,
        Op::Push,
        Op::ReferLocalPushConstant(0, Object::Number(4)),
        Op::VectorRef,
        Op::Push,
        Op::ReferLocalPush(1),
        Op::ReferLocalPushConstant(0, Object::Number(2)),
        Op::VectorRef,
        Op::Push,
        Op::ReferLocalPushConstant(0, Object::Number(1)),
        Op::VectorRef,
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("pass2/adjust-arglist"), 5),
        Op::PushEnter(2),
        Op::Frame(11),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 0},
        Op::ReferLocalPushConstant(0, Object::Number(2)),
        Op::Push,
        Op::ReferLocal(1),
        Op::VectorSet,
        Op::Return(2),
        Op::Push,
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferGlobalCall(vm.gc.intern("for-each"), 3),
        Op::ConstantPush(sym770),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(0),
        Op::Constant(Object::Number(6)),
        Op::VectorRef,
        Op::PushConstant(Object::False),
        Op::PushConstant(Object::False),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("$let")),
        Op::TailCall(6, 6),
        Op::Leave(2),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("pass2/expand-inlined-procedure")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(191),
        Op::Closure {size: 0, arg_len: 3, is_optional_arg: false, num_free_vars: 1},
        Op::LetFrame(4),
        Op::ReferLocalPush(2),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(0),
        Op::Display(3),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(0, 1),
        Op::PushEnter(1),
        Op::ReferFree(2),
        Op::NotTest(4),
        Op::ReferLocalPush(0),
        Op::ReferFree(1),
        Op::NumberEqual,
        Op::Test(2),
        Op::LocalJmp(6),
        Op::ReferFree(2),
        Op::Test(4),
        Op::ReferLocalPush(0),
        Op::ReferFree(1),
        Op::NumberGe,
        Op::Leave(1),
        Op::Return(3),
        Op::DefineGlobal(vm.gc.intern("pass2/argcount-ok?")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(191),
        Op::ReferFreePush(66),
        Op::ReferFreePush(89),
        Op::Closure {size: 0, arg_len: 5, is_optional_arg: false, num_free_vars: 3},
        Op::Frame(7),
        Op::ReferLocalPush(2),
        Op::ReferLocalPush(0),
        Op::ReferLocalPushConstant(1, Object::Number(0)),
        Op::NumberGt,
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("pass2/argcount-ok?"), 3),
        Op::Test(3),
        Op::Undef,
        Op::LocalJmp(28),
        Op::ReferLocal(4),
        Op::Test(17),
        Op::Frame(25),
        Op::ConstantPush(str203),
        Op::ReferLocalPush(3),
        Op::ReferLocalPush(0),
        Op::Frame(3),
        Op::ReferLocalPush(2),
        Op::ReferFreeCall(2, 1),
        Op::Push,
        Op::ReferLocal(4),
        Op::Caar,
        Op::PushFrame(3),
        Op::ReferLocalPush(4),
        Op::ReferFreeCall(1, 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("errorf"), 6),
        Op::LocalJmp(10),
        Op::Frame(9),
        Op::ConstantPush(str204),
        Op::ReferLocalPush(3),
        Op::ReferLocalPush(0),
        Op::Frame(3),
        Op::ReferLocalPush(2),
        Op::ReferFreeCall(2, 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("errorf"), 4),
        Op::Frame(3),
        Op::ReferLocalPush(1),
        Op::ReferGlobalCall(vm.gc.intern("zero?"), 1),
        Op::Test(3),
        Op::ReferLocal(2),
        Op::Return(5),
        Op::LetFrame(8),
        Op::ReferFreePush(0),
        Op::Display(1),
        Op::Frame(4),
        Op::ReferLocalPush(2),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("pass2/split-args"), 2),
        Op::PushEnter(1),
        Op::LetFrame(5),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::Display(2),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::Enter(1),
        Op::LetFrame(4),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::ReferFreePush(1),
        Op::Display(3),
        Op::ReferFree(0),
        Op::CdrPush,
        Op::Enter(1),
        Op::ReferFreePush(2),
        Op::Frame(6),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("$list"), 1),
        Op::Push,
        Op::ReferFreeCall(1, 1),
        Op::Append2,
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Return(5),
        Op::DefineGlobal(vm.gc.intern("pass2/adjust-arglist")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(26),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 1},
        Op::LetFrame(13),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::Display(3),
        Op::ReferLocalPush(1),
        Op::ReferLocalPushConstant(0, Object::Nil),
        Op::PushEnter(3),
        Op::ReferLocalPushConstant(0, Object::Number(0)),
        Op::BranchNotNumberEqual(8),
        Op::Frame(3),
        Op::ReferLocalPush(2),
        Op::ReferFreeCall(2, 1),
        Op::Push,
        Op::ReferLocal(1),
        Op::Cons,
        Op::LocalJmp(18),
        Op::ReferLocalBranchNotNull(1, 6),
        Op::ConstantPush(str205),
        Op::ReferFreePush(1),
        Op::ReferGlobal(vm.gc.intern("error")),
        Op::TailCall(2, 7),
        Op::LocalJmp(12),
        Op::ReferLocalPushConstant(0, Object::Number(1)),
        Op::NumberSubPush,
        Op::ReferLocal(1),
        Op::CdrPush,
        Op::ReferLocal(1),
        Op::CarPush,
        Op::ReferLocal(2),
        Op::Cons,
        Op::Push,
        Op::Shiftj(3, 3, 0),
        Op::LocalJmp(-25),
        Op::Leave(3),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("pass2/split-args")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(90),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 1},
        Op::ReferLocalBranchNotNull(1, 3),
        Op::Constant(Object::False),
        Op::Return(2),
        Op::Frame(5),
        Op::ReferLocalPush(0),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::ReferFreeCall(0, 2),
        Op::Test(3),
        Op::Constant(Object::True),
        Op::Return(2),
        Op::ReferLocalPush(0),
        Op::ReferLocal(1),
        Op::CdrPush,
        Op::ReferGlobal(vm.gc.intern("pass3/exists-in-can-frees?")),
        Op::TailCall(2, 2),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("pass3/exists-in-can-frees?")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Constant(Object::False),
        Op::Frame(6),
        Op::Frame(3),
        Op::ConstantPush(list6887),
        Op::ReferGlobalCall(vm.gc.intern("make-enumeration"), 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("enum-set-constructor"), 1),
        Op::DefineGlobal(vm.gc.intern("make-file-options")),
        Op::Nop,
        Op::Nop,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::ReferFreePush(26),
        Op::ReferFreePush(193),
        Op::ReferFreePush(188),
        Op::Closure {size: 0, arg_len: 4, is_optional_arg: false, num_free_vars: 3},
        Op::LetFrame(13),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(2),
        Op::ReferLocalPush(3),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(2),
        Op::Display(7),
        Op::ConstantPush(Object::Number(0)),
        Op::Frame(3),
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(0, 1),
        Op::PushEnter(2),
        Op::ReferLocalBranchNotNull(1, 3),
        Op::ReferLocal(0),
        Op::LocalJmp(36),
        Op::LetFrame(10),
        Op::ReferFreePush(6),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::Display(13),
        Op::Frame(7),
        Op::ReferFreePush(3),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreeCall(0, 4),
        Op::PushEnter(1),
        Op::Frame(4),
        Op::ReferFreePush(3),
        Op::ConstantPush(sym855),
        Op::ReferFreeCall(11, 2),
        Op::ReferFreePush(10),
        Op::ReferLocal(0),
        Op::NumberAddPush,
        Op::ReferFree(9),
        Op::CdrPush,
        Op::Shiftj(2, 5, 1),
        Op::LocalJmp(-36),
        Op::Leave(1),
        Op::Leave(2),
        Op::Return(4),
        Op::DefineGlobal(vm.gc.intern("pass3/collect-free")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 6, is_optional_arg: false, num_free_vars: 0},
        Op::LetFrame(18),
        Op::ReferLocalPush(3),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(5),
        Op::ReferLocalPush(4),
        Op::ReferLocalPush(2),
        Op::Display(6),
        Op::ReferLocalPushConstant(2, Object::Number(0)),
        Op::PushEnter(2),
        Op::ReferLocalBranchNotNull(0, 34),
        Op::LetFrame(10),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(5),
        Op::ReferLocalPush(1),
        Op::Display(5),
        Op::ReferFreePush(1),
        Op::ConstantPush(Object::Number(0)),
        Op::Enter(2),
        Op::ReferLocalBranchNotNull(0, 6),
        Op::ConstantPush(str206),
        Op::ReferFreePush(4),
        Op::ReferGlobal(vm.gc.intern("error")),
        Op::TailCall(2, 14),
        Op::LocalJmp(16),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::ReferFree(4),
        Op::BranchNotEq(6),
        Op::ReferFreePush(3),
        Op::ReferLocalPush(1),
        Op::ReferFree(2),
        Op::TailCall(2, 14),
        Op::LocalJmp(7),
        Op::ReferLocal(0),
        Op::CdrPush,
        Op::ReferLocalPushConstant(1, Object::Number(1)),
        Op::NumberAddPush,
        Op::Shiftj(2, 2, 0),
        Op::LocalJmp(-20),
        Op::Leave(2),
        Op::LocalJmp(16),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::ReferFree(4),
        Op::BranchNotEq(6),
        Op::ReferFreePush(3),
        Op::ReferLocalPush(1),
        Op::ReferFree(1),
        Op::TailCall(2, 10),
        Op::LocalJmp(7),
        Op::ReferLocal(0),
        Op::CdrPush,
        Op::ReferLocalPushConstant(1, Object::Number(1)),
        Op::NumberAddPush,
        Op::Shiftj(2, 2, 0),
        Op::LocalJmp(-48),
        Op::Leave(2),
        Op::Return(6),
        Op::DefineGlobal(vm.gc.intern("pass3/symbol-lookup")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(189),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 1},
        Op::Frame(5),
        Op::ReferLocalPushConstant(0, sym856),
        Op::Push,
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(0, 3),
        Op::Constant(Object::Number(0)),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("pass3/return-refer-local")),
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(189),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 1},
        Op::Frame(5),
        Op::ReferLocalPushConstant(0, sym857),
        Op::Push,
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(0, 3),
        Op::Constant(Object::Number(0)),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("pass3/return-refer-free")),
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 4, is_optional_arg: false, num_free_vars: 0},
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferLocalPush(3),
        Op::ReferGlobalPush(vm.gc.intern("pass3/return-refer-local")),
        Op::ReferGlobalPush(vm.gc.intern("pass3/return-refer-free")),
        Op::ReferGlobal(vm.gc.intern("pass3/symbol-lookup")),
        Op::TailCall(6, 4),
        Op::Return(4),
        Op::DefineGlobal(vm.gc.intern("pass3/compile-refer")),
        Op::Nop,
        Op::ReferFreePush(189),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 1},
        Op::Frame(5),
        Op::ReferLocalPushConstant(0, sym858),
        Op::Push,
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(0, 3),
        Op::Constant(Object::Number(0)),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("pass3/return-assign-local")),
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(189),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 1},
        Op::Frame(5),
        Op::ReferLocalPushConstant(0, sym859),
        Op::Push,
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(0, 3),
        Op::Constant(Object::Number(0)),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("pass3/return-assign-free")),
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 4, is_optional_arg: false, num_free_vars: 0},
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferLocalPush(3),
        Op::ReferGlobalPush(vm.gc.intern("pass3/return-assign-local")),
        Op::ReferGlobalPush(vm.gc.intern("pass3/return-assign-free")),
        Op::ReferGlobal(vm.gc.intern("pass3/symbol-lookup")),
        Op::TailCall(6, 4),
        Op::Return(4),
        Op::DefineGlobal(vm.gc.intern("pass3/compile-assign")),
        Op::Nop,
        Op::ReferFreePush(90),
        Op::ReferFreePush(189),
        Op::Closure {size: 0, arg_len: 3, is_optional_arg: false, num_free_vars: 2},
        Op::ReferLocalPush(1),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 4},
        Op::Frame(4),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(3),
        Op::ReferFreeCall(2, 2),
        Op::Test(7),
        Op::ReferFreePush(1),
        Op::ConstantPush(sym860),
        Op::ReferLocalPush(0),
        Op::ReferFree(0),
        Op::TailCall(3, 2),
        Op::Return(2),
        Op::Undef,
        Op::Return(2),
        Op::Push,
        Op::ReferLocalPush(2),
        Op::ReferGlobal(vm.gc.intern("$for-each1-with-rindex")),
        Op::TailCall(2, 3),
        Op::Return(3),
        Op::DefineGlobal(vm.gc.intern("pass3/make-boxes")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferGlobal(vm.gc.intern("$INSN-NUM")),
        Op::PushConstant(Object::Nil),
        Op::MakeVector,
        Op::DefineGlobal(vm.gc.intern("pass3/dispatch-table")),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 0},
        Op::ReferGlobalPush(vm.gc.intern("pass3/dispatch-table")),
        Op::ReferLocalPush(0),
        Op::ReferLocal(1),
        Op::VectorSet,
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("pass3/register")),
        Op::Nop,
        Op::ReferFreePush(189),
        Op::Closure {size: 0, arg_len: 9, is_optional_arg: false, num_free_vars: 1},
        Op::Frame(7),
        Op::ReferLocalPushConstant(0, sym861),
        Op::Push,
        Op::ReferLocalPushConstant(1, Object::Number(1)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFreeCall(0, 3),
        Op::Constant(Object::Number(0)),
        Op::Return(9),
        Op::DefineGlobal(vm.gc.intern("pass3/$const")),
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 9, is_optional_arg: false, num_free_vars: 0},
        Op::Constant(Object::Number(0)),
        Op::Return(9),
        Op::DefineGlobal(vm.gc.intern("pass3/$it")),
        Op::Nop,
        Op::ReferFreePush(188),
        Op::ReferFreePush(191),
        Op::ReferFreePush(189),
        Op::Closure {size: 0, arg_len: 9, is_optional_arg: false, num_free_vars: 3},
        Op::LetFrame(10),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(2),
        Op::ReferLocalPush(3),
        Op::ReferLocalPush(4),
        Op::ReferLocalPush(5),
        Op::ReferLocalPush(6),
        Op::ReferLocalPush(7),
        Op::ReferLocalPush(8),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Display(11),
        Op::ReferLocalPushConstant(1, Object::Number(1)),
        Op::VectorRef,
        Op::PushEnter(1),
        Op::LetFrame(8),
        Op::ReferFreePush(10),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::Display(13),
        Op::Frame(49),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 9},
        Op::LetFrame(13),
        Op::ReferFreePush(8),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::Display(11),
        Op::Frame(11),
        Op::ReferFreePush(7),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferGlobalCall(vm.gc.intern("pass3/rec"), 9),
        Op::PushEnter(1),
        Op::Frame(4),
        Op::ReferFreePush(7),
        Op::ConstantPush(sym855),
        Op::ReferFreeCall(9, 2),
        Op::ReferLocalPush(0),
        Op::ReferFree(8),
        Op::NumberAdd,
        Op::Leave(1),
        Op::Return(2),
        Op::PushConstant(Object::Number(0)),
        Op::Push,
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("fold"), 3),
        Op::PushEnter(1),
        Op::Frame(8),
        Op::ReferFreePush(8),
        Op::ConstantPush(sym862),
        Op::Frame(3),
        Op::ReferFreePush(11),
        Op::ReferFreeCall(10, 1),
        Op::Push,
        Op::ReferFreeCall(9, 3),
        Op::ReferLocal(0),
        Op::Leave(1),
        Op::Leave(1),
        Op::Return(9),
        Op::DefineGlobal(vm.gc.intern("pass3/$list")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(193),
        Op::ReferFreePush(101),
        Op::ReferFreePush(188),
        Op::Closure {size: 0, arg_len: 9, is_optional_arg: false, num_free_vars: 3},
        Op::Frame(10),
        Op::ReferLocalPush(0),
        Op::ReferLocalPushConstant(1, Object::Number(1)),
        Op::VectorRef,
        Op::PushConstant(Object::Number(1)),
        Op::VectorRef,
        Op::Push,
        Op::ReferLocalPush(2),
        Op::ReferLocalPush(3),
        Op::ReferFreeCall(2, 4),
        Op::Frame(7),
        Op::ReferLocalPush(5),
        Op::ReferLocalPushConstant(1, Object::Number(1)),
        Op::VectorRef,
        Op::PushConstant(Object::False),
        Op::Push,
        Op::ReferFreeCall(1, 3),
        Op::Test(6),
        Op::Frame(6),
        Op::ReferLocalPushConstant(0, sym863),
        Op::Push,
        Op::ReferFreeCall(0, 2),
        Op::LocalJmp(2),
        Op::Undef,
        Op::Constant(Object::Number(0)),
        Op::Return(9),
        Op::DefineGlobal(vm.gc.intern("pass3/$local-ref")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 9, is_optional_arg: false, num_free_vars: 0},
        Op::LetFrame(19),
        Op::Frame(13),
        Op::ReferLocalPush(0),
        Op::ReferLocalPushConstant(1, Object::Number(2)),
        Op::VectorRef,
        Op::Push,
        Op::ReferLocalPush(2),
        Op::ReferLocalPush(3),
        Op::ReferLocalPush(4),
        Op::ReferLocalPushConstant(5, Object::False),
        Op::Push,
        Op::ReferLocalPush(7),
        Op::ReferLocalPush(8),
        Op::ReferGlobalCall(vm.gc.intern("pass3/rec"), 9),
        Op::PushFrame(10),
        Op::ReferLocalPush(0),
        Op::ReferLocalPushConstant(1, Object::Number(1)),
        Op::VectorRef,
        Op::PushConstant(Object::Number(1)),
        Op::VectorRef,
        Op::Push,
        Op::ReferLocalPush(2),
        Op::ReferLocalPush(3),
        Op::ReferGlobalCall(vm.gc.intern("pass3/compile-assign"), 4),
        Op::PushEnter(2),
        Op::ReferLocalPush(0),
        Op::ReferLocal(1),
        Op::NumberAdd,
        Op::Leave(2),
        Op::Return(9),
        Op::DefineGlobal(vm.gc.intern("pass3/$local-assign")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(189),
        Op::Closure {size: 0, arg_len: 9, is_optional_arg: false, num_free_vars: 1},
        Op::LetFrame(14),
        Op::ReferLocalPush(3),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::Display(3),
        Op::ReferLocalPushConstant(1, Object::Number(1)),
        Op::VectorRef,
        Op::PushEnter(1),
        Op::LetFrame(12),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::ReferFreePush(2),
        Op::Display(4),
        Op::ReferFreePush(0),
        Op::ConstantPush(Object::Number(0)),
        Op::Enter(2),
        Op::ReferLocalBranchNotNull(0, 8),
        Op::Frame(5),
        Op::ReferFreePush(3),
        Op::ConstantPush(sym864),
        Op::ReferFreePush(2),
        Op::ReferFreeCall(1, 3),
        Op::Constant(Object::Number(0)),
        Op::LocalJmp(18),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::ReferFree(2),
        Op::BranchNotEq(8),
        Op::Frame(5),
        Op::ReferFreePush(3),
        Op::ConstantPush(sym857),
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(1, 3),
        Op::Constant(Object::Number(0)),
        Op::LocalJmp(7),
        Op::ReferLocal(0),
        Op::CdrPush,
        Op::ReferLocalPushConstant(1, Object::Number(1)),
        Op::NumberAddPush,
        Op::Shiftj(2, 2, 0),
        Op::LocalJmp(-24),
        Op::Leave(2),
        Op::Leave(1),
        Op::Return(9),
        Op::DefineGlobal(vm.gc.intern("pass3/$global-ref")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(189),
        Op::Closure {size: 0, arg_len: 9, is_optional_arg: false, num_free_vars: 1},
        Op::LetFrame(36),
        Op::ReferLocalPush(3),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferLocalPush(4),
        Op::ReferLocalPush(5),
        Op::ReferLocalPush(7),
        Op::ReferLocalPush(8),
        Op::ReferFreePush(0),
        Op::Display(9),
        Op::ReferLocalPushConstant(1, Object::Number(1)),
        Op::VectorRef,
        Op::PushEnter(1),
        Op::LetFrame(34),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(8),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::Display(10),
        Op::ReferFreePush(6),
        Op::ConstantPush(Object::Number(0)),
        Op::Enter(2),
        Op::ReferLocalBranchNotNull(0, 37),
        Op::LetFrame(14),
        Op::ReferFreePush(9),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::Display(11),
        Op::Frame(14),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::Constant(Object::Number(2)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ConstantPush(Object::False),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferGlobalCall(vm.gc.intern("pass3/rec"), 9),
        Op::PushEnter(1),
        Op::Frame(5),
        Op::ReferFreePush(7),
        Op::ConstantPush(sym865),
        Op::ReferFreePush(9),
        Op::ReferFreeCall(8, 3),
        Op::ReferLocal(0),
        Op::Leave(1),
        Op::LocalJmp(47),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::ReferFree(1),
        Op::BranchNotEq(37),
        Op::LetFrame(14),
        Op::ReferFreePush(9),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::Display(11),
        Op::Frame(14),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::Constant(Object::Number(2)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ConstantPush(Object::False),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferGlobalCall(vm.gc.intern("pass3/rec"), 9),
        Op::PushEnter(1),
        Op::Frame(5),
        Op::ReferFreePush(7),
        Op::ConstantPush(sym859),
        Op::ReferFreePush(9),
        Op::ReferFreeCall(8, 3),
        Op::ReferLocal(0),
        Op::Leave(1),
        Op::LocalJmp(7),
        Op::ReferLocal(0),
        Op::CdrPush,
        Op::ReferLocalPushConstant(1, Object::Number(1)),
        Op::NumberAddPush,
        Op::Shiftj(2, 2, 0),
        Op::LocalJmp(-82),
        Op::Leave(2),
        Op::Leave(1),
        Op::Return(9),
        Op::DefineGlobal(vm.gc.intern("pass3/$global-assign")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 9, is_optional_arg: false, num_free_vars: 0},
        Op::LetFrame(16),
        Op::ReferLocalPush(6),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(2),
        Op::ReferLocalPush(3),
        Op::ReferLocalPush(4),
        Op::ReferLocalPush(5),
        Op::ReferLocalPush(7),
        Op::ReferLocalPush(8),
        Op::ReferLocalPush(1),
        Op::Display(9),
        Op::ReferLocalPushConstant(1, Object::Number(1)),
        Op::VectorRef,
        Op::PushConstant(Object::Number(0)),
        Op::PushEnter(2),
        Op::ReferLocalBranchNotNull(0, 3),
        Op::ReferLocal(1),
        Op::LocalJmp(39),
        Op::LetFrame(13),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(8),
        Op::ReferFreePush(8),
        Op::Display(12),
        Op::ReferLocal(0),
        Op::Cdr,
        Op::BranchNotNull(2),
        Op::ReferFree(0),
        Op::PushEnter(1),
        Op::ReferFree(11),
        Op::CdrPush,
        Op::ReferFreePush(10),
        Op::Frame(12),
        Op::ReferFreePush(9),
        Op::ReferFree(11),
        Op::CarPush,
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferGlobalCall(vm.gc.intern("pass3/rec"), 9),
        Op::NumberAddPush,
        Op::Shiftj(2, 5, 1),
        Op::LocalJmp(-39),
        Op::Leave(1),
        Op::Leave(2),
        Op::Return(9),
        Op::DefineGlobal(vm.gc.intern("pass3/$seq")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(188),
        Op::Closure {size: 0, arg_len: 9, is_optional_arg: false, num_free_vars: 1},
        Op::Frame(4),
        Op::ReferLocalPushConstant(0, sym866),
        Op::Push,
        Op::ReferFreeCall(0, 2),
        Op::Constant(Object::Number(0)),
        Op::Return(9),
        Op::DefineGlobal(vm.gc.intern("pass3/$undef")),
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(188),
        Op::Closure {size: 0, arg_len: 9, is_optional_arg: false, num_free_vars: 1},
        Op::LetFrame(12),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(0),
        Op::Display(3),
        Op::Frame(11),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(2),
        Op::ReferLocalPush(3),
        Op::ReferLocalPush(4),
        Op::ReferLocalPush(5),
        Op::ReferLocalPushConstant(6, Object::False),
        Op::Push,
        Op::ReferLocalPush(7),
        Op::ReferLocalPush(8),
        Op::ReferGlobalCall(vm.gc.intern("pass3/rec"), 9),
        Op::PushEnter(1),
        Op::Frame(4),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreeCall(0, 2),
        Op::ReferLocal(0),
        Op::Leave(1),
        Op::Return(9),
        Op::DefineGlobal(vm.gc.intern("pass3/$asm-1-arg")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(188),
        Op::Closure {size: 0, arg_len: 10, is_optional_arg: false, num_free_vars: 1},
        Op::LetFrame(23),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(0),
        Op::Display(3),
        Op::Frame(11),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(2),
        Op::ReferLocalPush(4),
        Op::ReferLocalPush(5),
        Op::ReferLocalPush(6),
        Op::ReferLocalPushConstant(7, Object::False),
        Op::Push,
        Op::ReferLocalPush(8),
        Op::ReferLocalPush(9),
        Op::ReferGlobalCall(vm.gc.intern("pass3/compile-arg"), 9),
        Op::PushFrame(11),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(3),
        Op::ReferLocalPush(4),
        Op::ReferLocalPush(5),
        Op::ReferLocalPush(6),
        Op::ReferLocalPushConstant(7, Object::False),
        Op::Push,
        Op::ReferLocalPush(8),
        Op::ReferLocalPush(9),
        Op::ReferGlobalCall(vm.gc.intern("pass3/rec"), 9),
        Op::PushEnter(2),
        Op::Frame(4),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreeCall(0, 2),
        Op::ReferLocalPush(0),
        Op::ReferLocal(1),
        Op::NumberAdd,
        Op::Leave(2),
        Op::Return(10),
        Op::DefineGlobal(vm.gc.intern("pass3/$asm-2-arg")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(188),
        Op::Closure {size: 0, arg_len: 11, is_optional_arg: false, num_free_vars: 1},
        Op::LetFrame(34),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(0),
        Op::Display(3),
        Op::Frame(11),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(2),
        Op::ReferLocalPush(5),
        Op::ReferLocalPush(6),
        Op::ReferLocalPush(7),
        Op::ReferLocalPushConstant(8, Object::False),
        Op::Push,
        Op::ReferLocalPush(9),
        Op::ReferLocalPush(10),
        Op::ReferGlobalCall(vm.gc.intern("pass3/compile-arg"), 9),
        Op::PushFrame(11),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(3),
        Op::ReferLocalPush(5),
        Op::ReferLocalPush(6),
        Op::ReferLocalPush(7),
        Op::ReferLocalPushConstant(8, Object::False),
        Op::Push,
        Op::ReferLocalPush(9),
        Op::ReferLocalPush(10),
        Op::ReferGlobalCall(vm.gc.intern("pass3/compile-arg"), 9),
        Op::PushFrame(11),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(4),
        Op::ReferLocalPush(5),
        Op::ReferLocalPush(6),
        Op::ReferLocalPush(7),
        Op::ReferLocalPushConstant(8, Object::False),
        Op::Push,
        Op::ReferLocalPush(9),
        Op::ReferLocalPush(10),
        Op::ReferGlobalCall(vm.gc.intern("pass3/rec"), 9),
        Op::PushEnter(3),
        Op::Frame(4),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreeCall(0, 2),
        Op::ReferLocalPush(0),
        Op::ReferLocal(1),
        Op::NumberAddPush,
        Op::ReferLocal(2),
        Op::NumberAdd,
        Op::Leave(3),
        Op::Return(11),
        Op::DefineGlobal(vm.gc.intern("pass3/$asm-3-arg")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 8, is_optional_arg: false, num_free_vars: 0},
        Op::LetFrame(24),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(2),
        Op::ReferLocalPush(3),
        Op::ReferLocalPush(4),
        Op::ReferLocalPush(5),
        Op::ReferLocalPush(6),
        Op::ReferLocalPush(7),
        Op::ReferLocalPush(1),
        Op::Display(8),
        Op::ReferLocalPushConstant(1, Object::Number(0)),
        Op::PushEnter(2),
        Op::ReferLocalBranchNotNull(0, 3),
        Op::ReferLocal(1),
        Op::LocalJmp(37),
        Op::ReferLocal(0),
        Op::Cdr,
        Op::BranchNotNull(16),
        Op::ReferLocalPush(1),
        Op::Frame(12),
        Op::ReferFreePush(7),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ConstantPush(Object::False),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferGlobalCall(vm.gc.intern("pass3/rec"), 9),
        Op::NumberAdd,
        Op::LocalJmp(19),
        Op::ReferLocal(0),
        Op::CdrPush,
        Op::ReferLocalPush(1),
        Op::Frame(12),
        Op::ReferFreePush(7),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ConstantPush(Object::False),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferGlobalCall(vm.gc.intern("pass3/compile-arg"), 9),
        Op::NumberAddPush,
        Op::Shiftj(2, 2, 0),
        Op::LocalJmp(-38),
        Op::Leave(2),
        Op::Return(8),
        Op::DefineGlobal(vm.gc.intern("pass3/$asm-n-args")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(69),
        Op::ReferFreePush(191),
        Op::ReferFreePush(189),
        Op::ReferFreePush(195),
        Op::ReferFreePush(188),
        Op::ReferFreePush(182),
        Op::Closure {size: 0, arg_len: 9, is_optional_arg: false, num_free_vars: 6},
        Op::LetFrame(442),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(2),
        Op::ReferLocalPush(3),
        Op::ReferLocalPush(4),
        Op::ReferLocalPush(5),
        Op::ReferLocalPush(7),
        Op::ReferLocalPush(8),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Display(14),
        Op::ReferLocalPushConstant(1, Object::Number(2)),
        Op::VectorRef,
        Op::PushEnter(1),
        Op::LetFrame(440),
        Op::ReferFreePush(12),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(13),
        Op::Display(15),
        Op::ReferFreePush(0),
        Op::Constant(Object::Number(1)),
        Op::VectorRef,
        Op::PushEnter(1),
        Op::ConstantPush(sym807),
        Op::ReferLocal(0),
        Op::BranchNotEqv(9),
        Op::Frame(6),
        Op::ReferFreePush(14),
        Op::ConstantPush(sym269),
        Op::ConstantPush(str207),
        Op::ConstantPush(list6888),
        Op::ReferGlobalCall(vm.gc.intern("raise-compile-error"), 4),
        Op::Constant(Object::Number(0)),
        Op::LocalJmp(810),
        Op::ConstantPush(sym805),
        Op::ReferLocal(0),
        Op::BranchNotEqv(17),
        Op::ReferFreePush(14),
        Op::ConstantPush(sym805),
        Op::ReferFree(13),
        Op::CarPush,
        Op::ReferFree(13),
        Op::Cadr,
        Op::Push,
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferGlobal(vm.gc.intern("pass3/$asm-2-arg")),
        Op::TailCall(10, 15),
        Op::LocalJmp(791),
        Op::ConstantPush(sym806),
        Op::ReferLocal(0),
        Op::BranchNotEqv(17),
        Op::ReferFreePush(14),
        Op::ConstantPush(sym806),
        Op::ReferFree(13),
        Op::CarPush,
        Op::ReferFree(13),
        Op::Cadr,
        Op::Push,
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferGlobal(vm.gc.intern("pass3/$asm-2-arg")),
        Op::TailCall(10, 15),
        Op::LocalJmp(772),
        Op::ConstantPush(sym808),
        Op::ReferLocal(0),
        Op::BranchNotEqv(17),
        Op::ReferFreePush(14),
        Op::ConstantPush(sym808),
        Op::ReferFree(13),
        Op::CarPush,
        Op::ReferFree(13),
        Op::Cadr,
        Op::Push,
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferGlobal(vm.gc.intern("pass3/$asm-2-arg")),
        Op::TailCall(10, 15),
        Op::LocalJmp(753),
        Op::ConstantPush(sym809),
        Op::ReferLocal(0),
        Op::BranchNotEqv(17),
        Op::ReferFreePush(14),
        Op::ConstantPush(sym809),
        Op::ReferFree(13),
        Op::CarPush,
        Op::ReferFree(13),
        Op::Cadr,
        Op::Push,
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferGlobal(vm.gc.intern("pass3/$asm-2-arg")),
        Op::TailCall(10, 15),
        Op::LocalJmp(734),
        Op::ConstantPush(sym810),
        Op::ReferLocal(0),
        Op::BranchNotEqv(17),
        Op::ReferFreePush(14),
        Op::ConstantPush(sym810),
        Op::ReferFree(13),
        Op::CarPush,
        Op::ReferFree(13),
        Op::Cadr,
        Op::Push,
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferGlobal(vm.gc.intern("pass3/$asm-2-arg")),
        Op::TailCall(10, 15),
        Op::LocalJmp(715),
        Op::ConstantPush(sym811),
        Op::ReferLocal(0),
        Op::BranchNotEqv(17),
        Op::ReferFreePush(14),
        Op::ConstantPush(sym811),
        Op::ReferFree(13),
        Op::CarPush,
        Op::ReferFree(13),
        Op::Cadr,
        Op::Push,
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferGlobal(vm.gc.intern("pass3/$asm-2-arg")),
        Op::TailCall(10, 15),
        Op::LocalJmp(696),
        Op::ConstantPush(sym812),
        Op::ReferLocal(0),
        Op::BranchNotEqv(17),
        Op::ReferFreePush(14),
        Op::ConstantPush(sym812),
        Op::ReferFree(13),
        Op::CarPush,
        Op::ReferFree(13),
        Op::Cadr,
        Op::Push,
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferGlobal(vm.gc.intern("pass3/$asm-2-arg")),
        Op::TailCall(10, 15),
        Op::LocalJmp(677),
        Op::ConstantPush(sym813),
        Op::ReferLocal(0),
        Op::BranchNotEqv(17),
        Op::ReferFreePush(14),
        Op::ConstantPush(sym813),
        Op::ReferFree(13),
        Op::CarPush,
        Op::ReferFree(13),
        Op::Cadr,
        Op::Push,
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferGlobal(vm.gc.intern("pass3/$asm-2-arg")),
        Op::TailCall(10, 15),
        Op::LocalJmp(658),
        Op::ConstantPush(sym814),
        Op::ReferLocal(0),
        Op::BranchNotEqv(17),
        Op::ReferFreePush(14),
        Op::ConstantPush(sym814),
        Op::ReferFree(13),
        Op::CarPush,
        Op::ReferFree(13),
        Op::Cadr,
        Op::Push,
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferGlobal(vm.gc.intern("pass3/$asm-2-arg")),
        Op::TailCall(10, 15),
        Op::LocalJmp(639),
        Op::ConstantPush(sym815),
        Op::ReferLocal(0),
        Op::BranchNotEqv(17),
        Op::ReferFreePush(14),
        Op::ConstantPush(sym815),
        Op::ReferFree(13),
        Op::CarPush,
        Op::ReferFree(13),
        Op::Cadr,
        Op::Push,
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferGlobal(vm.gc.intern("pass3/$asm-2-arg")),
        Op::TailCall(10, 15),
        Op::LocalJmp(620),
        Op::ConstantPush(sym795),
        Op::ReferLocal(0),
        Op::BranchNotEqv(17),
        Op::ReferFreePush(14),
        Op::ConstantPush(sym795),
        Op::ReferFree(13),
        Op::CarPush,
        Op::ReferFree(13),
        Op::Cadr,
        Op::Push,
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferGlobal(vm.gc.intern("pass3/$asm-2-arg")),
        Op::TailCall(10, 15),
        Op::LocalJmp(601),
        Op::ConstantPush(sym822),
        Op::ReferLocal(0),
        Op::BranchNotEqv(14),
        Op::ReferFreePush(14),
        Op::ConstantPush(sym822),
        Op::ReferFree(13),
        Op::CarPush,
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferGlobal(vm.gc.intern("pass3/$asm-1-arg")),
        Op::TailCall(9, 15),
        Op::LocalJmp(585),
        Op::ConstantPush(sym823),
        Op::ReferLocal(0),
        Op::BranchNotEqv(14),
        Op::ReferFreePush(14),
        Op::ConstantPush(sym823),
        Op::ReferFree(13),
        Op::CarPush,
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferGlobal(vm.gc.intern("pass3/$asm-1-arg")),
        Op::TailCall(9, 15),
        Op::LocalJmp(569),
        Op::ConstantPush(sym824),
        Op::ReferLocal(0),
        Op::BranchNotEqv(14),
        Op::ReferFreePush(14),
        Op::ConstantPush(sym824),
        Op::ReferFree(13),
        Op::CarPush,
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferGlobal(vm.gc.intern("pass3/$asm-1-arg")),
        Op::TailCall(9, 15),
        Op::LocalJmp(553),
        Op::ConstantPush(sym825),
        Op::ReferLocal(0),
        Op::BranchNotEqv(14),
        Op::ReferFreePush(14),
        Op::ConstantPush(sym825),
        Op::ReferFree(13),
        Op::CarPush,
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferGlobal(vm.gc.intern("pass3/$asm-1-arg")),
        Op::TailCall(9, 15),
        Op::LocalJmp(537),
        Op::ConstantPush(sym826),
        Op::ReferLocal(0),
        Op::BranchNotEqv(14),
        Op::ReferFreePush(14),
        Op::ConstantPush(sym826),
        Op::ReferFree(13),
        Op::CarPush,
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferGlobal(vm.gc.intern("pass3/$asm-1-arg")),
        Op::TailCall(9, 15),
        Op::LocalJmp(521),
        Op::ConstantPush(sym827),
        Op::ReferLocal(0),
        Op::BranchNotEqv(14),
        Op::ReferFreePush(14),
        Op::ConstantPush(sym827),
        Op::ReferFree(13),
        Op::CarPush,
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferGlobal(vm.gc.intern("pass3/$asm-1-arg")),
        Op::TailCall(9, 15),
        Op::LocalJmp(505),
        Op::ConstantPush(sym829),
        Op::ReferLocal(0),
        Op::BranchNotEqv(17),
        Op::ReferFreePush(14),
        Op::ConstantPush(sym829),
        Op::ReferFree(13),
        Op::CarPush,
        Op::ReferFree(13),
        Op::Cadr,
        Op::Push,
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferGlobal(vm.gc.intern("pass3/$asm-2-arg")),
        Op::TailCall(10, 15),
        Op::LocalJmp(486),
        Op::ConstantPush(sym828),
        Op::ReferLocal(0),
        Op::BranchNotEqv(17),
        Op::ReferFreePush(14),
        Op::ConstantPush(sym828),
        Op::ReferFree(13),
        Op::CarPush,
        Op::ReferFree(13),
        Op::Cadr,
        Op::Push,
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferGlobal(vm.gc.intern("pass3/$asm-2-arg")),
        Op::TailCall(10, 15),
        Op::LocalJmp(467),
        Op::ConstantPush(sym821),
        Op::ReferLocal(0),
        Op::BranchNotEqv(17),
        Op::ReferFreePush(14),
        Op::ConstantPush(sym821),
        Op::ReferFree(13),
        Op::CarPush,
        Op::ReferFree(13),
        Op::Cadr,
        Op::Push,
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferGlobal(vm.gc.intern("pass3/$asm-2-arg")),
        Op::TailCall(10, 15),
        Op::LocalJmp(448),
        Op::ConstantPush(sym817),
        Op::ReferLocal(0),
        Op::BranchNotEqv(14),
        Op::ReferFreePush(14),
        Op::ConstantPush(sym817),
        Op::ReferFree(13),
        Op::CarPush,
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferGlobal(vm.gc.intern("pass3/$asm-1-arg")),
        Op::TailCall(9, 15),
        Op::LocalJmp(432),
        Op::ConstantPush(sym818),
        Op::ReferLocal(0),
        Op::BranchNotEqv(20),
        Op::ReferFreePush(14),
        Op::ConstantPush(sym818),
        Op::ReferFree(13),
        Op::CarPush,
        Op::ReferFree(13),
        Op::Cadr,
        Op::PushFrame(3),
        Op::ReferFreePush(13),
        Op::ReferFreeCall(6, 1),
        Op::Push,
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferGlobal(vm.gc.intern("pass3/$asm-3-arg")),
        Op::TailCall(11, 15),
        Op::LocalJmp(410),
        Op::ConstantPush(sym819),
        Op::ReferLocal(0),
        Op::BranchNotEqv(17),
        Op::ReferFreePush(14),
        Op::ConstantPush(sym819),
        Op::ReferFree(13),
        Op::CarPush,
        Op::ReferFree(13),
        Op::Cadr,
        Op::Push,
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferGlobal(vm.gc.intern("pass3/$asm-2-arg")),
        Op::TailCall(10, 15),
        Op::LocalJmp(391),
        Op::ConstantPush(sym820),
        Op::ReferLocal(0),
        Op::BranchNotEqv(17),
        Op::ReferFreePush(14),
        Op::ConstantPush(sym820),
        Op::ReferFree(13),
        Op::CarPush,
        Op::ReferFree(13),
        Op::Cadr,
        Op::Push,
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferGlobal(vm.gc.intern("pass3/$asm-2-arg")),
        Op::TailCall(10, 15),
        Op::LocalJmp(372),
        Op::ConstantPush(sym830),
        Op::ReferLocal(0),
        Op::BranchNotEqv(17),
        Op::ReferFreePush(14),
        Op::ConstantPush(sym830),
        Op::ReferFree(13),
        Op::CarPush,
        Op::ReferFree(13),
        Op::Cadr,
        Op::Push,
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferGlobal(vm.gc.intern("pass3/$asm-2-arg")),
        Op::TailCall(10, 15),
        Op::LocalJmp(353),
        Op::ConstantPush(sym831),
        Op::ReferLocal(0),
        Op::BranchNotEqv(17),
        Op::ReferFreePush(14),
        Op::ConstantPush(sym831),
        Op::ReferFree(13),
        Op::CarPush,
        Op::ReferFree(13),
        Op::Cadr,
        Op::Push,
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferGlobal(vm.gc.intern("pass3/$asm-2-arg")),
        Op::TailCall(10, 15),
        Op::LocalJmp(334),
        Op::ConstantPush(sym832),
        Op::ReferLocal(0),
        Op::BranchNotEqv(17),
        Op::ReferFreePush(14),
        Op::ConstantPush(sym832),
        Op::ReferFree(13),
        Op::CarPush,
        Op::ReferFree(13),
        Op::Cadr,
        Op::Push,
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferGlobal(vm.gc.intern("pass3/$asm-2-arg")),
        Op::TailCall(10, 15),
        Op::LocalJmp(315),
        Op::ConstantPush(sym835),
        Op::ReferLocal(0),
        Op::BranchNotEqv(14),
        Op::ReferFreePush(14),
        Op::ConstantPush(sym835),
        Op::ReferFree(13),
        Op::CarPush,
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferGlobal(vm.gc.intern("pass3/$asm-1-arg")),
        Op::TailCall(9, 15),
        Op::LocalJmp(299),
        Op::ConstantPush(sym834),
        Op::ReferLocal(0),
        Op::BranchNotEqv(14),
        Op::ReferFreePush(14),
        Op::ConstantPush(sym834),
        Op::ReferFree(13),
        Op::CarPush,
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferGlobal(vm.gc.intern("pass3/$asm-1-arg")),
        Op::TailCall(9, 15),
        Op::LocalJmp(283),
        Op::ConstantPush(sym836),
        Op::ReferLocal(0),
        Op::BranchNotEqv(14),
        Op::ReferFreePush(14),
        Op::ConstantPush(sym836),
        Op::ReferFree(13),
        Op::CarPush,
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferGlobal(vm.gc.intern("pass3/$asm-1-arg")),
        Op::TailCall(9, 15),
        Op::LocalJmp(267),
        Op::ConstantPush(sym816),
        Op::ReferLocal(0),
        Op::BranchNotEqv(14),
        Op::ReferFreePush(14),
        Op::ConstantPush(sym816),
        Op::ReferFree(13),
        Op::CarPush,
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferGlobal(vm.gc.intern("pass3/$asm-1-arg")),
        Op::TailCall(9, 15),
        Op::LocalJmp(251),
        Op::ConstantPush(sym833),
        Op::ReferLocal(0),
        Op::BranchNotEqv(14),
        Op::ReferFreePush(14),
        Op::ConstantPush(sym833),
        Op::ReferFree(13),
        Op::CarPush,
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferGlobal(vm.gc.intern("pass3/$asm-1-arg")),
        Op::TailCall(9, 15),
        Op::LocalJmp(235),
        Op::ConstantPush(sym867),
        Op::ReferLocal(0),
        Op::BranchNotEqv(14),
        Op::ReferFreePush(14),
        Op::ConstantPush(sym867),
        Op::ReferFree(13),
        Op::CarPush,
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferGlobal(vm.gc.intern("pass3/$asm-1-arg")),
        Op::TailCall(9, 15),
        Op::LocalJmp(219),
        Op::ConstantPush(sym837),
        Op::ReferLocal(0),
        Op::BranchNotEqv(14),
        Op::ReferFreePush(14),
        Op::ConstantPush(sym837),
        Op::ReferFree(13),
        Op::CarPush,
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferGlobal(vm.gc.intern("pass3/$asm-1-arg")),
        Op::TailCall(9, 15),
        Op::LocalJmp(203),
        Op::ConstantPush(sym838),
        Op::ReferLocal(0),
        Op::BranchNotEqv(14),
        Op::ReferFreePush(14),
        Op::ConstantPush(sym838),
        Op::ReferFree(13),
        Op::CarPush,
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferGlobal(vm.gc.intern("pass3/$asm-1-arg")),
        Op::TailCall(9, 15),
        Op::LocalJmp(187),
        Op::ConstantPush(sym799),
        Op::ReferLocal(0),
        Op::BranchNotEqv(37),
        Op::LetFrame(13),
        Op::ReferFreePush(14),
        Op::ReferFreePush(13),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(14),
        Op::ReferFreePush(13),
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::Display(12),
        Op::Frame(10),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferGlobalCall(vm.gc.intern("pass3/$asm-n-args"), 8),
        Op::PushEnter(1),
        Op::Frame(8),
        Op::ReferFreePush(7),
        Op::ConstantPush(sym799),
        Op::Frame(3),
        Op::ReferFreePush(6),
        Op::ReferFreeCall(9, 1),
        Op::Push,
        Op::ReferFreeCall(8, 3),
        Op::ReferLocal(0),
        Op::Leave(1),
        Op::LocalJmp(148),
        Op::ConstantPush(sym800),
        Op::ReferLocal(0),
        Op::BranchNotEqv(37),
        Op::LetFrame(13),
        Op::ReferFreePush(14),
        Op::ReferFreePush(13),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(14),
        Op::ReferFreePush(13),
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::Display(12),
        Op::Frame(10),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferGlobalCall(vm.gc.intern("pass3/$asm-n-args"), 8),
        Op::PushEnter(1),
        Op::Frame(8),
        Op::ReferFreePush(7),
        Op::ConstantPush(sym800),
        Op::Frame(3),
        Op::ReferFreePush(6),
        Op::ReferFreeCall(9, 1),
        Op::Push,
        Op::ReferFreeCall(8, 3),
        Op::ReferLocal(0),
        Op::Leave(1),
        Op::LocalJmp(109),
        Op::ConstantPush(sym868),
        Op::ReferLocal(0),
        Op::BranchNotEqv(103),
        Op::LetFrame(31),
        Op::ReferFreePush(14),
        Op::ReferFreePush(4),
        Op::ReferFreePush(13),
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(3),
        Op::Display(12),
        Op::Frame(3),
        Op::ConstantPush(Object::False),
        Op::ReferFreeCall(0, 1),
        Op::PushEnter(1),
        Op::Frame(5),
        Op::ReferFreePush(11),
        Op::ConstantPush(sym869),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(10, 3),
        Op::LetFrame(26),
        Op::ReferFreePush(11),
        Op::ReferFreePush(2),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::ReferFreePush(11),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::Display(19),
        Op::Frame(13),
        Op::ReferFreePush(7),
        Op::ReferFree(6),
        Op::Cadr,
        Op::Push,
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ConstantPush(Object::False),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferGlobalCall(vm.gc.intern("pass3/rec"), 9),
        Op::PushEnter(1),
        Op::Frame(4),
        Op::ReferFreePush(7),
        Op::ConstantPush(sym855),
        Op::ReferFreeCall(17, 2),
        Op::LetFrame(14),
        Op::ReferFreePush(7),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Display(12),
        Op::Frame(12),
        Op::ReferFreePush(7),
        Op::ReferFree(6),
        Op::CarPush,
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ConstantPush(Object::False),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferGlobalCall(vm.gc.intern("pass3/rec"), 9),
        Op::PushEnter(1),
        Op::Frame(5),
        Op::ReferFreePush(7),
        Op::ConstantPush(sym868),
        Op::ReferFreePush(10),
        Op::ReferFreeCall(9, 3),
        Op::Constant(Object::Nil),
        Op::ReferLocalPush(0),
        Op::ReferFree(8),
        Op::NumberAdd,
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::LocalJmp(4),
        Op::ConstantPush(str208),
        Op::ReferGlobal(vm.gc.intern("error")),
        Op::TailCall(1, 15),
        Op::Leave(1),
        Op::Leave(1),
        Op::Return(9),
        Op::DefineGlobal(vm.gc.intern("pass3/$asm")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 9, is_optional_arg: false, num_free_vars: 0},
        Op::ReferGlobalPush(vm.gc.intern("$IT")),
        Op::ReferLocalPushConstant(1, Object::Number(2)),
        Op::VectorRef,
        Op::PushConstant(Object::Number(0)),
        Op::VectorRef,
        Op::Eqv,
        Op::NotTest(20),
        Op::ReferGlobalPush(vm.gc.intern("$IT")),
        Op::ReferLocalPushConstant(1, Object::Number(3)),
        Op::VectorRef,
        Op::PushConstant(Object::Number(0)),
        Op::VectorRef,
        Op::Eqv,
        Op::NotTest(13),
        Op::ReferGlobalPush(vm.gc.intern("$ASM")),
        Op::ReferLocalPushConstant(1, Object::Number(1)),
        Op::VectorRef,
        Op::PushConstant(Object::Number(0)),
        Op::VectorRef,
        Op::BranchNotEqv(7),
        Op::ReferLocalPushConstant(1, Object::Number(1)),
        Op::VectorRef,
        Op::PushConstant(Object::Number(1)),
        Op::VectorRef,
        Op::PushConstant(sym833),
        Op::Eqv,
        Op::Test(26),
        Op::ReferLocalPush(0),
        Op::Frame(13),
        Op::ReferLocalPushConstant(1, Object::Number(1)),
        Op::VectorRef,
        Op::PushConstant(Object::Number(2)),
        Op::VectorRef,
        Op::CarPush,
        Op::ReferLocalPushConstant(1, Object::Number(3)),
        Op::VectorRef,
        Op::Push,
        Op::ReferLocalPushConstant(1, Object::Number(2)),
        Op::VectorRef,
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("$if"), 3),
        Op::Push,
        Op::ReferLocalPush(2),
        Op::ReferLocalPush(3),
        Op::ReferLocalPush(4),
        Op::ReferLocalPush(5),
        Op::ReferLocalPush(6),
        Op::ReferLocalPush(7),
        Op::ReferLocalPush(8),
        Op::ReferGlobal(vm.gc.intern("pass3/$if")),
        Op::TailCall(9, 9),
        Op::Return(9),
        Op::ReferGlobalPush(vm.gc.intern("$CONST")),
        Op::ReferLocalPushConstant(1, Object::Number(3)),
        Op::VectorRef,
        Op::PushConstant(Object::Number(0)),
        Op::VectorRef,
        Op::BranchNotEqv(6),
        Op::ReferLocalPushConstant(1, Object::Number(3)),
        Op::VectorRef,
        Op::PushConstant(Object::Number(1)),
        Op::VectorRef,
        Op::Not,
        Op::Test(17),
        Op::ReferLocalPushConstant(1, Object::Number(3)),
        Op::PushFrame(2),
        Op::ReferGlobalCall(vm.gc.intern("$it"), 0),
        Op::VectorSet,
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferLocalPush(3),
        Op::ReferLocalPush(4),
        Op::ReferLocalPush(5),
        Op::ReferLocalPush(6),
        Op::ReferLocalPush(7),
        Op::ReferLocalPush(8),
        Op::ReferGlobal(vm.gc.intern("pass3/$if")),
        Op::TailCall(9, 9),
        Op::Return(9),
        Op::ReferGlobalPush(vm.gc.intern("$ASM")),
        Op::ReferLocalPushConstant(1, Object::Number(1)),
        Op::VectorRef,
        Op::PushConstant(Object::Number(0)),
        Op::VectorRef,
        Op::BranchNotEqv(165),
        Op::LetFrame(111),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferLocalPush(3),
        Op::ReferLocalPush(4),
        Op::ReferLocalPush(5),
        Op::ReferLocalPush(6),
        Op::ReferLocalPush(7),
        Op::ReferLocalPush(8),
        Op::Display(9),
        Op::ReferLocalPushConstant(1, Object::Number(1)),
        Op::VectorRef,
        Op::PushConstant(Object::Number(1)),
        Op::VectorRef,
        Op::PushEnter(1),
        Op::ReferLocalPushConstant(0, sym834),
        Op::BranchNotEq(14),
        Op::ConstantPush(sym870),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("pass3/branch-on-asm1")),
        Op::TailCall(10, 12),
        Op::LocalJmp(132),
        Op::ReferLocalPushConstant(0, sym830),
        Op::BranchNotEq(14),
        Op::ConstantPush(sym871),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("pass3/branch-on-asm2")),
        Op::TailCall(10, 12),
        Op::LocalJmp(117),
        Op::ReferLocalPushConstant(0, sym831),
        Op::BranchNotEq(14),
        Op::ConstantPush(sym872),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("pass3/branch-on-asm2")),
        Op::TailCall(10, 12),
        Op::LocalJmp(102),
        Op::ReferLocalPushConstant(0, sym832),
        Op::BranchNotEq(14),
        Op::ConstantPush(sym873),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("pass3/branch-on-asm2")),
        Op::TailCall(10, 12),
        Op::LocalJmp(87),
        Op::ReferLocalPushConstant(0, sym811),
        Op::BranchNotEq(14),
        Op::ConstantPush(sym874),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("pass3/branch-on-asm2")),
        Op::TailCall(10, 12),
        Op::LocalJmp(72),
        Op::ReferLocalPushConstant(0, sym815),
        Op::BranchNotEq(14),
        Op::ConstantPush(sym875),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("pass3/branch-on-asm2")),
        Op::TailCall(10, 12),
        Op::LocalJmp(57),
        Op::ReferLocalPushConstant(0, sym814),
        Op::BranchNotEq(14),
        Op::ConstantPush(sym876),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("pass3/branch-on-asm2")),
        Op::TailCall(10, 12),
        Op::LocalJmp(42),
        Op::ReferLocalPushConstant(0, sym813),
        Op::BranchNotEq(14),
        Op::ConstantPush(sym877),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("pass3/branch-on-asm2")),
        Op::TailCall(10, 12),
        Op::LocalJmp(27),
        Op::ReferLocalPushConstant(0, sym812),
        Op::BranchNotEq(14),
        Op::ConstantPush(sym878),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("pass3/branch-on-asm2")),
        Op::TailCall(10, 12),
        Op::LocalJmp(12),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("pass3/branch-on-false")),
        Op::TailCall(9, 12),
        Op::Leave(1),
        Op::Return(9),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferLocalPush(3),
        Op::ReferLocalPush(4),
        Op::ReferLocalPush(5),
        Op::ReferLocalPush(6),
        Op::ReferLocalPush(7),
        Op::ReferLocalPush(8),
        Op::ReferGlobal(vm.gc.intern("pass3/branch-on-false")),
        Op::TailCall(9, 9),
        Op::Return(9),
        Op::DefineGlobal(vm.gc.intern("pass3/$if")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(195),
        Op::ReferFreePush(189),
        Op::ReferFreePush(181),
        Op::ReferFreePush(183),
        Op::Closure {size: 0, arg_len: 11, is_optional_arg: false, num_free_vars: 4},
        Op::LetFrame(43),
        Op::ReferLocalPush(2),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(3),
        Op::ReferLocalPush(4),
        Op::ReferLocalPush(5),
        Op::ReferLocalPush(6),
        Op::ReferLocalPush(7),
        Op::ReferLocalPush(8),
        Op::ReferLocalPush(9),
        Op::ReferLocalPush(10),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(3),
        Op::ReferFreePush(3),
        Op::Display(16),
        Op::Frame(3),
        Op::ConstantPush(Object::False),
        Op::ReferFreeCall(0, 1),
        Op::PushFrame(3),
        Op::ConstantPush(Object::False),
        Op::ReferFreeCall(0, 1),
        Op::PushEnter(2),
        Op::Frame(5),
        Op::ReferFreePush(15),
        Op::ReferFreePush(14),
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(13, 3),
        Op::LetFrame(36),
        Op::ReferFreePush(12),
        Op::ReferFreePush(15),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(2),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(15),
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::Display(23),
        Op::Frame(14),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::Constant(Object::Number(2)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferGlobalCall(vm.gc.intern("pass3/rec"), 9),
        Op::PushEnter(1),
        Op::ReferGlobalPush(vm.gc.intern("$IT")),
        Op::ReferFreePush(7),
        Op::Constant(Object::Number(3)),
        Op::VectorRef,
        Op::PushConstant(Object::Number(0)),
        Op::VectorRef,
        Op::BranchNotEqv(10),
        Op::Frame(4),
        Op::ReferFreePush(8),
        Op::ReferFreePush(20),
        Op::ReferFreeCall(19, 2),
        Op::Constant(Object::Nil),
        Op::ReferFreePush(18),
        Op::ReferLocal(0),
        Op::NumberAdd,
        Op::LocalJmp(50),
        Op::Frame(6),
        Op::ReferFreePush(8),
        Op::ConstantPush(sym879),
        Op::ReferFreePush(17),
        Op::ReferFreePush(20),
        Op::ReferFreeCall(16, 4),
        Op::Constant(Object::Nil),
        Op::LetFrame(15),
        Op::ReferFreePush(8),
        Op::ReferFreePush(17),
        Op::ReferFreePush(19),
        Op::ReferFreePush(18),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Display(14),
        Op::Frame(14),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::Constant(Object::Number(3)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferGlobalCall(vm.gc.intern("pass3/rec"), 9),
        Op::PushEnter(1),
        Op::Frame(4),
        Op::ReferFreePush(8),
        Op::ReferFreePush(12),
        Op::ReferFreeCall(11, 2),
        Op::Constant(Object::Nil),
        Op::ReferFreePush(10),
        Op::ReferFree(9),
        Op::NumberAddPush,
        Op::ReferLocal(0),
        Op::NumberAdd,
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(2),
        Op::Return(11),
        Op::DefineGlobal(vm.gc.intern("pass3/emit-then-else")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 10, is_optional_arg: false, num_free_vars: 0},
        Op::LetFrame(24),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(3),
        Op::ReferLocalPush(4),
        Op::ReferLocalPush(5),
        Op::ReferLocalPush(6),
        Op::ReferLocalPush(8),
        Op::ReferLocalPush(9),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(2),
        Op::ReferLocalPush(7),
        Op::Display(10),
        Op::ReferLocalPushConstant(2, Object::Number(1)),
        Op::VectorRef,
        Op::PushConstant(Object::Number(2)),
        Op::VectorRef,
        Op::PushEnter(1),
        Op::LetFrame(21),
        Op::ReferFreePush(2),
        Op::ReferFreePush(9),
        Op::ReferFreePush(1),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(0),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::Display(17),
        Op::Frame(12),
        Op::ReferFreePush(6),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ConstantPush(Object::False),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferGlobalCall(vm.gc.intern("pass3/rec"), 9),
        Op::PushEnter(1),
        Op::ReferFreePush(16),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(6),
        Op::ReferFreePush(14),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(9),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("pass3/emit-then-else")),
        Op::TailCall(11, 16),
        Op::Leave(1),
        Op::Leave(1),
        Op::Return(10),
        Op::DefineGlobal(vm.gc.intern("pass3/branch-on-asm1")),
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 10, is_optional_arg: false, num_free_vars: 0},
        Op::LetFrame(35),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(3),
        Op::ReferLocalPush(4),
        Op::ReferLocalPush(5),
        Op::ReferLocalPush(6),
        Op::ReferLocalPush(8),
        Op::ReferLocalPush(9),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(2),
        Op::ReferLocalPush(7),
        Op::Display(10),
        Op::ReferLocalPushConstant(2, Object::Number(1)),
        Op::VectorRef,
        Op::PushConstant(Object::Number(2)),
        Op::VectorRef,
        Op::PushEnter(1),
        Op::LetFrame(32),
        Op::ReferFreePush(9),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::Display(18),
        Op::Frame(12),
        Op::ReferFreePush(6),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ConstantPush(Object::False),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferGlobalCall(vm.gc.intern("pass3/compile-arg"), 9),
        Op::PushEnter(1),
        Op::LetFrame(22),
        Op::ReferFreePush(9),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(6),
        Op::ReferFreePush(8),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(7),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(6),
        Op::ReferFreePush(16),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Display(19),
        Op::Frame(13),
        Op::ReferFreePush(7),
        Op::ReferFree(6),
        Op::Cadr,
        Op::Push,
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ConstantPush(Object::False),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferGlobalCall(vm.gc.intern("pass3/rec"), 9),
        Op::PushEnter(1),
        Op::ReferFreePush(18),
        Op::ReferFreePush(17),
        Op::ReferLocal(0),
        Op::NumberAddPush,
        Op::ReferFreePush(7),
        Op::ReferFreePush(15),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(10),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("pass3/emit-then-else")),
        Op::TailCall(11, 19),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Return(10),
        Op::DefineGlobal(vm.gc.intern("pass3/branch-on-asm2")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 9, is_optional_arg: false, num_free_vars: 0},
        Op::LetFrame(22),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferLocalPush(3),
        Op::ReferLocalPush(4),
        Op::ReferLocalPush(5),
        Op::ReferLocalPush(6),
        Op::ReferLocalPush(7),
        Op::ReferLocalPush(8),
        Op::Display(9),
        Op::Frame(13),
        Op::ReferLocalPush(0),
        Op::ReferLocalPushConstant(1, Object::Number(1)),
        Op::VectorRef,
        Op::Push,
        Op::ReferLocalPush(2),
        Op::ReferLocalPush(3),
        Op::ReferLocalPush(4),
        Op::ReferLocalPushConstant(5, Object::False),
        Op::Push,
        Op::ReferLocalPush(7),
        Op::ReferLocalPush(8),
        Op::ReferGlobalCall(vm.gc.intern("pass3/rec"), 9),
        Op::PushEnter(1),
        Op::ConstantPush(sym880),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferGlobal(vm.gc.intern("pass3/emit-then-else")),
        Op::TailCall(11, 12),
        Op::Leave(1),
        Op::Return(9),
        Op::DefineGlobal(vm.gc.intern("pass3/branch-on-false")),
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(182),
        Op::Closure {size: 0, arg_len: 9, is_optional_arg: false, num_free_vars: 1},
        Op::LetFrame(15),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(0),
        Op::Display(3),
        Op::Frame(13),
        Op::ReferLocalPush(0),
        Op::ReferLocalPushConstant(1, Object::Number(2)),
        Op::VectorRef,
        Op::Push,
        Op::ReferLocalPush(2),
        Op::ReferLocalPush(3),
        Op::ReferLocalPush(4),
        Op::ReferLocalPushConstant(5, Object::False),
        Op::Push,
        Op::ReferLocalPush(7),
        Op::ReferLocalPush(8),
        Op::ReferGlobalCall(vm.gc.intern("pass3/rec"), 9),
        Op::PushEnter(1),
        Op::Frame(8),
        Op::ReferFreePush(2),
        Op::ConstantPush(sym881),
        Op::ReferFreePush(1),
        Op::Constant(Object::Number(1)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFreeCall(0, 3),
        Op::Constant(Object::Nil),
        Op::ReferLocal(0),
        Op::Leave(1),
        Op::Return(9),
        Op::DefineGlobal(vm.gc.intern("pass3/$define")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(188),
        Op::Closure {size: 0, arg_len: 9, is_optional_arg: false, num_free_vars: 1},
        Op::LetFrame(13),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::Display(2),
        Op::Frame(11),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferLocalPush(3),
        Op::ReferLocalPush(4),
        Op::ReferLocalPushConstant(5, Object::False),
        Op::Push,
        Op::ReferLocalPush(7),
        Op::ReferLocalPush(8),
        Op::ReferGlobalCall(vm.gc.intern("pass3/rec"), 9),
        Op::PushEnter(1),
        Op::Frame(4),
        Op::ReferFreePush(1),
        Op::ConstantPush(sym855),
        Op::ReferFreeCall(0, 2),
        Op::ReferLocalPushConstant(0, Object::Number(1)),
        Op::NumberAdd,
        Op::Leave(1),
        Op::Return(9),
        Op::DefineGlobal(vm.gc.intern("pass3/compile-arg")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 9, is_optional_arg: false, num_free_vars: 0},
        Op::LetFrame(14),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(2),
        Op::ReferLocalPush(3),
        Op::ReferLocalPush(4),
        Op::ReferLocalPush(5),
        Op::ReferLocalPush(6),
        Op::ReferLocalPush(7),
        Op::ReferLocalPush(8),
        Op::ReferLocalPush(1),
        Op::Display(9),
        Op::ConstantPush(Object::Number(0)),
        Op::ReferLocalPush(1),
        Op::Enter(2),
        Op::ReferLocalBranchNotNull(1, 3),
        Op::ReferLocal(0),
        Op::LocalJmp(19),
        Op::ReferLocalPush(0),
        Op::Frame(12),
        Op::ReferFreePush(8),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferGlobalCall(vm.gc.intern("pass3/compile-arg"), 9),
        Op::NumberAddPush,
        Op::ReferLocal(1),
        Op::CdrPush,
        Op::Shiftj(2, 2, 0),
        Op::LocalJmp(-20),
        Op::Leave(2),
        Op::Return(9),
        Op::DefineGlobal(vm.gc.intern("pass3/compile-args")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Undef,
        Op::Undef,
        Op::ReferFreePush(191),
        Op::ReferFreePush(184),
        Op::ReferFreePush(182),
        Op::ReferFreePush(26),
        Op::ReferFreePush(89),
        Op::ReferFreePush(177),
        Op::ReferFreePush(178),
        Op::ReferFreePush(180),
        Op::ReferFreePush(181),
        Op::ReferFreePush(189),
        Op::ReferFreePush(108),
        Op::ReferFreePush(186),
        Op::ReferFreePush(195),
        Op::ReferFreePush(190),
        Op::Closure {size: 0, arg_len: 9, is_optional_arg: false, num_free_vars: 14},
        Op::LetFrame(197),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(13),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(2),
        Op::ReferLocalPush(3),
        Op::ReferLocalPush(4),
        Op::ReferLocalPush(5),
        Op::ReferLocalPush(7),
        Op::ReferLocalPush(8),
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferLocalPush(6),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Display(23),
        Op::ReferLocalPushConstant(1, Object::Number(4)),
        Op::VectorRef,
        Op::PushEnter(1),
        Op::ConstantPush(sym850),
        Op::ReferLocal(0),
        Op::BranchNotEqv(101),
        Op::LetFrame(36),
        Op::ReferFreePush(20),
        Op::ReferFreePush(22),
        Op::ReferFreePush(19),
        Op::ReferFreePush(18),
        Op::ReferFreePush(17),
        Op::ReferFreePush(16),
        Op::ReferFreePush(15),
        Op::ReferFreePush(14),
        Op::ReferFreePush(13),
        Op::ReferFreePush(12),
        Op::ReferFreePush(22),
        Op::ReferFreePush(21),
        Op::ReferFreePush(22),
        Op::Display(13),
        Op::ReferFreePush(0),
        Op::Constant(Object::Number(1)),
        Op::VectorRef,
        Op::PushConstant(Object::Number(1)),
        Op::VectorRef,
        Op::PushConstant(Object::Number(6)),
        Op::VectorRef,
        Op::PushFrame(6),
        Op::ReferFreePush(0),
        Op::Constant(Object::Number(2)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFreeCall(1, 1),
        Op::PushEnter(2),
        Op::LetFrame(29),
        Op::ReferFreePush(12),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(6),
        Op::ReferFreePush(0),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(3),
        Op::ReferFreePush(12),
        Op::ReferFreePush(0),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::Display(16),
        Op::Frame(14),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::Constant(Object::Number(2)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ConstantPush(Object::False),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferGlobalCall(vm.gc.intern("pass3/compile-args"), 9),
        Op::PushEnter(1),
        Op::Frame(23),
        Op::ReferFreePush(7),
        Op::ConstantPush(sym882),
        Op::ReferFreePush(14),
        Op::ReferFreePush(1),
        Op::ReferFreePush(6),
        Op::Constant(Object::Number(1)),
        Op::VectorRef,
        Op::PushConstant(Object::Number(5)),
        Op::VectorRef,
        Op::NumberSubPush,
        Op::Constant(Object::Number(2)),
        Op::NumberSubPush,
        Op::ReferFreePush(0),
        Op::ReferFreePush(6),
        Op::Constant(Object::Number(1)),
        Op::VectorRef,
        Op::PushConstant(Object::Number(6)),
        Op::VectorRef,
        Op::NumberSubPush,
        Op::Constant(Object::Number(1)),
        Op::NumberSubPush,
        Op::ReferFreeCall(10, 5),
        Op::Constant(Object::Nil),
        Op::ReferFreePush(9),
        Op::ConstantPush(Object::Number(2)),
        Op::Constant(Object::True),
        Op::VectorSet,
        Op::Frame(5),
        Op::ReferFreePush(7),
        Op::ConstantPush(sym879),
        Op::ReferFreePush(9),
        Op::ReferFreeCall(8, 3),
        Op::Constant(Object::Nil),
        Op::ReferLocal(0),
        Op::Leave(1),
        Op::Leave(2),
        Op::LocalJmp(740),
        Op::ConstantPush(sym849),
        Op::ReferLocal(0),
        Op::BranchNotEqv(562),
        Op::LetFrame(106),
        Op::ReferFreePush(22),
        Op::ReferFreePush(11),
        Op::ReferFreePush(17),
        Op::ReferFreePush(19),
        Op::ReferFreePush(10),
        Op::ReferFreePush(18),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(15),
        Op::ReferFreePush(14),
        Op::ReferFreePush(20),
        Op::ReferFreePush(6),
        Op::ReferFreePush(21),
        Op::ReferFreePush(12),
        Op::ReferFreePush(16),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(22),
        Op::Display(21),
        Op::ReferFreePush(0),
        Op::Constant(Object::Number(1)),
        Op::VectorRef,
        Op::PushConstant(Object::Number(6)),
        Op::VectorRef,
        Op::PushEnter(1),
        Op::LetFrame(103),
        Op::ReferFreePush(0),
        Op::ReferFreePush(19),
        Op::ReferFreePush(18),
        Op::ReferFreePush(17),
        Op::ReferFreePush(16),
        Op::ReferFreePush(15),
        Op::ReferFreePush(14),
        Op::ReferFreePush(13),
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::Display(21),
        Op::ReferLocalPushConstant(0, Object::Number(1)),
        Op::VectorRef,
        Op::PushEnter(1),
        Op::LetFrame(101),
        Op::ReferFreePush(19),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(18),
        Op::ReferFreePush(17),
        Op::ReferFreePush(16),
        Op::ReferFreePush(15),
        Op::ReferFreePush(14),
        Op::ReferFreePush(13),
        Op::ReferFreePush(12),
        Op::ReferFreePush(20),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(20),
        Op::Display(23),
        Op::ReferFreePush(0),
        Op::Constant(Object::Number(1)),
        Op::VectorRef,
        Op::PushConstant(Object::Number(5)),
        Op::VectorRef,
        Op::PushEnter(1),
        Op::LetFrame(98),
        Op::ReferFreePush(21),
        Op::ReferFreePush(20),
        Op::ReferFreePush(19),
        Op::ReferFreePush(18),
        Op::ReferFreePush(17),
        Op::ReferFreePush(16),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(15),
        Op::ReferFreePush(14),
        Op::ReferFreePush(0),
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(22),
        Op::ReferLocalPush(0),
        Op::Display(24),
        Op::LetFrame(7),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(0),
        Op::Display(2),
        Op::ConstantPush(Object::Nil),
        Op::ReferLocalPush(0),
        Op::Enter(2),
        Op::ReferLocalBranchNotNull(1, 5),
        Op::Frame(16),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(1, 1),
        Op::LocalJmp(13),
        Op::Frame(4),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::ReferGlobalCall(vm.gc.intern("$lvar.sym-proc"), 1),
        Op::Push,
        Op::ReferLocal(0),
        Op::Cons,
        Op::Push,
        Op::ReferLocal(1),
        Op::CdrPush,
        Op::Shiftj(2, 2, 0),
        Op::LocalJmp(-16),
        Op::Leave(2),
        Op::PushEnter(1),
        Op::LetFrame(90),
        Op::ReferFreePush(23),
        Op::ReferFreePush(0),
        Op::ReferFreePush(16),
        Op::ReferFreePush(15),
        Op::ReferFreePush(14),
        Op::ReferFreePush(13),
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(21),
        Op::ReferFreePush(19),
        Op::ReferFreePush(8),
        Op::ReferFreePush(22),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(20),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(23),
        Op::ReferFreePush(22),
        Op::ReferFreePush(21),
        Op::ReferFreePush(20),
        Op::ReferFreePush(19),
        Op::ReferFreePush(18),
        Op::Display(28),
        Op::Frame(14),
        Op::ReferFreePush(5),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(4),
        Op::Frame(3),
        Op::ReferFreePush(3),
        Op::ReferFreeCall(2, 1),
        Op::Append2,
        Op::PushFrame(3),
        Op::ReferFreePush(1),
        Op::ReferFreeCall(2, 1),
        Op::Append2,
        Op::Push,
        Op::ReferFreeCall(0, 3),
        Op::PushEnter(1),
        Op::LetFrame(82),
        Op::ReferFreePush(24),
        Op::ReferFreePush(23),
        Op::ReferFreePush(22),
        Op::ReferFreePush(21),
        Op::ReferFreePush(20),
        Op::ReferFreePush(19),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(18),
        Op::ReferFreePush(3),
        Op::ReferFreePush(1),
        Op::ReferFreePush(15),
        Op::ReferFreePush(4),
        Op::ReferFreePush(13),
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(26),
        Op::ReferFreePush(5),
        Op::ReferFreePush(10),
        Op::ReferFreePush(2),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(26),
        Op::ReferFreePush(25),
        Op::Display(25),
        Op::Frame(4),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreeCall(0, 2),
        Op::PushEnter(1),
        Op::LetFrame(79),
        Op::ReferFreePush(23),
        Op::ReferFreePush(22),
        Op::ReferFreePush(21),
        Op::ReferFreePush(20),
        Op::ReferFreePush(19),
        Op::ReferFreePush(18),
        Op::ReferFreePush(17),
        Op::ReferFreePush(16),
        Op::ReferFreePush(15),
        Op::ReferFreePush(14),
        Op::ReferFreePush(13),
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::ReferFreePush(2),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(24),
        Op::Display(23),
        Op::Frame(2),
        Op::ReferFreeCall(0, 0),
        Op::PushEnter(1),
        Op::ReferFreePush(22),
        Op::ConstantPush(Object::Number(5)),
        Op::ReferFree(21),
        Op::VectorSet,
        Op::ReferFreePush(22),
        Op::ConstantPush(Object::Number(6)),
        Op::ReferFree(20),
        Op::VectorSet,
        Op::Frame(4),
        Op::ReferFreePush(19),
        Op::ConstantPush(sym883),
        Op::ReferFreeCall(18, 2),
        Op::Constant(Object::Nil),
        Op::LetFrame(72),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(17),
        Op::ReferFreePush(15),
        Op::ReferFreePush(14),
        Op::ReferFreePush(13),
        Op::ReferFreePush(22),
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(21),
        Op::ReferFreePush(20),
        Op::ReferFreePush(16),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(18),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(19),
        Op::ReferFreePush(1),
        Op::ReferFreePush(17),
        Op::ReferFreePush(16),
        Op::Display(25),
        Op::Frame(3),
        Op::ReferFreePush(1),
        Op::ReferFreeCall(0, 1),
        Op::PushEnter(1),
        Op::LetFrame(70),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(24),
        Op::ReferFreePush(20),
        Op::ReferFreePush(19),
        Op::ReferFreePush(22),
        Op::ReferFreePush(1),
        Op::ReferFreePush(18),
        Op::ReferFreePush(17),
        Op::ReferFreePush(16),
        Op::ReferFreePush(15),
        Op::ReferFreePush(0),
        Op::ReferFreePush(13),
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(24),
        Op::ReferFreePush(1),
        Op::ReferFreePush(22),
        Op::ReferFreePush(21),
        Op::Display(27),
        Op::ReferLocalPushConstant(0, Object::Number(0)),
        Op::BranchNotGt(8),
        Op::Frame(8),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferGlobalCall(vm.gc.intern("pass3/collect-free"), 4),
        Op::LocalJmp(2),
        Op::Constant(Object::Number(0)),
        Op::PushEnter(1),
        Op::LetFrame(64),
        Op::ReferFreePush(3),
        Op::ReferFreePush(26),
        Op::ReferFreePush(24),
        Op::ReferFreePush(23),
        Op::ReferFreePush(1),
        Op::ReferFreePush(2),
        Op::ReferFreePush(20),
        Op::ReferFreePush(19),
        Op::ReferFreePush(18),
        Op::ReferFreePush(17),
        Op::ReferFreePush(16),
        Op::ReferFreePush(15),
        Op::ReferFreePush(14),
        Op::ReferFreePush(13),
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(4),
        Op::ReferFreePush(26),
        Op::Display(25),
        Op::ReferFreePush(0),
        Op::Constant(Object::Number(0)),
        Op::NumberGt,
        Op::PushEnter(1),
        Op::ReferLocal(0),
        Op::Test(8),
        Op::Frame(5),
        Op::ReferFreePush(24),
        Op::ConstantPush(sym884),
        Op::ReferFreePush(0),
        Op::ReferFreeCall(22, 3),
        Op::Constant(Object::Nil),
        Op::LocalJmp(2),
        Op::Undef,
        Op::LetFrame(59),
        Op::ReferFreePush(24),
        Op::ReferFreePush(13),
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(19),
        Op::ReferFreePush(18),
        Op::ReferFreePush(6),
        Op::ReferFreePush(17),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(14),
        Op::ReferFreePush(16),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(15),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(21),
        Op::ReferFreePush(14),
        Op::ReferFreePush(24),
        Op::ReferFreePush(21),
        Op::ReferFreePush(20),
        Op::ReferFreePush(19),
        Op::ReferFreePush(18),
        Op::ReferFreePush(17),
        Op::ReferFreePush(16),
        Op::ReferFreePush(15),
        Op::Display(31),
        Op::Frame(23),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::Constant(Object::Number(2)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ConstantPush(Object::False),
        Op::ReferFreePush(1),
        Op::Constant(Object::Number(2)),
        Op::NumberAddPush,
        Op::ReferLocal(0),
        Op::Test(5),
        Op::ReferFreePush(0),
        Op::Constant(Object::Number(1)),
        Op::NumberAdd,
        Op::LocalJmp(2),
        Op::ReferFree(0),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("pass3/compile-args"), 9),
        Op::PushFrame(6),
        Op::ReferFreePush(6),
        Op::Constant(Object::Number(2)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFreeCall(8, 1),
        Op::PushEnter(2),
        Op::Frame(5),
        Op::ReferFreePush(7),
        Op::ConstantPush(sym885),
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(29, 3),
        Op::Frame(4),
        Op::ReferFreePush(7),
        Op::ReferFreePush(28),
        Op::ReferFreeCall(27, 2),
        Op::Constant(Object::Nil),
        Op::Frame(5),
        Op::ReferFreePush(7),
        Op::ReferFreePush(26),
        Op::ReferFreePush(25),
        Op::ReferGlobalCall(vm.gc.intern("pass3/make-boxes"), 3),
        Op::ReferFreePush(28),
        Op::ConstantPush(Object::Number(2)),
        Op::Constant(Object::True),
        Op::VectorSet,
        Op::LetFrame(33),
        Op::ReferFreePush(7),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(29),
        Op::ReferFreePush(12),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(11),
        Op::ReferFreePush(27),
        Op::ReferFreePush(10),
        Op::ReferFreePush(7),
        Op::ReferFreePush(24),
        Op::ReferFreePush(23),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(20),
        Op::ReferFreePush(26),
        Op::ReferFreePush(2),
        Op::ReferFreePush(18),
        Op::ReferFreePush(17),
        Op::ReferFreePush(25),
        Op::ReferFreePush(8),
        Op::ReferFreePush(1),
        Op::ReferFreePush(14),
        Op::ReferFreePush(0),
        Op::Display(23),
        Op::Frame(49),
        Op::ReferFreePush(14),
        Op::ReferFreePush(13),
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::Frame(3),
        Op::ReferFreePush(12),
        Op::ReferFreeCall(9, 1),
        Op::Append2,
        Op::Push,
        Op::ReferFree(8),
        Op::BranchNotNull(3),
        Op::ReferFree(7),
        Op::LocalJmp(8),
        Op::Frame(7),
        Op::Frame(3),
        Op::ReferFreePush(7),
        Op::ReferFreeCall(6, 1),
        Op::Push,
        Op::ReferFreePush(8),
        Op::ReferGlobalCall(vm.gc.intern("hashtable-set-true!"), 2),
        Op::Push,
        Op::ReferFree(5),
        Op::Test(8),
        Op::ReferFreePush(5),
        Op::Frame(3),
        Op::ReferFreePush(4),
        Op::ReferFreeCall(3, 1),
        Op::NumberAddPush,
        Op::Constant(Object::Number(2)),
        Op::NumberAdd,
        Op::Push,
        Op::ReferFreePush(2),
        Op::Frame(3),
        Op::ReferFreePush(4),
        Op::ReferFreeCall(3, 1),
        Op::NumberAddPush,
        Op::Constant(Object::Number(2)),
        Op::NumberAddPush,
        Op::ReferFree(1),
        Op::Test(5),
        Op::ReferFreePush(0),
        Op::Constant(Object::Number(1)),
        Op::NumberAdd,
        Op::LocalJmp(2),
        Op::ReferFree(0),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("pass3/rec"), 9),
        Op::PushEnter(1),
        Op::Frame(5),
        Op::ReferFreePush(14),
        Op::ConstantPush(sym886),
        Op::ReferFreePush(21),
        Op::ReferFreeCall(20, 3),
        Op::Frame(8),
        Op::ReferFreePush(19),
        Op::ReferFreePush(18),
        Op::ReferLocal(0),
        Op::NumberAddPush,
        Op::ReferFree(17),
        Op::NumberAddPush,
        Op::ReferFreeCall(16, 2),
        Op::Constant(Object::Nil),
        Op::Frame(4),
        Op::ReferFreePush(19),
        Op::ReferFreePush(14),
        Op::ReferFreeCall(15, 2),
        Op::ReferFreePush(18),
        Op::ReferLocal(0),
        Op::NumberAddPush,
        Op::ReferFree(17),
        Op::NumberAdd,
        Op::Leave(1),
        Op::Leave(2),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::LocalJmp(176),
        Op::LetFrame(51),
        Op::ReferFreePush(3),
        Op::ReferFreePush(20),
        Op::ReferFreePush(5),
        Op::ReferFreePush(22),
        Op::ReferFreePush(19),
        Op::ReferFreePush(18),
        Op::ReferFreePush(17),
        Op::ReferFreePush(16),
        Op::ReferFreePush(15),
        Op::ReferFreePush(14),
        Op::ReferFreePush(21),
        Op::ReferFreePush(0),
        Op::ReferFreePush(6),
        Op::ReferFreePush(1),
        Op::Display(14),
        Op::Frame(3),
        Op::ConstantPush(Object::False),
        Op::ReferFreeCall(0, 1),
        Op::PushEnter(1),
        Op::ReferFree(13),
        Op::Test(3),
        Op::Undef,
        Op::LocalJmp(6),
        Op::Frame(5),
        Op::ReferFreePush(12),
        Op::ConstantPush(sym869),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(11, 3),
        Op::LetFrame(46),
        Op::ReferFreePush(12),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(13),
        Op::ReferFreePush(2),
        Op::ReferFreePush(11),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::ReferFreePush(12),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::Display(22),
        Op::Frame(14),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::Constant(Object::Number(2)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ConstantPush(Object::False),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferGlobalCall(vm.gc.intern("pass3/compile-args"), 9),
        Op::PushEnter(1),
        Op::LetFrame(35),
        Op::ReferFreePush(6),
        Op::ReferFreePush(13),
        Op::ReferFreePush(12),
        Op::ReferFreePush(7),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Display(17),
        Op::Frame(14),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::Constant(Object::Number(1)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ConstantPush(Object::False),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferGlobalCall(vm.gc.intern("pass3/rec"), 9),
        Op::PushEnter(1),
        Op::LetFrame(24),
        Op::ReferFreePush(14),
        Op::ReferFreePush(6),
        Op::ReferFreePush(7),
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(6),
        Op::ReferFreePush(15),
        Op::Display(11),
        Op::Frame(6),
        Op::ReferFreePush(1),
        Op::Constant(Object::Number(2)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFreeCall(0, 1),
        Op::PushEnter(1),
        Op::ReferFree(10),
        Op::Test(20),
        Op::ReferFreePush(1),
        Op::Constant(Object::Number(4)),
        Op::VectorRef,
        Op::PushConstant(sym851),
        Op::BranchNotEq(8),
        Op::Frame(30),
        Op::ReferFreePush(8),
        Op::ConstantPush(sym887),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(10),
        Op::ReferFreeCall(7, 4),
        Op::LocalJmp(24),
        Op::Frame(23),
        Op::ReferFreePush(8),
        Op::ConstantPush(sym888),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(10),
        Op::ReferFreeCall(7, 4),
        Op::LocalJmp(17),
        Op::ReferFreePush(1),
        Op::Constant(Object::Number(4)),
        Op::VectorRef,
        Op::PushConstant(sym851),
        Op::BranchNotEq(7),
        Op::Frame(11),
        Op::ReferFreePush(8),
        Op::ConstantPush(sym889),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(6, 3),
        Op::LocalJmp(6),
        Op::Frame(5),
        Op::ReferFreePush(8),
        Op::ConstantPush(sym890),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(6, 3),
        Op::ReferFree(10),
        Op::Test(3),
        Op::Undef,
        Op::LocalJmp(6),
        Op::Frame(4),
        Op::ReferFreePush(8),
        Op::ReferFreePush(5),
        Op::ReferFreeCall(4, 2),
        Op::Constant(Object::Nil),
        Op::ReferFreePush(3),
        Op::ReferFree(2),
        Op::NumberAdd,
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Return(9),
        Op::DefineGlobal(vm.gc.intern("pass3/$call")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(195),
        Op::ReferFreePush(189),
        Op::ReferFreePush(182),
        Op::ReferFreePush(188),
        Op::ReferFreePush(190),
        Op::ReferFreePush(181),
        Op::Closure {size: 0, arg_len: 9, is_optional_arg: false, num_free_vars: 6},
        Op::LetFrame(30),
        Op::ReferLocalPush(6),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferLocalPush(3),
        Op::ReferLocalPush(4),
        Op::ReferLocalPush(5),
        Op::ReferLocalPush(7),
        Op::ReferLocalPush(8),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(5),
        Op::Display(15),
        Op::Frame(3),
        Op::ConstantPush(Object::False),
        Op::ReferFreeCall(0, 1),
        Op::PushEnter(1),
        Op::ReferFree(14),
        Op::Test(3),
        Op::Undef,
        Op::LocalJmp(6),
        Op::Frame(5),
        Op::ReferFreePush(13),
        Op::ConstantPush(sym869),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(12, 3),
        Op::Frame(10),
        Op::ReferFreePush(13),
        Op::ConstantPush(sym891),
        Op::ReferFree(14),
        Op::Test(3),
        Op::ReferFree(14),
        Op::LocalJmp(2),
        Op::Constant(Object::Number(0)),
        Op::Push,
        Op::ReferFreeCall(11, 3),
        Op::Constant(Object::Nil),
        Op::Frame(4),
        Op::ReferFreePush(13),
        Op::ConstantPush(sym855),
        Op::ReferFreeCall(10, 2),
        Op::LetFrame(20),
        Op::ReferFreePush(14),
        Op::ReferFreePush(13),
        Op::ReferFreePush(2),
        Op::ReferFreePush(12),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::ReferFreePush(13),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::Display(14),
        Op::Frame(14),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::Constant(Object::Number(1)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ConstantPush(Object::False),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferGlobalCall(vm.gc.intern("pass3/rec"), 9),
        Op::PushEnter(1),
        Op::ReferFree(13),
        Op::Test(8),
        Op::Frame(12),
        Op::ReferFreePush(7),
        Op::ConstantPush(sym888),
        Op::ConstantPush(Object::Number(1)),
        Op::ReferFreePush(13),
        Op::ReferFreeCall(11, 4),
        Op::LocalJmp(6),
        Op::Frame(5),
        Op::ReferFreePush(7),
        Op::ConstantPush(sym890),
        Op::ConstantPush(Object::Number(1)),
        Op::ReferFreeCall(10, 3),
        Op::ReferFree(13),
        Op::Test(3),
        Op::Undef,
        Op::LocalJmp(6),
        Op::Frame(4),
        Op::ReferFreePush(7),
        Op::ReferFreePush(9),
        Op::ReferFreeCall(8, 2),
        Op::Constant(Object::Nil),
        Op::ReferLocal(0),
        Op::Leave(1),
        Op::Leave(1),
        Op::Return(9),
        Op::DefineGlobal(vm.gc.intern("pass3/$call-cc")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(26),
        Op::ReferFreePush(89),
        Op::ReferFreePush(177),
        Op::ReferFreePush(178),
        Op::ReferFreePush(195),
        Op::ReferFreePush(180),
        Op::ReferFreePush(191),
        Op::ReferFreePush(185),
        Op::ReferFreePush(108),
        Op::ReferFreePush(182),
        Op::ReferFreePush(186),
        Op::ReferFreePush(189),
        Op::ReferFreePush(181),
        Op::Closure {size: 0, arg_len: 9, is_optional_arg: false, num_free_vars: 13},
        Op::LetFrame(79),
        Op::ReferFreePush(12),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(4),
        Op::ReferLocalPush(2),
        Op::ReferFreePush(11),
        Op::ReferLocalPush(3),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(5),
        Op::ReferLocalPush(5),
        Op::ReferFreePush(4),
        Op::ReferLocalPush(7),
        Op::ReferLocalPush(8),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Display(21),
        Op::ReferLocalPushConstant(1, Object::Number(5)),
        Op::VectorRef,
        Op::PushEnter(1),
        Op::LetFrame(77),
        Op::ReferFreePush(19),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(18),
        Op::ReferFreePush(17),
        Op::ReferFreePush(16),
        Op::ReferFreePush(15),
        Op::ReferFreePush(14),
        Op::ReferFreePush(13),
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(20),
        Op::ReferLocalPush(0),
        Op::Display(23),
        Op::LetFrame(7),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(0),
        Op::Display(2),
        Op::ConstantPush(Object::Nil),
        Op::ReferLocalPush(0),
        Op::Enter(2),
        Op::ReferLocalBranchNotNull(1, 5),
        Op::Frame(16),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(1, 1),
        Op::LocalJmp(13),
        Op::Frame(4),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::ReferGlobalCall(vm.gc.intern("$lvar.sym-proc"), 1),
        Op::Push,
        Op::ReferLocal(0),
        Op::Cons,
        Op::Push,
        Op::ReferLocal(1),
        Op::CdrPush,
        Op::Shiftj(2, 2, 0),
        Op::LocalJmp(-16),
        Op::Leave(2),
        Op::PushEnter(1),
        Op::LetFrame(69),
        Op::ReferFreePush(0),
        Op::ReferFreePush(20),
        Op::ReferFreePush(19),
        Op::ReferFreePush(18),
        Op::ReferFreePush(17),
        Op::ReferFreePush(16),
        Op::ReferFreePush(15),
        Op::ReferFreePush(14),
        Op::ReferFreePush(13),
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(22),
        Op::ReferFreePush(10),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(22),
        Op::Display(23),
        Op::ReferFreePush(0),
        Op::Constant(Object::Number(6)),
        Op::VectorRef,
        Op::PushEnter(1),
        Op::LetFrame(67),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(22),
        Op::ReferFreePush(16),
        Op::ReferFreePush(15),
        Op::ReferFreePush(14),
        Op::ReferFreePush(13),
        Op::ReferFreePush(12),
        Op::ReferFreePush(20),
        Op::ReferFreePush(18),
        Op::ReferFreePush(0),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(21),
        Op::ReferFreePush(19),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(22),
        Op::ReferFreePush(21),
        Op::ReferFreePush(20),
        Op::ReferFreePush(19),
        Op::ReferFreePush(18),
        Op::ReferFreePush(17),
        Op::Display(28),
        Op::Frame(14),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::Frame(3),
        Op::ReferFreePush(3),
        Op::ReferFreeCall(2, 1),
        Op::Append2,
        Op::PushFrame(3),
        Op::ReferFreePush(1),
        Op::ReferFreeCall(2, 1),
        Op::Append2,
        Op::Push,
        Op::ReferFreeCall(0, 3),
        Op::PushEnter(1),
        Op::LetFrame(59),
        Op::ReferFreePush(24),
        Op::ReferFreePush(23),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(22),
        Op::ReferFreePush(21),
        Op::ReferFreePush(3),
        Op::ReferFreePush(1),
        Op::ReferFreePush(5),
        Op::ReferFreePush(18),
        Op::ReferFreePush(17),
        Op::ReferFreePush(27),
        Op::ReferFreePush(16),
        Op::ReferFreePush(4),
        Op::ReferFreePush(2),
        Op::ReferFreePush(13),
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(27),
        Op::ReferFreePush(5),
        Op::ReferFreePush(25),
        Op::Display(25),
        Op::Frame(4),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreeCall(0, 2),
        Op::PushEnter(1),
        Op::LetFrame(56),
        Op::ReferFreePush(23),
        Op::ReferFreePush(22),
        Op::ReferFreePush(21),
        Op::ReferFreePush(20),
        Op::ReferFreePush(19),
        Op::ReferFreePush(18),
        Op::ReferFreePush(1),
        Op::ReferFreePush(16),
        Op::ReferFreePush(15),
        Op::ReferFreePush(2),
        Op::ReferFreePush(13),
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(24),
        Op::Display(23),
        Op::Frame(3),
        Op::ConstantPush(Object::False),
        Op::ReferFreeCall(0, 1),
        Op::PushEnter(1),
        Op::LetFrame(54),
        Op::ReferFreePush(21),
        Op::ReferFreePush(20),
        Op::ReferFreePush(19),
        Op::ReferFreePush(18),
        Op::ReferFreePush(17),
        Op::ReferFreePush(16),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(15),
        Op::ReferFreePush(14),
        Op::ReferFreePush(13),
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(22),
        Op::Display(23),
        Op::Frame(2),
        Op::ReferFreeCall(0, 0),
        Op::PushEnter(1),
        Op::LetFrame(53),
        Op::ReferFreePush(20),
        Op::ReferFreePush(22),
        Op::ReferFreePush(19),
        Op::ReferFreePush(18),
        Op::ReferFreePush(17),
        Op::ReferFreePush(21),
        Op::ReferFreePush(16),
        Op::ReferFreePush(15),
        Op::ReferFreePush(14),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(13),
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(22),
        Op::ReferFreePush(21),
        Op::Display(25),
        Op::Frame(3),
        Op::ReferFreePush(1),
        Op::ReferFreeCall(0, 1),
        Op::PushEnter(1),
        Op::LetFrame(51),
        Op::ReferFreePush(20),
        Op::ReferFreePush(0),
        Op::ReferFreePush(24),
        Op::ReferFreePush(18),
        Op::ReferFreePush(17),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(16),
        Op::ReferFreePush(15),
        Op::ReferFreePush(14),
        Op::ReferFreePush(13),
        Op::ReferFreePush(1),
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(24),
        Op::ReferFreePush(1),
        Op::ReferFreePush(22),
        Op::ReferFreePush(21),
        Op::Display(26),
        Op::ReferLocalPushConstant(0, Object::Number(0)),
        Op::BranchNotGt(8),
        Op::Frame(8),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferGlobalCall(vm.gc.intern("pass3/collect-free"), 4),
        Op::LocalJmp(2),
        Op::Constant(Object::Number(0)),
        Op::PushEnter(1),
        Op::LetFrame(45),
        Op::ReferFreePush(3),
        Op::ReferFreePush(22),
        Op::ReferFreePush(21),
        Op::ReferFreePush(20),
        Op::ReferFreePush(19),
        Op::ReferFreePush(18),
        Op::ReferFreePush(17),
        Op::ReferFreePush(16),
        Op::ReferFreePush(2),
        Op::ReferFreePush(14),
        Op::ReferFreePush(13),
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(25),
        Op::ReferFreePush(24),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(25),
        Op::ReferFreePush(24),
        Op::Display(25),
        Op::Frame(3),
        Op::ReferFreePush(1),
        Op::ReferFreeCall(0, 1),
        Op::PushEnter(1),
        Op::Frame(13),
        Op::ReferFreePush(24),
        Op::ConstantPush(sym892),
        Op::ReferFreePush(23),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(22),
        Op::Constant(Object::Number(4)),
        Op::VectorRef,
        Op::PushConstant(Object::Number(0)),
        Op::NumberGt,
        Op::Push,
        Op::ReferFreePush(21),
        Op::ReferFreeCall(20, 6),
        Op::Constant(Object::Nil),
        Op::LetFrame(35),
        Op::ReferFreePush(24),
        Op::ReferFreePush(6),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(22),
        Op::ReferFreePush(5),
        Op::ReferFreePush(13),
        Op::ReferFreePush(1),
        Op::ReferFreePush(19),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(23),
        Op::ReferFreePush(2),
        Op::ReferFreePush(19),
        Op::ReferFreePush(18),
        Op::ReferFreePush(17),
        Op::ReferFreePush(16),
        Op::ReferFreePush(15),
        Op::ReferFreePush(14),
        Op::ReferFreePush(13),
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::Display(25),
        Op::Frame(33),
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::Frame(3),
        Op::ReferFreePush(10),
        Op::ReferFreeCall(7, 1),
        Op::Append2,
        Op::Push,
        Op::ReferFree(6),
        Op::BranchNotNull(3),
        Op::ReferFree(5),
        Op::LocalJmp(8),
        Op::Frame(7),
        Op::Frame(3),
        Op::ReferFreePush(5),
        Op::ReferFreeCall(4, 1),
        Op::Push,
        Op::ReferFreePush(6),
        Op::ReferGlobalCall(vm.gc.intern("hashtable-set-true!"), 2),
        Op::Push,
        Op::ReferLocalPush(0),
        Op::Frame(3),
        Op::ReferFreePush(3),
        Op::ReferFreeCall(2, 1),
        Op::PushConstant(Object::Number(4)),
        Op::NumberAddPush,
        Op::ReferFree(1),
        Op::NumberAddPush,
        Op::ReferFreePush(0),
        Op::ReferGlobalCall(vm.gc.intern("pass3/rec"), 9),
        Op::PushEnter(1),
        Op::Frame(14),
        Op::ReferFreePush(24),
        Op::ReferLocalPush(0),
        Op::ReferFree(23),
        Op::NumberAddPush,
        Op::ReferFree(22),
        Op::NumberAddPush,
        Op::Constant(Object::Number(4)),
        Op::NumberAddPush,
        Op::ReferFreePush(21),
        Op::Constant(Object::Number(1)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFreeCall(20, 3),
        Op::Constant(Object::Nil),
        Op::Frame(5),
        Op::ReferFreePush(24),
        Op::ReferFreePush(6),
        Op::ReferFreePush(3),
        Op::ReferGlobalCall(vm.gc.intern("pass3/make-boxes"), 3),
        Op::Frame(4),
        Op::ReferFreePush(24),
        Op::ReferFreePush(12),
        Op::ReferFreeCall(16, 2),
        Op::Frame(5),
        Op::ReferFreePush(24),
        Op::ConstantPush(sym893),
        Op::ReferFreePush(22),
        Op::ReferFreeCall(15, 3),
        Op::Frame(4),
        Op::ReferFreePush(24),
        Op::ReferFreePush(14),
        Op::ReferFreeCall(13, 2),
        Op::Constant(Object::Nil),
        Op::Constant(Object::Number(0)),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Return(9),
        Op::DefineGlobal(vm.gc.intern("pass3/$lambda")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(26),
        Op::ReferFreePush(89),
        Op::ReferFreePush(177),
        Op::ReferFreePush(178),
        Op::ReferFreePush(180),
        Op::ReferFreePush(181),
        Op::ReferFreePush(191),
        Op::ReferFreePush(182),
        Op::ReferFreePush(183),
        Op::ReferFreePush(189),
        Op::ReferFreePush(108),
        Op::ReferFreePush(186),
        Op::Closure {size: 0, arg_len: 9, is_optional_arg: false, num_free_vars: 12},
        Op::LetFrame(106),
        Op::ReferFreePush(11),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferLocalPush(4),
        Op::ReferFreePush(10),
        Op::ReferLocalPush(3),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferLocalPush(5),
        Op::ReferLocalPush(7),
        Op::ReferLocalPush(8),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(6),
        Op::ReferFreePush(0),
        Op::Display(21),
        Op::ReferLocalPushConstant(1, Object::Number(1)),
        Op::VectorRef,
        Op::PushEnter(1),
        Op::LetFrame(104),
        Op::ReferFreePush(19),
        Op::ReferFreePush(18),
        Op::ReferFreePush(17),
        Op::ReferFreePush(16),
        Op::ReferFreePush(15),
        Op::ReferFreePush(14),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(13),
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(20),
        Op::ReferLocalPush(0),
        Op::Display(23),
        Op::LetFrame(7),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(0),
        Op::Display(2),
        Op::ConstantPush(Object::Nil),
        Op::ReferLocalPush(0),
        Op::Enter(2),
        Op::ReferLocalBranchNotNull(1, 5),
        Op::Frame(16),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(1, 1),
        Op::LocalJmp(13),
        Op::Frame(4),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::ReferGlobalCall(vm.gc.intern("$lvar.sym-proc"), 1),
        Op::Push,
        Op::ReferLocal(0),
        Op::Cons,
        Op::Push,
        Op::ReferLocal(1),
        Op::CdrPush,
        Op::Shiftj(2, 2, 0),
        Op::LocalJmp(-16),
        Op::Leave(2),
        Op::PushEnter(1),
        Op::LetFrame(96),
        Op::ReferFreePush(22),
        Op::ReferFreePush(21),
        Op::ReferFreePush(20),
        Op::ReferFreePush(19),
        Op::ReferFreePush(18),
        Op::ReferFreePush(17),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::ReferFreePush(15),
        Op::ReferFreePush(14),
        Op::ReferFreePush(13),
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(22),
        Op::Display(23),
        Op::ReferFreePush(0),
        Op::Constant(Object::Number(5)),
        Op::VectorRef,
        Op::PushEnter(1),
        Op::LetFrame(94),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(15),
        Op::ReferFreePush(14),
        Op::ReferFreePush(13),
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(21),
        Op::ReferFreePush(18),
        Op::ReferFreePush(9),
        Op::ReferFreePush(0),
        Op::ReferFreePush(20),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(16),
        Op::ReferFreePush(19),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(21),
        Op::ReferFreePush(20),
        Op::ReferFreePush(19),
        Op::ReferFreePush(18),
        Op::ReferFreePush(17),
        Op::ReferFreePush(16),
        Op::Display(29),
        Op::Frame(17),
        Op::ReferFreePush(6),
        Op::Constant(Object::Number(4)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::Frame(3),
        Op::ReferFreePush(5),
        Op::ReferFreeCall(3, 1),
        Op::Append2,
        Op::PushFrame(3),
        Op::ReferFreePush(2),
        Op::ReferFreeCall(3, 1),
        Op::Append2,
        Op::Push,
        Op::ReferFreeCall(1, 3),
        Op::PushFrame(14),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::ReferFreePush(4),
        Op::Frame(3),
        Op::ReferFreePush(5),
        Op::ReferFreeCall(3, 1),
        Op::Append2,
        Op::PushFrame(3),
        Op::ReferFreePush(2),
        Op::ReferFreeCall(3, 1),
        Op::Append2,
        Op::Push,
        Op::ReferFreeCall(1, 3),
        Op::Append2,
        Op::PushEnter(1),
        Op::LetFrame(77),
        Op::ReferFreePush(25),
        Op::ReferFreePush(24),
        Op::ReferFreePush(23),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(22),
        Op::ReferFreePush(5),
        Op::ReferFreePush(2),
        Op::ReferFreePush(19),
        Op::ReferFreePush(6),
        Op::ReferFreePush(4),
        Op::ReferFreePush(16),
        Op::ReferFreePush(15),
        Op::ReferFreePush(14),
        Op::ReferFreePush(27),
        Op::ReferFreePush(13),
        Op::ReferFreePush(12),
        Op::ReferFreePush(28),
        Op::ReferFreePush(0),
        Op::ReferFreePush(3),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(28),
        Op::ReferFreePush(27),
        Op::ReferFreePush(26),
        Op::Display(25),
        Op::Frame(4),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreeCall(0, 2),
        Op::PushEnter(1),
        Op::LetFrame(74),
        Op::ReferFreePush(23),
        Op::ReferFreePush(22),
        Op::ReferFreePush(21),
        Op::ReferFreePush(20),
        Op::ReferFreePush(19),
        Op::ReferFreePush(18),
        Op::ReferFreePush(17),
        Op::ReferFreePush(16),
        Op::ReferFreePush(15),
        Op::ReferFreePush(14),
        Op::ReferFreePush(13),
        Op::ReferFreePush(12),
        Op::ReferFreePush(1),
        Op::ReferFreePush(10),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(9),
        Op::ReferFreePush(2),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(24),
        Op::Display(23),
        Op::Frame(2),
        Op::ReferFreeCall(0, 0),
        Op::PushEnter(1),
        Op::Frame(4),
        Op::ReferFreePush(22),
        Op::ConstantPush(sym883),
        Op::ReferFreeCall(21, 2),
        Op::Constant(Object::Nil),
        Op::LetFrame(71),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(20),
        Op::ReferFreePush(18),
        Op::ReferFreePush(17),
        Op::ReferFreePush(16),
        Op::ReferFreePush(15),
        Op::ReferFreePush(14),
        Op::ReferFreePush(13),
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(19),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(22),
        Op::ReferFreePush(21),
        Op::ReferFreePush(1),
        Op::ReferFreePush(20),
        Op::ReferFreePush(19),
        Op::Display(25),
        Op::Frame(3),
        Op::ReferFreePush(1),
        Op::ReferFreeCall(0, 1),
        Op::PushEnter(1),
        Op::LetFrame(69),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(24),
        Op::ReferFreePush(20),
        Op::ReferFreePush(19),
        Op::ReferFreePush(22),
        Op::ReferFreePush(1),
        Op::ReferFreePush(18),
        Op::ReferFreePush(17),
        Op::ReferFreePush(16),
        Op::ReferFreePush(15),
        Op::ReferFreePush(14),
        Op::ReferFreePush(0),
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(24),
        Op::ReferFreePush(1),
        Op::ReferFreePush(22),
        Op::ReferFreePush(21),
        Op::Display(27),
        Op::ReferLocalPushConstant(0, Object::Number(0)),
        Op::BranchNotGt(8),
        Op::Frame(8),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferGlobalCall(vm.gc.intern("pass3/collect-free"), 4),
        Op::LocalJmp(2),
        Op::Constant(Object::Number(0)),
        Op::PushEnter(1),
        Op::LetFrame(63),
        Op::ReferFreePush(3),
        Op::ReferFreePush(26),
        Op::ReferFreePush(24),
        Op::ReferFreePush(23),
        Op::ReferFreePush(1),
        Op::ReferFreePush(2),
        Op::ReferFreePush(20),
        Op::ReferFreePush(19),
        Op::ReferFreePush(18),
        Op::ReferFreePush(17),
        Op::ReferFreePush(16),
        Op::ReferFreePush(15),
        Op::ReferFreePush(14),
        Op::ReferFreePush(13),
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(26),
        Op::Display(25),
        Op::ReferFreePush(0),
        Op::Constant(Object::Number(0)),
        Op::NumberGt,
        Op::PushEnter(1),
        Op::ReferLocal(0),
        Op::Test(8),
        Op::Frame(5),
        Op::ReferFreePush(24),
        Op::ConstantPush(sym884),
        Op::ReferFreePush(0),
        Op::ReferFreeCall(22, 3),
        Op::Constant(Object::Nil),
        Op::LocalJmp(2),
        Op::Undef,
        Op::LetFrame(58),
        Op::ReferFreePush(24),
        Op::ReferFreePush(21),
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(14),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(19),
        Op::ReferFreePush(18),
        Op::ReferFreePush(7),
        Op::ReferFreePush(17),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(16),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(15),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(14),
        Op::ReferFreePush(13),
        Op::ReferFreePush(24),
        Op::ReferFreePush(21),
        Op::ReferFreePush(20),
        Op::ReferFreePush(19),
        Op::ReferFreePush(18),
        Op::ReferFreePush(17),
        Op::ReferFreePush(16),
        Op::ReferFreePush(15),
        Op::Display(31),
        Op::Frame(23),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::Constant(Object::Number(4)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ConstantPush(Object::False),
        Op::ReferFreePush(1),
        Op::Constant(Object::Number(2)),
        Op::NumberAddPush,
        Op::ReferLocal(0),
        Op::Test(5),
        Op::ReferFreePush(0),
        Op::Constant(Object::Number(1)),
        Op::NumberAdd,
        Op::LocalJmp(2),
        Op::ReferFree(0),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("pass3/rec"), 9),
        Op::PushFrame(3),
        Op::ReferFreePush(9),
        Op::ReferFreeCall(8, 1),
        Op::PushEnter(2),
        Op::Frame(12),
        Op::ReferFreePush(7),
        Op::ConstantPush(sym894),
        Op::ReferFreePush(6),
        Op::Constant(Object::Number(2)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFreePush(6),
        Op::Constant(Object::Number(3)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFreeCall(28, 4),
        Op::Constant(Object::Nil),
        Op::Frame(5),
        Op::ReferFreePush(7),
        Op::ReferFreePush(27),
        Op::ReferFreePush(9),
        Op::ReferGlobalCall(vm.gc.intern("pass3/make-boxes"), 3),
        Op::Frame(5),
        Op::ReferFreePush(7),
        Op::ConstantPush(sym885),
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(25, 3),
        Op::LetFrame(31),
        Op::ReferFreePush(7),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(25),
        Op::ReferFreePush(13),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(7),
        Op::ReferFreePush(24),
        Op::ReferFreePush(23),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(20),
        Op::ReferFreePush(27),
        Op::ReferFreePush(2),
        Op::ReferFreePush(18),
        Op::ReferFreePush(17),
        Op::ReferFreePush(1),
        Op::ReferFreePush(15),
        Op::ReferFreePush(0),
        Op::Display(21),
        Op::Frame(45),
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::Frame(3),
        Op::ReferFreePush(10),
        Op::ReferFreeCall(7, 1),
        Op::Append2,
        Op::Push,
        Op::ReferFree(6),
        Op::BranchNotNull(3),
        Op::ReferFree(5),
        Op::LocalJmp(8),
        Op::Frame(7),
        Op::Frame(3),
        Op::ReferFreePush(5),
        Op::ReferFreeCall(4, 1),
        Op::Push,
        Op::ReferFreePush(6),
        Op::ReferGlobalCall(vm.gc.intern("hashtable-set-true!"), 2),
        Op::Push,
        Op::ReferFree(3),
        Op::Test(6),
        Op::ReferFreePush(3),
        Op::ReferLocal(1),
        Op::NumberAddPush,
        Op::Constant(Object::Number(2)),
        Op::NumberAdd,
        Op::Push,
        Op::ReferFreePush(2),
        Op::ReferLocal(1),
        Op::NumberAddPush,
        Op::Constant(Object::Number(2)),
        Op::NumberAddPush,
        Op::ReferFree(1),
        Op::Test(5),
        Op::ReferFreePush(0),
        Op::Constant(Object::Number(1)),
        Op::NumberAdd,
        Op::LocalJmp(2),
        Op::ReferFree(0),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("pass3/rec"), 9),
        Op::PushEnter(1),
        Op::Frame(5),
        Op::ReferFreePush(12),
        Op::ConstantPush(sym886),
        Op::ReferFreePush(19),
        Op::ReferFreeCall(18, 3),
        Op::Frame(8),
        Op::ReferFreePush(17),
        Op::ReferLocalPush(0),
        Op::ReferFree(16),
        Op::NumberAddPush,
        Op::ReferFree(15),
        Op::NumberAddPush,
        Op::ReferFreeCall(14, 2),
        Op::Constant(Object::Nil),
        Op::Frame(4),
        Op::ReferFreePush(17),
        Op::ReferFreePush(12),
        Op::ReferFreeCall(13, 2),
        Op::ReferLocalPush(0),
        Op::ReferFree(16),
        Op::NumberAddPush,
        Op::ReferFree(15),
        Op::NumberAdd,
        Op::Leave(1),
        Op::Leave(2),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Return(9),
        Op::DefineGlobal(vm.gc.intern("pass3/$receive")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(26),
        Op::ReferFreePush(174),
        Op::ReferFreePush(89),
        Op::ReferFreePush(177),
        Op::ReferFreePush(152),
        Op::ReferFreePush(178),
        Op::ReferFreePush(191),
        Op::ReferFreePush(180),
        Op::ReferFreePush(181),
        Op::ReferFreePush(182),
        Op::ReferFreePush(189),
        Op::ReferFreePush(108),
        Op::ReferFreePush(186),
        Op::Closure {size: 0, arg_len: 9, is_optional_arg: false, num_free_vars: 13},
        Op::ReferLocalPushConstant(1, Object::Number(1)),
        Op::VectorRef,
        Op::PushConstant(sym794),
        Op::BranchNotEq(13),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferLocalPush(3),
        Op::ReferLocalPush(4),
        Op::ReferLocalPush(5),
        Op::ReferLocalPush(6),
        Op::ReferLocalPush(7),
        Op::ReferLocalPush(8),
        Op::ReferGlobal(vm.gc.intern("pass3/letrec")),
        Op::TailCall(9, 9),
        Op::Return(9),
        Op::LetFrame(109),
        Op::ReferFreePush(12),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(11),
        Op::ReferLocalPush(2),
        Op::ReferLocalPush(4),
        Op::ReferLocalPush(3),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferLocalPush(5),
        Op::ReferLocalPush(6),
        Op::ReferLocalPush(7),
        Op::ReferLocalPush(8),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Display(22),
        Op::ReferLocalPushConstant(1, Object::Number(2)),
        Op::VectorRef,
        Op::PushEnter(1),
        Op::LetFrame(107),
        Op::ReferFreePush(20),
        Op::ReferFreePush(19),
        Op::ReferFreePush(21),
        Op::ReferFreePush(18),
        Op::ReferFreePush(17),
        Op::ReferFreePush(16),
        Op::ReferFreePush(15),
        Op::ReferFreePush(14),
        Op::ReferFreePush(13),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(21),
        Op::ReferLocalPush(0),
        Op::Display(25),
        Op::LetFrame(7),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(0),
        Op::Display(2),
        Op::ConstantPush(Object::Nil),
        Op::ReferLocalPush(0),
        Op::Enter(2),
        Op::ReferLocalBranchNotNull(1, 5),
        Op::Frame(16),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(1, 1),
        Op::LocalJmp(13),
        Op::Frame(4),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::ReferGlobalCall(vm.gc.intern("$lvar.sym-proc"), 1),
        Op::Push,
        Op::ReferLocal(0),
        Op::Cons,
        Op::Push,
        Op::ReferLocal(1),
        Op::CdrPush,
        Op::Shiftj(2, 2, 0),
        Op::LocalJmp(-16),
        Op::Leave(2),
        Op::PushEnter(1),
        Op::LetFrame(99),
        Op::ReferFreePush(23),
        Op::ReferFreePush(24),
        Op::ReferFreePush(1),
        Op::ReferFreePush(21),
        Op::ReferFreePush(20),
        Op::ReferFreePush(19),
        Op::ReferFreePush(18),
        Op::ReferFreePush(17),
        Op::ReferFreePush(16),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::ReferFreePush(14),
        Op::ReferFreePush(13),
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(24),
        Op::Display(25),
        Op::ReferFreePush(0),
        Op::Constant(Object::Number(4)),
        Op::VectorRef,
        Op::PushEnter(1),
        Op::LetFrame(97),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(14),
        Op::ReferFreePush(13),
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(21),
        Op::ReferFreePush(19),
        Op::ReferFreePush(8),
        Op::ReferFreePush(0),
        Op::ReferFreePush(20),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(15),
        Op::ReferFreePush(18),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(24),
        Op::ReferFreePush(0),
        Op::ReferFreePush(22),
        Op::ReferFreePush(21),
        Op::ReferFreePush(20),
        Op::ReferFreePush(19),
        Op::ReferFreePush(18),
        Op::ReferFreePush(17),
        Op::ReferFreePush(16),
        Op::ReferFreePush(15),
        Op::Display(31),
        Op::Frame(57),
        Op::ReferFreePush(9),
        Op::LetFrame(15),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(8),
        Op::Display(7),
        Op::ConstantPush(Object::Nil),
        Op::ReferFreePush(0),
        Op::Constant(Object::Number(3)),
        Op::VectorRef,
        Op::PushEnter(2),
        Op::ReferLocalBranchNotNull(1, 5),
        Op::Frame(37),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(6, 1),
        Op::LocalJmp(34),
        Op::LetFrame(8),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::Display(5),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::Enter(1),
        Op::Frame(14),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::Frame(3),
        Op::ReferFreePush(2),
        Op::ReferFreeCall(1, 1),
        Op::Append2,
        Op::PushFrame(3),
        Op::ReferFreePush(4),
        Op::ReferFreeCall(1, 1),
        Op::Append2,
        Op::Push,
        Op::ReferFreeCall(0, 3),
        Op::Leave(1),
        Op::Push,
        Op::ReferLocal(0),
        Op::Cons,
        Op::Push,
        Op::ReferLocal(1),
        Op::CdrPush,
        Op::Shiftj(2, 2, 0),
        Op::LocalJmp(-37),
        Op::Leave(2),
        Op::Push,
        Op::ReferFreeCall(1, 2),
        Op::PushFrame(14),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::ReferFreePush(5),
        Op::Frame(3),
        Op::ReferFreePush(4),
        Op::ReferFreeCall(3, 1),
        Op::Append2,
        Op::PushFrame(3),
        Op::ReferFreePush(6),
        Op::ReferFreeCall(3, 1),
        Op::Append2,
        Op::Push,
        Op::ReferFreeCall(2, 3),
        Op::Append2,
        Op::PushEnter(1),
        Op::LetFrame(71),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(27),
        Op::ReferFreePush(29),
        Op::ReferFreePush(26),
        Op::ReferFreePush(25),
        Op::ReferFreePush(24),
        Op::ReferFreePush(6),
        Op::ReferFreePush(4),
        Op::ReferFreePush(21),
        Op::ReferFreePush(8),
        Op::ReferFreePush(5),
        Op::ReferFreePush(18),
        Op::ReferFreePush(17),
        Op::ReferFreePush(16),
        Op::ReferFreePush(15),
        Op::ReferFreePush(14),
        Op::ReferFreePush(30),
        Op::ReferFreePush(0),
        Op::ReferFreePush(3),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(30),
        Op::ReferFreePush(29),
        Op::ReferFreePush(28),
        Op::Display(24),
        Op::Frame(4),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreeCall(0, 2),
        Op::PushEnter(1),
        Op::LetFrame(68),
        Op::ReferFreePush(1),
        Op::ReferFreePush(22),
        Op::ReferFreePush(20),
        Op::ReferFreePush(19),
        Op::ReferFreePush(18),
        Op::ReferFreePush(23),
        Op::ReferFreePush(17),
        Op::ReferFreePush(16),
        Op::ReferFreePush(15),
        Op::ReferFreePush(14),
        Op::ReferFreePush(13),
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(8),
        Op::ReferFreePush(2),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(23),
        Op::ReferFreePush(22),
        Op::Display(24),
        Op::Frame(3),
        Op::ReferFreePush(1),
        Op::ReferFreeCall(0, 1),
        Op::PushEnter(1),
        Op::LetFrame(66),
        Op::ReferFreePush(21),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(20),
        Op::ReferFreePush(19),
        Op::ReferFreePush(1),
        Op::ReferFreePush(17),
        Op::ReferFreePush(16),
        Op::ReferFreePush(15),
        Op::ReferFreePush(14),
        Op::ReferFreePush(13),
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(23),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(23),
        Op::ReferFreePush(0),
        Op::Display(24),
        Op::Frame(3),
        Op::ReferFreePush(1),
        Op::ReferFreeCall(0, 1),
        Op::PushEnter(1),
        Op::LetFrame(64),
        Op::ReferFreePush(22),
        Op::ReferFreePush(21),
        Op::ReferFreePush(20),
        Op::ReferFreePush(19),
        Op::ReferFreePush(18),
        Op::ReferFreePush(17),
        Op::ReferFreePush(16),
        Op::ReferFreePush(15),
        Op::ReferFreePush(14),
        Op::ReferFreePush(13),
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(23),
        Op::Display(23),
        Op::Frame(2),
        Op::ReferFreeCall(0, 0),
        Op::PushEnter(1),
        Op::LetFrame(63),
        Op::ReferFreePush(21),
        Op::ReferFreePush(20),
        Op::ReferFreePush(22),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(19),
        Op::ReferFreePush(18),
        Op::ReferFreePush(17),
        Op::ReferFreePush(16),
        Op::ReferFreePush(15),
        Op::ReferFreePush(14),
        Op::ReferFreePush(13),
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(22),
        Op::Display(24),
        Op::ReferFreePush(0),
        Op::Constant(Object::Number(0)),
        Op::NumberGt,
        Op::PushEnter(1),
        Op::Frame(4),
        Op::ReferFreePush(23),
        Op::ConstantPush(sym883),
        Op::ReferFreeCall(22, 2),
        Op::Constant(Object::Nil),
        Op::LetFrame(59),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(20),
        Op::ReferFreePush(0),
        Op::ReferFreePush(16),
        Op::ReferFreePush(15),
        Op::ReferFreePush(18),
        Op::ReferFreePush(19),
        Op::ReferFreePush(14),
        Op::ReferFreePush(13),
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(23),
        Op::ReferFreePush(22),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(20),
        Op::ReferFreePush(19),
        Op::ReferFreePush(18),
        Op::ReferFreePush(17),
        Op::Display(28),
        Op::ReferFreePush(4),
        Op::Constant(Object::Number(0)),
        Op::BranchNotGt(8),
        Op::Frame(8),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferGlobalCall(vm.gc.intern("pass3/collect-free"), 4),
        Op::LocalJmp(2),
        Op::Constant(Object::Number(0)),
        Op::PushEnter(1),
        Op::ReferFree(27),
        Op::Test(8),
        Op::Frame(5),
        Op::ReferFreePush(3),
        Op::ConstantPush(sym884),
        Op::ReferFreePush(4),
        Op::ReferFreeCall(24, 3),
        Op::Constant(Object::Nil),
        Op::LocalJmp(2),
        Op::Undef,
        Op::LetFrame(50),
        Op::ReferFreePush(3),
        Op::ReferFreePush(15),
        Op::ReferFreePush(14),
        Op::ReferFreePush(13),
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(2),
        Op::ReferFreePush(20),
        Op::ReferFreePush(9),
        Op::ReferFreePush(19),
        Op::ReferFreePush(8),
        Op::ReferFreePush(18),
        Op::ReferFreePush(17),
        Op::ReferFreePush(27),
        Op::ReferFreePush(16),
        Op::ReferFreePush(7),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(3),
        Op::ReferFreePush(23),
        Op::ReferFreePush(1),
        Op::ReferFreePush(2),
        Op::ReferFreePush(20),
        Op::ReferFreePush(19),
        Op::ReferFreePush(18),
        Op::ReferFreePush(17),
        Op::ReferFreePush(27),
        Op::ReferFreePush(16),
        Op::Display(30),
        Op::Frame(23),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::Constant(Object::Number(3)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::Constant(Object::Number(2)),
        Op::NumberAddPush,
        Op::ReferFree(1),
        Op::Test(5),
        Op::ReferFreePush(0),
        Op::Constant(Object::Number(1)),
        Op::NumberAdd,
        Op::LocalJmp(2),
        Op::ReferFree(0),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("pass3/compile-args"), 9),
        Op::PushEnter(1),
        Op::Frame(5),
        Op::ReferFreePush(9),
        Op::ReferFreePush(28),
        Op::ReferFreePush(27),
        Op::ReferGlobalCall(vm.gc.intern("pass3/make-boxes"), 3),
        Op::Frame(5),
        Op::ReferFreePush(9),
        Op::ConstantPush(sym885),
        Op::ReferFreePush(26),
        Op::ReferFreeCall(25, 3),
        Op::LetFrame(31),
        Op::ReferFreePush(9),
        Op::ReferFreePush(26),
        Op::ReferFreePush(25),
        Op::ReferFreePush(13),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(24),
        Op::ReferFreePush(23),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(20),
        Op::ReferFreePush(28),
        Op::ReferFreePush(4),
        Op::ReferFreePush(18),
        Op::ReferFreePush(3),
        Op::ReferFreePush(26),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Display(22),
        Op::Frame(45),
        Op::ReferFreePush(13),
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::Frame(3),
        Op::ReferFreePush(11),
        Op::ReferFreeCall(8, 1),
        Op::Append2,
        Op::Push,
        Op::ReferFree(7),
        Op::BranchNotNull(3),
        Op::ReferFree(6),
        Op::LocalJmp(8),
        Op::Frame(7),
        Op::Frame(3),
        Op::ReferFreePush(6),
        Op::ReferFreeCall(5, 1),
        Op::Push,
        Op::ReferFreePush(7),
        Op::ReferGlobalCall(vm.gc.intern("hashtable-set-true!"), 2),
        Op::Push,
        Op::ReferFree(4),
        Op::Test(6),
        Op::ReferFreePush(4),
        Op::ReferFree(3),
        Op::NumberAddPush,
        Op::Constant(Object::Number(2)),
        Op::NumberAdd,
        Op::Push,
        Op::ReferFreePush(2),
        Op::ReferFree(3),
        Op::NumberAddPush,
        Op::Constant(Object::Number(2)),
        Op::NumberAddPush,
        Op::ReferFree(1),
        Op::Test(5),
        Op::ReferFreePush(0),
        Op::Constant(Object::Number(1)),
        Op::NumberAdd,
        Op::LocalJmp(2),
        Op::ReferFree(0),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("pass3/rec"), 9),
        Op::PushEnter(1),
        Op::Frame(5),
        Op::ReferFreePush(13),
        Op::ConstantPush(sym886),
        Op::ReferFreePush(3),
        Op::ReferFreeCall(19, 3),
        Op::Frame(8),
        Op::ReferFreePush(18),
        Op::ReferLocalPush(0),
        Op::ReferFree(17),
        Op::NumberAddPush,
        Op::ReferFree(16),
        Op::NumberAddPush,
        Op::ReferFreeCall(15, 2),
        Op::Constant(Object::Nil),
        Op::Frame(4),
        Op::ReferFreePush(18),
        Op::ReferFreePush(13),
        Op::ReferFreeCall(14, 2),
        Op::ReferLocalPush(0),
        Op::ReferFree(17),
        Op::NumberAddPush,
        Op::ReferFree(16),
        Op::NumberAdd,
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Return(9),
        Op::DefineGlobal(vm.gc.intern("pass3/$let")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(184),
        Op::Closure {size: 0, arg_len: 4, is_optional_arg: false, num_free_vars: 1},
        Op::Frame(7),
        Op::ReferLocalPushConstant(0, sym895),
        Op::Push,
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferLocalPush(3),
        Op::ReferFreeCall(0, 5),
        Op::Constant(Object::Nil),
        Op::Return(4),
        Op::DefineGlobal(vm.gc.intern("raise-compile-error")),
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(26),
        Op::ReferFreePush(174),
        Op::ReferFreePush(89),
        Op::ReferFreePush(177),
        Op::ReferFreePush(152),
        Op::ReferFreePush(178),
        Op::ReferFreePush(191),
        Op::ReferFreePush(180),
        Op::ReferFreePush(69),
        Op::ReferFreePush(181),
        Op::ReferFreePush(182),
        Op::ReferFreePush(188),
        Op::ReferFreePush(189),
        Op::ReferFreePush(108),
        Op::ReferFreePush(186),
        Op::Closure {size: 0, arg_len: 9, is_optional_arg: false, num_free_vars: 15},
        Op::LetFrame(155),
        Op::ReferFreePush(14),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(13),
        Op::ReferLocalPush(4),
        Op::ReferLocalPush(2),
        Op::ReferFreePush(12),
        Op::ReferLocalPush(3),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(5),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(7),
        Op::ReferLocalPush(8),
        Op::ReferLocalPush(6),
        Op::ReferFreePush(0),
        Op::Display(24),
        Op::ReferLocalPushConstant(1, Object::Number(2)),
        Op::VectorRef,
        Op::PushEnter(1),
        Op::LetFrame(153),
        Op::ReferFreePush(22),
        Op::ReferFreePush(21),
        Op::ReferFreePush(23),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(20),
        Op::ReferFreePush(19),
        Op::ReferFreePush(18),
        Op::ReferFreePush(17),
        Op::ReferFreePush(16),
        Op::ReferFreePush(15),
        Op::ReferFreePush(14),
        Op::ReferFreePush(13),
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(23),
        Op::ReferLocalPush(0),
        Op::Display(27),
        Op::LetFrame(7),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(0),
        Op::Display(2),
        Op::ConstantPush(Object::Nil),
        Op::ReferLocalPush(0),
        Op::Enter(2),
        Op::ReferLocalBranchNotNull(1, 5),
        Op::Frame(16),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(1, 1),
        Op::LocalJmp(13),
        Op::Frame(4),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::ReferGlobalCall(vm.gc.intern("$lvar.sym-proc"), 1),
        Op::Push,
        Op::ReferLocal(0),
        Op::Cons,
        Op::Push,
        Op::ReferLocal(1),
        Op::CdrPush,
        Op::Shiftj(2, 2, 0),
        Op::LocalJmp(-16),
        Op::Leave(2),
        Op::PushEnter(1),
        Op::LetFrame(145),
        Op::ReferFreePush(25),
        Op::ReferFreePush(26),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(22),
        Op::ReferFreePush(21),
        Op::ReferFreePush(20),
        Op::ReferFreePush(19),
        Op::ReferFreePush(18),
        Op::ReferFreePush(17),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(16),
        Op::ReferFreePush(15),
        Op::ReferFreePush(14),
        Op::ReferFreePush(13),
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(26),
        Op::Display(27),
        Op::ReferFreePush(0),
        Op::Constant(Object::Number(4)),
        Op::VectorRef,
        Op::PushEnter(1),
        Op::LetFrame(143),
        Op::ReferFreePush(23),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(15),
        Op::ReferFreePush(26),
        Op::ReferFreePush(0),
        Op::ReferFreePush(24),
        Op::ReferFreePush(17),
        Op::ReferFreePush(14),
        Op::ReferFreePush(13),
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(21),
        Op::ReferFreePush(19),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(22),
        Op::ReferFreePush(16),
        Op::ReferFreePush(20),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(26),
        Op::ReferFreePush(0),
        Op::ReferFreePush(24),
        Op::ReferFreePush(23),
        Op::ReferFreePush(22),
        Op::ReferFreePush(21),
        Op::ReferFreePush(20),
        Op::ReferFreePush(19),
        Op::ReferFreePush(18),
        Op::ReferFreePush(17),
        Op::ReferFreePush(16),
        Op::Display(37),
        Op::Frame(59),
        Op::ReferFreePush(10),
        Op::LetFrame(15),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(9),
        Op::Display(8),
        Op::ConstantPush(Object::Nil),
        Op::ReferFreePush(0),
        Op::Constant(Object::Number(3)),
        Op::VectorRef,
        Op::PushEnter(2),
        Op::ReferLocalBranchNotNull(1, 5),
        Op::Frame(38),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(7, 1),
        Op::LocalJmp(35),
        Op::LetFrame(8),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::Display(6),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::Enter(1),
        Op::Frame(14),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::Frame(3),
        Op::ReferFreePush(3),
        Op::ReferFreeCall(2, 1),
        Op::Append2,
        Op::PushFrame(3),
        Op::ReferFreePush(1),
        Op::ReferFreeCall(2, 1),
        Op::Append2,
        Op::Push,
        Op::ReferFreeCall(0, 3),
        Op::Leave(1),
        Op::Push,
        Op::ReferLocal(0),
        Op::Cons,
        Op::Push,
        Op::ReferLocal(1),
        Op::CdrPush,
        Op::Shiftj(2, 2, 0),
        Op::LocalJmp(-38),
        Op::Leave(2),
        Op::Push,
        Op::ReferFreeCall(1, 2),
        Op::PushFrame(14),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::ReferFreePush(6),
        Op::Frame(3),
        Op::ReferFreePush(5),
        Op::ReferFreeCall(4, 1),
        Op::Append2,
        Op::PushFrame(3),
        Op::ReferFreePush(3),
        Op::ReferFreeCall(4, 1),
        Op::Append2,
        Op::Push,
        Op::ReferFreeCall(2, 3),
        Op::Append2,
        Op::PushEnter(1),
        Op::LetFrame(117),
        Op::ReferFreePush(9),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(29),
        Op::ReferFreePush(7),
        Op::ReferFreePush(28),
        Op::ReferFreePush(27),
        Op::ReferFreePush(26),
        Op::ReferFreePush(25),
        Op::ReferFreePush(5),
        Op::ReferFreePush(3),
        Op::ReferFreePush(22),
        Op::ReferFreePush(21),
        Op::ReferFreePush(20),
        Op::ReferFreePush(6),
        Op::ReferFreePush(0),
        Op::ReferFreePush(4),
        Op::ReferFreePush(16),
        Op::ReferFreePush(15),
        Op::ReferFreePush(14),
        Op::ReferFreePush(13),
        Op::ReferFreePush(35),
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(7),
        Op::ReferFreePush(35),
        Op::ReferFreePush(34),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(1),
        Op::Display(30),
        Op::ReferFreePush(6),
        Op::Frame(4),
        Op::ReferFreePush(5),
        Op::ReferFreePush(6),
        Op::ReferFreeCall(4, 2),
        Op::Append2,
        Op::PushFrame(41),
        Op::ReferFreePush(3),
        Op::LetFrame(10),
        Op::ReferFreePush(1),
        Op::ReferFreePush(6),
        Op::ReferFreePush(4),
        Op::ReferFreePush(2),
        Op::Display(4),
        Op::ConstantPush(Object::Nil),
        Op::ReferFreePush(0),
        Op::Constant(Object::Number(3)),
        Op::VectorRef,
        Op::PushEnter(2),
        Op::ReferLocalBranchNotNull(1, 5),
        Op::Frame(24),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(3, 1),
        Op::LocalJmp(21),
        Op::LetFrame(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::Display(2),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::Enter(1),
        Op::Frame(4),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::ReferFreeCall(0, 2),
        Op::Leave(1),
        Op::Push,
        Op::ReferLocal(0),
        Op::Cons,
        Op::Push,
        Op::ReferLocal(1),
        Op::CdrPush,
        Op::Shiftj(2, 2, 0),
        Op::LocalJmp(-24),
        Op::Leave(2),
        Op::Push,
        Op::ReferFreeCall(0, 2),
        Op::Append2,
        Op::PushEnter(1),
        Op::LetFrame(100),
        Op::ReferFreePush(28),
        Op::ReferFreePush(27),
        Op::ReferFreePush(6),
        Op::ReferFreePush(25),
        Op::ReferFreePush(2),
        Op::ReferFreePush(24),
        Op::ReferFreePush(23),
        Op::ReferFreePush(22),
        Op::ReferFreePush(21),
        Op::ReferFreePush(20),
        Op::ReferFreePush(19),
        Op::ReferFreePush(18),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(17),
        Op::ReferFreePush(16),
        Op::ReferFreePush(15),
        Op::ReferFreePush(14),
        Op::ReferFreePush(13),
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(5),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(2),
        Op::Display(25),
        Op::ReferFreePush(0),
        Op::Constant(Object::Number(3)),
        Op::VectorRef,
        Op::PushEnter(1),
        Op::LetFrame(98),
        Op::ReferFreePush(22),
        Op::ReferFreePush(23),
        Op::ReferFreePush(21),
        Op::ReferFreePush(0),
        Op::ReferFreePush(19),
        Op::ReferFreePush(18),
        Op::ReferFreePush(17),
        Op::ReferFreePush(24),
        Op::ReferFreePush(16),
        Op::ReferFreePush(15),
        Op::ReferFreePush(14),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(13),
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(24),
        Op::ReferFreePush(23),
        Op::Display(27),
        Op::Frame(3),
        Op::ReferFreePush(1),
        Op::ReferFreeCall(0, 1),
        Op::PushEnter(1),
        Op::LetFrame(96),
        Op::ReferFreePush(24),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(23),
        Op::ReferFreePush(22),
        Op::ReferFreePush(21),
        Op::ReferFreePush(20),
        Op::ReferFreePush(1),
        Op::ReferFreePush(18),
        Op::ReferFreePush(17),
        Op::ReferFreePush(16),
        Op::ReferFreePush(15),
        Op::ReferFreePush(14),
        Op::ReferFreePush(13),
        Op::ReferFreePush(26),
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(26),
        Op::ReferFreePush(0),
        Op::Display(27),
        Op::Frame(3),
        Op::ReferFreePush(1),
        Op::ReferFreeCall(0, 1),
        Op::PushEnter(1),
        Op::LetFrame(94),
        Op::ReferFreePush(25),
        Op::ReferFreePush(24),
        Op::ReferFreePush(23),
        Op::ReferFreePush(22),
        Op::ReferFreePush(21),
        Op::ReferFreePush(20),
        Op::ReferFreePush(19),
        Op::ReferFreePush(18),
        Op::ReferFreePush(17),
        Op::ReferFreePush(16),
        Op::ReferFreePush(15),
        Op::ReferFreePush(14),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(26),
        Op::Display(26),
        Op::Frame(2),
        Op::ReferFreeCall(0, 0),
        Op::PushEnter(1),
        Op::LetFrame(93),
        Op::ReferFreePush(24),
        Op::ReferFreePush(23),
        Op::ReferFreePush(22),
        Op::ReferFreePush(21),
        Op::ReferFreePush(25),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(20),
        Op::ReferFreePush(19),
        Op::ReferFreePush(18),
        Op::ReferFreePush(17),
        Op::ReferFreePush(16),
        Op::ReferFreePush(15),
        Op::ReferFreePush(14),
        Op::ReferFreePush(13),
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(25),
        Op::Display(27),
        Op::ReferFreePush(0),
        Op::Constant(Object::Number(0)),
        Op::NumberGt,
        Op::PushEnter(1),
        Op::ReferFreePush(26),
        Op::Constant(Object::Number(7)),
        Op::VectorRef,
        Op::Test(20),
        Op::Frame(20),
        Op::ReferFreePush(25),
        Op::ReferFreePush(26),
        Op::Constant(Object::Number(7)),
        Op::VectorRef,
        Op::CarPush,
        Op::ReferFreePush(26),
        Op::Constant(Object::Number(7)),
        Op::VectorRef,
        Op::Cadr,
        Op::PushFrame(6),
        Op::ReferFreePush(26),
        Op::Constant(Object::Number(7)),
        Op::VectorRef,
        Op::Push,
        Op::ReferFreeCall(24, 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("raise-compile-error"), 4),
        Op::LocalJmp(2),
        Op::Undef,
        Op::Frame(4),
        Op::ReferFreePush(25),
        Op::ConstantPush(sym883),
        Op::ReferFreeCall(23, 2),
        Op::Constant(Object::Nil),
        Op::LetFrame(80),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(21),
        Op::ReferFreePush(0),
        Op::ReferFreePush(17),
        Op::ReferFreePush(16),
        Op::ReferFreePush(23),
        Op::ReferFreePush(15),
        Op::ReferFreePush(14),
        Op::ReferFreePush(13),
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(20),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(25),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(21),
        Op::ReferFreePush(20),
        Op::ReferFreePush(19),
        Op::ReferFreePush(18),
        Op::Display(28),
        Op::ReferFreePush(4),
        Op::Constant(Object::Number(0)),
        Op::BranchNotGt(8),
        Op::Frame(8),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferGlobalCall(vm.gc.intern("pass3/collect-free"), 4),
        Op::LocalJmp(2),
        Op::Constant(Object::Number(0)),
        Op::PushEnter(1),
        Op::ReferFree(27),
        Op::Test(8),
        Op::Frame(5),
        Op::ReferFreePush(3),
        Op::ConstantPush(sym884),
        Op::ReferFreePush(4),
        Op::ReferFreeCall(24, 3),
        Op::Constant(Object::Nil),
        Op::LocalJmp(2),
        Op::Undef,
        Op::LetFrame(6),
        Op::ReferFreePush(3),
        Op::ReferFreePush(22),
        Op::ReferFreePush(21),
        Op::ReferFreePush(23),
        Op::Display(4),
        Op::ReferFreePush(0),
        Op::Enter(1),
        Op::ReferLocalBranchNotNull(0, 3),
        Op::Constant(Object::Nil),
        Op::LocalJmp(14),
        Op::Frame(4),
        Op::ReferFreePush(3),
        Op::ConstantPush(sym866),
        Op::ReferFreeCall(2, 2),
        Op::Constant(Object::Nil),
        Op::Frame(4),
        Op::ReferFreePush(3),
        Op::ConstantPush(sym855),
        Op::ReferFreeCall(1, 2),
        Op::ReferLocal(0),
        Op::CdrPush,
        Op::Shiftj(1, 1, 0),
        Op::LocalJmp(-15),
        Op::Leave(1),
        Op::Frame(5),
        Op::ReferFreePush(3),
        Op::ReferFreePush(20),
        Op::ReferFreePush(19),
        Op::ReferGlobalCall(vm.gc.intern("pass3/make-boxes"), 3),
        Op::Frame(5),
        Op::ReferFreePush(3),
        Op::ConstantPush(sym885),
        Op::ReferFreePush(18),
        Op::ReferFreeCall(17, 3),
        Op::LetFrame(59),
        Op::ReferFreePush(23),
        Op::ReferFreePush(3),
        Op::ReferFreePush(15),
        Op::ReferFreePush(2),
        Op::ReferFreePush(20),
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(27),
        Op::ReferFreePush(9),
        Op::ReferFreePush(17),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(18),
        Op::ReferFreePush(6),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(22),
        Op::ReferFreePush(5),
        Op::ReferFreePush(16),
        Op::ReferFreePush(15),
        Op::ReferFreePush(14),
        Op::Display(21),
        Op::ReferFreePush(2),
        Op::Frame(3),
        Op::ReferFreePush(1),
        Op::ReferFreeCall(0, 1),
        Op::Append2,
        Op::PushEnter(1),
        Op::LetFrame(56),
        Op::ReferFreePush(19),
        Op::ReferFreePush(9),
        Op::ReferFreePush(1),
        Op::ReferFreePush(17),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(16),
        Op::ReferFreePush(15),
        Op::ReferFreePush(14),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(13),
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(20),
        Op::ReferFreePush(19),
        Op::ReferFreePush(1),
        Op::ReferFreePush(17),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(16),
        Op::ReferFreePush(15),
        Op::ReferFreePush(14),
        Op::ReferFreePush(13),
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::Display(30),
        Op::LetFrame(26),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(11),
        Op::Display(12),
        Op::ReferFreePush(0),
        Op::ConstantPush(Object::Number(0)),
        Op::ConstantPush(Object::Number(0)),
        Op::Enter(3),
        Op::ReferLocalBranchNotNull(0, 3),
        Op::ReferLocal(1),
        Op::LocalJmp(76),
        Op::LetFrame(23),
        Op::ReferFreePush(11),
        Op::ReferLocalPush(2),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::Display(24),
        Op::Frame(32),
        Op::ReferFreePush(9),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFree(5),
        Op::BranchNotNull(3),
        Op::ReferFree(4),
        Op::LocalJmp(8),
        Op::Frame(7),
        Op::Frame(3),
        Op::ReferFreePush(4),
        Op::ReferFreeCall(3, 1),
        Op::Push,
        Op::ReferFreePush(5),
        Op::ReferGlobalCall(vm.gc.intern("hashtable-set-true!"), 2),
        Op::PushConstant(Object::False),
        Op::Push,
        Op::ReferFreePush(2),
        Op::Constant(Object::Number(2)),
        Op::NumberAddPush,
        Op::ReferFree(1),
        Op::Test(5),
        Op::ReferFreePush(0),
        Op::Constant(Object::Number(1)),
        Op::NumberAdd,
        Op::LocalJmp(2),
        Op::ReferFree(0),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("pass3/rec"), 9),
        Op::PushEnter(1),
        Op::Frame(5),
        Op::ReferFreePush(9),
        Op::ConstantPush(sym858),
        Op::ReferFreePush(22),
        Op::ReferFreeCall(21, 3),
        Op::ReferFree(20),
        Op::CdrPush,
        Op::ReferLocalPush(0),
        Op::ReferFree(19),
        Op::NumberAddPush,
        Op::ReferFreePush(22),
        Op::Constant(Object::Number(1)),
        Op::NumberAddPush,
        Op::Shiftj(3, 6, 1),
        Op::LocalJmp(-76),
        Op::Leave(1),
        Op::Leave(3),
        Op::PushEnter(1),
        Op::LetFrame(29),
        Op::ReferFreePush(10),
        Op::ReferFreePush(20),
        Op::ReferFreePush(0),
        Op::ReferFreePush(15),
        Op::ReferFreePush(14),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(13),
        Op::ReferFreePush(12),
        Op::ReferFreePush(10),
        Op::ReferFreePush(28),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(21),
        Op::ReferFreePush(20),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::Display(21),
        Op::Frame(40),
        Op::ReferFreePush(12),
        Op::ReferFreePush(11),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFree(7),
        Op::BranchNotNull(3),
        Op::ReferFree(6),
        Op::LocalJmp(8),
        Op::Frame(7),
        Op::Frame(3),
        Op::ReferFreePush(6),
        Op::ReferFreeCall(5, 1),
        Op::Push,
        Op::ReferFreePush(7),
        Op::ReferGlobalCall(vm.gc.intern("hashtable-set-true!"), 2),
        Op::Push,
        Op::ReferFree(4),
        Op::Test(6),
        Op::ReferFreePush(4),
        Op::ReferFree(3),
        Op::NumberAddPush,
        Op::Constant(Object::Number(2)),
        Op::NumberAdd,
        Op::Push,
        Op::ReferFreePush(2),
        Op::ReferFree(3),
        Op::NumberAddPush,
        Op::Constant(Object::Number(2)),
        Op::NumberAddPush,
        Op::ReferFree(1),
        Op::Test(5),
        Op::ReferFreePush(0),
        Op::Constant(Object::Number(1)),
        Op::NumberAdd,
        Op::LocalJmp(2),
        Op::ReferFree(0),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("pass3/rec"), 9),
        Op::PushEnter(1),
        Op::Frame(5),
        Op::ReferFreePush(12),
        Op::ConstantPush(sym886),
        Op::ReferFreePush(3),
        Op::ReferFreeCall(18, 3),
        Op::Frame(8),
        Op::ReferFreePush(17),
        Op::ReferFreePush(16),
        Op::ReferFree(15),
        Op::NumberAddPush,
        Op::ReferLocal(0),
        Op::NumberAddPush,
        Op::ReferFreeCall(14, 2),
        Op::Constant(Object::Nil),
        Op::Frame(4),
        Op::ReferFreePush(17),
        Op::ReferFreePush(12),
        Op::ReferFreeCall(13, 2),
        Op::ReferFreePush(16),
        Op::ReferFree(15),
        Op::NumberAddPush,
        Op::ReferLocal(0),
        Op::NumberAdd,
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Return(9),
        Op::DefineGlobal(vm.gc.intern("pass3/letrec")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(182),
        Op::ReferFreePush(181),
        Op::Closure {size: 0, arg_len: 9, is_optional_arg: false, num_free_vars: 2},
        Op::ReferLocalPushConstant(1, Object::Number(2)),
        Op::VectorRef,
        Op::Test(9),
        Op::Frame(5),
        Op::ReferLocalPushConstant(0, sym879),
        Op::Push,
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(1, 3),
        Op::Constant(Object::Nil),
        Op::Constant(Object::Number(0)),
        Op::Return(9),
        Op::ReferLocalPushConstant(1, Object::Number(2)),
        Op::PushConstant(Object::True),
        Op::VectorSet,
        Op::Frame(4),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(0, 2),
        Op::Constant(Object::Nil),
        Op::ReferLocalPush(0),
        Op::ReferLocalPushConstant(1, Object::Number(1)),
        Op::VectorRef,
        Op::Push,
        Op::ReferLocalPush(2),
        Op::ReferLocalPush(3),
        Op::ReferLocalPush(4),
        Op::ReferLocalPush(5),
        Op::ReferLocalPush(6),
        Op::ReferLocalPush(7),
        Op::ReferLocalPush(8),
        Op::ReferGlobal(vm.gc.intern("pass3/rec")),
        Op::TailCall(9, 9),
        Op::Return(9),
        Op::DefineGlobal(vm.gc.intern("pass3/$label")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 9, is_optional_arg: false, num_free_vars: 0},
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferLocalPush(3),
        Op::ReferLocalPush(4),
        Op::ReferLocalPush(5),
        Op::ReferLocalPush(6),
        Op::ReferLocalPush(7),
        Op::ReferLocalPush(8),
        Op::ReferGlobalPush(vm.gc.intern("pass3/dispatch-table")),
        Op::ReferLocalPushConstant(1, Object::Number(0)),
        Op::VectorRef,
        Op::VectorRef,
        Op::TailCall(9, 9),
        Op::Return(9),
        Op::DefineGlobal(vm.gc.intern("pass3/rec")),
        Op::Nop,
        Op::ReferFreePush(180),
        Op::ReferFreePush(98),
        Op::ReferFreePush(187),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 3},
        Op::LetFrame(11),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(2),
        Op::Display(4),
        Op::Frame(2),
        Op::ReferFreeCall(0, 0),
        Op::PushEnter(1),
        Op::Frame(13),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(3),
        Op::ConstantPush(Object::Nil),
        Op::ReferGlobalPush(vm.gc.intern("*free-vars-decl*")),
        Op::ConstantPush(Object::Nil),
        Op::Frame(2),
        Op::ReferFreeCall(2, 0),
        Op::PushConstant(Object::False),
        Op::PushConstant(Object::Number(0)),
        Op::PushConstant(Object::Number(0)),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("pass3/rec"), 9),
        Op::ReferLocalPush(0),
        Op::ReferFree(1),
        Op::TailCall(1, 4),
        Op::Leave(1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("pass3")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(192),
        Op::ReferFreePush(179),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 2},
        Op::Frame(5),
        Op::ReferLocalPushConstant(0, list6889),
        Op::Append2,
        Op::Push,
        Op::ReferFreeCall(1, 1),
        Op::Push,
        Op::ReferFree(0),
        Op::TailCall(1, 1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("pass4")),
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(192),
        Op::ReferFreePush(179),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 2},
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(1, 1),
        Op::Push,
        Op::ReferFree(0),
        Op::TailCall(1, 1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("pass4-w/o-halt")),
        Op::Nop,
        Op::Nop,
        Op::Undef,
        Op::ReferFreePush(192),
        Op::ReferFreePush(179),
        Op::ReferFreePush(167),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 3},
        Op::LetFrame(11),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Display(3),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("pass1/expand"), 1),
        Op::PushEnter(1),
        Op::Frame(18),
        Op::Frame(15),
        Op::Frame(12),
        Op::Frame(9),
        Op::Frame(5),
        Op::ReferLocalPushConstant(0, Object::Nil),
        Op::PushConstant(Object::False),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("pass1/sexp->iform"), 3),
        Op::PushConstant(Object::Nil),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("pass2/optimize"), 2),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("pass3"), 1),
        Op::Push,
        Op::ReferFreeCall(2, 1),
        Op::Push,
        Op::ReferFreeCall(1, 1),
        Op::Push,
        Op::ReferFree(0),
        Op::TailCall(1, 4),
        Op::Leave(1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("compile-partial")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::Constant(Object::True),
        Op::ReferFreePush(20),
        Op::ReferFreePush(198),
        Op::Closure {size: 0, arg_len: 0, is_optional_arg: false, num_free_vars: 2},
        Op::Frame(3),
        Op::ConstantPush(str209),
        Op::ReferFreeCall(1, 1),
        Op::Push,
        Op::ReferFree(0),
        Op::TailCall(1, 0),
        Op::Return(0),
        Op::DefineGlobal(vm.gc.intern("optimize?")),
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::Frame(2),
        Op::ReferGlobalCall(vm.gc.intern("optimize?"), 0),
        Op::Test(20),
        Op::Frame(15),
        Op::Frame(12),
        Op::Frame(8),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("pass1/expand"), 1),
        Op::PushConstant(Object::Nil),
        Op::PushConstant(Object::True),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("pass1/sexp->iform"), 3),
        Op::PushConstant(Object::Nil),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("pass2/optimize"), 2),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("pass3"), 1),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("pass4-w/o-halt")),
        Op::TailCall(1, 1),
        Op::Return(1),
        Op::Frame(11),
        Op::Frame(8),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("pass1/expand"), 1),
        Op::PushConstant(Object::Nil),
        Op::PushConstant(Object::True),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("pass1/sexp->iform"), 3),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("pass3"), 1),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("pass4-w/o-halt")),
        Op::TailCall(1, 1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("compile-w/o-halt")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::Frame(19),
        Op::LetFrame(7),
        Op::Frame(12),
        Op::Frame(8),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("pass1/expand"), 1),
        Op::PushConstant(Object::Nil),
        Op::PushConstant(Object::True),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("pass1/sexp->iform"), 3),
        Op::PushConstant(Object::Nil),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("pass2/optimize"), 2),
        Op::PushEnter(1),
        Op::ReferLocal(0),
        Op::Leave(1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("pass3"), 1),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("pass4")),
        Op::TailCall(1, 1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("compile")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::Frame(11),
        Op::Frame(8),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("pass1/expand"), 1),
        Op::PushConstant(Object::Nil),
        Op::PushConstant(Object::True),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("pass1/sexp->iform"), 3),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("pass3"), 1),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("pass4")),
        Op::TailCall(1, 1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("compile-no-optimize")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Frame(4),
        Op::ReferGlobalPush(vm.gc.intern("$CONST")),
        Op::ReferGlobalPush(vm.gc.intern("pass2/empty")),
        Op::ReferGlobalCall(vm.gc.intern("pass2/register"), 2),
        Op::Nop,
        Op::Frame(4),
        Op::ReferGlobalPush(vm.gc.intern("$LET")),
        Op::ReferGlobalPush(vm.gc.intern("pass2/$let")),
        Op::ReferGlobalCall(vm.gc.intern("pass2/register"), 2),
        Op::Nop,
        Op::Frame(4),
        Op::ReferGlobalPush(vm.gc.intern("$SEQ")),
        Op::ReferGlobalPush(vm.gc.intern("pass2/$seq")),
        Op::ReferGlobalCall(vm.gc.intern("pass2/register"), 2),
        Op::Nop,
        Op::Frame(4),
        Op::ReferGlobalPush(vm.gc.intern("$LAMBDA")),
        Op::ReferGlobalPush(vm.gc.intern("pass2/$lambda")),
        Op::ReferGlobalCall(vm.gc.intern("pass2/register"), 2),
        Op::Nop,
        Op::Frame(4),
        Op::ReferGlobalPush(vm.gc.intern("$LOCAL-REF")),
        Op::ReferGlobalPush(vm.gc.intern("pass2/$local-ref")),
        Op::ReferGlobalCall(vm.gc.intern("pass2/register"), 2),
        Op::Nop,
        Op::Frame(4),
        Op::ReferGlobalPush(vm.gc.intern("$LOCAL-ASSIGN")),
        Op::ReferGlobalPush(vm.gc.intern("pass2/$local-assign")),
        Op::ReferGlobalCall(vm.gc.intern("pass2/register"), 2),
        Op::Nop,
        Op::Frame(4),
        Op::ReferGlobalPush(vm.gc.intern("$GLOBAL-REF")),
        Op::ReferGlobalPush(vm.gc.intern("pass2/empty")),
        Op::ReferGlobalCall(vm.gc.intern("pass2/register"), 2),
        Op::Nop,
        Op::Frame(4),
        Op::ReferGlobalPush(vm.gc.intern("$GLOBAL-ASSIGN")),
        Op::ReferGlobalPush(vm.gc.intern("pass2/$global-assign")),
        Op::ReferGlobalCall(vm.gc.intern("pass2/register"), 2),
        Op::Nop,
        Op::Frame(4),
        Op::ReferGlobalPush(vm.gc.intern("$UNDEF")),
        Op::ReferGlobalPush(vm.gc.intern("pass2/empty")),
        Op::ReferGlobalCall(vm.gc.intern("pass2/register"), 2),
        Op::Nop,
        Op::Frame(4),
        Op::ReferGlobalPush(vm.gc.intern("$IF")),
        Op::ReferGlobalPush(vm.gc.intern("pass2/$if")),
        Op::ReferGlobalCall(vm.gc.intern("pass2/register"), 2),
        Op::Nop,
        Op::Frame(4),
        Op::ReferGlobalPush(vm.gc.intern("$ASM")),
        Op::ReferGlobalPush(vm.gc.intern("pass2/$asm")),
        Op::ReferGlobalCall(vm.gc.intern("pass2/register"), 2),
        Op::Nop,
        Op::Frame(4),
        Op::ReferGlobalPush(vm.gc.intern("$DEFINE")),
        Op::ReferGlobalPush(vm.gc.intern("pass2/$define")),
        Op::ReferGlobalCall(vm.gc.intern("pass2/register"), 2),
        Op::Nop,
        Op::Frame(4),
        Op::ReferGlobalPush(vm.gc.intern("$CALL")),
        Op::ReferGlobalPush(vm.gc.intern("pass2/$call")),
        Op::ReferGlobalCall(vm.gc.intern("pass2/register"), 2),
        Op::Nop,
        Op::Frame(4),
        Op::ReferGlobalPush(vm.gc.intern("$CALL-CC")),
        Op::ReferGlobalPush(vm.gc.intern("pass2/empty")),
        Op::ReferGlobalCall(vm.gc.intern("pass2/register"), 2),
        Op::Nop,
        Op::Frame(4),
        Op::ReferGlobalPush(vm.gc.intern("$LABEL")),
        Op::ReferGlobalPush(vm.gc.intern("pass2/empty")),
        Op::ReferGlobalCall(vm.gc.intern("pass2/register"), 2),
        Op::Nop,
        Op::Frame(4),
        Op::ReferGlobalPush(vm.gc.intern("$LIST")),
        Op::ReferGlobalPush(vm.gc.intern("pass2/empty")),
        Op::ReferGlobalCall(vm.gc.intern("pass2/register"), 2),
        Op::Nop,
        Op::Frame(4),
        Op::ReferGlobalPush(vm.gc.intern("$IT")),
        Op::ReferGlobalPush(vm.gc.intern("pass2/empty")),
        Op::ReferGlobalCall(vm.gc.intern("pass2/register"), 2),
        Op::Nop,
        Op::Frame(4),
        Op::ReferGlobalPush(vm.gc.intern("$RECEIVE")),
        Op::ReferGlobalPush(vm.gc.intern("pass2/$receive")),
        Op::ReferGlobalCall(vm.gc.intern("pass2/register"), 2),
        Op::Nop,
        Op::Frame(4),
        Op::ReferGlobalPush(vm.gc.intern("$CONST")),
        Op::ReferGlobalPush(vm.gc.intern("pass3/$const")),
        Op::ReferGlobalCall(vm.gc.intern("pass3/register"), 2),
        Op::Nop,
        Op::Frame(4),
        Op::ReferGlobalPush(vm.gc.intern("$LAMBDA")),
        Op::ReferGlobalPush(vm.gc.intern("pass3/$lambda")),
        Op::ReferGlobalCall(vm.gc.intern("pass3/register"), 2),
        Op::Nop,
        Op::Frame(4),
        Op::ReferGlobalPush(vm.gc.intern("$LOCAL-REF")),
        Op::ReferGlobalPush(vm.gc.intern("pass3/$local-ref")),
        Op::ReferGlobalCall(vm.gc.intern("pass3/register"), 2),
        Op::Nop,
        Op::Frame(4),
        Op::ReferGlobalPush(vm.gc.intern("$LOCAL-ASSIGN")),
        Op::ReferGlobalPush(vm.gc.intern("pass3/$local-assign")),
        Op::ReferGlobalCall(vm.gc.intern("pass3/register"), 2),
        Op::Nop,
        Op::Frame(4),
        Op::ReferGlobalPush(vm.gc.intern("$GLOBAL-ASSIGN")),
        Op::ReferGlobalPush(vm.gc.intern("pass3/$global-assign")),
        Op::ReferGlobalCall(vm.gc.intern("pass3/register"), 2),
        Op::Nop,
        Op::Frame(4),
        Op::ReferGlobalPush(vm.gc.intern("$GLOBAL-REF")),
        Op::ReferGlobalPush(vm.gc.intern("pass3/$global-ref")),
        Op::ReferGlobalCall(vm.gc.intern("pass3/register"), 2),
        Op::Nop,
        Op::Frame(4),
        Op::ReferGlobalPush(vm.gc.intern("$SEQ")),
        Op::ReferGlobalPush(vm.gc.intern("pass3/$seq")),
        Op::ReferGlobalCall(vm.gc.intern("pass3/register"), 2),
        Op::Nop,
        Op::Frame(4),
        Op::ReferGlobalPush(vm.gc.intern("$UNDEF")),
        Op::ReferGlobalPush(vm.gc.intern("pass3/$undef")),
        Op::ReferGlobalCall(vm.gc.intern("pass3/register"), 2),
        Op::Nop,
        Op::Frame(4),
        Op::ReferGlobalPush(vm.gc.intern("$IF")),
        Op::ReferGlobalPush(vm.gc.intern("pass3/$if")),
        Op::ReferGlobalCall(vm.gc.intern("pass3/register"), 2),
        Op::Nop,
        Op::Frame(4),
        Op::ReferGlobalPush(vm.gc.intern("$ASM")),
        Op::ReferGlobalPush(vm.gc.intern("pass3/$asm")),
        Op::ReferGlobalCall(vm.gc.intern("pass3/register"), 2),
        Op::Nop,
        Op::Frame(4),
        Op::ReferGlobalPush(vm.gc.intern("$DEFINE")),
        Op::ReferGlobalPush(vm.gc.intern("pass3/$define")),
        Op::ReferGlobalCall(vm.gc.intern("pass3/register"), 2),
        Op::Nop,
        Op::Frame(4),
        Op::ReferGlobalPush(vm.gc.intern("$CALL")),
        Op::ReferGlobalPush(vm.gc.intern("pass3/$call")),
        Op::ReferGlobalCall(vm.gc.intern("pass3/register"), 2),
        Op::Nop,
        Op::Frame(4),
        Op::ReferGlobalPush(vm.gc.intern("$CALL-CC")),
        Op::ReferGlobalPush(vm.gc.intern("pass3/$call-cc")),
        Op::ReferGlobalCall(vm.gc.intern("pass3/register"), 2),
        Op::Nop,
        Op::Frame(4),
        Op::ReferGlobalPush(vm.gc.intern("$LET")),
        Op::ReferGlobalPush(vm.gc.intern("pass3/$let")),
        Op::ReferGlobalCall(vm.gc.intern("pass3/register"), 2),
        Op::Nop,
        Op::Frame(4),
        Op::ReferGlobalPush(vm.gc.intern("$LIST")),
        Op::ReferGlobalPush(vm.gc.intern("pass3/$list")),
        Op::ReferGlobalCall(vm.gc.intern("pass3/register"), 2),
        Op::Nop,
        Op::Frame(4),
        Op::ReferGlobalPush(vm.gc.intern("$IT")),
        Op::ReferGlobalPush(vm.gc.intern("pass3/$it")),
        Op::ReferGlobalCall(vm.gc.intern("pass3/register"), 2),
        Op::Nop,
        Op::Frame(4),
        Op::ReferGlobalPush(vm.gc.intern("$RECEIVE")),
        Op::ReferGlobalPush(vm.gc.intern("pass3/$receive")),
        Op::ReferGlobalCall(vm.gc.intern("pass3/register"), 2),
        Op::Nop,
        Op::Frame(4),
        Op::ReferGlobalPush(vm.gc.intern("$LABEL")),
        Op::ReferGlobalPush(vm.gc.intern("pass3/$label")),
        Op::ReferGlobalCall(vm.gc.intern("pass3/register"), 2),
        Op::Nop,
        Op::Constant(Object::False),
        Op::ReferFreePush(379),
        Op::ReferFreePush(380),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 2},
        Op::Frame(4),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(1, 2),
        Op::PushFrame(4),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(0, 2),
        Op::Values(2),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("fxdiv-and-mod")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(381),
        Op::ReferFreePush(382),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 2},
        Op::Frame(4),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(1, 2),
        Op::PushFrame(4),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(0, 2),
        Op::Values(2),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("fxdiv0-and-mod0")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(289),
        Op::ReferFreePush(48),
        Op::ReferFreePush(292),
        Op::ReferFreePush(410),
        Op::ReferFreePush(412),
        Op::Closure {size: 0, arg_len: 3, is_optional_arg: false, num_free_vars: 5},
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(4, 1),
        Op::Test(2),
        Op::LocalJmp(12),
        Op::Frame(11),
        Op::ConstantPush(sym897),
        Op::Frame(4),
        Op::ConstantPush(str210),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(3, 2),
        Op::Push,
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferGlobalCall(vm.gc.intern("assertion-violation"), 5),
        Op::Frame(3),
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(4, 1),
        Op::Test(2),
        Op::LocalJmp(12),
        Op::Frame(11),
        Op::ConstantPush(sym897),
        Op::Frame(4),
        Op::ConstantPush(str211),
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(3, 2),
        Op::Push,
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferGlobalCall(vm.gc.intern("assertion-violation"), 5),
        Op::Frame(3),
        Op::ReferLocalPush(2),
        Op::ReferFreeCall(4, 1),
        Op::Test(2),
        Op::LocalJmp(12),
        Op::Frame(11),
        Op::ConstantPush(sym897),
        Op::Frame(4),
        Op::ConstantPush(str212),
        Op::ReferLocalPush(2),
        Op::ReferFreeCall(3, 2),
        Op::Push,
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferGlobalCall(vm.gc.intern("assertion-violation"), 5),
        Op::LetFrame(14),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Display(3),
        Op::ReferLocalPush(0),
        Op::ReferLocal(1),
        Op::NumberAddPush,
        Op::ReferLocal(2),
        Op::NumberAddPush,
        Op::Enter(1),
        Op::LetFrame(11),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::Display(6),
        Op::Frame(11),
        Op::ReferLocalPush(0),
        Op::Frame(7),
        Op::Frame(2),
        Op::ReferFreeCall(1, 0),
        Op::PushFrame(2),
        Op::ReferFreeCall(1, 0),
        Op::NumberAddPush,
        Op::ReferFreeCall(0, 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("mod0"), 2),
        Op::PushEnter(1),
        Op::LetFrame(6),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(5),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(2),
        Op::Display(5),
        Op::Frame(11),
        Op::ReferFreePush(3),
        Op::Frame(7),
        Op::Frame(2),
        Op::ReferFreeCall(2, 0),
        Op::PushFrame(2),
        Op::ReferFreeCall(2, 0),
        Op::NumberAddPush,
        Op::ReferFreeCall(1, 1),
        Op::Push,
        Op::ReferFreeCall(0, 2),
        Op::PushEnter(1),
        Op::ReferFreePush(4),
        Op::ReferLocal(0),
        Op::Values(2),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Return(3),
        Op::DefineGlobal(vm.gc.intern("fx+/carry")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(289),
        Op::ReferFreePush(48),
        Op::ReferFreePush(292),
        Op::ReferFreePush(410),
        Op::ReferFreePush(412),
        Op::Closure {size: 0, arg_len: 3, is_optional_arg: false, num_free_vars: 5},
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(4, 1),
        Op::Test(2),
        Op::LocalJmp(12),
        Op::Frame(11),
        Op::ConstantPush(sym898),
        Op::Frame(4),
        Op::ConstantPush(str213),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(3, 2),
        Op::Push,
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferGlobalCall(vm.gc.intern("assertion-violation"), 5),
        Op::Frame(3),
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(4, 1),
        Op::Test(2),
        Op::LocalJmp(12),
        Op::Frame(11),
        Op::ConstantPush(sym898),
        Op::Frame(4),
        Op::ConstantPush(str214),
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(3, 2),
        Op::Push,
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferGlobalCall(vm.gc.intern("assertion-violation"), 5),
        Op::Frame(3),
        Op::ReferLocalPush(2),
        Op::ReferFreeCall(4, 1),
        Op::Test(2),
        Op::LocalJmp(12),
        Op::Frame(11),
        Op::ConstantPush(sym898),
        Op::Frame(4),
        Op::ConstantPush(str215),
        Op::ReferLocalPush(2),
        Op::ReferFreeCall(3, 2),
        Op::Push,
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferGlobalCall(vm.gc.intern("assertion-violation"), 5),
        Op::LetFrame(14),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Display(3),
        Op::ReferLocalPush(0),
        Op::ReferLocal(1),
        Op::NumberSubPush,
        Op::ReferLocal(2),
        Op::NumberSubPush,
        Op::Enter(1),
        Op::LetFrame(11),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::Display(6),
        Op::Frame(11),
        Op::ReferLocalPush(0),
        Op::Frame(7),
        Op::Frame(2),
        Op::ReferFreeCall(1, 0),
        Op::PushFrame(2),
        Op::ReferFreeCall(1, 0),
        Op::NumberAddPush,
        Op::ReferFreeCall(0, 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("mod0"), 2),
        Op::PushEnter(1),
        Op::LetFrame(6),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(5),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(2),
        Op::Display(5),
        Op::Frame(11),
        Op::ReferFreePush(3),
        Op::Frame(7),
        Op::Frame(2),
        Op::ReferFreeCall(2, 0),
        Op::PushFrame(2),
        Op::ReferFreeCall(2, 0),
        Op::NumberAddPush,
        Op::ReferFreeCall(1, 1),
        Op::Push,
        Op::ReferFreeCall(0, 2),
        Op::PushEnter(1),
        Op::ReferFreePush(4),
        Op::ReferLocal(0),
        Op::Values(2),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Return(3),
        Op::DefineGlobal(vm.gc.intern("fx-/carry")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(289),
        Op::ReferFreePush(48),
        Op::ReferFreePush(292),
        Op::ReferFreePush(410),
        Op::ReferFreePush(412),
        Op::Closure {size: 0, arg_len: 3, is_optional_arg: false, num_free_vars: 5},
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(4, 1),
        Op::Test(2),
        Op::LocalJmp(12),
        Op::Frame(11),
        Op::ConstantPush(sym899),
        Op::Frame(4),
        Op::ConstantPush(str216),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(3, 2),
        Op::Push,
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferGlobalCall(vm.gc.intern("assertion-violation"), 5),
        Op::Frame(3),
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(4, 1),
        Op::Test(2),
        Op::LocalJmp(12),
        Op::Frame(11),
        Op::ConstantPush(sym899),
        Op::Frame(4),
        Op::ConstantPush(str217),
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(3, 2),
        Op::Push,
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferGlobalCall(vm.gc.intern("assertion-violation"), 5),
        Op::Frame(3),
        Op::ReferLocalPush(2),
        Op::ReferFreeCall(4, 1),
        Op::Test(2),
        Op::LocalJmp(12),
        Op::Frame(11),
        Op::ConstantPush(sym899),
        Op::Frame(4),
        Op::ConstantPush(str218),
        Op::ReferLocalPush(2),
        Op::ReferFreeCall(3, 2),
        Op::Push,
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferGlobalCall(vm.gc.intern("assertion-violation"), 5),
        Op::LetFrame(14),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Display(3),
        Op::ReferLocalPush(0),
        Op::ReferLocal(1),
        Op::NumberMul,
        Op::Push,
        Op::ReferLocal(2),
        Op::NumberAddPush,
        Op::Enter(1),
        Op::LetFrame(11),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::Display(6),
        Op::Frame(11),
        Op::ReferLocalPush(0),
        Op::Frame(7),
        Op::Frame(2),
        Op::ReferFreeCall(1, 0),
        Op::PushFrame(2),
        Op::ReferFreeCall(1, 0),
        Op::NumberAddPush,
        Op::ReferFreeCall(0, 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("mod0"), 2),
        Op::PushEnter(1),
        Op::LetFrame(6),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(5),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(2),
        Op::Display(5),
        Op::Frame(11),
        Op::ReferFreePush(3),
        Op::Frame(7),
        Op::Frame(2),
        Op::ReferFreeCall(2, 0),
        Op::PushFrame(2),
        Op::ReferFreeCall(2, 0),
        Op::NumberAddPush,
        Op::ReferFreeCall(1, 1),
        Op::Push,
        Op::ReferFreeCall(0, 2),
        Op::PushEnter(1),
        Op::ReferFreePush(4),
        Op::ReferLocal(0),
        Op::Values(2),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Return(3),
        Op::DefineGlobal(vm.gc.intern("fx*/carry")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(326),
        Op::ReferFreePush(327),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 2},
        Op::Frame(4),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(1, 2),
        Op::PushFrame(4),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(0, 2),
        Op::Values(2),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("fldiv-and-mod")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(328),
        Op::ReferFreePush(329),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 2},
        Op::Frame(4),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(1, 2),
        Op::PushFrame(4),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(0, 2),
        Op::Values(2),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("fldiv0-and-mod0")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(348),
        Op::ReferFreePush(347),
        Op::ReferFreePush(349),
        Op::Closure {size: 0, arg_len: 3, is_optional_arg: false, num_free_vars: 3},
        Op::Frame(4),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(2, 2),
        Op::PushFrame(7),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(1, 1),
        Op::Push,
        Op::ReferLocalPush(2),
        Op::ReferFreeCall(2, 2),
        Op::Push,
        Op::ReferFree(0),
        Op::TailCall(2, 3),
        Op::Return(3),
        Op::DefineGlobal(vm.gc.intern("bitwise-if")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(354),
        Op::ReferFreePush(348),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 2},
        Op::Frame(11),
        Op::Frame(8),
        Op::Frame(4),
        Op::ConstantPush(Object::Number(1)),
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(1, 2),
        Op::Push,
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(0, 2),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("zero?"), 1),
        Op::Not,
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("bitwise-bit-set?")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(354),
        Op::Closure {size: 0, arg_len: 3, is_optional_arg: false, num_free_vars: 1},
        Op::LetFrame(8),
        Op::ReferLocalPush(2),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::Display(5),
        Op::Frame(4),
        Op::ConstantPush(Object::Number(1)),
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(0, 2),
        Op::PushEnter(1),
        Op::ReferLocalPush(0),
        Op::Frame(4),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreeCall(0, 2),
        Op::Push,
        Op::ReferFreePush(1),
        Op::ReferGlobal(vm.gc.intern("bitwise-if")),
        Op::TailCall(3, 6),
        Op::Leave(1),
        Op::Return(3),
        Op::DefineGlobal(vm.gc.intern("bitwise-copy-bit")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(354),
        Op::ReferFreePush(347),
        Op::ReferFreePush(348),
        Op::ReferFreePush(355),
        Op::Closure {size: 0, arg_len: 3, is_optional_arg: false, num_free_vars: 4},
        Op::ReferLocalPush(1),
        Op::ReferLocal(2),
        Op::BranchNotGt(9),
        Op::Frame(9),
        Op::ConstantPush(sym900),
        Op::ConstantPush(str219),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferGlobalCall(vm.gc.intern("assertion-violation"), 5),
        Op::LocalJmp(2),
        Op::Undef,
        Op::LetFrame(8),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::Display(6),
        Op::Frame(7),
        Op::Frame(4),
        Op::ConstantPush(Object::Number(-1)),
        Op::ReferLocalPush(2),
        Op::ReferFreeCall(1, 2),
        Op::Push,
        Op::ReferFreeCall(0, 1),
        Op::PushEnter(1),
        Op::Frame(4),
        Op::ReferFreePush(5),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(4, 2),
        Op::Push,
        Op::ReferFreePush(3),
        Op::ReferFree(2),
        Op::TailCall(2, 6),
        Op::Leave(1),
        Op::Return(3),
        Op::DefineGlobal(vm.gc.intern("bitwise-bit-field")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(354),
        Op::ReferFreePush(347),
        Op::ReferFreePush(348),
        Op::Closure {size: 0, arg_len: 4, is_optional_arg: false, num_free_vars: 3},
        Op::LetFrame(15),
        Op::ReferLocalPush(2),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(3),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(2),
        Op::Display(8),
        Op::Frame(4),
        Op::ConstantPush(Object::Number(-1)),
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(0, 2),
        Op::PushEnter(1),
        Op::LetFrame(12),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(0),
        Op::ReferFreePush(1),
        Op::ReferFreePush(7),
        Op::ReferFreePush(0),
        Op::ReferFreePush(5),
        Op::Display(9),
        Op::Frame(7),
        Op::Frame(4),
        Op::ConstantPush(Object::Number(-1)),
        Op::ReferFreePush(2),
        Op::ReferFreeCall(1, 2),
        Op::Push,
        Op::ReferFreeCall(0, 1),
        Op::PushEnter(1),
        Op::LetFrame(8),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(1),
        Op::ReferFreePush(3),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::Display(6),
        Op::Frame(4),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(0, 2),
        Op::PushEnter(1),
        Op::ReferLocalPush(0),
        Op::Frame(4),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreeCall(3, 2),
        Op::Push,
        Op::ReferFreePush(2),
        Op::ReferGlobal(vm.gc.intern("bitwise-if")),
        Op::TailCall(3, 13),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Return(4),
        Op::DefineGlobal(vm.gc.intern("bitwise-copy-bit-field")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(354),
        Op::ReferFreePush(355),
        Op::ReferFreePush(349),
        Op::Closure {size: 0, arg_len: 4, is_optional_arg: false, num_free_vars: 3},
        Op::LetFrame(24),
        Op::ReferLocalPush(3),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Display(7),
        Op::ReferLocalPush(2),
        Op::ReferLocal(1),
        Op::NumberSubPush,
        Op::Enter(1),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("positive?"), 1),
        Op::Test(94),
        Op::LetFrame(21),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(6),
        Op::Display(8),
        Op::Frame(4),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("mod"), 2),
        Op::PushEnter(1),
        Op::LetFrame(18),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::Display(11),
        Op::Frame(5),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferGlobalCall(vm.gc.intern("bitwise-bit-field"), 3),
        Op::PushEnter(1),
        Op::LetFrame(14),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(8),
        Op::ReferFreePush(10),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(10),
        Op::ReferFreePush(9),
        Op::Display(10),
        Op::Frame(4),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::ReferFreeCall(0, 2),
        Op::PushEnter(1),
        Op::LetFrame(11),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(9),
        Op::ReferFreePush(8),
        Op::ReferFreePush(1),
        Op::ReferFreePush(6),
        Op::Display(9),
        Op::Frame(6),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFree(1),
        Op::NumberSubPush,
        Op::ReferFreeCall(0, 2),
        Op::PushEnter(1),
        Op::LetFrame(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(8),
        Op::ReferFreePush(7),
        Op::Display(5),
        Op::Frame(4),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(0, 2),
        Op::PushEnter(1),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(0),
        Op::ReferGlobal(vm.gc.intern("bitwise-copy-bit-field")),
        Op::TailCall(4, 22),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::LocalJmp(2),
        Op::ReferFree(5),
        Op::Leave(1),
        Op::Return(4),
        Op::DefineGlobal(vm.gc.intern("bitwise-rotate-bit-field")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(348),
        Op::ReferFreePush(356),
        Op::ReferFreePush(355),
        Op::ReferFreePush(349),
        Op::Closure {size: 0, arg_len: 3, is_optional_arg: false, num_free_vars: 4},
        Op::LetFrame(35),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Display(7),
        Op::ReferLocalPush(2),
        Op::ReferLocal(1),
        Op::NumberSubPush,
        Op::Enter(1),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("positive?"), 1),
        Op::Test(72),
        Op::LetFrame(32),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::Display(8),
        Op::ConstantPush(Object::Number(0)),
        Op::Frame(5),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferGlobalCall(vm.gc.intern("bitwise-bit-field"), 3),
        Op::Push,
        Op::ReferLocalPush(0),
        Op::Enter(3),
        Op::Frame(3),
        Op::ReferLocalPush(2),
        Op::ReferGlobalCall(vm.gc.intern("zero?"), 1),
        Op::Test(8),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferLocalPush(0),
        Op::ReferGlobal(vm.gc.intern("bitwise-copy-bit-field")),
        Op::TailCall(4, 11),
        Op::LocalJmp(40),
        Op::Frame(7),
        Op::Frame(4),
        Op::ReferLocalPushConstant(1, Object::Number(1)),
        Op::Push,
        Op::ReferFreeCall(4, 2),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("zero?"), 1),
        Op::Test(15),
        Op::Frame(4),
        Op::ReferLocalPushConstant(0, Object::Number(1)),
        Op::Push,
        Op::ReferFreeCall(3, 2),
        Op::PushFrame(4),
        Op::ReferLocalPushConstant(1, Object::Number(1)),
        Op::Push,
        Op::ReferFreeCall(2, 2),
        Op::Push,
        Op::ReferLocalPushConstant(2, Object::Number(1)),
        Op::NumberSubPush,
        Op::Shiftj(3, 3, 0),
        Op::LocalJmp(-31),
        Op::LocalJmp(18),
        Op::Frame(8),
        Op::Frame(4),
        Op::ReferLocalPushConstant(0, Object::Number(1)),
        Op::Push,
        Op::ReferFreeCall(3, 2),
        Op::PushConstant(Object::Number(1)),
        Op::Push,
        Op::ReferFreeCall(0, 2),
        Op::PushFrame(4),
        Op::ReferLocalPushConstant(1, Object::Number(1)),
        Op::Push,
        Op::ReferFreeCall(2, 2),
        Op::Push,
        Op::ReferLocalPushConstant(2, Object::Number(1)),
        Op::NumberSubPush,
        Op::Shiftj(3, 3, 0),
        Op::LocalJmp(-49),
        Op::Leave(3),
        Op::LocalJmp(2),
        Op::ReferFree(6),
        Op::Leave(1),
        Op::Return(3),
        Op::DefineGlobal(vm.gc.intern("bitwise-reverse-bit-field")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Undef,
        Op::Undef,
        Op::Undef,
        Op::ReferFreePush(241),
        Op::ReferFreePush(48),
        Op::ReferFreePush(89),
        Op::Closure {size: 0, arg_len: 4, is_optional_arg: false, num_free_vars: 3},
        Op::ReferLocalPushConstant(2, sym901),
        Op::BranchNotEq(39),
        Op::LetFrame(12),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(2),
        Op::Display(3),
        Op::ReferLocalPush(1),
        Op::ReferLocal(3),
        Op::NumberAddPush,
        Op::Enter(1),
        Op::LetFrame(10),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(2),
        Op::Display(4),
        Op::ReferFreePush(0),
        Op::ConstantPush(Object::Number(0)),
        Op::Enter(2),
        Op::ReferLocalPush(0),
        Op::ReferFree(3),
        Op::BranchNotGe(3),
        Op::ReferLocal(1),
        Op::LocalJmp(13),
        Op::ReferLocalPushConstant(0, Object::Number(1)),
        Op::NumberAddPush,
        Op::ConstantPush(Object::Number(256)),
        Op::ReferLocal(1),
        Op::NumberMul,
        Op::PushFrame(4),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(1, 2),
        Op::NumberAddPush,
        Op::Shiftj(2, 2, 0),
        Op::LocalJmp(-16),
        Op::Leave(2),
        Op::Leave(1),
        Op::Return(4),
        Op::ReferLocalPushConstant(2, sym902),
        Op::BranchNotEq(33),
        Op::LetFrame(12),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(3),
        Op::Display(4),
        Op::ReferLocalPush(1),
        Op::ReferLocal(3),
        Op::NumberAddPush,
        Op::Constant(Object::Number(-1)),
        Op::NumberAddPush,
        Op::ConstantPush(Object::Number(0)),
        Op::Enter(2),
        Op::ReferLocalPush(0),
        Op::ReferFree(3),
        Op::BranchNotLt(3),
        Op::ReferLocal(1),
        Op::LocalJmp(13),
        Op::ReferLocalPushConstant(0, Object::Number(1)),
        Op::NumberSubPush,
        Op::ConstantPush(Object::Number(256)),
        Op::ReferLocal(1),
        Op::NumberMul,
        Op::PushFrame(4),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(1, 2),
        Op::NumberAddPush,
        Op::Shiftj(2, 2, 0),
        Op::LocalJmp(-16),
        Op::Leave(2),
        Op::Return(4),
        Op::ConstantPush(sym903),
        Op::Frame(4),
        Op::ConstantPush(str220),
        Op::ReferLocalPush(2),
        Op::ReferFreeCall(1, 2),
        Op::PushFrame(6),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferLocalPush(3),
        Op::ReferFreeCall(0, 4),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("assertion-violation")),
        Op::TailCall(3, 4),
        Op::Return(4),
        Op::DefineGlobal(vm.gc.intern("bytevector-uint-ref")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(241),
        Op::ReferFreePush(430),
        Op::ReferFreePush(48),
        Op::ReferFreePush(89),
        Op::Closure {size: 0, arg_len: 4, is_optional_arg: false, num_free_vars: 4},
        Op::ReferLocalPushConstant(2, sym901),
        Op::BranchNotEq(26),
        Op::Frame(4),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(3, 2),
        Op::PushConstant(Object::Number(127)),
        Op::BranchNotGt(13),
        Op::Frame(6),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferLocalPush(3),
        Op::ReferGlobalCall(vm.gc.intern("bytevector-uint-ref"), 4),
        Op::PushFrame(4),
        Op::ConstantPush(Object::Number(256)),
        Op::ReferLocalPush(3),
        Op::ReferFreeCall(2, 2),
        Op::NumberSub,
        Op::Return(4),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferLocalPush(3),
        Op::ReferGlobal(vm.gc.intern("bytevector-uint-ref")),
        Op::TailCall(4, 4),
        Op::Return(4),
        Op::ReferLocalPushConstant(2, sym902),
        Op::BranchNotEq(30),
        Op::Frame(8),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocal(3),
        Op::NumberAddPush,
        Op::Constant(Object::Number(-1)),
        Op::NumberAddPush,
        Op::ReferFreeCall(3, 2),
        Op::PushConstant(Object::Number(127)),
        Op::BranchNotGt(13),
        Op::Frame(6),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferLocalPush(3),
        Op::ReferGlobalCall(vm.gc.intern("bytevector-uint-ref"), 4),
        Op::PushFrame(4),
        Op::ConstantPush(Object::Number(256)),
        Op::ReferLocalPush(3),
        Op::ReferFreeCall(2, 2),
        Op::NumberSub,
        Op::Return(4),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferLocalPush(3),
        Op::ReferGlobal(vm.gc.intern("bytevector-uint-ref")),
        Op::TailCall(4, 4),
        Op::Return(4),
        Op::ConstantPush(sym904),
        Op::Frame(4),
        Op::ConstantPush(str221),
        Op::ReferLocalPush(2),
        Op::ReferFreeCall(1, 2),
        Op::PushFrame(6),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferLocalPush(3),
        Op::ReferFreeCall(0, 4),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("assertion-violation")),
        Op::TailCall(3, 4),
        Op::Return(4),
        Op::DefineGlobal(vm.gc.intern("bytevector-sint-ref")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(122),
        Op::ReferFreePush(430),
        Op::ReferFreePush(348),
        Op::ReferFreePush(356),
        Op::ReferFreePush(48),
        Op::ReferFreePush(89),
        Op::Closure {size: 0, arg_len: 5, is_optional_arg: false, num_free_vars: 6},
        Op::ReferLocalPushConstant(2, Object::Number(0)),
        Op::BranchNotNumberEqual(36),
        Op::LetFrame(9),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(5),
        Op::Display(3),
        Op::ReferLocalPush(1),
        Op::ReferLocal(4),
        Op::NumberAddPush,
        Op::Enter(1),
        Op::LetFrame(7),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(2),
        Op::Display(4),
        Op::ReferFreePush(0),
        Op::Enter(1),
        Op::ReferLocalPush(0),
        Op::ReferFree(3),
        Op::BranchNotGe(4),
        Op::Constant(Object::False),
        Op::Undef,
        Op::LocalJmp(10),
        Op::Frame(5),
        Op::ReferFreePush(2),
        Op::ReferLocalPushConstant(0, Object::Number(0)),
        Op::Push,
        Op::ReferFreeCall(1, 3),
        Op::ReferLocalPushConstant(0, Object::Number(1)),
        Op::NumberAddPush,
        Op::Shiftj(1, 1, 0),
        Op::LocalJmp(-14),
        Op::Leave(1),
        Op::Leave(1),
        Op::LocalJmp(135),
        Op::ConstantPush(Object::Number(0)),
        Op::ReferLocalBranchNotLt(2, 7),
        Op::ReferLocalPush(2),
        Op::Frame(4),
        Op::ConstantPush(Object::Number(256)),
        Op::ReferLocalPush(4),
        Op::ReferFreeCall(4, 2),
        Op::NumberLt,
        Op::Test(111),
        Op::ReferLocalPushConstant(3, sym901),
        Op::BranchNotEq(54),
        Op::LetFrame(16),
        Op::ReferLocalPush(2),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(3),
        Op::ReferFreePush(5),
        Op::ReferFreePush(2),
        Op::Display(6),
        Op::ReferLocalPush(1),
        Op::ReferLocal(4),
        Op::NumberAddPush,
        Op::Constant(Object::Number(1)),
        Op::NumberSubPush,
        Op::Enter(1),
        Op::LetFrame(13),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(5),
        Op::Display(7),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::Enter(2),
        Op::ReferLocalPush(0),
        Op::ReferFree(6),
        Op::BranchNotLt(4),
        Op::Constant(Object::False),
        Op::Undef,
        Op::LocalJmp(19),
        Op::Frame(9),
        Op::ReferFreePush(5),
        Op::ReferLocalPush(0),
        Op::Frame(4),
        Op::ReferLocalPushConstant(1, Object::Number(255)),
        Op::Push,
        Op::ReferFreeCall(4, 2),
        Op::Push,
        Op::ReferFreeCall(3, 3),
        Op::ReferLocalPushConstant(0, Object::Number(1)),
        Op::NumberSubPush,
        Op::Frame(4),
        Op::ReferLocalPushConstant(1, Object::Number(-8)),
        Op::Push,
        Op::ReferFreeCall(2, 2),
        Op::Push,
        Op::Shiftj(2, 2, 0),
        Op::LocalJmp(-23),
        Op::Leave(2),
        Op::Leave(1),
        Op::LocalJmp(71),
        Op::ReferLocalPushConstant(3, sym902),
        Op::BranchNotEq(52),
        Op::LetFrame(15),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(3),
        Op::ReferFreePush(5),
        Op::ReferFreePush(2),
        Op::Display(6),
        Op::ReferLocalPush(1),
        Op::ReferLocal(4),
        Op::NumberAddPush,
        Op::Enter(1),
        Op::LetFrame(13),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::Display(7),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Enter(2),
        Op::ReferLocalPush(0),
        Op::ReferFree(6),
        Op::BranchNotGe(4),
        Op::Constant(Object::False),
        Op::Undef,
        Op::LocalJmp(19),
        Op::Frame(9),
        Op::ReferFreePush(5),
        Op::ReferLocalPush(0),
        Op::Frame(4),
        Op::ReferLocalPushConstant(1, Object::Number(255)),
        Op::Push,
        Op::ReferFreeCall(4, 2),
        Op::Push,
        Op::ReferFreeCall(3, 3),
        Op::ReferLocalPushConstant(0, Object::Number(1)),
        Op::NumberAddPush,
        Op::Frame(4),
        Op::ReferLocalPushConstant(1, Object::Number(-8)),
        Op::Push,
        Op::ReferFreeCall(2, 2),
        Op::Push,
        Op::Shiftj(2, 2, 0),
        Op::LocalJmp(-23),
        Op::Leave(2),
        Op::Leave(1),
        Op::LocalJmp(18),
        Op::Undef,
        Op::LocalJmp(16),
        Op::Frame(15),
        Op::ConstantPush(sym905),
        Op::Frame(4),
        Op::ConstantPush(str222),
        Op::ReferLocalPush(2),
        Op::ReferFreeCall(1, 2),
        Op::PushFrame(7),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferLocalPush(3),
        Op::ReferLocalPush(4),
        Op::ReferFreeCall(0, 5),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("assertion-violation"), 3),
        Op::Constant(Object::False),
        Op::Undef,
        Op::Return(5),
        Op::DefineGlobal(vm.gc.intern("bytevector-uint-set!")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(430),
        Op::ReferFreePush(48),
        Op::ReferFreePush(89),
        Op::Closure {size: 0, arg_len: 5, is_optional_arg: false, num_free_vars: 3},
        Op::LetFrame(34),
        Op::ReferLocalPush(2),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(3),
        Op::ReferLocalPush(4),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(2),
        Op::Display(9),
        Op::Frame(7),
        Op::ConstantPush(Object::Number(2)),
        Op::ReferLocalPushConstant(4, Object::Number(8)),
        Op::NumberMul,
        Op::PushConstant(Object::Number(1)),
        Op::NumberSubPush,
        Op::ReferFreeCall(0, 2),
        Op::PushEnter(1),
        Op::LetFrame(29),
        Op::ReferFreePush(8),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(0),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::Display(9),
        Op::ConstantPush(Object::Number(-1)),
        Op::ReferLocalPushConstant(0, Object::Number(1)),
        Op::NumberAdd,
        Op::NumberMul,
        Op::PushEnter(1),
        Op::ReferLocalPush(0),
        Op::ReferFree(8),
        Op::BranchNotLt(29),
        Op::ReferFreePush(8),
        Op::ReferFree(7),
        Op::NumberLt,
        Op::Test(25),
        Op::ReferFreePush(8),
        Op::Constant(Object::Number(0)),
        Op::BranchNotGt(9),
        Op::Frame(36),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(8),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferGlobalCall(vm.gc.intern("bytevector-uint-set!"), 5),
        Op::LocalJmp(29),
        Op::Frame(28),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(8),
        Op::Frame(4),
        Op::ConstantPush(Object::Number(256)),
        Op::ReferFreePush(3),
        Op::ReferFreeCall(2, 2),
        Op::NumberAddPush,
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferGlobalCall(vm.gc.intern("bytevector-uint-set!"), 5),
        Op::LocalJmp(16),
        Op::Frame(15),
        Op::ConstantPush(sym906),
        Op::Frame(4),
        Op::ConstantPush(str223),
        Op::ReferFreePush(8),
        Op::ReferFreeCall(1, 2),
        Op::PushFrame(7),
        Op::ReferFreePush(6),
        Op::ReferFreePush(5),
        Op::ReferFreePush(8),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreeCall(0, 5),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("assertion-violation"), 3),
        Op::Leave(1),
        Op::Leave(1),
        Op::Constant(Object::False),
        Op::Undef,
        Op::Return(5),
        Op::DefineGlobal(vm.gc.intern("bytevector-sint-set!")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(138),
        Op::ReferFreePush(48),
        Op::ReferFreePush(89),
        Op::Closure {size: 0, arg_len: 3, is_optional_arg: false, num_free_vars: 3},
        Op::LetFrame(23),
        Op::ReferLocalPush(2),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Display(6),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(2, 1),
        Op::Push,
        Op::ReferLocal(2),
        Op::NumberSubPush,
        Op::ConstantPush(Object::Nil),
        Op::Enter(2),
        Op::ReferLocalPushConstant(0, Object::Number(-1)),
        Op::BranchNotGt(17),
        Op::ReferLocalPush(0),
        Op::ReferFree(5),
        Op::NumberSubPush,
        Op::Frame(6),
        Op::ReferFreePush(4),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(3),
        Op::ReferFreePush(5),
        Op::ReferGlobalCall(vm.gc.intern("bytevector-uint-ref"), 4),
        Op::Push,
        Op::ReferLocal(1),
        Op::Cons,
        Op::Push,
        Op::Shiftj(2, 2, 0),
        Op::LocalJmp(-16),
        Op::LocalJmp(21),
        Op::ReferLocalPushConstant(0, Object::Number(-1)),
        Op::Push,
        Op::ReferFree(5),
        Op::NumberMul,
        Op::BranchNotNumberEqual(3),
        Op::ReferLocal(1),
        Op::LocalJmp(14),
        Op::ConstantPush(sym907),
        Op::Frame(4),
        Op::ConstantPush(str224),
        Op::ReferFreePush(5),
        Op::ReferFreeCall(1, 2),
        Op::PushFrame(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(5),
        Op::ReferFreeCall(0, 3),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("assertion-violation")),
        Op::TailCall(3, 7),
        Op::Leave(2),
        Op::Return(3),
        Op::DefineGlobal(vm.gc.intern("bytevector->uint-list")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(138),
        Op::ReferFreePush(48),
        Op::ReferFreePush(89),
        Op::Closure {size: 0, arg_len: 3, is_optional_arg: false, num_free_vars: 3},
        Op::LetFrame(23),
        Op::ReferLocalPush(2),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Display(6),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(2, 1),
        Op::Push,
        Op::ReferLocal(2),
        Op::NumberSubPush,
        Op::ConstantPush(Object::Nil),
        Op::Enter(2),
        Op::ReferLocalPushConstant(0, Object::Number(-1)),
        Op::BranchNotGt(17),
        Op::ReferLocalPush(0),
        Op::ReferFree(5),
        Op::NumberSubPush,
        Op::Frame(6),
        Op::ReferFreePush(4),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(3),
        Op::ReferFreePush(5),
        Op::ReferGlobalCall(vm.gc.intern("bytevector-sint-ref"), 4),
        Op::Push,
        Op::ReferLocal(1),
        Op::Cons,
        Op::Push,
        Op::Shiftj(2, 2, 0),
        Op::LocalJmp(-16),
        Op::LocalJmp(21),
        Op::ReferLocalPushConstant(0, Object::Number(-1)),
        Op::Push,
        Op::ReferFree(5),
        Op::NumberMul,
        Op::BranchNotNumberEqual(3),
        Op::ReferLocal(1),
        Op::LocalJmp(14),
        Op::ConstantPush(sym908),
        Op::Frame(4),
        Op::ConstantPush(str225),
        Op::ReferFreePush(5),
        Op::ReferFreeCall(1, 2),
        Op::PushFrame(5),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(5),
        Op::ReferFreeCall(0, 3),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("assertion-violation")),
        Op::TailCall(3, 7),
        Op::Leave(2),
        Op::Return(3),
        Op::DefineGlobal(vm.gc.intern("bytevector->sint-list")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(191),
        Op::ReferFreePush(234),
        Op::Closure {size: 0, arg_len: 3, is_optional_arg: false, num_free_vars: 2},
        Op::LetFrame(14),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Display(5),
        Op::Frame(8),
        Op::ReferLocalPush(2),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(1, 1),
        Op::NumberMul,
        Op::Push,
        Op::ReferFreeCall(0, 1),
        Op::PushEnter(1),
        Op::LetFrame(10),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(4),
        Op::Display(4),
        Op::ConstantPush(Object::Number(0)),
        Op::ReferFreePush(0),
        Op::Enter(2),
        Op::ReferLocalBranchNotNull(1, 3),
        Op::ReferFree(3),
        Op::LocalJmp(16),
        Op::Frame(8),
        Op::ReferFreePush(3),
        Op::ReferLocalPush(0),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferGlobalCall(vm.gc.intern("bytevector-uint-set!"), 5),
        Op::ReferLocalPush(0),
        Op::ReferFree(1),
        Op::NumberAddPush,
        Op::ReferLocal(1),
        Op::CdrPush,
        Op::Shiftj(2, 2, 0),
        Op::LocalJmp(-17),
        Op::Leave(2),
        Op::Leave(1),
        Op::Return(3),
        Op::DefineGlobal(vm.gc.intern("uint-list->bytevector")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(191),
        Op::ReferFreePush(234),
        Op::Closure {size: 0, arg_len: 3, is_optional_arg: false, num_free_vars: 2},
        Op::LetFrame(14),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Display(5),
        Op::Frame(8),
        Op::ReferLocalPush(2),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(1, 1),
        Op::NumberMul,
        Op::Push,
        Op::ReferFreeCall(0, 1),
        Op::PushEnter(1),
        Op::LetFrame(10),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(4),
        Op::Display(4),
        Op::ConstantPush(Object::Number(0)),
        Op::ReferFreePush(0),
        Op::Enter(2),
        Op::ReferLocalBranchNotNull(1, 3),
        Op::ReferFree(3),
        Op::LocalJmp(16),
        Op::Frame(8),
        Op::ReferFreePush(3),
        Op::ReferLocalPush(0),
        Op::ReferLocal(1),
        Op::CarPush,
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferGlobalCall(vm.gc.intern("bytevector-sint-set!"), 5),
        Op::ReferLocalPush(0),
        Op::ReferFree(1),
        Op::NumberAddPush,
        Op::ReferLocal(1),
        Op::CdrPush,
        Op::Shiftj(2, 2, 0),
        Op::LocalJmp(-17),
        Op::Leave(2),
        Op::Leave(1),
        Op::Return(3),
        Op::DefineGlobal(vm.gc.intern("sint-list->bytevector")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(152),
        Op::Closure {size: 0, arg_len: 3, is_optional_arg: true, num_free_vars: 1},
        Op::ReferGlobalPush(vm.gc.intern("for-each")),
        Op::ReferLocalPush(0),
        Op::Frame(3),
        Op::ReferLocalPush(1),
        Op::ReferGlobalCall(vm.gc.intern("string->list"), 1),
        Op::PushFrame(4),
        Op::ReferGlobalPush(vm.gc.intern("string->list")),
        Op::ReferLocalPush(2),
        Op::ReferGlobalCall(vm.gc.intern("map"), 2),
        Op::Push,
        Op::ReferFree(0),
        Op::TailCall(4, 3),
        Op::Return(3),
        Op::DefineGlobal(vm.gc.intern("string-for-each")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(360),
        Op::ReferFreePush(297),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 2},
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(1, 1),
        Op::Test(7),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(0, 1),
        Op::Test(3),
        Op::ReferLocalPushConstant(0, Object::Number(0)),
        Op::NumberGe,
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("exact-non-negative-integer?")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(89),
        Op::ReferFreePush(426),
        Op::ReferFreePush(417),
        Op::ReferFreePush(299),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 4},
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("exact-non-negative-integer?"), 1),
        Op::Test(3),
        Op::Undef,
        Op::LocalJmp(9),
        Op::Frame(8),
        Op::ConstantPush(sym909),
        Op::ConstantPush(str226),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(3, 1),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("assertion-violation"), 3),
        Op::LetFrame(8),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Display(4),
        Op::Frame(9),
        Op::Frame(6),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(2, 1),
        Op::Push,
        Op::ReferFreeCall(1, 1),
        Op::Push,
        Op::ReferFreeCall(0, 1),
        Op::PushEnter(1),
        Op::LetFrame(4),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(3),
        Op::Display(2),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::ReferLocal(0),
        Op::NumberMul,
        Op::NumberSubPush,
        Op::Enter(1),
        Op::ReferFreePush(1),
        Op::ReferLocal(0),
        Op::Values(2),
        Op::Leave(1),
        Op::Leave(1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("exact-integer-sqrt")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(411),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 1},
        Op::ReferLocalPush(0),
        Op::Frame(4),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(0, 2),
        Op::Push,
        Op::ReferLocal(1),
        Op::NumberMul,
        Op::NumberSub,
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("mod")),
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(411),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 1},
        Op::LetFrame(6),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(0),
        Op::Display(3),
        Op::Frame(4),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(0, 2),
        Op::PushEnter(1),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(0),
        Op::ReferFree(1),
        Op::NumberMul,
        Op::NumberSub,
        Op::Values(2),
        Op::Leave(1),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("div-and-mod")),
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(412),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 1},
        Op::ReferLocalPush(0),
        Op::Frame(4),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(0, 2),
        Op::Push,
        Op::ReferLocal(1),
        Op::NumberMul,
        Op::NumberSub,
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("mod0")),
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(412),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 1},
        Op::LetFrame(6),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(0),
        Op::Display(3),
        Op::Frame(4),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(0, 2),
        Op::PushEnter(1),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(0),
        Op::ReferFree(1),
        Op::NumberMul,
        Op::NumberSub,
        Op::Values(2),
        Op::Leave(1),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("div0-and-mod0")),
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(358),
        Op::ReferFreePush(48),
        Op::ReferFreePush(89),
        Op::ReferFreePush(302),
        Op::ReferFreePush(410),
        Op::ReferFreePush(416),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 6},
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(5, 1),
        Op::Test(2),
        Op::LocalJmp(13),
        Op::Frame(12),
        Op::ConstantPush(sym910),
        Op::Frame(4),
        Op::ConstantPush(str227),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(4, 2),
        Op::PushFrame(4),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(3, 2),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("assertion-violation"), 3),
        Op::Frame(3),
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(5, 1),
        Op::Test(2),
        Op::LocalJmp(13),
        Op::Frame(12),
        Op::ConstantPush(sym910),
        Op::Frame(4),
        Op::ConstantPush(str228),
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(4, 2),
        Op::PushFrame(4),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(3, 2),
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("assertion-violation"), 3),
        Op::Frame(3),
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(2, 1),
        Op::Test(9),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(2, 1),
        Op::Test(3),
        Op::Constant(Object::Number(+nan.0)),
        Op::Return(2),
        Op::Constant(Object::Number(0.0)),
        Op::Return(2),
        Op::ReferLocalPushConstant(0, Object::Number(0)),
        Op::BranchNotNumberEqual(3),
        Op::ReferLocal(0),
        Op::Return(2),
        Op::ReferLocalPush(0),
        Op::ReferLocal(1),
        Op::BranchNotNumberEqual(5),
        Op::ReferLocalPush(0),
        Op::ReferLocal(1),
        Op::NumberSub,
        Op::Return(2),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("negative?"), 1),
        Op::Test(11),
        Op::ConstantPush(Object::Number(-1)),
        Op::Frame(7),
        Op::ConstantPush(Object::Number(-1)),
        Op::ReferLocal(0),
        Op::NumberMul,
        Op::Push,
        Op::ReferLocalPush(1),
        Op::ReferGlobalCall(vm.gc.intern("rationalize"), 2),
        Op::NumberMul,
        Op::Return(2),
        Op::LetFrame(6),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(1),
        Op::Display(4),
        Op::Frame(3),
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(0, 1),
        Op::PushEnter(1),
        Op::LetFrame(4),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::Display(4),
        Op::Undef,
        Op::Push,
        Op::Box(0),
        Op::Enter(1),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 3},
        Op::ReferLocalPush(0),
        Op::ReferLocal(1),
        Op::BranchNotNumberEqual(3),
        Op::ReferLocal(0),
        Op::Return(2),
        Op::LetFrame(13),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::ReferFreePush(2),
        Op::Display(4),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(0, 1),
        Op::PushEnter(1),
        Op::ReferLocalPush(0),
        Op::ReferFree(3),
        Op::BranchNotLt(3),
        Op::ReferLocal(0),
        Op::LocalJmp(29),
        Op::LetFrame(10),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::Display(3),
        Op::ReferLocalPushConstant(0, Object::Number(1)),
        Op::NumberSubPush,
        Op::Enter(1),
        Op::ReferLocalPushConstant(0, Object::Number(1)),
        Op::PushFrame(16),
        Op::ConstantPush(Object::Number(1)),
        Op::ReferFreePush(2),
        Op::ReferLocal(0),
        Op::NumberSub,
        Op::NumberDiv,
        Op::PushConstant(Object::Number(1)),
        Op::Push,
        Op::ReferFreePush(1),
        Op::ReferLocal(0),
        Op::NumberSub,
        Op::NumberDiv,
        Op::Push,
        Op::ReferFree(0),
        Op::Indirect,
        Op::LocalCall(2),
        Op::NumberDiv,
        Op::NumberAdd,
        Op::Leave(1),
        Op::Leave(1),
        Op::Return(2),
        Op::AssignLocal(0),
        Op::ReferFreePush(0),
        Op::ReferFree(2),
        Op::NumberSubPush,
        Op::ReferFreePush(0),
        Op::ReferFree(2),
        Op::NumberAddPush,
        Op::ReferLocal(0),
        Op::Indirect,
        Op::LocalTailCall(2, 8),
        Op::Leave(1),
        Op::Leave(1),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("rationalize")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(298),
        Op::ReferFreePush(410),
        Op::ReferFreePush(300),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 3},
        Op::Frame(3),
        Op::ReferLocalPush(1),
        Op::ReferGlobalCall(vm.gc.intern("zero?"), 1),
        Op::Test(16),
        Op::Frame(3),
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(2, 1),
        Op::Test(8),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(1, 1),
        Op::Push,
        Op::ReferFree(0),
        Op::TailCall(1, 2),
        Op::Return(2),
        Op::ReferLocalPush(0),
        Op::ReferFree(1),
        Op::TailCall(1, 2),
        Op::Return(2),
        Op::ReferLocalPush(1),
        Op::Frame(4),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferGlobalCall(vm.gc.intern("mod"), 2),
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("gcd2")),
        Op::TailCall(2, 2),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("gcd2")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(363),
        Op::ReferFreePush(191),
        Op::ReferFreePush(410),
        Op::ReferFreePush(152),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: true, num_free_vars: 4},
        Op::Frame(4),
        Op::ReferFreePush(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("for-all"), 2),
        Op::Test(3),
        Op::Undef,
        Op::LocalJmp(5),
        Op::Frame(4),
        Op::ConstantPush(sym911),
        Op::ConstantPush(str229),
        Op::ReferGlobalCall(vm.gc.intern("assertion-violation"), 2),
        Op::LetFrame(13),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(2),
        Op::Display(4),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(0, 1),
        Op::PushEnter(1),
        Op::ConstantPush(Object::Number(0)),
        Op::ReferLocal(0),
        Op::BranchNotEqv(3),
        Op::Constant(Object::Number(0)),
        Op::LocalJmp(34),
        Op::ConstantPush(Object::Number(1)),
        Op::ReferLocal(0),
        Op::BranchNotEqv(6),
        Op::ReferFree(3),
        Op::CarPush,
        Op::ReferFree(2),
        Op::TailCall(1, 4),
        Op::LocalJmp(26),
        Op::ConstantPush(Object::Number(2)),
        Op::ReferLocal(0),
        Op::BranchNotEqv(9),
        Op::ReferFree(3),
        Op::CarPush,
        Op::ReferFree(3),
        Op::Cadr,
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("gcd2")),
        Op::TailCall(2, 4),
        Op::LocalJmp(15),
        Op::ReferGlobalPush(vm.gc.intern("gcd")),
        Op::Frame(7),
        Op::ReferFree(3),
        Op::CarPush,
        Op::ReferFree(3),
        Op::Cadr,
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("gcd2"), 2),
        Op::Push,
        Op::ReferFree(3),
        Op::Cddr,
        Op::Push,
        Op::ReferFree(1),
        Op::TailCall(3, 4),
        Op::Leave(1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("gcd")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(410),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 1},
        Op::ReferLocalPush(0),
        Op::ReferLocal(1),
        Op::NumberMul,
        Op::PushFrame(4),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferGlobalCall(vm.gc.intern("gcd2"), 2),
        Op::NumberDiv,
        Op::Push,
        Op::ReferFree(0),
        Op::TailCall(1, 2),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("lcm2")),
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(363),
        Op::ReferFreePush(191),
        Op::ReferFreePush(410),
        Op::ReferFreePush(152),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: true, num_free_vars: 4},
        Op::Frame(4),
        Op::ReferFreePush(3),
        Op::ReferLocalPush(0),
        Op::ReferGlobalCall(vm.gc.intern("for-all"), 2),
        Op::Test(3),
        Op::Undef,
        Op::LocalJmp(5),
        Op::Frame(4),
        Op::ConstantPush(sym912),
        Op::ConstantPush(str230),
        Op::ReferGlobalCall(vm.gc.intern("assertion-violation"), 2),
        Op::LetFrame(13),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferFreePush(2),
        Op::Display(4),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(0, 1),
        Op::PushEnter(1),
        Op::ConstantPush(Object::Number(0)),
        Op::ReferLocal(0),
        Op::BranchNotEqv(3),
        Op::Constant(Object::Number(1)),
        Op::LocalJmp(34),
        Op::ConstantPush(Object::Number(1)),
        Op::ReferLocal(0),
        Op::BranchNotEqv(6),
        Op::ReferFree(3),
        Op::CarPush,
        Op::ReferFree(2),
        Op::TailCall(1, 4),
        Op::LocalJmp(26),
        Op::ConstantPush(Object::Number(2)),
        Op::ReferLocal(0),
        Op::BranchNotEqv(9),
        Op::ReferFree(3),
        Op::CarPush,
        Op::ReferFree(3),
        Op::Cadr,
        Op::Push,
        Op::ReferGlobal(vm.gc.intern("lcm2")),
        Op::TailCall(2, 4),
        Op::LocalJmp(15),
        Op::ReferGlobalPush(vm.gc.intern("lcm")),
        Op::Frame(7),
        Op::ReferFree(3),
        Op::CarPush,
        Op::ReferFree(3),
        Op::Cadr,
        Op::Push,
        Op::ReferGlobalCall(vm.gc.intern("lcm2"), 2),
        Op::Push,
        Op::ReferFree(3),
        Op::Cddr,
        Op::Push,
        Op::ReferFree(1),
        Op::TailCall(3, 4),
        Op::Leave(1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("lcm")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFree(299),
        Op::DefineGlobal(vm.gc.intern("inexact->exact")),
        Op::ReferFree(300),
        Op::DefineGlobal(vm.gc.intern("exact->inexact")),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 0},
        Op::ReferLocal(0),
        Op::TailCall(0, 1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("force")),
        Op::Nop,
        Op::ReferFreePush(110),
        Op::ReferFreePush(152),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 2},
        Op::LetFrame(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::Display(3),
        Op::ConstantPush(Object::False),
        Op::ConstantPush(Object::False),
        Op::Box(1),
        Op::Box(0),
        Op::Enter(2),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Closure {size: 0, arg_len: 0, is_optional_arg: false, num_free_vars: 5},
        Op::ReferFree(4),
        Op::Indirect,
        Op::Test(8),
        Op::ReferFreePush(3),
        Op::ReferFree(2),
        Op::Indirect,
        Op::Push,
        Op::ReferFree(1),
        Op::TailCall(2, 0),
        Op::Return(0),
        Op::LetFrame(4),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Display(5),
        Op::Frame(2),
        Op::ReferFreeCall(0, 0),
        Op::Receive(0, 1),
        Op::Enter(1),
        Op::ReferFree(4),
        Op::Indirect,
        Op::Test(8),
        Op::ReferFreePush(3),
        Op::ReferFree(2),
        Op::Indirect,
        Op::Push,
        Op::ReferFree(1),
        Op::TailCall(2, 3),
        Op::LocalJmp(9),
        Op::Constant(Object::True),
        Op::AssignFree(4),
        Op::ReferLocal(0),
        Op::AssignFree(2),
        Op::ReferFreePush(3),
        Op::ReferLocalPush(0),
        Op::ReferFree(1),
        Op::TailCall(2, 3),
        Op::Leave(1),
        Op::Return(0),
        Op::Leave(2),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("make-promise")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(206),
        Op::ReferFreePush(101),
        Op::ReferFreePush(100),
        Op::Closure {size: 0, arg_len: 4, is_optional_arg: false, num_free_vars: 3},
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(2, 1),
        Op::Test(15),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::Frame(8),
        Op::Frame(5),
        Op::ReferLocalPush(0),
        Op::ReferLocalPush(1),
        Op::ReferLocalPush(3),
        Op::ReferFreeCall(1, 3),
        Op::Push,
        Op::ReferLocalCall(2, 1),
        Op::Push,
        Op::ReferFree(0),
        Op::TailCall(3, 4),
        Op::Return(4),
        Op::ConstantPush(sym913),
        Op::ConstantPush(str231),
        Op::ReferGlobal(vm.gc.intern("assertion-violation")),
        Op::TailCall(2, 4),
        Op::Return(4),
        Op::DefineGlobal(vm.gc.intern("hashtable-update!")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(102),
        Op::ReferFreePush(101),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 2},
        Op::LetFrame(14),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(0),
        Op::ReferFreePush(1),
        Op::Display(3),
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(0, 1),
        Op::PushEnter(1),
        Op::LetFrame(12),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::Display(3),
        Op::ReferLocal(0),
        Op::VectorLength,
        Op::PushConstant(Object::Nil),
        Op::MakeVector,
        Op::PushEnter(1),
        Op::LetFrame(10),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::ReferFreePush(0),
        Op::Display(4),
        Op::ConstantPush(Object::Number(0)),
        Op::Enter(1),
        Op::ReferLocalPush(0),
        Op::ReferFree(3),
        Op::VectorLength,
        Op::BranchNotGe(5),
        Op::ReferFreePush(3),
        Op::ReferFree(2),
        Op::Values(2),
        Op::LocalJmp(15),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(0),
        Op::Frame(7),
        Op::ReferFreePush(1),
        Op::ReferFreePush(3),
        Op::ReferLocal(0),
        Op::VectorRef,
        Op::Push,
        Op::ReferFreeCall(0, 2),
        Op::VectorSet,
        Op::ReferLocalPushConstant(0, Object::Number(1)),
        Op::NumberAddPush,
        Op::Shiftj(1, 1, 0),
        Op::LocalJmp(-21),
        Op::Leave(1),
        Op::Leave(1),
        Op::Leave(1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("hashtable-entries")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(102),
        Op::ReferFreePush(101),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 2},
        Op::LetFrame(4),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::Display(4),
        Op::Frame(3),
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(0, 1),
        Op::PushEnter(1),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 3},
        Op::ReferLocalPush(0),
        Op::Frame(4),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(1, 2),
        Op::Push,
        Op::ReferFree(0),
        Op::TailCall(2, 1),
        Op::Return(1),
        Op::Push,
        Op::ReferLocalPush(0),
        Op::ReferGlobal(vm.gc.intern("vector-for-each")),
        Op::TailCall(2, 5),
        Op::Leave(1),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("hashtable-for-each")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(102),
        Op::ReferFreePush(167),
        Op::ReferFreePush(101),
        Op::Closure {size: 0, arg_len: 2, is_optional_arg: false, num_free_vars: 3},
        Op::LetFrame(5),
        Op::ReferLocalPush(1),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(2),
        Op::ReferFreePush(1),
        Op::Display(5),
        Op::Frame(6),
        Op::Frame(3),
        Op::ReferLocalPush(1),
        Op::ReferFreeCall(1, 1),
        Op::Push,
        Op::ReferFreeCall(0, 1),
        Op::PushEnter(1),
        Op::ReferFreePush(4),
        Op::ReferFreePush(3),
        Op::ReferFreePush(2),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 3},
        Op::ReferLocalPush(0),
        Op::Frame(4),
        Op::ReferFreePush(2),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(1, 2),
        Op::Push,
        Op::ReferFree(0),
        Op::TailCall(2, 1),
        Op::Return(1),
        Op::Push,
        Op::ReferLocalPush(0),
        Op::ReferGlobal(vm.gc.intern("$map1")),
        Op::TailCall(2, 5),
        Op::Leave(1),
        Op::Return(2),
        Op::DefineGlobal(vm.gc.intern("hashtable-map")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(102),
        Op::ReferFreePush(167),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 2},
        Op::Frame(3),
        Op::ReferLocalPush(0),
        Op::ReferFreeCall(1, 1),
        Op::Push,
        Op::ReferFree(0),
        Op::TailCall(1, 1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("hashtable-keys->list")),
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(1),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 1},
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::ReferGlobal(vm.gc.intern("hashtable-map")),
        Op::TailCall(2, 1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("hashtable->alist")),
        Op::Nop,
        Op::ReferFreePush(98),
        Op::ReferFreePush(100),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 2},
        Op::LetFrame(3),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::Display(3),
        Op::Frame(2),
        Op::ReferFreeCall(0, 0),
        Op::PushEnter(1),
        Op::Frame(15),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(2),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 2},
        Op::ReferFreePush(1),
        Op::ReferLocal(0),
        Op::CarPush,
        Op::ReferLocal(0),
        Op::CdrPush,
        Op::ReferFree(0),
        Op::TailCall(3, 1),
        Op::Return(1),
        Op::Push,
        Op::ReferFreePush(1),
        Op::ReferGlobalCall(vm.gc.intern("for-each"), 2),
        Op::ReferLocal(0),
        Op::Leave(1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("alist->eq-hash-table")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::ReferFreePush(98),
        Op::ReferFreePush(100),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 2},
        Op::LetFrame(3),
        Op::ReferFreePush(0),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(1),
        Op::Display(3),
        Op::Frame(2),
        Op::ReferFreeCall(0, 0),
        Op::PushEnter(1),
        Op::Frame(15),
        Op::ReferLocalPush(0),
        Op::ReferFreePush(2),
        Op::Closure {size: 0, arg_len: 1, is_optional_arg: false, num_free_vars: 2},
        Op::ReferFreePush(1),
        Op::ReferLocal(0),
        Op::CdrPush,
        Op::ReferLocal(0),
        Op::CarPush,
        Op::ReferFree(0),
        Op::TailCall(3, 1),
        Op::Return(1),
        Op::Push,
        Op::ReferFreePush(1),
        Op::ReferGlobalCall(vm.gc.intern("for-each"), 2),
        Op::ReferLocal(0),
        Op::Leave(1),
        Op::Return(1),
        Op::DefineGlobal(vm.gc.intern("ralist->eq-hash-table")),
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Nop,
        Op::Halt,
];

}