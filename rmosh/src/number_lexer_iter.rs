/* Generated by re2c 3.0 on Thu Apr  6 00:13:06 2023 */
#![allow(clippy::all)]
use crate::lexer::Spanned;
use crate::lexer::Token;
use crate::number_lexer::NumberLexer;
use crate::reader_util::ReadError;

const YYC_INIT: usize = 0;
const YYC_BIN: usize = 48;
const YYC_OCT: usize = 93;
const YYC_HEX: usize = 138;

static mut COND: usize = YYC_INIT;

impl<'input> Iterator for NumberLexer<'input> {
    type Item = Spanned<Token, usize, ReadError>;

    fn next(&mut self) -> Option<Self::Item> {
        loop {
            loop {
                self.tok = self.cursor;

                {
                    #[allow(unused_assignments)]
                    let mut yych: usize = 0;
                    let mut yyaccept: usize = 0;
                    let mut yystate: usize = unsafe { COND };
                    'yyl: loop {
                        match yystate {
                            0 => {
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x23 => {
                                        self.cursor += 1;
                                        yystate = 3;
                                        continue 'yyl;
                                    }
                                    0x2B => {
                                        self.cursor += 1;
                                        yystate = 4;
                                        continue 'yyl;
                                    }
                                    0x2D => {
                                        self.cursor += 1;
                                        yystate = 6;
                                        continue 'yyl;
                                    }
                                    0x2E => {
                                        self.cursor += 1;
                                        yystate = 8;
                                        continue 'yyl;
                                    }
                                    0x2F => {
                                        self.cursor += 1;
                                        yystate = 9;
                                        continue 'yyl;
                                    }
                                    0x30..=0x39 => {
                                        self.cursor += 1;
                                        yystate = 10;
                                        continue 'yyl;
                                    }
                                    0x40 => {
                                        self.cursor += 1;
                                        yystate = 11;
                                        continue 'yyl;
                                    }
                                    0x44 | 0x46 | 0x4C | 0x53 | 0x64..=0x66 | 0x6C | 0x73 => {
                                        self.cursor += 1;
                                        yystate = 12;
                                        continue 'yyl;
                                    }
                                    0x45 => {
                                        self.cursor += 1;
                                        yystate = 13;
                                        continue 'yyl;
                                    }
                                    0x49 | 0x69 => {
                                        self.cursor += 1;
                                        yystate = 14;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        if self.cursor >= self.limit {
                                            yystate = 47;
                                            continue 'yyl;
                                        }
                                        self.cursor += 1;
                                        yystate = 1;
                                        continue 'yyl;
                                    }
                                }
                            }
                            1 => {
                                yystate = 2;
                                continue 'yyl;
                            }
                            2 => {
                                return Some(Err(ReadError::InvalidToken {
                                    start: self.tok,
                                    end: self.cursor,
                                    token: self.extract_token(),
                                }));
                            }
                            3 => {
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x42 | 0x62 => {
                                        self.cursor += 1;
                                        yystate = 15;
                                        continue 'yyl;
                                    }
                                    0x44 | 0x64 => {
                                        self.cursor += 1;
                                        yystate = 16;
                                        continue 'yyl;
                                    }
                                    0x49 | 0x69 => {
                                        self.cursor += 1;
                                        yystate = 17;
                                        continue 'yyl;
                                    }
                                    0x4F | 0x6F => {
                                        self.cursor += 1;
                                        yystate = 18;
                                        continue 'yyl;
                                    }
                                    0x58 | 0x78 => {
                                        self.cursor += 1;
                                        yystate = 19;
                                        continue 'yyl;
                                    }
                                    0x65 => {
                                        self.cursor += 1;
                                        yystate = 20;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 2;
                                        continue 'yyl;
                                    }
                                }
                            }
                            4 => {
                                yyaccept = 0;
                                self.marker = self.cursor;
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x49 | 0x69 => {
                                        self.cursor += 1;
                                        yystate = 21;
                                        continue 'yyl;
                                    }
                                    0x4E | 0x6E => {
                                        self.cursor += 1;
                                        yystate = 23;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 5;
                                        continue 'yyl;
                                    }
                                }
                            }
                            5 => {
                                return self.with_location(Token::Plus);
                            }
                            6 => {
                                yyaccept = 1;
                                self.marker = self.cursor;
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x49 | 0x69 => {
                                        self.cursor += 1;
                                        yystate = 24;
                                        continue 'yyl;
                                    }
                                    0x4E | 0x6E => {
                                        self.cursor += 1;
                                        yystate = 25;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 7;
                                        continue 'yyl;
                                    }
                                }
                            }
                            7 => {
                                return self.with_location(Token::Minus);
                            }
                            8 => {
                                return self.with_location(Token::Dot);
                            }
                            9 => {
                                return self.with_location(Token::Slash);
                            }
                            10 => {
                                return self.with_location(Token::Digit {
                                    value: self.extract_token(),
                                });
                            }
                            11 => {
                                return self.with_location(Token::At);
                            }
                            12 => {
                                yyaccept = 2;
                                self.marker = self.cursor;
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x2B | 0x2D => {
                                        self.cursor += 1;
                                        yystate = 26;
                                        continue 'yyl;
                                    }
                                    0x30..=0x39 => {
                                        self.cursor += 1;
                                        yystate = 27;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 2;
                                        continue 'yyl;
                                    }
                                }
                            }
                            13 => {
                                yyaccept = 2;
                                self.marker = self.cursor;
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x2B | 0x2D => {
                                        self.cursor += 1;
                                        yystate = 26;
                                        continue 'yyl;
                                    }
                                    0x30..=0x39 => {
                                        self.cursor += 1;
                                        yystate = 27;
                                        continue 'yyl;
                                    }
                                    0x4F => {
                                        self.cursor += 1;
                                        yystate = 29;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 2;
                                        continue 'yyl;
                                    }
                                }
                            }
                            14 => {
                                return self.with_location(Token::Imag);
                            }
                            15 => {
                                unsafe {
                                    COND = YYC_BIN;
                                }
                                {
                                    return self.with_location(Token::Radix2);
                                }
                            }
                            16 => {
                                return self.with_location(Token::Radix10);
                            }
                            17 => {
                                return self.with_location(Token::Inexact);
                            }
                            18 => {
                                unsafe {
                                    COND = YYC_OCT;
                                }
                                {
                                    return self.with_location(Token::Radix8);
                                }
                            }
                            19 => {
                                unsafe {
                                    COND = YYC_HEX;
                                }
                                {
                                    return self.with_location(Token::Radix16);
                                }
                            }
                            20 => {
                                return self.with_location(Token::Exact);
                            }
                            21 => {
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x4E | 0x6E => {
                                        self.cursor += 1;
                                        yystate = 30;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 22;
                                        continue 'yyl;
                                    }
                                }
                            }
                            22 => {
                                self.cursor = self.marker;
                                match yyaccept {
                                    0 => {
                                        yystate = 5;
                                        continue 'yyl;
                                    }
                                    1 => {
                                        yystate = 7;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 2;
                                        continue 'yyl;
                                    }
                                }
                            }
                            23 => {
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x41 | 0x61 => {
                                        self.cursor += 1;
                                        yystate = 31;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 22;
                                        continue 'yyl;
                                    }
                                }
                            }
                            24 => {
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x4E | 0x6E => {
                                        self.cursor += 1;
                                        yystate = 32;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 22;
                                        continue 'yyl;
                                    }
                                }
                            }
                            25 => {
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x41 | 0x61 => {
                                        self.cursor += 1;
                                        yystate = 33;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 22;
                                        continue 'yyl;
                                    }
                                }
                            }
                            26 => {
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x30..=0x39 => {
                                        self.cursor += 1;
                                        yystate = 27;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 22;
                                        continue 'yyl;
                                    }
                                }
                            }
                            27 => {
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x30..=0x39 => {
                                        self.cursor += 1;
                                        yystate = 27;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 28;
                                        continue 'yyl;
                                    }
                                }
                            }
                            28 => {
                                let token = self.extract_token();
                                let mut marker = String::new();
                                marker.push_str("e");
                                marker.push_str(&token[1..token.len()]);
                                return self.with_location(Token::Exponent { value: marker });
                            }
                            29 => {
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x53 => {
                                        self.cursor += 1;
                                        yystate = 34;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 22;
                                        continue 'yyl;
                                    }
                                }
                            }
                            30 => {
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x46 | 0x66 => {
                                        self.cursor += 1;
                                        yystate = 35;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 22;
                                        continue 'yyl;
                                    }
                                }
                            }
                            31 => {
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x4E | 0x6E => {
                                        self.cursor += 1;
                                        yystate = 36;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 22;
                                        continue 'yyl;
                                    }
                                }
                            }
                            32 => {
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x46 | 0x66 => {
                                        self.cursor += 1;
                                        yystate = 37;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 22;
                                        continue 'yyl;
                                    }
                                }
                            }
                            33 => {
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x4E | 0x6E => {
                                        self.cursor += 1;
                                        yystate = 38;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 22;
                                        continue 'yyl;
                                    }
                                }
                            }
                            34 => {
                                return None;
                            }
                            35 => {
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x2E => {
                                        self.cursor += 1;
                                        yystate = 39;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 22;
                                        continue 'yyl;
                                    }
                                }
                            }
                            36 => {
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x2E => {
                                        self.cursor += 1;
                                        yystate = 40;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 22;
                                        continue 'yyl;
                                    }
                                }
                            }
                            37 => {
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x2E => {
                                        self.cursor += 1;
                                        yystate = 41;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 22;
                                        continue 'yyl;
                                    }
                                }
                            }
                            38 => {
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x2E => {
                                        self.cursor += 1;
                                        yystate = 42;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 22;
                                        continue 'yyl;
                                    }
                                }
                            }
                            39 => {
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x30 => {
                                        self.cursor += 1;
                                        yystate = 43;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 22;
                                        continue 'yyl;
                                    }
                                }
                            }
                            40 => {
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x30 => {
                                        self.cursor += 1;
                                        yystate = 44;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 22;
                                        continue 'yyl;
                                    }
                                }
                            }
                            41 => {
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x30 => {
                                        self.cursor += 1;
                                        yystate = 45;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 22;
                                        continue 'yyl;
                                    }
                                }
                            }
                            42 => {
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x30 => {
                                        self.cursor += 1;
                                        yystate = 46;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 22;
                                        continue 'yyl;
                                    }
                                }
                            }
                            43 => {
                                return self.with_location(Token::PlusInf);
                            }
                            44 => {
                                return self.with_location(Token::PlusNan);
                            }
                            45 => {
                                return self.with_location(Token::MinusInf);
                            }
                            46 => {
                                return self.with_location(Token::MinusNan);
                            }
                            47 => {
                                return None;
                            }
                            48 => {
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x23 => {
                                        self.cursor += 1;
                                        yystate = 51;
                                        continue 'yyl;
                                    }
                                    0x2B => {
                                        self.cursor += 1;
                                        yystate = 52;
                                        continue 'yyl;
                                    }
                                    0x2D => {
                                        self.cursor += 1;
                                        yystate = 54;
                                        continue 'yyl;
                                    }
                                    0x2E => {
                                        self.cursor += 1;
                                        yystate = 56;
                                        continue 'yyl;
                                    }
                                    0x2F => {
                                        self.cursor += 1;
                                        yystate = 57;
                                        continue 'yyl;
                                    }
                                    0x30..=0x31 => {
                                        self.cursor += 1;
                                        yystate = 58;
                                        continue 'yyl;
                                    }
                                    0x32..=0x39 => {
                                        self.cursor += 1;
                                        yystate = 59;
                                        continue 'yyl;
                                    }
                                    0x40 => {
                                        self.cursor += 1;
                                        yystate = 60;
                                        continue 'yyl;
                                    }
                                    0x45 => {
                                        self.cursor += 1;
                                        yystate = 61;
                                        continue 'yyl;
                                    }
                                    0x49 | 0x69 => {
                                        self.cursor += 1;
                                        yystate = 62;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        if self.cursor >= self.limit {
                                            yystate = 92;
                                            continue 'yyl;
                                        }
                                        self.cursor += 1;
                                        yystate = 49;
                                        continue 'yyl;
                                    }
                                }
                            }
                            49 => {
                                yystate = 50;
                                continue 'yyl;
                            }
                            50 => {
                                unsafe {
                                    COND = YYC_INIT;
                                }
                                {
                                    return Some(Err(ReadError::InvalidToken {
                                        start: self.tok,
                                        end: self.cursor,
                                        token: self.extract_token(),
                                    }));
                                }
                            }
                            51 => {
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x42 | 0x62 => {
                                        self.cursor += 1;
                                        yystate = 63;
                                        continue 'yyl;
                                    }
                                    0x44 | 0x64 => {
                                        self.cursor += 1;
                                        yystate = 64;
                                        continue 'yyl;
                                    }
                                    0x49 | 0x69 => {
                                        self.cursor += 1;
                                        yystate = 65;
                                        continue 'yyl;
                                    }
                                    0x4F | 0x6F => {
                                        self.cursor += 1;
                                        yystate = 66;
                                        continue 'yyl;
                                    }
                                    0x58 | 0x78 => {
                                        self.cursor += 1;
                                        yystate = 67;
                                        continue 'yyl;
                                    }
                                    0x65 => {
                                        self.cursor += 1;
                                        yystate = 68;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 50;
                                        continue 'yyl;
                                    }
                                }
                            }
                            52 => {
                                yyaccept = 0;
                                self.marker = self.cursor;
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x49 | 0x69 => {
                                        self.cursor += 1;
                                        yystate = 69;
                                        continue 'yyl;
                                    }
                                    0x4E | 0x6E => {
                                        self.cursor += 1;
                                        yystate = 71;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 53;
                                        continue 'yyl;
                                    }
                                }
                            }
                            53 => {
                                return self.with_location(Token::Plus);
                            }
                            54 => {
                                yyaccept = 1;
                                self.marker = self.cursor;
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x49 | 0x69 => {
                                        self.cursor += 1;
                                        yystate = 72;
                                        continue 'yyl;
                                    }
                                    0x4E | 0x6E => {
                                        self.cursor += 1;
                                        yystate = 73;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 55;
                                        continue 'yyl;
                                    }
                                }
                            }
                            55 => {
                                return self.with_location(Token::Minus);
                            }
                            56 => {
                                return self.with_location(Token::Dot);
                            }
                            57 => {
                                return self.with_location(Token::Slash);
                            }
                            58 => {
                                return self.with_location(Token::BinDigit {
                                    value: self.extract_token(),
                                });
                            }
                            59 => {
                                return self.with_location(Token::Digit {
                                    value: self.extract_token(),
                                });
                            }
                            60 => {
                                return self.with_location(Token::At);
                            }
                            61 => {
                                yyaccept = 2;
                                self.marker = self.cursor;
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x4F => {
                                        self.cursor += 1;
                                        yystate = 74;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 50;
                                        continue 'yyl;
                                    }
                                }
                            }
                            62 => {
                                return self.with_location(Token::Imag);
                            }
                            63 => {
                                return self.with_location(Token::Radix2);
                            }
                            64 => {
                                return self.with_location(Token::Radix10);
                            }
                            65 => {
                                return self.with_location(Token::Inexact);
                            }
                            66 => {
                                unsafe {
                                    COND = YYC_OCT;
                                }
                                {
                                    return self.with_location(Token::Radix8);
                                }
                            }
                            67 => {
                                unsafe {
                                    COND = YYC_HEX;
                                }
                                {
                                    return self.with_location(Token::Radix16);
                                }
                            }
                            68 => {
                                return self.with_location(Token::Exact);
                            }
                            69 => {
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x4E | 0x6E => {
                                        self.cursor += 1;
                                        yystate = 75;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 70;
                                        continue 'yyl;
                                    }
                                }
                            }
                            70 => {
                                self.cursor = self.marker;
                                match yyaccept {
                                    0 => {
                                        yystate = 53;
                                        continue 'yyl;
                                    }
                                    1 => {
                                        yystate = 55;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 50;
                                        continue 'yyl;
                                    }
                                }
                            }
                            71 => {
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x41 | 0x61 => {
                                        self.cursor += 1;
                                        yystate = 76;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 70;
                                        continue 'yyl;
                                    }
                                }
                            }
                            72 => {
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x4E | 0x6E => {
                                        self.cursor += 1;
                                        yystate = 77;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 70;
                                        continue 'yyl;
                                    }
                                }
                            }
                            73 => {
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x41 | 0x61 => {
                                        self.cursor += 1;
                                        yystate = 78;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 70;
                                        continue 'yyl;
                                    }
                                }
                            }
                            74 => {
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x53 => {
                                        self.cursor += 1;
                                        yystate = 79;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 70;
                                        continue 'yyl;
                                    }
                                }
                            }
                            75 => {
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x46 | 0x66 => {
                                        self.cursor += 1;
                                        yystate = 80;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 70;
                                        continue 'yyl;
                                    }
                                }
                            }
                            76 => {
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x4E | 0x6E => {
                                        self.cursor += 1;
                                        yystate = 81;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 70;
                                        continue 'yyl;
                                    }
                                }
                            }
                            77 => {
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x46 | 0x66 => {
                                        self.cursor += 1;
                                        yystate = 82;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 70;
                                        continue 'yyl;
                                    }
                                }
                            }
                            78 => {
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x4E | 0x6E => {
                                        self.cursor += 1;
                                        yystate = 83;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 70;
                                        continue 'yyl;
                                    }
                                }
                            }
                            79 => {
                                unsafe {
                                    COND = YYC_INIT;
                                }
                                {
                                    return None;
                                }
                            }
                            80 => {
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x2E => {
                                        self.cursor += 1;
                                        yystate = 84;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 70;
                                        continue 'yyl;
                                    }
                                }
                            }
                            81 => {
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x2E => {
                                        self.cursor += 1;
                                        yystate = 85;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 70;
                                        continue 'yyl;
                                    }
                                }
                            }
                            82 => {
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x2E => {
                                        self.cursor += 1;
                                        yystate = 86;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 70;
                                        continue 'yyl;
                                    }
                                }
                            }
                            83 => {
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x2E => {
                                        self.cursor += 1;
                                        yystate = 87;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 70;
                                        continue 'yyl;
                                    }
                                }
                            }
                            84 => {
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x30 => {
                                        self.cursor += 1;
                                        yystate = 88;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 70;
                                        continue 'yyl;
                                    }
                                }
                            }
                            85 => {
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x30 => {
                                        self.cursor += 1;
                                        yystate = 89;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 70;
                                        continue 'yyl;
                                    }
                                }
                            }
                            86 => {
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x30 => {
                                        self.cursor += 1;
                                        yystate = 90;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 70;
                                        continue 'yyl;
                                    }
                                }
                            }
                            87 => {
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x30 => {
                                        self.cursor += 1;
                                        yystate = 91;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 70;
                                        continue 'yyl;
                                    }
                                }
                            }
                            88 => {
                                unsafe {
                                    COND = YYC_INIT;
                                }
                                {
                                    return self.with_location(Token::PlusInf);
                                }
                            }
                            89 => {
                                unsafe {
                                    COND = YYC_INIT;
                                }
                                {
                                    return self.with_location(Token::PlusNan);
                                }
                            }
                            90 => {
                                unsafe {
                                    COND = YYC_INIT;
                                }
                                {
                                    return self.with_location(Token::MinusInf);
                                }
                            }
                            91 => {
                                unsafe {
                                    COND = YYC_INIT;
                                }
                                {
                                    return self.with_location(Token::MinusNan);
                                }
                            }
                            92 => {
                                unsafe {
                                    COND = YYC_INIT;
                                }
                                {
                                    return None;
                                }
                            }
                            93 => {
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x23 => {
                                        self.cursor += 1;
                                        yystate = 96;
                                        continue 'yyl;
                                    }
                                    0x2B => {
                                        self.cursor += 1;
                                        yystate = 97;
                                        continue 'yyl;
                                    }
                                    0x2D => {
                                        self.cursor += 1;
                                        yystate = 99;
                                        continue 'yyl;
                                    }
                                    0x2E => {
                                        self.cursor += 1;
                                        yystate = 101;
                                        continue 'yyl;
                                    }
                                    0x2F => {
                                        self.cursor += 1;
                                        yystate = 102;
                                        continue 'yyl;
                                    }
                                    0x30..=0x37 => {
                                        self.cursor += 1;
                                        yystate = 103;
                                        continue 'yyl;
                                    }
                                    0x38..=0x39 => {
                                        self.cursor += 1;
                                        yystate = 104;
                                        continue 'yyl;
                                    }
                                    0x40 => {
                                        self.cursor += 1;
                                        yystate = 105;
                                        continue 'yyl;
                                    }
                                    0x45 => {
                                        self.cursor += 1;
                                        yystate = 106;
                                        continue 'yyl;
                                    }
                                    0x49 | 0x69 => {
                                        self.cursor += 1;
                                        yystate = 107;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        if self.cursor >= self.limit {
                                            yystate = 137;
                                            continue 'yyl;
                                        }
                                        self.cursor += 1;
                                        yystate = 94;
                                        continue 'yyl;
                                    }
                                }
                            }
                            94 => {
                                yystate = 95;
                                continue 'yyl;
                            }
                            95 => {
                                unsafe {
                                    COND = YYC_INIT;
                                }
                                {
                                    return Some(Err(ReadError::InvalidToken {
                                        start: self.tok,
                                        end: self.cursor,
                                        token: self.extract_token(),
                                    }));
                                }
                            }
                            96 => {
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x42 | 0x62 => {
                                        self.cursor += 1;
                                        yystate = 108;
                                        continue 'yyl;
                                    }
                                    0x44 | 0x64 => {
                                        self.cursor += 1;
                                        yystate = 109;
                                        continue 'yyl;
                                    }
                                    0x49 | 0x69 => {
                                        self.cursor += 1;
                                        yystate = 110;
                                        continue 'yyl;
                                    }
                                    0x4F | 0x6F => {
                                        self.cursor += 1;
                                        yystate = 111;
                                        continue 'yyl;
                                    }
                                    0x58 | 0x78 => {
                                        self.cursor += 1;
                                        yystate = 112;
                                        continue 'yyl;
                                    }
                                    0x65 => {
                                        self.cursor += 1;
                                        yystate = 113;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 95;
                                        continue 'yyl;
                                    }
                                }
                            }
                            97 => {
                                yyaccept = 0;
                                self.marker = self.cursor;
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x49 | 0x69 => {
                                        self.cursor += 1;
                                        yystate = 114;
                                        continue 'yyl;
                                    }
                                    0x4E | 0x6E => {
                                        self.cursor += 1;
                                        yystate = 116;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 98;
                                        continue 'yyl;
                                    }
                                }
                            }
                            98 => {
                                return self.with_location(Token::Plus);
                            }
                            99 => {
                                yyaccept = 1;
                                self.marker = self.cursor;
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x49 | 0x69 => {
                                        self.cursor += 1;
                                        yystate = 117;
                                        continue 'yyl;
                                    }
                                    0x4E | 0x6E => {
                                        self.cursor += 1;
                                        yystate = 118;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 100;
                                        continue 'yyl;
                                    }
                                }
                            }
                            100 => {
                                return self.with_location(Token::Minus);
                            }
                            101 => {
                                return self.with_location(Token::Dot);
                            }
                            102 => {
                                return self.with_location(Token::Slash);
                            }
                            103 => {
                                return self.with_location(Token::OctDigit {
                                    value: self.extract_token(),
                                });
                            }
                            104 => {
                                return self.with_location(Token::Digit {
                                    value: self.extract_token(),
                                });
                            }
                            105 => {
                                return self.with_location(Token::At);
                            }
                            106 => {
                                yyaccept = 2;
                                self.marker = self.cursor;
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x4F => {
                                        self.cursor += 1;
                                        yystate = 119;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 95;
                                        continue 'yyl;
                                    }
                                }
                            }
                            107 => {
                                return self.with_location(Token::Imag);
                            }
                            108 => {
                                unsafe {
                                    COND = YYC_BIN;
                                }
                                {
                                    return self.with_location(Token::Radix2);
                                }
                            }
                            109 => {
                                return self.with_location(Token::Radix10);
                            }
                            110 => {
                                return self.with_location(Token::Inexact);
                            }
                            111 => {
                                return self.with_location(Token::Radix8);
                            }
                            112 => {
                                unsafe {
                                    COND = YYC_HEX;
                                }
                                {
                                    return self.with_location(Token::Radix16);
                                }
                            }
                            113 => {
                                return self.with_location(Token::Exact);
                            }
                            114 => {
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x4E | 0x6E => {
                                        self.cursor += 1;
                                        yystate = 120;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 115;
                                        continue 'yyl;
                                    }
                                }
                            }
                            115 => {
                                self.cursor = self.marker;
                                match yyaccept {
                                    0 => {
                                        yystate = 98;
                                        continue 'yyl;
                                    }
                                    1 => {
                                        yystate = 100;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 95;
                                        continue 'yyl;
                                    }
                                }
                            }
                            116 => {
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x41 | 0x61 => {
                                        self.cursor += 1;
                                        yystate = 121;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 115;
                                        continue 'yyl;
                                    }
                                }
                            }
                            117 => {
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x4E | 0x6E => {
                                        self.cursor += 1;
                                        yystate = 122;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 115;
                                        continue 'yyl;
                                    }
                                }
                            }
                            118 => {
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x41 | 0x61 => {
                                        self.cursor += 1;
                                        yystate = 123;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 115;
                                        continue 'yyl;
                                    }
                                }
                            }
                            119 => {
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x53 => {
                                        self.cursor += 1;
                                        yystate = 124;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 115;
                                        continue 'yyl;
                                    }
                                }
                            }
                            120 => {
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x46 | 0x66 => {
                                        self.cursor += 1;
                                        yystate = 125;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 115;
                                        continue 'yyl;
                                    }
                                }
                            }
                            121 => {
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x4E | 0x6E => {
                                        self.cursor += 1;
                                        yystate = 126;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 115;
                                        continue 'yyl;
                                    }
                                }
                            }
                            122 => {
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x46 | 0x66 => {
                                        self.cursor += 1;
                                        yystate = 127;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 115;
                                        continue 'yyl;
                                    }
                                }
                            }
                            123 => {
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x4E | 0x6E => {
                                        self.cursor += 1;
                                        yystate = 128;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 115;
                                        continue 'yyl;
                                    }
                                }
                            }
                            124 => {
                                unsafe {
                                    COND = YYC_INIT;
                                }
                                {
                                    return None;
                                }
                            }
                            125 => {
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x2E => {
                                        self.cursor += 1;
                                        yystate = 129;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 115;
                                        continue 'yyl;
                                    }
                                }
                            }
                            126 => {
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x2E => {
                                        self.cursor += 1;
                                        yystate = 130;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 115;
                                        continue 'yyl;
                                    }
                                }
                            }
                            127 => {
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x2E => {
                                        self.cursor += 1;
                                        yystate = 131;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 115;
                                        continue 'yyl;
                                    }
                                }
                            }
                            128 => {
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x2E => {
                                        self.cursor += 1;
                                        yystate = 132;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 115;
                                        continue 'yyl;
                                    }
                                }
                            }
                            129 => {
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x30 => {
                                        self.cursor += 1;
                                        yystate = 133;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 115;
                                        continue 'yyl;
                                    }
                                }
                            }
                            130 => {
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x30 => {
                                        self.cursor += 1;
                                        yystate = 134;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 115;
                                        continue 'yyl;
                                    }
                                }
                            }
                            131 => {
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x30 => {
                                        self.cursor += 1;
                                        yystate = 135;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 115;
                                        continue 'yyl;
                                    }
                                }
                            }
                            132 => {
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x30 => {
                                        self.cursor += 1;
                                        yystate = 136;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 115;
                                        continue 'yyl;
                                    }
                                }
                            }
                            133 => {
                                unsafe {
                                    COND = YYC_INIT;
                                }
                                {
                                    return self.with_location(Token::PlusInf);
                                }
                            }
                            134 => {
                                unsafe {
                                    COND = YYC_INIT;
                                }
                                {
                                    return self.with_location(Token::PlusNan);
                                }
                            }
                            135 => {
                                unsafe {
                                    COND = YYC_INIT;
                                }
                                {
                                    return self.with_location(Token::MinusInf);
                                }
                            }
                            136 => {
                                unsafe {
                                    COND = YYC_INIT;
                                }
                                {
                                    return self.with_location(Token::MinusNan);
                                }
                            }
                            137 => {
                                unsafe {
                                    COND = YYC_INIT;
                                }
                                {
                                    return None;
                                }
                            }
                            138 => {
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x23 => {
                                        self.cursor += 1;
                                        yystate = 141;
                                        continue 'yyl;
                                    }
                                    0x2B => {
                                        self.cursor += 1;
                                        yystate = 142;
                                        continue 'yyl;
                                    }
                                    0x2D => {
                                        self.cursor += 1;
                                        yystate = 144;
                                        continue 'yyl;
                                    }
                                    0x2E => {
                                        self.cursor += 1;
                                        yystate = 146;
                                        continue 'yyl;
                                    }
                                    0x2F => {
                                        self.cursor += 1;
                                        yystate = 147;
                                        continue 'yyl;
                                    }
                                    0x30..=0x39 | 0x41..=0x44 | 0x46 | 0x61..=0x66 => {
                                        self.cursor += 1;
                                        yystate = 148;
                                        continue 'yyl;
                                    }
                                    0x40 => {
                                        self.cursor += 1;
                                        yystate = 150;
                                        continue 'yyl;
                                    }
                                    0x45 => {
                                        self.cursor += 1;
                                        yystate = 151;
                                        continue 'yyl;
                                    }
                                    0x49 | 0x69 => {
                                        self.cursor += 1;
                                        yystate = 152;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        if self.cursor >= self.limit {
                                            yystate = 182;
                                            continue 'yyl;
                                        }
                                        self.cursor += 1;
                                        yystate = 139;
                                        continue 'yyl;
                                    }
                                }
                            }
                            139 => {
                                yystate = 140;
                                continue 'yyl;
                            }
                            140 => {
                                unsafe {
                                    COND = YYC_INIT;
                                }
                                {
                                    return Some(Err(ReadError::InvalidToken {
                                        start: self.tok,
                                        end: self.cursor,
                                        token: self.extract_token(),
                                    }));
                                }
                            }
                            141 => {
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x42 | 0x62 => {
                                        self.cursor += 1;
                                        yystate = 153;
                                        continue 'yyl;
                                    }
                                    0x44 | 0x64 => {
                                        self.cursor += 1;
                                        yystate = 154;
                                        continue 'yyl;
                                    }
                                    0x49 | 0x69 => {
                                        self.cursor += 1;
                                        yystate = 155;
                                        continue 'yyl;
                                    }
                                    0x4F | 0x6F => {
                                        self.cursor += 1;
                                        yystate = 156;
                                        continue 'yyl;
                                    }
                                    0x58 | 0x78 => {
                                        self.cursor += 1;
                                        yystate = 157;
                                        continue 'yyl;
                                    }
                                    0x65 => {
                                        self.cursor += 1;
                                        yystate = 158;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 140;
                                        continue 'yyl;
                                    }
                                }
                            }
                            142 => {
                                yyaccept = 0;
                                self.marker = self.cursor;
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x49 | 0x69 => {
                                        self.cursor += 1;
                                        yystate = 159;
                                        continue 'yyl;
                                    }
                                    0x4E | 0x6E => {
                                        self.cursor += 1;
                                        yystate = 161;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 143;
                                        continue 'yyl;
                                    }
                                }
                            }
                            143 => {
                                return self.with_location(Token::Plus);
                            }
                            144 => {
                                yyaccept = 1;
                                self.marker = self.cursor;
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x49 | 0x69 => {
                                        self.cursor += 1;
                                        yystate = 162;
                                        continue 'yyl;
                                    }
                                    0x4E | 0x6E => {
                                        self.cursor += 1;
                                        yystate = 163;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 145;
                                        continue 'yyl;
                                    }
                                }
                            }
                            145 => {
                                return self.with_location(Token::Minus);
                            }
                            146 => {
                                return self.with_location(Token::Dot);
                            }
                            147 => {
                                return self.with_location(Token::Slash);
                            }
                            148 => {
                                yystate = 149;
                                continue 'yyl;
                            }
                            149 => {
                                return self.with_location(Token::HexDigit {
                                    value: self.extract_token(),
                                });
                            }
                            150 => {
                                return self.with_location(Token::At);
                            }
                            151 => {
                                yyaccept = 2;
                                self.marker = self.cursor;
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x4F => {
                                        self.cursor += 1;
                                        yystate = 164;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 149;
                                        continue 'yyl;
                                    }
                                }
                            }
                            152 => {
                                return self.with_location(Token::Imag);
                            }
                            153 => {
                                unsafe {
                                    COND = YYC_BIN;
                                }
                                {
                                    return self.with_location(Token::Radix2);
                                }
                            }
                            154 => {
                                return self.with_location(Token::Radix10);
                            }
                            155 => {
                                return self.with_location(Token::Inexact);
                            }
                            156 => {
                                unsafe {
                                    COND = YYC_OCT;
                                }
                                {
                                    return self.with_location(Token::Radix8);
                                }
                            }
                            157 => {
                                return self.with_location(Token::Radix16);
                            }
                            158 => {
                                return self.with_location(Token::Exact);
                            }
                            159 => {
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x4E | 0x6E => {
                                        self.cursor += 1;
                                        yystate = 165;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 160;
                                        continue 'yyl;
                                    }
                                }
                            }
                            160 => {
                                self.cursor = self.marker;
                                match yyaccept {
                                    0 => {
                                        yystate = 143;
                                        continue 'yyl;
                                    }
                                    1 => {
                                        yystate = 145;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 149;
                                        continue 'yyl;
                                    }
                                }
                            }
                            161 => {
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x41 | 0x61 => {
                                        self.cursor += 1;
                                        yystate = 166;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 160;
                                        continue 'yyl;
                                    }
                                }
                            }
                            162 => {
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x4E | 0x6E => {
                                        self.cursor += 1;
                                        yystate = 167;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 160;
                                        continue 'yyl;
                                    }
                                }
                            }
                            163 => {
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x41 | 0x61 => {
                                        self.cursor += 1;
                                        yystate = 168;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 160;
                                        continue 'yyl;
                                    }
                                }
                            }
                            164 => {
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x53 => {
                                        self.cursor += 1;
                                        yystate = 169;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 160;
                                        continue 'yyl;
                                    }
                                }
                            }
                            165 => {
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x46 | 0x66 => {
                                        self.cursor += 1;
                                        yystate = 170;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 160;
                                        continue 'yyl;
                                    }
                                }
                            }
                            166 => {
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x4E | 0x6E => {
                                        self.cursor += 1;
                                        yystate = 171;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 160;
                                        continue 'yyl;
                                    }
                                }
                            }
                            167 => {
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x46 | 0x66 => {
                                        self.cursor += 1;
                                        yystate = 172;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 160;
                                        continue 'yyl;
                                    }
                                }
                            }
                            168 => {
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x4E | 0x6E => {
                                        self.cursor += 1;
                                        yystate = 173;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 160;
                                        continue 'yyl;
                                    }
                                }
                            }
                            169 => {
                                unsafe {
                                    COND = YYC_INIT;
                                }
                                {
                                    return None;
                                }
                            }
                            170 => {
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x2E => {
                                        self.cursor += 1;
                                        yystate = 174;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 160;
                                        continue 'yyl;
                                    }
                                }
                            }
                            171 => {
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x2E => {
                                        self.cursor += 1;
                                        yystate = 175;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 160;
                                        continue 'yyl;
                                    }
                                }
                            }
                            172 => {
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x2E => {
                                        self.cursor += 1;
                                        yystate = 176;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 160;
                                        continue 'yyl;
                                    }
                                }
                            }
                            173 => {
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x2E => {
                                        self.cursor += 1;
                                        yystate = 177;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 160;
                                        continue 'yyl;
                                    }
                                }
                            }
                            174 => {
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x30 => {
                                        self.cursor += 1;
                                        yystate = 178;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 160;
                                        continue 'yyl;
                                    }
                                }
                            }
                            175 => {
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x30 => {
                                        self.cursor += 1;
                                        yystate = 179;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 160;
                                        continue 'yyl;
                                    }
                                }
                            }
                            176 => {
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x30 => {
                                        self.cursor += 1;
                                        yystate = 180;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 160;
                                        continue 'yyl;
                                    }
                                }
                            }
                            177 => {
                                yych = unsafe { *self.s.get_unchecked(self.cursor) as usize };
                                match yych {
                                    0x30 => {
                                        self.cursor += 1;
                                        yystate = 181;
                                        continue 'yyl;
                                    }
                                    _ => {
                                        yystate = 160;
                                        continue 'yyl;
                                    }
                                }
                            }
                            178 => {
                                unsafe {
                                    COND = YYC_INIT;
                                }
                                {
                                    return self.with_location(Token::PlusInf);
                                }
                            }
                            179 => {
                                unsafe {
                                    COND = YYC_INIT;
                                }
                                {
                                    return self.with_location(Token::PlusNan);
                                }
                            }
                            180 => {
                                unsafe {
                                    COND = YYC_INIT;
                                }
                                {
                                    return self.with_location(Token::MinusInf);
                                }
                            }
                            181 => {
                                unsafe {
                                    COND = YYC_INIT;
                                }
                                {
                                    return self.with_location(Token::MinusNan);
                                }
                            }
                            182 => {
                                unsafe {
                                    COND = YYC_INIT;
                                }
                                {
                                    return None;
                                }
                            }
                            _ => {
                                panic!("internal lexer error")
                            }
                        }
                    }
                }
            }
        }
    }
}
